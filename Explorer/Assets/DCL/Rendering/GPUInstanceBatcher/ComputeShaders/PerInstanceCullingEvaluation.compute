#include "Includes/PlatformSpecifications.cginc"

#pragma kernel CameraCullingAndLODCalculationKernel

RWStructuredBuffer<uint4> PerInstance_LODLevels; // LOD_A, LOD_B, LOD_Dither, LOD_Shadow 
#include "Includes/InputParams.cginc"
#include "Includes/CullingFunctions.cginc"
#include "Includes/CameraFunctions.cginc"

uniform uint nInstBufferSize;
uniform uint nLODCount;

[numthreads(GPUI_THREADS, 1, 1)]
void CameraCullingAndLODCalculationKernel(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= nInstBufferSize)
        return;

    float fDistance = 0.0f;
    float fScreenSpaceSize = 0.0f;
    const float4x4 mInstMatrix = PerInstanceData[id.x].worldMatrix;
    EvaluateInstanceDistance(mInstMatrix, fDistance, fScreenSpaceSize);

    if(IsCulled(mInstMatrix, fDistance))
    {
        PerInstance_LODLevels[id.x] = EvaluateLODLevel(nLodCount, lodSizes, fShadowDistance, fScreenSpaceSize, fDistance);
    }
}