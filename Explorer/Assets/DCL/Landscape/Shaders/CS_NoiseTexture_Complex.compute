#pragma kernel CSMain

RWTexture2D<float4> ResultTexture;
StructuredBuffer<float> NoiseBuffer;

float Width;

[numthreads(8, 8, 1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    const float value = NoiseBuffer[id.y * Width + id.x];
    
    float3 color = lerp(float3(0, 0, 1), float3(0, 1, 1), saturate((value + 2) / 3)); // Blue to Cyan
    color = lerp(color, float3(0, 0, 0), saturate((value + 1) / 3)); // Cyan to Black
    color = lerp(color, float3(0, 1, 0), saturate(value / 3)); // Black to Green
    color = lerp(color, float3(1, 0.5, 0), saturate((value - 1) / 3)); // Green to Orange
    color = lerp(color, float3(1, 0, 0), saturate((value - 2) / 3)); // Orange to Red

    ResultTexture[id.xy] = float4(color, 1.0);
}