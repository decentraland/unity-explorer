// Quadtree Render Compute Shader
#pragma kernel ClearTexture
#pragma kernel SetVisiblePixels

RWTexture2D<float4> ResultTexture;
StructuredBuffer<int2> visibleNodes;
StructuredBuffer<uint> visibleParcelCount;

[numthreads(8, 8, 1)]
void ClearTexture(uint3 id : SV_DispatchThreadID)
{
    ResultTexture[id.xy] = float4(0, 0, 0, 0);
}

[numthreads(64, 1, 1)]
void SetVisiblePixels(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= visibleParcelCount[0]) return; // 512 * 512 bounds check

    int2 nodeCoord = visibleNodes[id.x];

    // Convert world coordinates to texture coordinates
    // World (-256, -256) maps to texture (0, 0)
    int2 texCoord = nodeCoord + int2(256, 256);

    // Bounds check to ensure we're within texture
    if (texCoord.x >= 0 && texCoord.x < 512 && texCoord.y >= 0 && texCoord.y < 512)
    {
        ResultTexture[texCoord] = float4(1, 1, 1, 1);
    }
}
