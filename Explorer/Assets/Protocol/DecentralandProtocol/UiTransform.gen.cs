// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: decentraland/sdk/components/ui_transform.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DCL.ECSComponents {

  /// <summary>Holder for reflection information generated from decentraland/sdk/components/ui_transform.proto</summary>
  public static partial class UiTransformReflection {

    #region Descriptor
    /// <summary>File descriptor for decentraland/sdk/components/ui_transform.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UiTransformReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5kZWNlbnRyYWxhbmQvc2RrL2NvbXBvbmVudHMvdWlfdHJhbnNmb3JtLnBy",
            "b3RvEhtkZWNlbnRyYWxhbmQuc2RrLmNvbXBvbmVudHMaIGRlY2VudHJhbGFu",
            "ZC9jb21tb24vY29sb3JzLnByb3RvItYgCg1QQlVpVHJhbnNmb3JtEg4KBnBh",
            "cmVudBgBIAEoBRIQCghyaWdodF9vZhgCIAEoBRJACg1hbGlnbl9jb250ZW50",
            "GAMgASgOMiQuZGVjZW50cmFsYW5kLnNkay5jb21wb25lbnRzLllHQWxpZ25I",
            "AIgBARI+CgthbGlnbl9pdGVtcxgEIAEoDjIkLmRlY2VudHJhbGFuZC5zZGsu",
            "Y29tcG9uZW50cy5ZR0FsaWduSAGIAQESOwoJZmxleF93cmFwGAUgASgOMiMu",
            "ZGVjZW50cmFsYW5kLnNkay5jb21wb25lbnRzLllHV3JhcEgCiAEBEhgKC2Zs",
            "ZXhfc2hyaW5rGAYgASgCSAOIAQESQgoNcG9zaXRpb25fdHlwZRgHIAEoDjIr",
            "LmRlY2VudHJhbGFuZC5zZGsuY29tcG9uZW50cy5ZR1Bvc2l0aW9uVHlwZRI4",
            "CgphbGlnbl9zZWxmGAggASgOMiQuZGVjZW50cmFsYW5kLnNkay5jb21wb25l",
            "bnRzLllHQWxpZ24SRAoOZmxleF9kaXJlY3Rpb24YCSABKA4yLC5kZWNlbnRy",
            "YWxhbmQuc2RrLmNvbXBvbmVudHMuWUdGbGV4RGlyZWN0aW9uEj8KD2p1c3Rp",
            "ZnlfY29udGVudBgKIAEoDjImLmRlY2VudHJhbGFuZC5zZGsuY29tcG9uZW50",
            "cy5ZR0p1c3RpZnkSOQoIb3ZlcmZsb3cYCyABKA4yJy5kZWNlbnRyYWxhbmQu",
            "c2RrLmNvbXBvbmVudHMuWUdPdmVyZmxvdxI3CgdkaXNwbGF5GAwgASgOMiYu",
            "ZGVjZW50cmFsYW5kLnNkay5jb21wb25lbnRzLllHRGlzcGxheRI8Cg9mbGV4",
            "X2Jhc2lzX3VuaXQYDSABKA4yIy5kZWNlbnRyYWxhbmQuc2RrLmNvbXBvbmVu",
            "dHMuWUdVbml0EhIKCmZsZXhfYmFzaXMYDiABKAISEQoJZmxleF9ncm93GA8g",
            "ASgCEjcKCndpZHRoX3VuaXQYECABKA4yIy5kZWNlbnRyYWxhbmQuc2RrLmNv",
            "bXBvbmVudHMuWUdVbml0Eg0KBXdpZHRoGBEgASgCEjgKC2hlaWdodF91bml0",
            "GBIgASgOMiMuZGVjZW50cmFsYW5kLnNkay5jb21wb25lbnRzLllHVW5pdBIO",
            "CgZoZWlnaHQYEyABKAISOwoObWluX3dpZHRoX3VuaXQYFCABKA4yIy5kZWNl",
            "bnRyYWxhbmQuc2RrLmNvbXBvbmVudHMuWUdVbml0EhEKCW1pbl93aWR0aBgV",
            "IAEoAhI8Cg9taW5faGVpZ2h0X3VuaXQYFiABKA4yIy5kZWNlbnRyYWxhbmQu",
            "c2RrLmNvbXBvbmVudHMuWUdVbml0EhIKCm1pbl9oZWlnaHQYFyABKAISOwoO",
            "bWF4X3dpZHRoX3VuaXQYGCABKA4yIy5kZWNlbnRyYWxhbmQuc2RrLmNvbXBv",
            "bmVudHMuWUdVbml0EhEKCW1heF93aWR0aBgZIAEoAhI8Cg9tYXhfaGVpZ2h0",
            "X3VuaXQYGiABKA4yIy5kZWNlbnRyYWxhbmQuc2RrLmNvbXBvbmVudHMuWUdV",
            "bml0EhIKCm1heF9oZWlnaHQYGyABKAISPwoScG9zaXRpb25fbGVmdF91bml0",
            "GBwgASgOMiMuZGVjZW50cmFsYW5kLnNkay5jb21wb25lbnRzLllHVW5pdBIV",
            "Cg1wb3NpdGlvbl9sZWZ0GB0gASgCEj4KEXBvc2l0aW9uX3RvcF91bml0GB4g",
            "ASgOMiMuZGVjZW50cmFsYW5kLnNkay5jb21wb25lbnRzLllHVW5pdBIUCgxw",
            "b3NpdGlvbl90b3AYHyABKAISQAoTcG9zaXRpb25fcmlnaHRfdW5pdBggIAEo",
            "DjIjLmRlY2VudHJhbGFuZC5zZGsuY29tcG9uZW50cy5ZR1VuaXQSFgoOcG9z",
            "aXRpb25fcmlnaHQYISABKAISQQoUcG9zaXRpb25fYm90dG9tX3VuaXQYIiAB",
            "KA4yIy5kZWNlbnRyYWxhbmQuc2RrLmNvbXBvbmVudHMuWUdVbml0EhcKD3Bv",
            "c2l0aW9uX2JvdHRvbRgjIAEoAhI9ChBtYXJnaW5fbGVmdF91bml0GCQgASgO",
            "MiMuZGVjZW50cmFsYW5kLnNkay5jb21wb25lbnRzLllHVW5pdBITCgttYXJn",
            "aW5fbGVmdBglIAEoAhI8Cg9tYXJnaW5fdG9wX3VuaXQYJiABKA4yIy5kZWNl",
            "bnRyYWxhbmQuc2RrLmNvbXBvbmVudHMuWUdVbml0EhIKCm1hcmdpbl90b3AY",
            "JyABKAISPgoRbWFyZ2luX3JpZ2h0X3VuaXQYKCABKA4yIy5kZWNlbnRyYWxh",
            "bmQuc2RrLmNvbXBvbmVudHMuWUdVbml0EhQKDG1hcmdpbl9yaWdodBgpIAEo",
            "AhI/ChJtYXJnaW5fYm90dG9tX3VuaXQYKiABKA4yIy5kZWNlbnRyYWxhbmQu",
            "c2RrLmNvbXBvbmVudHMuWUdVbml0EhUKDW1hcmdpbl9ib3R0b20YKyABKAIS",
            "PgoRcGFkZGluZ19sZWZ0X3VuaXQYLCABKA4yIy5kZWNlbnRyYWxhbmQuc2Rr",
            "LmNvbXBvbmVudHMuWUdVbml0EhQKDHBhZGRpbmdfbGVmdBgtIAEoAhI9ChBw",
            "YWRkaW5nX3RvcF91bml0GC4gASgOMiMuZGVjZW50cmFsYW5kLnNkay5jb21w",
            "b25lbnRzLllHVW5pdBITCgtwYWRkaW5nX3RvcBgvIAEoAhI/ChJwYWRkaW5n",
            "X3JpZ2h0X3VuaXQYMCABKA4yIy5kZWNlbnRyYWxhbmQuc2RrLmNvbXBvbmVu",
            "dHMuWUdVbml0EhUKDXBhZGRpbmdfcmlnaHQYMSABKAISQAoTcGFkZGluZ19i",
            "b3R0b21fdW5pdBgyIAEoDjIjLmRlY2VudHJhbGFuZC5zZGsuY29tcG9uZW50",
            "cy5ZR1VuaXQSFgoOcGFkZGluZ19ib3R0b20YMyABKAISSwoOcG9pbnRlcl9m",
            "aWx0ZXIYNCABKA4yLi5kZWNlbnRyYWxhbmQuc2RrLmNvbXBvbmVudHMuUG9p",
            "bnRlckZpbHRlck1vZGVIBIgBARJIChZib3JkZXJfbGVmdF93aWR0aF91bml0",
            "GDUgASgOMiMuZGVjZW50cmFsYW5kLnNkay5jb21wb25lbnRzLllHVW5pdEgF",
            "iAEBEh4KEWJvcmRlcl9sZWZ0X3dpZHRoGDYgASgCSAaIAQESRwoVYm9yZGVy",
            "X3RvcF93aWR0aF91bml0GDcgASgOMiMuZGVjZW50cmFsYW5kLnNkay5jb21w",
            "b25lbnRzLllHVW5pdEgHiAEBEh0KEGJvcmRlcl90b3Bfd2lkdGgYOCABKAJI",
            "CIgBARJJChdib3JkZXJfcmlnaHRfd2lkdGhfdW5pdBg5IAEoDjIjLmRlY2Vu",
            "dHJhbGFuZC5zZGsuY29tcG9uZW50cy5ZR1VuaXRICYgBARIfChJib3JkZXJf",
            "cmlnaHRfd2lkdGgYOiABKAJICogBARJKChhib3JkZXJfYm90dG9tX3dpZHRo",
            "X3VuaXQYOyABKA4yIy5kZWNlbnRyYWxhbmQuc2RrLmNvbXBvbmVudHMuWUdV",
            "bml0SAuIAQESIAoTYm9yZGVyX2JvdHRvbV93aWR0aBg8IAEoAkgMiAEBEk0K",
            "G2JvcmRlcl90b3BfbGVmdF9yYWRpdXNfdW5pdBg9IAEoDjIjLmRlY2VudHJh",
            "bGFuZC5zZGsuY29tcG9uZW50cy5ZR1VuaXRIDYgBARIjChZib3JkZXJfdG9w",
            "X2xlZnRfcmFkaXVzGD4gASgCSA6IAQESTgocYm9yZGVyX3RvcF9yaWdodF9y",
            "YWRpdXNfdW5pdBg/IAEoDjIjLmRlY2VudHJhbGFuZC5zZGsuY29tcG9uZW50",
            "cy5ZR1VuaXRID4gBARIkChdib3JkZXJfdG9wX3JpZ2h0X3JhZGl1cxhAIAEo",
            "AkgQiAEBElAKHmJvcmRlcl9ib3R0b21fbGVmdF9yYWRpdXNfdW5pdBhBIAEo",
            "DjIjLmRlY2VudHJhbGFuZC5zZGsuY29tcG9uZW50cy5ZR1VuaXRIEYgBARIm",
            "Chlib3JkZXJfYm90dG9tX2xlZnRfcmFkaXVzGEIgASgCSBKIAQESUQofYm9y",
            "ZGVyX2JvdHRvbV9yaWdodF9yYWRpdXNfdW5pdBhDIAEoDjIjLmRlY2VudHJh",
            "bGFuZC5zZGsuY29tcG9uZW50cy5ZR1VuaXRIE4gBARInChpib3JkZXJfYm90",
            "dG9tX3JpZ2h0X3JhZGl1cxhEIAEoAkgUiAEBEjoKEGJvcmRlcl90b3BfY29s",
            "b3IYRSABKAsyGy5kZWNlbnRyYWxhbmQuY29tbW9uLkNvbG9yNEgViAEBEj0K",
            "E2JvcmRlcl9ib3R0b21fY29sb3IYRiABKAsyGy5kZWNlbnRyYWxhbmQuY29t",
            "bW9uLkNvbG9yNEgWiAEBEjsKEWJvcmRlcl9sZWZ0X2NvbG9yGEcgASgLMhsu",
            "ZGVjZW50cmFsYW5kLmNvbW1vbi5Db2xvcjRIF4gBARI8ChJib3JkZXJfcmln",
            "aHRfY29sb3IYSCABKAsyGy5kZWNlbnRyYWxhbmQuY29tbW9uLkNvbG9yNEgY",
            "iAEBEhQKB29wYWNpdHkYSSABKAJIGYgBARIUCgd6X2luZGV4GE0gASgFSBqI",
            "AQFCEAoOX2FsaWduX2NvbnRlbnRCDgoMX2FsaWduX2l0ZW1zQgwKCl9mbGV4",
            "X3dyYXBCDgoMX2ZsZXhfc2hyaW5rQhEKD19wb2ludGVyX2ZpbHRlckIZChdf",
            "Ym9yZGVyX2xlZnRfd2lkdGhfdW5pdEIUChJfYm9yZGVyX2xlZnRfd2lkdGhC",
            "GAoWX2JvcmRlcl90b3Bfd2lkdGhfdW5pdEITChFfYm9yZGVyX3RvcF93aWR0",
            "aEIaChhfYm9yZGVyX3JpZ2h0X3dpZHRoX3VuaXRCFQoTX2JvcmRlcl9yaWdo",
            "dF93aWR0aEIbChlfYm9yZGVyX2JvdHRvbV93aWR0aF91bml0QhYKFF9ib3Jk",
            "ZXJfYm90dG9tX3dpZHRoQh4KHF9ib3JkZXJfdG9wX2xlZnRfcmFkaXVzX3Vu",
            "aXRCGQoXX2JvcmRlcl90b3BfbGVmdF9yYWRpdXNCHwodX2JvcmRlcl90b3Bf",
            "cmlnaHRfcmFkaXVzX3VuaXRCGgoYX2JvcmRlcl90b3BfcmlnaHRfcmFkaXVz",
            "QiEKH19ib3JkZXJfYm90dG9tX2xlZnRfcmFkaXVzX3VuaXRCHAoaX2JvcmRl",
            "cl9ib3R0b21fbGVmdF9yYWRpdXNCIgogX2JvcmRlcl9ib3R0b21fcmlnaHRf",
            "cmFkaXVzX3VuaXRCHQobX2JvcmRlcl9ib3R0b21fcmlnaHRfcmFkaXVzQhMK",
            "EV9ib3JkZXJfdG9wX2NvbG9yQhYKFF9ib3JkZXJfYm90dG9tX2NvbG9yQhQK",
            "El9ib3JkZXJfbGVmdF9jb2xvckIVChNfYm9yZGVyX3JpZ2h0X2NvbG9yQgoK",
            "CF9vcGFjaXR5QgoKCF96X2luZGV4KjYKDllHUG9zaXRpb25UeXBlEhEKDVlH",
            "UFRfUkVMQVRJVkUQABIRCg1ZR1BUX0FCU09MVVRFEAEqnQEKB1lHQWxpZ24S",
            "DAoIWUdBX0FVVE8QABISCg5ZR0FfRkxFWF9TVEFSVBABEg4KCllHQV9DRU5U",
            "RVIQAhIQCgxZR0FfRkxFWF9FTkQQAxIPCgtZR0FfU1RSRVRDSBAEEhAKDFlH",
            "QV9CQVNFTElORRAFEhUKEVlHQV9TUEFDRV9CRVRXRUVOEAYSFAoQWUdBX1NQ",
            "QUNFX0FST1VORBAHKkkKBllHVW5pdBIRCg1ZR1VfVU5ERUZJTkVEEAASDQoJ",
            "WUdVX1BPSU5UEAESDwoLWUdVX1BFUkNFTlQQAhIMCghZR1VfQVVUTxADKl8K",
            "D1lHRmxleERpcmVjdGlvbhIMCghZR0ZEX1JPVxAAEg8KC1lHRkRfQ09MVU1O",
            "EAESFwoTWUdGRF9DT0xVTU5fUkVWRVJTRRACEhQKEFlHRkRfUk9XX1JFVkVS",
            "U0UQAyo9CgZZR1dyYXASDwoLWUdXX05PX1dSQVAQABIMCghZR1dfV1JBUBAB",
            "EhQKEFlHV19XUkFQX1JFVkVSU0UQAiqEAQoJWUdKdXN0aWZ5EhIKDllHSl9G",
            "TEVYX1NUQVJUEAASDgoKWUdKX0NFTlRFUhABEhAKDFlHSl9GTEVYX0VORBAC",
            "EhUKEVlHSl9TUEFDRV9CRVRXRUVOEAMSFAoQWUdKX1NQQUNFX0FST1VORBAE",
            "EhQKEFlHSl9TUEFDRV9FVkVOTFkQBSo9CgpZR092ZXJmbG93Eg8KC1lHT19W",
            "SVNJQkxFEAASDgoKWUdPX0hJRERFThABEg4KCllHT19TQ1JPTEwQAionCglZ",
            "R0Rpc3BsYXkSDAoIWUdEX0ZMRVgQABIMCghZR0RfTk9ORRABKpEBCgZZR0Vk",
            "Z2USDAoIWUdFX0xFRlQQABILCgdZR0VfVE9QEAESDQoJWUdFX1JJR0hUEAIS",
            "DgoKWUdFX0JPVFRPTRADEg0KCVlHRV9TVEFSVBAEEgsKB1lHRV9FTkQQBRIS",
            "Cg5ZR0VfSE9SSVpPTlRBTBAGEhAKDFlHRV9WRVJUSUNBTBAHEgsKB1lHRV9B",
            "TEwQCCowChFQb2ludGVyRmlsdGVyTW9kZRIMCghQRk1fTk9ORRAAEg0KCVBG",
            "TV9CTE9DSxABQhSqAhFEQ0wuRUNTQ29tcG9uZW50c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Decentraland.Common.ColorsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DCL.ECSComponents.YGPositionType), typeof(global::DCL.ECSComponents.YGAlign), typeof(global::DCL.ECSComponents.YGUnit), typeof(global::DCL.ECSComponents.YGFlexDirection), typeof(global::DCL.ECSComponents.YGWrap), typeof(global::DCL.ECSComponents.YGJustify), typeof(global::DCL.ECSComponents.YGOverflow), typeof(global::DCL.ECSComponents.YGDisplay), typeof(global::DCL.ECSComponents.YGEdge), typeof(global::DCL.ECSComponents.PointerFilterMode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DCL.ECSComponents.PBUiTransform), global::DCL.ECSComponents.PBUiTransform.Parser, new[]{ "Parent", "RightOf", "AlignContent", "AlignItems", "FlexWrap", "FlexShrink", "PositionType", "AlignSelf", "FlexDirection", "JustifyContent", "Overflow", "Display", "FlexBasisUnit", "FlexBasis", "FlexGrow", "WidthUnit", "Width", "HeightUnit", "Height", "MinWidthUnit", "MinWidth", "MinHeightUnit", "MinHeight", "MaxWidthUnit", "MaxWidth", "MaxHeightUnit", "MaxHeight", "PositionLeftUnit", "PositionLeft", "PositionTopUnit", "PositionTop", "PositionRightUnit", "PositionRight", "PositionBottomUnit", "PositionBottom", "MarginLeftUnit", "MarginLeft", "MarginTopUnit", "MarginTop", "MarginRightUnit", "MarginRight", "MarginBottomUnit", "MarginBottom", "PaddingLeftUnit", "PaddingLeft", "PaddingTopUnit", "PaddingTop", "PaddingRightUnit", "PaddingRight", "PaddingBottomUnit", "PaddingBottom", "PointerFilter", "BorderLeftWidthUnit", "BorderLeftWidth", "BorderTopWidthUnit", "BorderTopWidth", "BorderRightWidthUnit", "BorderRightWidth", "BorderBottomWidthUnit", "BorderBottomWidth", "BorderTopLeftRadiusUnit", "BorderTopLeftRadius", "BorderTopRightRadiusUnit", "BorderTopRightRadius", "BorderBottomLeftRadiusUnit", "BorderBottomLeftRadius", "BorderBottomRightRadiusUnit", "BorderBottomRightRadius", "BorderTopColor", "BorderBottomColor", "BorderLeftColor", "BorderRightColor", "Opacity", "ZIndex" }, new[]{ "AlignContent", "AlignItems", "FlexWrap", "FlexShrink", "PointerFilter", "BorderLeftWidthUnit", "BorderLeftWidth", "BorderTopWidthUnit", "BorderTopWidth", "BorderRightWidthUnit", "BorderRightWidth", "BorderBottomWidthUnit", "BorderBottomWidth", "BorderTopLeftRadiusUnit", "BorderTopLeftRadius", "BorderTopRightRadiusUnit", "BorderTopRightRadius", "BorderBottomLeftRadiusUnit", "BorderBottomLeftRadius", "BorderBottomRightRadiusUnit", "BorderBottomRightRadius", "BorderTopColor", "BorderBottomColor", "BorderLeftColor", "BorderRightColor", "Opacity", "ZIndex" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum YGPositionType {
    [pbr::OriginalName("YGPT_RELATIVE")] YgptRelative = 0,
    [pbr::OriginalName("YGPT_ABSOLUTE")] YgptAbsolute = 1,
  }

  public enum YGAlign {
    [pbr::OriginalName("YGA_AUTO")] YgaAuto = 0,
    [pbr::OriginalName("YGA_FLEX_START")] YgaFlexStart = 1,
    [pbr::OriginalName("YGA_CENTER")] YgaCenter = 2,
    [pbr::OriginalName("YGA_FLEX_END")] YgaFlexEnd = 3,
    [pbr::OriginalName("YGA_STRETCH")] YgaStretch = 4,
    [pbr::OriginalName("YGA_BASELINE")] YgaBaseline = 5,
    [pbr::OriginalName("YGA_SPACE_BETWEEN")] YgaSpaceBetween = 6,
    [pbr::OriginalName("YGA_SPACE_AROUND")] YgaSpaceAround = 7,
  }

  public enum YGUnit {
    [pbr::OriginalName("YGU_UNDEFINED")] YguUndefined = 0,
    [pbr::OriginalName("YGU_POINT")] YguPoint = 1,
    [pbr::OriginalName("YGU_PERCENT")] YguPercent = 2,
    [pbr::OriginalName("YGU_AUTO")] YguAuto = 3,
  }

  public enum YGFlexDirection {
    [pbr::OriginalName("YGFD_ROW")] YgfdRow = 0,
    [pbr::OriginalName("YGFD_COLUMN")] YgfdColumn = 1,
    [pbr::OriginalName("YGFD_COLUMN_REVERSE")] YgfdColumnReverse = 2,
    [pbr::OriginalName("YGFD_ROW_REVERSE")] YgfdRowReverse = 3,
  }

  public enum YGWrap {
    [pbr::OriginalName("YGW_NO_WRAP")] YgwNoWrap = 0,
    [pbr::OriginalName("YGW_WRAP")] YgwWrap = 1,
    [pbr::OriginalName("YGW_WRAP_REVERSE")] YgwWrapReverse = 2,
  }

  public enum YGJustify {
    [pbr::OriginalName("YGJ_FLEX_START")] YgjFlexStart = 0,
    [pbr::OriginalName("YGJ_CENTER")] YgjCenter = 1,
    [pbr::OriginalName("YGJ_FLEX_END")] YgjFlexEnd = 2,
    [pbr::OriginalName("YGJ_SPACE_BETWEEN")] YgjSpaceBetween = 3,
    [pbr::OriginalName("YGJ_SPACE_AROUND")] YgjSpaceAround = 4,
    [pbr::OriginalName("YGJ_SPACE_EVENLY")] YgjSpaceEvenly = 5,
  }

  public enum YGOverflow {
    [pbr::OriginalName("YGO_VISIBLE")] YgoVisible = 0,
    [pbr::OriginalName("YGO_HIDDEN")] YgoHidden = 1,
    [pbr::OriginalName("YGO_SCROLL")] YgoScroll = 2,
  }

  public enum YGDisplay {
    [pbr::OriginalName("YGD_FLEX")] YgdFlex = 0,
    [pbr::OriginalName("YGD_NONE")] YgdNone = 1,
  }

  public enum YGEdge {
    [pbr::OriginalName("YGE_LEFT")] YgeLeft = 0,
    [pbr::OriginalName("YGE_TOP")] YgeTop = 1,
    [pbr::OriginalName("YGE_RIGHT")] YgeRight = 2,
    [pbr::OriginalName("YGE_BOTTOM")] YgeBottom = 3,
    [pbr::OriginalName("YGE_START")] YgeStart = 4,
    [pbr::OriginalName("YGE_END")] YgeEnd = 5,
    [pbr::OriginalName("YGE_HORIZONTAL")] YgeHorizontal = 6,
    [pbr::OriginalName("YGE_VERTICAL")] YgeVertical = 7,
    [pbr::OriginalName("YGE_ALL")] YgeAll = 8,
  }

  public enum PointerFilterMode {
    [pbr::OriginalName("PFM_NONE")] PfmNone = 0,
    [pbr::OriginalName("PFM_BLOCK")] PfmBlock = 1,
  }

  #endregion

  #region Messages
  public sealed partial class PBUiTransform : pb::IMessage<PBUiTransform>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PBUiTransform> _parser = new pb::MessageParser<PBUiTransform>(() => new PBUiTransform());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PBUiTransform> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DCL.ECSComponents.UiTransformReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBUiTransform() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBUiTransform(PBUiTransform other) : this() {
      _hasBits0 = other._hasBits0;
      parent_ = other.parent_;
      rightOf_ = other.rightOf_;
      alignContent_ = other.alignContent_;
      alignItems_ = other.alignItems_;
      flexWrap_ = other.flexWrap_;
      flexShrink_ = other.flexShrink_;
      positionType_ = other.positionType_;
      alignSelf_ = other.alignSelf_;
      flexDirection_ = other.flexDirection_;
      justifyContent_ = other.justifyContent_;
      overflow_ = other.overflow_;
      display_ = other.display_;
      flexBasisUnit_ = other.flexBasisUnit_;
      flexBasis_ = other.flexBasis_;
      flexGrow_ = other.flexGrow_;
      widthUnit_ = other.widthUnit_;
      width_ = other.width_;
      heightUnit_ = other.heightUnit_;
      height_ = other.height_;
      minWidthUnit_ = other.minWidthUnit_;
      minWidth_ = other.minWidth_;
      minHeightUnit_ = other.minHeightUnit_;
      minHeight_ = other.minHeight_;
      maxWidthUnit_ = other.maxWidthUnit_;
      maxWidth_ = other.maxWidth_;
      maxHeightUnit_ = other.maxHeightUnit_;
      maxHeight_ = other.maxHeight_;
      positionLeftUnit_ = other.positionLeftUnit_;
      positionLeft_ = other.positionLeft_;
      positionTopUnit_ = other.positionTopUnit_;
      positionTop_ = other.positionTop_;
      positionRightUnit_ = other.positionRightUnit_;
      positionRight_ = other.positionRight_;
      positionBottomUnit_ = other.positionBottomUnit_;
      positionBottom_ = other.positionBottom_;
      marginLeftUnit_ = other.marginLeftUnit_;
      marginLeft_ = other.marginLeft_;
      marginTopUnit_ = other.marginTopUnit_;
      marginTop_ = other.marginTop_;
      marginRightUnit_ = other.marginRightUnit_;
      marginRight_ = other.marginRight_;
      marginBottomUnit_ = other.marginBottomUnit_;
      marginBottom_ = other.marginBottom_;
      paddingLeftUnit_ = other.paddingLeftUnit_;
      paddingLeft_ = other.paddingLeft_;
      paddingTopUnit_ = other.paddingTopUnit_;
      paddingTop_ = other.paddingTop_;
      paddingRightUnit_ = other.paddingRightUnit_;
      paddingRight_ = other.paddingRight_;
      paddingBottomUnit_ = other.paddingBottomUnit_;
      paddingBottom_ = other.paddingBottom_;
      pointerFilter_ = other.pointerFilter_;
      borderLeftWidthUnit_ = other.borderLeftWidthUnit_;
      borderLeftWidth_ = other.borderLeftWidth_;
      borderTopWidthUnit_ = other.borderTopWidthUnit_;
      borderTopWidth_ = other.borderTopWidth_;
      borderRightWidthUnit_ = other.borderRightWidthUnit_;
      borderRightWidth_ = other.borderRightWidth_;
      borderBottomWidthUnit_ = other.borderBottomWidthUnit_;
      borderBottomWidth_ = other.borderBottomWidth_;
      borderTopLeftRadiusUnit_ = other.borderTopLeftRadiusUnit_;
      borderTopLeftRadius_ = other.borderTopLeftRadius_;
      borderTopRightRadiusUnit_ = other.borderTopRightRadiusUnit_;
      borderTopRightRadius_ = other.borderTopRightRadius_;
      borderBottomLeftRadiusUnit_ = other.borderBottomLeftRadiusUnit_;
      borderBottomLeftRadius_ = other.borderBottomLeftRadius_;
      borderBottomRightRadiusUnit_ = other.borderBottomRightRadiusUnit_;
      borderBottomRightRadius_ = other.borderBottomRightRadius_;
      borderTopColor_ = other.borderTopColor_ != null ? other.borderTopColor_.Clone() : null;
      borderBottomColor_ = other.borderBottomColor_ != null ? other.borderBottomColor_.Clone() : null;
      borderLeftColor_ = other.borderLeftColor_ != null ? other.borderLeftColor_.Clone() : null;
      borderRightColor_ = other.borderRightColor_ != null ? other.borderRightColor_.Clone() : null;
      opacity_ = other.opacity_;
      zIndex_ = other.zIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBUiTransform Clone() {
      return new PBUiTransform(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private int parent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Parent {
      get { return parent_; }
      set {
        parent_ = value;
      }
    }

    /// <summary>Field number for the "right_of" field.</summary>
    public const int RightOfFieldNumber = 2;
    private int rightOf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RightOf {
      get { return rightOf_; }
      set {
        rightOf_ = value;
      }
    }

    /// <summary>Field number for the "align_content" field.</summary>
    public const int AlignContentFieldNumber = 3;
    private global::DCL.ECSComponents.YGAlign alignContent_;
    /// <summary>
    /// default: YGAlign.YGA_FLEX_START
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGAlign AlignContent {
      get { if ((_hasBits0 & 1) != 0) { return alignContent_; } else { return global::DCL.ECSComponents.YGAlign.YgaAuto; } }
      set {
        _hasBits0 |= 1;
        alignContent_ = value;
      }
    }
    /// <summary>Gets whether the "align_content" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlignContent {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "align_content" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlignContent() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "align_items" field.</summary>
    public const int AlignItemsFieldNumber = 4;
    private global::DCL.ECSComponents.YGAlign alignItems_;
    /// <summary>
    /// default: YGAlign.YGA_STRETCH
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGAlign AlignItems {
      get { if ((_hasBits0 & 2) != 0) { return alignItems_; } else { return global::DCL.ECSComponents.YGAlign.YgaAuto; } }
      set {
        _hasBits0 |= 2;
        alignItems_ = value;
      }
    }
    /// <summary>Gets whether the "align_items" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlignItems {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "align_items" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlignItems() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "flex_wrap" field.</summary>
    public const int FlexWrapFieldNumber = 5;
    private global::DCL.ECSComponents.YGWrap flexWrap_;
    /// <summary>
    /// default: YGWrap.YGW_WRAP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGWrap FlexWrap {
      get { if ((_hasBits0 & 4) != 0) { return flexWrap_; } else { return global::DCL.ECSComponents.YGWrap.YgwNoWrap; } }
      set {
        _hasBits0 |= 4;
        flexWrap_ = value;
      }
    }
    /// <summary>Gets whether the "flex_wrap" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlexWrap {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "flex_wrap" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlexWrap() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "flex_shrink" field.</summary>
    public const int FlexShrinkFieldNumber = 6;
    private float flexShrink_;
    /// <summary>
    /// default: 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FlexShrink {
      get { if ((_hasBits0 & 8) != 0) { return flexShrink_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        flexShrink_ = value;
      }
    }
    /// <summary>Gets whether the "flex_shrink" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlexShrink {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "flex_shrink" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlexShrink() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "position_type" field.</summary>
    public const int PositionTypeFieldNumber = 7;
    private global::DCL.ECSComponents.YGPositionType positionType_ = global::DCL.ECSComponents.YGPositionType.YgptRelative;
    /// <summary>
    /// YGPositionType.YGPT_RELATIVE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGPositionType PositionType {
      get { return positionType_; }
      set {
        positionType_ = value;
      }
    }

    /// <summary>Field number for the "align_self" field.</summary>
    public const int AlignSelfFieldNumber = 8;
    private global::DCL.ECSComponents.YGAlign alignSelf_ = global::DCL.ECSComponents.YGAlign.YgaAuto;
    /// <summary>
    /// YGAlign.YGA_AUTO
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGAlign AlignSelf {
      get { return alignSelf_; }
      set {
        alignSelf_ = value;
      }
    }

    /// <summary>Field number for the "flex_direction" field.</summary>
    public const int FlexDirectionFieldNumber = 9;
    private global::DCL.ECSComponents.YGFlexDirection flexDirection_ = global::DCL.ECSComponents.YGFlexDirection.YgfdRow;
    /// <summary>
    /// YGFlexDirection.YGFD_ROW
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGFlexDirection FlexDirection {
      get { return flexDirection_; }
      set {
        flexDirection_ = value;
      }
    }

    /// <summary>Field number for the "justify_content" field.</summary>
    public const int JustifyContentFieldNumber = 10;
    private global::DCL.ECSComponents.YGJustify justifyContent_ = global::DCL.ECSComponents.YGJustify.YgjFlexStart;
    /// <summary>
    /// YGJustify.YGJ_FLEX_START
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGJustify JustifyContent {
      get { return justifyContent_; }
      set {
        justifyContent_ = value;
      }
    }

    /// <summary>Field number for the "overflow" field.</summary>
    public const int OverflowFieldNumber = 11;
    private global::DCL.ECSComponents.YGOverflow overflow_ = global::DCL.ECSComponents.YGOverflow.YgoVisible;
    /// <summary>
    /// YGOverflow.YGO_VISIBLE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGOverflow Overflow {
      get { return overflow_; }
      set {
        overflow_ = value;
      }
    }

    /// <summary>Field number for the "display" field.</summary>
    public const int DisplayFieldNumber = 12;
    private global::DCL.ECSComponents.YGDisplay display_ = global::DCL.ECSComponents.YGDisplay.YgdFlex;
    /// <summary>
    /// YGDisplay.YGD_FLEX
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGDisplay Display {
      get { return display_; }
      set {
        display_ = value;
      }
    }

    /// <summary>Field number for the "flex_basis_unit" field.</summary>
    public const int FlexBasisUnitFieldNumber = 13;
    private global::DCL.ECSComponents.YGUnit flexBasisUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit FlexBasisUnit {
      get { return flexBasisUnit_; }
      set {
        flexBasisUnit_ = value;
      }
    }

    /// <summary>Field number for the "flex_basis" field.</summary>
    public const int FlexBasisFieldNumber = 14;
    private float flexBasis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FlexBasis {
      get { return flexBasis_; }
      set {
        flexBasis_ = value;
      }
    }

    /// <summary>Field number for the "flex_grow" field.</summary>
    public const int FlexGrowFieldNumber = 15;
    private float flexGrow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FlexGrow {
      get { return flexGrow_; }
      set {
        flexGrow_ = value;
      }
    }

    /// <summary>Field number for the "width_unit" field.</summary>
    public const int WidthUnitFieldNumber = 16;
    private global::DCL.ECSComponents.YGUnit widthUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit WidthUnit {
      get { return widthUnit_; }
      set {
        widthUnit_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 17;
    private float width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height_unit" field.</summary>
    public const int HeightUnitFieldNumber = 18;
    private global::DCL.ECSComponents.YGUnit heightUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit HeightUnit {
      get { return heightUnit_; }
      set {
        heightUnit_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 19;
    private float height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "min_width_unit" field.</summary>
    public const int MinWidthUnitFieldNumber = 20;
    private global::DCL.ECSComponents.YGUnit minWidthUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit MinWidthUnit {
      get { return minWidthUnit_; }
      set {
        minWidthUnit_ = value;
      }
    }

    /// <summary>Field number for the "min_width" field.</summary>
    public const int MinWidthFieldNumber = 21;
    private float minWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinWidth {
      get { return minWidth_; }
      set {
        minWidth_ = value;
      }
    }

    /// <summary>Field number for the "min_height_unit" field.</summary>
    public const int MinHeightUnitFieldNumber = 22;
    private global::DCL.ECSComponents.YGUnit minHeightUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit MinHeightUnit {
      get { return minHeightUnit_; }
      set {
        minHeightUnit_ = value;
      }
    }

    /// <summary>Field number for the "min_height" field.</summary>
    public const int MinHeightFieldNumber = 23;
    private float minHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinHeight {
      get { return minHeight_; }
      set {
        minHeight_ = value;
      }
    }

    /// <summary>Field number for the "max_width_unit" field.</summary>
    public const int MaxWidthUnitFieldNumber = 24;
    private global::DCL.ECSComponents.YGUnit maxWidthUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit MaxWidthUnit {
      get { return maxWidthUnit_; }
      set {
        maxWidthUnit_ = value;
      }
    }

    /// <summary>Field number for the "max_width" field.</summary>
    public const int MaxWidthFieldNumber = 25;
    private float maxWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxWidth {
      get { return maxWidth_; }
      set {
        maxWidth_ = value;
      }
    }

    /// <summary>Field number for the "max_height_unit" field.</summary>
    public const int MaxHeightUnitFieldNumber = 26;
    private global::DCL.ECSComponents.YGUnit maxHeightUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit MaxHeightUnit {
      get { return maxHeightUnit_; }
      set {
        maxHeightUnit_ = value;
      }
    }

    /// <summary>Field number for the "max_height" field.</summary>
    public const int MaxHeightFieldNumber = 27;
    private float maxHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxHeight {
      get { return maxHeight_; }
      set {
        maxHeight_ = value;
      }
    }

    /// <summary>Field number for the "position_left_unit" field.</summary>
    public const int PositionLeftUnitFieldNumber = 28;
    private global::DCL.ECSComponents.YGUnit positionLeftUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit PositionLeftUnit {
      get { return positionLeftUnit_; }
      set {
        positionLeftUnit_ = value;
      }
    }

    /// <summary>Field number for the "position_left" field.</summary>
    public const int PositionLeftFieldNumber = 29;
    private float positionLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionLeft {
      get { return positionLeft_; }
      set {
        positionLeft_ = value;
      }
    }

    /// <summary>Field number for the "position_top_unit" field.</summary>
    public const int PositionTopUnitFieldNumber = 30;
    private global::DCL.ECSComponents.YGUnit positionTopUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit PositionTopUnit {
      get { return positionTopUnit_; }
      set {
        positionTopUnit_ = value;
      }
    }

    /// <summary>Field number for the "position_top" field.</summary>
    public const int PositionTopFieldNumber = 31;
    private float positionTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionTop {
      get { return positionTop_; }
      set {
        positionTop_ = value;
      }
    }

    /// <summary>Field number for the "position_right_unit" field.</summary>
    public const int PositionRightUnitFieldNumber = 32;
    private global::DCL.ECSComponents.YGUnit positionRightUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit PositionRightUnit {
      get { return positionRightUnit_; }
      set {
        positionRightUnit_ = value;
      }
    }

    /// <summary>Field number for the "position_right" field.</summary>
    public const int PositionRightFieldNumber = 33;
    private float positionRight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionRight {
      get { return positionRight_; }
      set {
        positionRight_ = value;
      }
    }

    /// <summary>Field number for the "position_bottom_unit" field.</summary>
    public const int PositionBottomUnitFieldNumber = 34;
    private global::DCL.ECSComponents.YGUnit positionBottomUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit PositionBottomUnit {
      get { return positionBottomUnit_; }
      set {
        positionBottomUnit_ = value;
      }
    }

    /// <summary>Field number for the "position_bottom" field.</summary>
    public const int PositionBottomFieldNumber = 35;
    private float positionBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionBottom {
      get { return positionBottom_; }
      set {
        positionBottom_ = value;
      }
    }

    /// <summary>Field number for the "margin_left_unit" field.</summary>
    public const int MarginLeftUnitFieldNumber = 36;
    private global::DCL.ECSComponents.YGUnit marginLeftUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit MarginLeftUnit {
      get { return marginLeftUnit_; }
      set {
        marginLeftUnit_ = value;
      }
    }

    /// <summary>Field number for the "margin_left" field.</summary>
    public const int MarginLeftFieldNumber = 37;
    private float marginLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MarginLeft {
      get { return marginLeft_; }
      set {
        marginLeft_ = value;
      }
    }

    /// <summary>Field number for the "margin_top_unit" field.</summary>
    public const int MarginTopUnitFieldNumber = 38;
    private global::DCL.ECSComponents.YGUnit marginTopUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit MarginTopUnit {
      get { return marginTopUnit_; }
      set {
        marginTopUnit_ = value;
      }
    }

    /// <summary>Field number for the "margin_top" field.</summary>
    public const int MarginTopFieldNumber = 39;
    private float marginTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MarginTop {
      get { return marginTop_; }
      set {
        marginTop_ = value;
      }
    }

    /// <summary>Field number for the "margin_right_unit" field.</summary>
    public const int MarginRightUnitFieldNumber = 40;
    private global::DCL.ECSComponents.YGUnit marginRightUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit MarginRightUnit {
      get { return marginRightUnit_; }
      set {
        marginRightUnit_ = value;
      }
    }

    /// <summary>Field number for the "margin_right" field.</summary>
    public const int MarginRightFieldNumber = 41;
    private float marginRight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MarginRight {
      get { return marginRight_; }
      set {
        marginRight_ = value;
      }
    }

    /// <summary>Field number for the "margin_bottom_unit" field.</summary>
    public const int MarginBottomUnitFieldNumber = 42;
    private global::DCL.ECSComponents.YGUnit marginBottomUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit MarginBottomUnit {
      get { return marginBottomUnit_; }
      set {
        marginBottomUnit_ = value;
      }
    }

    /// <summary>Field number for the "margin_bottom" field.</summary>
    public const int MarginBottomFieldNumber = 43;
    private float marginBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MarginBottom {
      get { return marginBottom_; }
      set {
        marginBottom_ = value;
      }
    }

    /// <summary>Field number for the "padding_left_unit" field.</summary>
    public const int PaddingLeftUnitFieldNumber = 44;
    private global::DCL.ECSComponents.YGUnit paddingLeftUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit PaddingLeftUnit {
      get { return paddingLeftUnit_; }
      set {
        paddingLeftUnit_ = value;
      }
    }

    /// <summary>Field number for the "padding_left" field.</summary>
    public const int PaddingLeftFieldNumber = 45;
    private float paddingLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingLeft {
      get { return paddingLeft_; }
      set {
        paddingLeft_ = value;
      }
    }

    /// <summary>Field number for the "padding_top_unit" field.</summary>
    public const int PaddingTopUnitFieldNumber = 46;
    private global::DCL.ECSComponents.YGUnit paddingTopUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit PaddingTopUnit {
      get { return paddingTopUnit_; }
      set {
        paddingTopUnit_ = value;
      }
    }

    /// <summary>Field number for the "padding_top" field.</summary>
    public const int PaddingTopFieldNumber = 47;
    private float paddingTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingTop {
      get { return paddingTop_; }
      set {
        paddingTop_ = value;
      }
    }

    /// <summary>Field number for the "padding_right_unit" field.</summary>
    public const int PaddingRightUnitFieldNumber = 48;
    private global::DCL.ECSComponents.YGUnit paddingRightUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit PaddingRightUnit {
      get { return paddingRightUnit_; }
      set {
        paddingRightUnit_ = value;
      }
    }

    /// <summary>Field number for the "padding_right" field.</summary>
    public const int PaddingRightFieldNumber = 49;
    private float paddingRight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingRight {
      get { return paddingRight_; }
      set {
        paddingRight_ = value;
      }
    }

    /// <summary>Field number for the "padding_bottom_unit" field.</summary>
    public const int PaddingBottomUnitFieldNumber = 50;
    private global::DCL.ECSComponents.YGUnit paddingBottomUnit_ = global::DCL.ECSComponents.YGUnit.YguUndefined;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit PaddingBottomUnit {
      get { return paddingBottomUnit_; }
      set {
        paddingBottomUnit_ = value;
      }
    }

    /// <summary>Field number for the "padding_bottom" field.</summary>
    public const int PaddingBottomFieldNumber = 51;
    private float paddingBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingBottom {
      get { return paddingBottom_; }
      set {
        paddingBottom_ = value;
      }
    }

    /// <summary>Field number for the "pointer_filter" field.</summary>
    public const int PointerFilterFieldNumber = 52;
    private global::DCL.ECSComponents.PointerFilterMode pointerFilter_;
    /// <summary>
    /// default: PointerFilterMode.PFM_NONE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.PointerFilterMode PointerFilter {
      get { if ((_hasBits0 & 16) != 0) { return pointerFilter_; } else { return global::DCL.ECSComponents.PointerFilterMode.PfmNone; } }
      set {
        _hasBits0 |= 16;
        pointerFilter_ = value;
      }
    }
    /// <summary>Gets whether the "pointer_filter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPointerFilter {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "pointer_filter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPointerFilter() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "border_left_width_unit" field.</summary>
    public const int BorderLeftWidthUnitFieldNumber = 53;
    private global::DCL.ECSComponents.YGUnit borderLeftWidthUnit_;
    /// <summary>
    /// Border Width
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit BorderLeftWidthUnit {
      get { if ((_hasBits0 & 32) != 0) { return borderLeftWidthUnit_; } else { return global::DCL.ECSComponents.YGUnit.YguUndefined; } }
      set {
        _hasBits0 |= 32;
        borderLeftWidthUnit_ = value;
      }
    }
    /// <summary>Gets whether the "border_left_width_unit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderLeftWidthUnit {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "border_left_width_unit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderLeftWidthUnit() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "border_left_width" field.</summary>
    public const int BorderLeftWidthFieldNumber = 54;
    private float borderLeftWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BorderLeftWidth {
      get { if ((_hasBits0 & 64) != 0) { return borderLeftWidth_; } else { return 0F; } }
      set {
        _hasBits0 |= 64;
        borderLeftWidth_ = value;
      }
    }
    /// <summary>Gets whether the "border_left_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderLeftWidth {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "border_left_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderLeftWidth() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "border_top_width_unit" field.</summary>
    public const int BorderTopWidthUnitFieldNumber = 55;
    private global::DCL.ECSComponents.YGUnit borderTopWidthUnit_;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit BorderTopWidthUnit {
      get { if ((_hasBits0 & 128) != 0) { return borderTopWidthUnit_; } else { return global::DCL.ECSComponents.YGUnit.YguUndefined; } }
      set {
        _hasBits0 |= 128;
        borderTopWidthUnit_ = value;
      }
    }
    /// <summary>Gets whether the "border_top_width_unit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderTopWidthUnit {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "border_top_width_unit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderTopWidthUnit() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "border_top_width" field.</summary>
    public const int BorderTopWidthFieldNumber = 56;
    private float borderTopWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BorderTopWidth {
      get { if ((_hasBits0 & 256) != 0) { return borderTopWidth_; } else { return 0F; } }
      set {
        _hasBits0 |= 256;
        borderTopWidth_ = value;
      }
    }
    /// <summary>Gets whether the "border_top_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderTopWidth {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "border_top_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderTopWidth() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "border_right_width_unit" field.</summary>
    public const int BorderRightWidthUnitFieldNumber = 57;
    private global::DCL.ECSComponents.YGUnit borderRightWidthUnit_;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit BorderRightWidthUnit {
      get { if ((_hasBits0 & 512) != 0) { return borderRightWidthUnit_; } else { return global::DCL.ECSComponents.YGUnit.YguUndefined; } }
      set {
        _hasBits0 |= 512;
        borderRightWidthUnit_ = value;
      }
    }
    /// <summary>Gets whether the "border_right_width_unit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderRightWidthUnit {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "border_right_width_unit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderRightWidthUnit() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "border_right_width" field.</summary>
    public const int BorderRightWidthFieldNumber = 58;
    private float borderRightWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BorderRightWidth {
      get { if ((_hasBits0 & 1024) != 0) { return borderRightWidth_; } else { return 0F; } }
      set {
        _hasBits0 |= 1024;
        borderRightWidth_ = value;
      }
    }
    /// <summary>Gets whether the "border_right_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderRightWidth {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "border_right_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderRightWidth() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "border_bottom_width_unit" field.</summary>
    public const int BorderBottomWidthUnitFieldNumber = 59;
    private global::DCL.ECSComponents.YGUnit borderBottomWidthUnit_;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit BorderBottomWidthUnit {
      get { if ((_hasBits0 & 2048) != 0) { return borderBottomWidthUnit_; } else { return global::DCL.ECSComponents.YGUnit.YguUndefined; } }
      set {
        _hasBits0 |= 2048;
        borderBottomWidthUnit_ = value;
      }
    }
    /// <summary>Gets whether the "border_bottom_width_unit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderBottomWidthUnit {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "border_bottom_width_unit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderBottomWidthUnit() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "border_bottom_width" field.</summary>
    public const int BorderBottomWidthFieldNumber = 60;
    private float borderBottomWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BorderBottomWidth {
      get { if ((_hasBits0 & 4096) != 0) { return borderBottomWidth_; } else { return 0F; } }
      set {
        _hasBits0 |= 4096;
        borderBottomWidth_ = value;
      }
    }
    /// <summary>Gets whether the "border_bottom_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderBottomWidth {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "border_bottom_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderBottomWidth() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "border_top_left_radius_unit" field.</summary>
    public const int BorderTopLeftRadiusUnitFieldNumber = 61;
    private global::DCL.ECSComponents.YGUnit borderTopLeftRadiusUnit_;
    /// <summary>
    /// Border Radius
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit BorderTopLeftRadiusUnit {
      get { if ((_hasBits0 & 8192) != 0) { return borderTopLeftRadiusUnit_; } else { return global::DCL.ECSComponents.YGUnit.YguUndefined; } }
      set {
        _hasBits0 |= 8192;
        borderTopLeftRadiusUnit_ = value;
      }
    }
    /// <summary>Gets whether the "border_top_left_radius_unit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderTopLeftRadiusUnit {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "border_top_left_radius_unit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderTopLeftRadiusUnit() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "border_top_left_radius" field.</summary>
    public const int BorderTopLeftRadiusFieldNumber = 62;
    private float borderTopLeftRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BorderTopLeftRadius {
      get { if ((_hasBits0 & 16384) != 0) { return borderTopLeftRadius_; } else { return 0F; } }
      set {
        _hasBits0 |= 16384;
        borderTopLeftRadius_ = value;
      }
    }
    /// <summary>Gets whether the "border_top_left_radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderTopLeftRadius {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "border_top_left_radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderTopLeftRadius() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "border_top_right_radius_unit" field.</summary>
    public const int BorderTopRightRadiusUnitFieldNumber = 63;
    private global::DCL.ECSComponents.YGUnit borderTopRightRadiusUnit_;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit BorderTopRightRadiusUnit {
      get { if ((_hasBits0 & 32768) != 0) { return borderTopRightRadiusUnit_; } else { return global::DCL.ECSComponents.YGUnit.YguUndefined; } }
      set {
        _hasBits0 |= 32768;
        borderTopRightRadiusUnit_ = value;
      }
    }
    /// <summary>Gets whether the "border_top_right_radius_unit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderTopRightRadiusUnit {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "border_top_right_radius_unit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderTopRightRadiusUnit() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "border_top_right_radius" field.</summary>
    public const int BorderTopRightRadiusFieldNumber = 64;
    private float borderTopRightRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BorderTopRightRadius {
      get { if ((_hasBits0 & 65536) != 0) { return borderTopRightRadius_; } else { return 0F; } }
      set {
        _hasBits0 |= 65536;
        borderTopRightRadius_ = value;
      }
    }
    /// <summary>Gets whether the "border_top_right_radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderTopRightRadius {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "border_top_right_radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderTopRightRadius() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "border_bottom_left_radius_unit" field.</summary>
    public const int BorderBottomLeftRadiusUnitFieldNumber = 65;
    private global::DCL.ECSComponents.YGUnit borderBottomLeftRadiusUnit_;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit BorderBottomLeftRadiusUnit {
      get { if ((_hasBits0 & 131072) != 0) { return borderBottomLeftRadiusUnit_; } else { return global::DCL.ECSComponents.YGUnit.YguUndefined; } }
      set {
        _hasBits0 |= 131072;
        borderBottomLeftRadiusUnit_ = value;
      }
    }
    /// <summary>Gets whether the "border_bottom_left_radius_unit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderBottomLeftRadiusUnit {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "border_bottom_left_radius_unit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderBottomLeftRadiusUnit() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "border_bottom_left_radius" field.</summary>
    public const int BorderBottomLeftRadiusFieldNumber = 66;
    private float borderBottomLeftRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BorderBottomLeftRadius {
      get { if ((_hasBits0 & 262144) != 0) { return borderBottomLeftRadius_; } else { return 0F; } }
      set {
        _hasBits0 |= 262144;
        borderBottomLeftRadius_ = value;
      }
    }
    /// <summary>Gets whether the "border_bottom_left_radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderBottomLeftRadius {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "border_bottom_left_radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderBottomLeftRadius() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "border_bottom_right_radius_unit" field.</summary>
    public const int BorderBottomRightRadiusUnitFieldNumber = 67;
    private global::DCL.ECSComponents.YGUnit borderBottomRightRadiusUnit_;
    /// <summary>
    /// YGUnit.YGU_UNDEFINED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.YGUnit BorderBottomRightRadiusUnit {
      get { if ((_hasBits0 & 524288) != 0) { return borderBottomRightRadiusUnit_; } else { return global::DCL.ECSComponents.YGUnit.YguUndefined; } }
      set {
        _hasBits0 |= 524288;
        borderBottomRightRadiusUnit_ = value;
      }
    }
    /// <summary>Gets whether the "border_bottom_right_radius_unit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderBottomRightRadiusUnit {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "border_bottom_right_radius_unit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderBottomRightRadiusUnit() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "border_bottom_right_radius" field.</summary>
    public const int BorderBottomRightRadiusFieldNumber = 68;
    private float borderBottomRightRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BorderBottomRightRadius {
      get { if ((_hasBits0 & 1048576) != 0) { return borderBottomRightRadius_; } else { return 0F; } }
      set {
        _hasBits0 |= 1048576;
        borderBottomRightRadius_ = value;
      }
    }
    /// <summary>Gets whether the "border_bottom_right_radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBorderBottomRightRadius {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "border_bottom_right_radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBorderBottomRightRadius() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "border_top_color" field.</summary>
    public const int BorderTopColorFieldNumber = 69;
    private global::Decentraland.Common.Color4 borderTopColor_;
    /// <summary>
    /// Border Color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 BorderTopColor {
      get { return borderTopColor_; }
      set {
        borderTopColor_ = value;
      }
    }

    /// <summary>Field number for the "border_bottom_color" field.</summary>
    public const int BorderBottomColorFieldNumber = 70;
    private global::Decentraland.Common.Color4 borderBottomColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 BorderBottomColor {
      get { return borderBottomColor_; }
      set {
        borderBottomColor_ = value;
      }
    }

    /// <summary>Field number for the "border_left_color" field.</summary>
    public const int BorderLeftColorFieldNumber = 71;
    private global::Decentraland.Common.Color4 borderLeftColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 BorderLeftColor {
      get { return borderLeftColor_; }
      set {
        borderLeftColor_ = value;
      }
    }

    /// <summary>Field number for the "border_right_color" field.</summary>
    public const int BorderRightColorFieldNumber = 72;
    private global::Decentraland.Common.Color4 borderRightColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 BorderRightColor {
      get { return borderRightColor_; }
      set {
        borderRightColor_ = value;
      }
    }

    /// <summary>Field number for the "opacity" field.</summary>
    public const int OpacityFieldNumber = 73;
    private float opacity_;
    /// <summary>
    /// default: 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Opacity {
      get { if ((_hasBits0 & 2097152) != 0) { return opacity_; } else { return 0F; } }
      set {
        _hasBits0 |= 2097152;
        opacity_ = value;
      }
    }
    /// <summary>Gets whether the "opacity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpacity {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "opacity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpacity() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "z_index" field.</summary>
    public const int ZIndexFieldNumber = 77;
    private int zIndex_;
    /// <summary>
    /// default: 0 — controls render stacking order. Higher values appear in front of lower values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ZIndex {
      get { if ((_hasBits0 & 4194304) != 0) { return zIndex_; } else { return 0; } }
      set {
        _hasBits0 |= 4194304;
        zIndex_ = value;
      }
    }
    /// <summary>Gets whether the "z_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZIndex {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "z_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZIndex() {
      _hasBits0 &= ~4194304;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PBUiTransform);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PBUiTransform other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (RightOf != other.RightOf) return false;
      if (AlignContent != other.AlignContent) return false;
      if (AlignItems != other.AlignItems) return false;
      if (FlexWrap != other.FlexWrap) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FlexShrink, other.FlexShrink)) return false;
      if (PositionType != other.PositionType) return false;
      if (AlignSelf != other.AlignSelf) return false;
      if (FlexDirection != other.FlexDirection) return false;
      if (JustifyContent != other.JustifyContent) return false;
      if (Overflow != other.Overflow) return false;
      if (Display != other.Display) return false;
      if (FlexBasisUnit != other.FlexBasisUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FlexBasis, other.FlexBasis)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FlexGrow, other.FlexGrow)) return false;
      if (WidthUnit != other.WidthUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Width, other.Width)) return false;
      if (HeightUnit != other.HeightUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Height, other.Height)) return false;
      if (MinWidthUnit != other.MinWidthUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinWidth, other.MinWidth)) return false;
      if (MinHeightUnit != other.MinHeightUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinHeight, other.MinHeight)) return false;
      if (MaxWidthUnit != other.MaxWidthUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxWidth, other.MaxWidth)) return false;
      if (MaxHeightUnit != other.MaxHeightUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxHeight, other.MaxHeight)) return false;
      if (PositionLeftUnit != other.PositionLeftUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionLeft, other.PositionLeft)) return false;
      if (PositionTopUnit != other.PositionTopUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionTop, other.PositionTop)) return false;
      if (PositionRightUnit != other.PositionRightUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionRight, other.PositionRight)) return false;
      if (PositionBottomUnit != other.PositionBottomUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionBottom, other.PositionBottom)) return false;
      if (MarginLeftUnit != other.MarginLeftUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MarginLeft, other.MarginLeft)) return false;
      if (MarginTopUnit != other.MarginTopUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MarginTop, other.MarginTop)) return false;
      if (MarginRightUnit != other.MarginRightUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MarginRight, other.MarginRight)) return false;
      if (MarginBottomUnit != other.MarginBottomUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MarginBottom, other.MarginBottom)) return false;
      if (PaddingLeftUnit != other.PaddingLeftUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingLeft, other.PaddingLeft)) return false;
      if (PaddingTopUnit != other.PaddingTopUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingTop, other.PaddingTop)) return false;
      if (PaddingRightUnit != other.PaddingRightUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingRight, other.PaddingRight)) return false;
      if (PaddingBottomUnit != other.PaddingBottomUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingBottom, other.PaddingBottom)) return false;
      if (PointerFilter != other.PointerFilter) return false;
      if (BorderLeftWidthUnit != other.BorderLeftWidthUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BorderLeftWidth, other.BorderLeftWidth)) return false;
      if (BorderTopWidthUnit != other.BorderTopWidthUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BorderTopWidth, other.BorderTopWidth)) return false;
      if (BorderRightWidthUnit != other.BorderRightWidthUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BorderRightWidth, other.BorderRightWidth)) return false;
      if (BorderBottomWidthUnit != other.BorderBottomWidthUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BorderBottomWidth, other.BorderBottomWidth)) return false;
      if (BorderTopLeftRadiusUnit != other.BorderTopLeftRadiusUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BorderTopLeftRadius, other.BorderTopLeftRadius)) return false;
      if (BorderTopRightRadiusUnit != other.BorderTopRightRadiusUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BorderTopRightRadius, other.BorderTopRightRadius)) return false;
      if (BorderBottomLeftRadiusUnit != other.BorderBottomLeftRadiusUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BorderBottomLeftRadius, other.BorderBottomLeftRadius)) return false;
      if (BorderBottomRightRadiusUnit != other.BorderBottomRightRadiusUnit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BorderBottomRightRadius, other.BorderBottomRightRadius)) return false;
      if (!object.Equals(BorderTopColor, other.BorderTopColor)) return false;
      if (!object.Equals(BorderBottomColor, other.BorderBottomColor)) return false;
      if (!object.Equals(BorderLeftColor, other.BorderLeftColor)) return false;
      if (!object.Equals(BorderRightColor, other.BorderRightColor)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Opacity, other.Opacity)) return false;
      if (ZIndex != other.ZIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent != 0) hash ^= Parent.GetHashCode();
      if (RightOf != 0) hash ^= RightOf.GetHashCode();
      if (HasAlignContent) hash ^= AlignContent.GetHashCode();
      if (HasAlignItems) hash ^= AlignItems.GetHashCode();
      if (HasFlexWrap) hash ^= FlexWrap.GetHashCode();
      if (HasFlexShrink) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FlexShrink);
      if (PositionType != global::DCL.ECSComponents.YGPositionType.YgptRelative) hash ^= PositionType.GetHashCode();
      if (AlignSelf != global::DCL.ECSComponents.YGAlign.YgaAuto) hash ^= AlignSelf.GetHashCode();
      if (FlexDirection != global::DCL.ECSComponents.YGFlexDirection.YgfdRow) hash ^= FlexDirection.GetHashCode();
      if (JustifyContent != global::DCL.ECSComponents.YGJustify.YgjFlexStart) hash ^= JustifyContent.GetHashCode();
      if (Overflow != global::DCL.ECSComponents.YGOverflow.YgoVisible) hash ^= Overflow.GetHashCode();
      if (Display != global::DCL.ECSComponents.YGDisplay.YgdFlex) hash ^= Display.GetHashCode();
      if (FlexBasisUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= FlexBasisUnit.GetHashCode();
      if (FlexBasis != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FlexBasis);
      if (FlexGrow != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FlexGrow);
      if (WidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= WidthUnit.GetHashCode();
      if (Width != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Width);
      if (HeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= HeightUnit.GetHashCode();
      if (Height != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Height);
      if (MinWidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= MinWidthUnit.GetHashCode();
      if (MinWidth != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinWidth);
      if (MinHeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= MinHeightUnit.GetHashCode();
      if (MinHeight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinHeight);
      if (MaxWidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= MaxWidthUnit.GetHashCode();
      if (MaxWidth != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxWidth);
      if (MaxHeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= MaxHeightUnit.GetHashCode();
      if (MaxHeight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxHeight);
      if (PositionLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= PositionLeftUnit.GetHashCode();
      if (PositionLeft != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionLeft);
      if (PositionTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= PositionTopUnit.GetHashCode();
      if (PositionTop != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionTop);
      if (PositionRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= PositionRightUnit.GetHashCode();
      if (PositionRight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionRight);
      if (PositionBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= PositionBottomUnit.GetHashCode();
      if (PositionBottom != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionBottom);
      if (MarginLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= MarginLeftUnit.GetHashCode();
      if (MarginLeft != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MarginLeft);
      if (MarginTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= MarginTopUnit.GetHashCode();
      if (MarginTop != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MarginTop);
      if (MarginRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= MarginRightUnit.GetHashCode();
      if (MarginRight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MarginRight);
      if (MarginBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= MarginBottomUnit.GetHashCode();
      if (MarginBottom != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MarginBottom);
      if (PaddingLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= PaddingLeftUnit.GetHashCode();
      if (PaddingLeft != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingLeft);
      if (PaddingTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= PaddingTopUnit.GetHashCode();
      if (PaddingTop != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingTop);
      if (PaddingRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= PaddingRightUnit.GetHashCode();
      if (PaddingRight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingRight);
      if (PaddingBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) hash ^= PaddingBottomUnit.GetHashCode();
      if (PaddingBottom != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingBottom);
      if (HasPointerFilter) hash ^= PointerFilter.GetHashCode();
      if (HasBorderLeftWidthUnit) hash ^= BorderLeftWidthUnit.GetHashCode();
      if (HasBorderLeftWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BorderLeftWidth);
      if (HasBorderTopWidthUnit) hash ^= BorderTopWidthUnit.GetHashCode();
      if (HasBorderTopWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BorderTopWidth);
      if (HasBorderRightWidthUnit) hash ^= BorderRightWidthUnit.GetHashCode();
      if (HasBorderRightWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BorderRightWidth);
      if (HasBorderBottomWidthUnit) hash ^= BorderBottomWidthUnit.GetHashCode();
      if (HasBorderBottomWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BorderBottomWidth);
      if (HasBorderTopLeftRadiusUnit) hash ^= BorderTopLeftRadiusUnit.GetHashCode();
      if (HasBorderTopLeftRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BorderTopLeftRadius);
      if (HasBorderTopRightRadiusUnit) hash ^= BorderTopRightRadiusUnit.GetHashCode();
      if (HasBorderTopRightRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BorderTopRightRadius);
      if (HasBorderBottomLeftRadiusUnit) hash ^= BorderBottomLeftRadiusUnit.GetHashCode();
      if (HasBorderBottomLeftRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BorderBottomLeftRadius);
      if (HasBorderBottomRightRadiusUnit) hash ^= BorderBottomRightRadiusUnit.GetHashCode();
      if (HasBorderBottomRightRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BorderBottomRightRadius);
      if (borderTopColor_ != null) hash ^= BorderTopColor.GetHashCode();
      if (borderBottomColor_ != null) hash ^= BorderBottomColor.GetHashCode();
      if (borderLeftColor_ != null) hash ^= BorderLeftColor.GetHashCode();
      if (borderRightColor_ != null) hash ^= BorderRightColor.GetHashCode();
      if (HasOpacity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Opacity);
      if (HasZIndex) hash ^= ZIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Parent);
      }
      if (RightOf != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RightOf);
      }
      if (HasAlignContent) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AlignContent);
      }
      if (HasAlignItems) {
        output.WriteRawTag(32);
        output.WriteEnum((int) AlignItems);
      }
      if (HasFlexWrap) {
        output.WriteRawTag(40);
        output.WriteEnum((int) FlexWrap);
      }
      if (HasFlexShrink) {
        output.WriteRawTag(53);
        output.WriteFloat(FlexShrink);
      }
      if (PositionType != global::DCL.ECSComponents.YGPositionType.YgptRelative) {
        output.WriteRawTag(56);
        output.WriteEnum((int) PositionType);
      }
      if (AlignSelf != global::DCL.ECSComponents.YGAlign.YgaAuto) {
        output.WriteRawTag(64);
        output.WriteEnum((int) AlignSelf);
      }
      if (FlexDirection != global::DCL.ECSComponents.YGFlexDirection.YgfdRow) {
        output.WriteRawTag(72);
        output.WriteEnum((int) FlexDirection);
      }
      if (JustifyContent != global::DCL.ECSComponents.YGJustify.YgjFlexStart) {
        output.WriteRawTag(80);
        output.WriteEnum((int) JustifyContent);
      }
      if (Overflow != global::DCL.ECSComponents.YGOverflow.YgoVisible) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Overflow);
      }
      if (Display != global::DCL.ECSComponents.YGDisplay.YgdFlex) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Display);
      }
      if (FlexBasisUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(104);
        output.WriteEnum((int) FlexBasisUnit);
      }
      if (FlexBasis != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(FlexBasis);
      }
      if (FlexGrow != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(FlexGrow);
      }
      if (WidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) WidthUnit);
      }
      if (Width != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Width);
      }
      if (HeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) HeightUnit);
      }
      if (Height != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(Height);
      }
      if (MinWidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) MinWidthUnit);
      }
      if (MinWidth != 0F) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(MinWidth);
      }
      if (MinHeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) MinHeightUnit);
      }
      if (MinHeight != 0F) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(MinHeight);
      }
      if (MaxWidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) MaxWidthUnit);
      }
      if (MaxWidth != 0F) {
        output.WriteRawTag(205, 1);
        output.WriteFloat(MaxWidth);
      }
      if (MaxHeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) MaxHeightUnit);
      }
      if (MaxHeight != 0F) {
        output.WriteRawTag(221, 1);
        output.WriteFloat(MaxHeight);
      }
      if (PositionLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) PositionLeftUnit);
      }
      if (PositionLeft != 0F) {
        output.WriteRawTag(237, 1);
        output.WriteFloat(PositionLeft);
      }
      if (PositionTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(240, 1);
        output.WriteEnum((int) PositionTopUnit);
      }
      if (PositionTop != 0F) {
        output.WriteRawTag(253, 1);
        output.WriteFloat(PositionTop);
      }
      if (PositionRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) PositionRightUnit);
      }
      if (PositionRight != 0F) {
        output.WriteRawTag(141, 2);
        output.WriteFloat(PositionRight);
      }
      if (PositionBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(144, 2);
        output.WriteEnum((int) PositionBottomUnit);
      }
      if (PositionBottom != 0F) {
        output.WriteRawTag(157, 2);
        output.WriteFloat(PositionBottom);
      }
      if (MarginLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(160, 2);
        output.WriteEnum((int) MarginLeftUnit);
      }
      if (MarginLeft != 0F) {
        output.WriteRawTag(173, 2);
        output.WriteFloat(MarginLeft);
      }
      if (MarginTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(176, 2);
        output.WriteEnum((int) MarginTopUnit);
      }
      if (MarginTop != 0F) {
        output.WriteRawTag(189, 2);
        output.WriteFloat(MarginTop);
      }
      if (MarginRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(192, 2);
        output.WriteEnum((int) MarginRightUnit);
      }
      if (MarginRight != 0F) {
        output.WriteRawTag(205, 2);
        output.WriteFloat(MarginRight);
      }
      if (MarginBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(208, 2);
        output.WriteEnum((int) MarginBottomUnit);
      }
      if (MarginBottom != 0F) {
        output.WriteRawTag(221, 2);
        output.WriteFloat(MarginBottom);
      }
      if (PaddingLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(224, 2);
        output.WriteEnum((int) PaddingLeftUnit);
      }
      if (PaddingLeft != 0F) {
        output.WriteRawTag(237, 2);
        output.WriteFloat(PaddingLeft);
      }
      if (PaddingTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(240, 2);
        output.WriteEnum((int) PaddingTopUnit);
      }
      if (PaddingTop != 0F) {
        output.WriteRawTag(253, 2);
        output.WriteFloat(PaddingTop);
      }
      if (PaddingRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(128, 3);
        output.WriteEnum((int) PaddingRightUnit);
      }
      if (PaddingRight != 0F) {
        output.WriteRawTag(141, 3);
        output.WriteFloat(PaddingRight);
      }
      if (PaddingBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(144, 3);
        output.WriteEnum((int) PaddingBottomUnit);
      }
      if (PaddingBottom != 0F) {
        output.WriteRawTag(157, 3);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPointerFilter) {
        output.WriteRawTag(160, 3);
        output.WriteEnum((int) PointerFilter);
      }
      if (HasBorderLeftWidthUnit) {
        output.WriteRawTag(168, 3);
        output.WriteEnum((int) BorderLeftWidthUnit);
      }
      if (HasBorderLeftWidth) {
        output.WriteRawTag(181, 3);
        output.WriteFloat(BorderLeftWidth);
      }
      if (HasBorderTopWidthUnit) {
        output.WriteRawTag(184, 3);
        output.WriteEnum((int) BorderTopWidthUnit);
      }
      if (HasBorderTopWidth) {
        output.WriteRawTag(197, 3);
        output.WriteFloat(BorderTopWidth);
      }
      if (HasBorderRightWidthUnit) {
        output.WriteRawTag(200, 3);
        output.WriteEnum((int) BorderRightWidthUnit);
      }
      if (HasBorderRightWidth) {
        output.WriteRawTag(213, 3);
        output.WriteFloat(BorderRightWidth);
      }
      if (HasBorderBottomWidthUnit) {
        output.WriteRawTag(216, 3);
        output.WriteEnum((int) BorderBottomWidthUnit);
      }
      if (HasBorderBottomWidth) {
        output.WriteRawTag(229, 3);
        output.WriteFloat(BorderBottomWidth);
      }
      if (HasBorderTopLeftRadiusUnit) {
        output.WriteRawTag(232, 3);
        output.WriteEnum((int) BorderTopLeftRadiusUnit);
      }
      if (HasBorderTopLeftRadius) {
        output.WriteRawTag(245, 3);
        output.WriteFloat(BorderTopLeftRadius);
      }
      if (HasBorderTopRightRadiusUnit) {
        output.WriteRawTag(248, 3);
        output.WriteEnum((int) BorderTopRightRadiusUnit);
      }
      if (HasBorderTopRightRadius) {
        output.WriteRawTag(133, 4);
        output.WriteFloat(BorderTopRightRadius);
      }
      if (HasBorderBottomLeftRadiusUnit) {
        output.WriteRawTag(136, 4);
        output.WriteEnum((int) BorderBottomLeftRadiusUnit);
      }
      if (HasBorderBottomLeftRadius) {
        output.WriteRawTag(149, 4);
        output.WriteFloat(BorderBottomLeftRadius);
      }
      if (HasBorderBottomRightRadiusUnit) {
        output.WriteRawTag(152, 4);
        output.WriteEnum((int) BorderBottomRightRadiusUnit);
      }
      if (HasBorderBottomRightRadius) {
        output.WriteRawTag(165, 4);
        output.WriteFloat(BorderBottomRightRadius);
      }
      if (borderTopColor_ != null) {
        output.WriteRawTag(170, 4);
        output.WriteMessage(BorderTopColor);
      }
      if (borderBottomColor_ != null) {
        output.WriteRawTag(178, 4);
        output.WriteMessage(BorderBottomColor);
      }
      if (borderLeftColor_ != null) {
        output.WriteRawTag(186, 4);
        output.WriteMessage(BorderLeftColor);
      }
      if (borderRightColor_ != null) {
        output.WriteRawTag(194, 4);
        output.WriteMessage(BorderRightColor);
      }
      if (HasOpacity) {
        output.WriteRawTag(205, 4);
        output.WriteFloat(Opacity);
      }
      if (HasZIndex) {
        output.WriteRawTag(232, 4);
        output.WriteInt32(ZIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Parent);
      }
      if (RightOf != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RightOf);
      }
      if (HasAlignContent) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AlignContent);
      }
      if (HasAlignItems) {
        output.WriteRawTag(32);
        output.WriteEnum((int) AlignItems);
      }
      if (HasFlexWrap) {
        output.WriteRawTag(40);
        output.WriteEnum((int) FlexWrap);
      }
      if (HasFlexShrink) {
        output.WriteRawTag(53);
        output.WriteFloat(FlexShrink);
      }
      if (PositionType != global::DCL.ECSComponents.YGPositionType.YgptRelative) {
        output.WriteRawTag(56);
        output.WriteEnum((int) PositionType);
      }
      if (AlignSelf != global::DCL.ECSComponents.YGAlign.YgaAuto) {
        output.WriteRawTag(64);
        output.WriteEnum((int) AlignSelf);
      }
      if (FlexDirection != global::DCL.ECSComponents.YGFlexDirection.YgfdRow) {
        output.WriteRawTag(72);
        output.WriteEnum((int) FlexDirection);
      }
      if (JustifyContent != global::DCL.ECSComponents.YGJustify.YgjFlexStart) {
        output.WriteRawTag(80);
        output.WriteEnum((int) JustifyContent);
      }
      if (Overflow != global::DCL.ECSComponents.YGOverflow.YgoVisible) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Overflow);
      }
      if (Display != global::DCL.ECSComponents.YGDisplay.YgdFlex) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Display);
      }
      if (FlexBasisUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(104);
        output.WriteEnum((int) FlexBasisUnit);
      }
      if (FlexBasis != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(FlexBasis);
      }
      if (FlexGrow != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(FlexGrow);
      }
      if (WidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) WidthUnit);
      }
      if (Width != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Width);
      }
      if (HeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) HeightUnit);
      }
      if (Height != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(Height);
      }
      if (MinWidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) MinWidthUnit);
      }
      if (MinWidth != 0F) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(MinWidth);
      }
      if (MinHeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) MinHeightUnit);
      }
      if (MinHeight != 0F) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(MinHeight);
      }
      if (MaxWidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) MaxWidthUnit);
      }
      if (MaxWidth != 0F) {
        output.WriteRawTag(205, 1);
        output.WriteFloat(MaxWidth);
      }
      if (MaxHeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) MaxHeightUnit);
      }
      if (MaxHeight != 0F) {
        output.WriteRawTag(221, 1);
        output.WriteFloat(MaxHeight);
      }
      if (PositionLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) PositionLeftUnit);
      }
      if (PositionLeft != 0F) {
        output.WriteRawTag(237, 1);
        output.WriteFloat(PositionLeft);
      }
      if (PositionTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(240, 1);
        output.WriteEnum((int) PositionTopUnit);
      }
      if (PositionTop != 0F) {
        output.WriteRawTag(253, 1);
        output.WriteFloat(PositionTop);
      }
      if (PositionRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) PositionRightUnit);
      }
      if (PositionRight != 0F) {
        output.WriteRawTag(141, 2);
        output.WriteFloat(PositionRight);
      }
      if (PositionBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(144, 2);
        output.WriteEnum((int) PositionBottomUnit);
      }
      if (PositionBottom != 0F) {
        output.WriteRawTag(157, 2);
        output.WriteFloat(PositionBottom);
      }
      if (MarginLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(160, 2);
        output.WriteEnum((int) MarginLeftUnit);
      }
      if (MarginLeft != 0F) {
        output.WriteRawTag(173, 2);
        output.WriteFloat(MarginLeft);
      }
      if (MarginTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(176, 2);
        output.WriteEnum((int) MarginTopUnit);
      }
      if (MarginTop != 0F) {
        output.WriteRawTag(189, 2);
        output.WriteFloat(MarginTop);
      }
      if (MarginRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(192, 2);
        output.WriteEnum((int) MarginRightUnit);
      }
      if (MarginRight != 0F) {
        output.WriteRawTag(205, 2);
        output.WriteFloat(MarginRight);
      }
      if (MarginBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(208, 2);
        output.WriteEnum((int) MarginBottomUnit);
      }
      if (MarginBottom != 0F) {
        output.WriteRawTag(221, 2);
        output.WriteFloat(MarginBottom);
      }
      if (PaddingLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(224, 2);
        output.WriteEnum((int) PaddingLeftUnit);
      }
      if (PaddingLeft != 0F) {
        output.WriteRawTag(237, 2);
        output.WriteFloat(PaddingLeft);
      }
      if (PaddingTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(240, 2);
        output.WriteEnum((int) PaddingTopUnit);
      }
      if (PaddingTop != 0F) {
        output.WriteRawTag(253, 2);
        output.WriteFloat(PaddingTop);
      }
      if (PaddingRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(128, 3);
        output.WriteEnum((int) PaddingRightUnit);
      }
      if (PaddingRight != 0F) {
        output.WriteRawTag(141, 3);
        output.WriteFloat(PaddingRight);
      }
      if (PaddingBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        output.WriteRawTag(144, 3);
        output.WriteEnum((int) PaddingBottomUnit);
      }
      if (PaddingBottom != 0F) {
        output.WriteRawTag(157, 3);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPointerFilter) {
        output.WriteRawTag(160, 3);
        output.WriteEnum((int) PointerFilter);
      }
      if (HasBorderLeftWidthUnit) {
        output.WriteRawTag(168, 3);
        output.WriteEnum((int) BorderLeftWidthUnit);
      }
      if (HasBorderLeftWidth) {
        output.WriteRawTag(181, 3);
        output.WriteFloat(BorderLeftWidth);
      }
      if (HasBorderTopWidthUnit) {
        output.WriteRawTag(184, 3);
        output.WriteEnum((int) BorderTopWidthUnit);
      }
      if (HasBorderTopWidth) {
        output.WriteRawTag(197, 3);
        output.WriteFloat(BorderTopWidth);
      }
      if (HasBorderRightWidthUnit) {
        output.WriteRawTag(200, 3);
        output.WriteEnum((int) BorderRightWidthUnit);
      }
      if (HasBorderRightWidth) {
        output.WriteRawTag(213, 3);
        output.WriteFloat(BorderRightWidth);
      }
      if (HasBorderBottomWidthUnit) {
        output.WriteRawTag(216, 3);
        output.WriteEnum((int) BorderBottomWidthUnit);
      }
      if (HasBorderBottomWidth) {
        output.WriteRawTag(229, 3);
        output.WriteFloat(BorderBottomWidth);
      }
      if (HasBorderTopLeftRadiusUnit) {
        output.WriteRawTag(232, 3);
        output.WriteEnum((int) BorderTopLeftRadiusUnit);
      }
      if (HasBorderTopLeftRadius) {
        output.WriteRawTag(245, 3);
        output.WriteFloat(BorderTopLeftRadius);
      }
      if (HasBorderTopRightRadiusUnit) {
        output.WriteRawTag(248, 3);
        output.WriteEnum((int) BorderTopRightRadiusUnit);
      }
      if (HasBorderTopRightRadius) {
        output.WriteRawTag(133, 4);
        output.WriteFloat(BorderTopRightRadius);
      }
      if (HasBorderBottomLeftRadiusUnit) {
        output.WriteRawTag(136, 4);
        output.WriteEnum((int) BorderBottomLeftRadiusUnit);
      }
      if (HasBorderBottomLeftRadius) {
        output.WriteRawTag(149, 4);
        output.WriteFloat(BorderBottomLeftRadius);
      }
      if (HasBorderBottomRightRadiusUnit) {
        output.WriteRawTag(152, 4);
        output.WriteEnum((int) BorderBottomRightRadiusUnit);
      }
      if (HasBorderBottomRightRadius) {
        output.WriteRawTag(165, 4);
        output.WriteFloat(BorderBottomRightRadius);
      }
      if (borderTopColor_ != null) {
        output.WriteRawTag(170, 4);
        output.WriteMessage(BorderTopColor);
      }
      if (borderBottomColor_ != null) {
        output.WriteRawTag(178, 4);
        output.WriteMessage(BorderBottomColor);
      }
      if (borderLeftColor_ != null) {
        output.WriteRawTag(186, 4);
        output.WriteMessage(BorderLeftColor);
      }
      if (borderRightColor_ != null) {
        output.WriteRawTag(194, 4);
        output.WriteMessage(BorderRightColor);
      }
      if (HasOpacity) {
        output.WriteRawTag(205, 4);
        output.WriteFloat(Opacity);
      }
      if (HasZIndex) {
        output.WriteRawTag(232, 4);
        output.WriteInt32(ZIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Parent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Parent);
      }
      if (RightOf != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RightOf);
      }
      if (HasAlignContent) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AlignContent);
      }
      if (HasAlignItems) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AlignItems);
      }
      if (HasFlexWrap) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FlexWrap);
      }
      if (HasFlexShrink) {
        size += 1 + 4;
      }
      if (PositionType != global::DCL.ECSComponents.YGPositionType.YgptRelative) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PositionType);
      }
      if (AlignSelf != global::DCL.ECSComponents.YGAlign.YgaAuto) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AlignSelf);
      }
      if (FlexDirection != global::DCL.ECSComponents.YGFlexDirection.YgfdRow) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FlexDirection);
      }
      if (JustifyContent != global::DCL.ECSComponents.YGJustify.YgjFlexStart) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JustifyContent);
      }
      if (Overflow != global::DCL.ECSComponents.YGOverflow.YgoVisible) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Overflow);
      }
      if (Display != global::DCL.ECSComponents.YGDisplay.YgdFlex) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Display);
      }
      if (FlexBasisUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FlexBasisUnit);
      }
      if (FlexBasis != 0F) {
        size += 1 + 4;
      }
      if (FlexGrow != 0F) {
        size += 1 + 4;
      }
      if (WidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) WidthUnit);
      }
      if (Width != 0F) {
        size += 2 + 4;
      }
      if (HeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) HeightUnit);
      }
      if (Height != 0F) {
        size += 2 + 4;
      }
      if (MinWidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MinWidthUnit);
      }
      if (MinWidth != 0F) {
        size += 2 + 4;
      }
      if (MinHeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MinHeightUnit);
      }
      if (MinHeight != 0F) {
        size += 2 + 4;
      }
      if (MaxWidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MaxWidthUnit);
      }
      if (MaxWidth != 0F) {
        size += 2 + 4;
      }
      if (MaxHeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MaxHeightUnit);
      }
      if (MaxHeight != 0F) {
        size += 2 + 4;
      }
      if (PositionLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PositionLeftUnit);
      }
      if (PositionLeft != 0F) {
        size += 2 + 4;
      }
      if (PositionTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PositionTopUnit);
      }
      if (PositionTop != 0F) {
        size += 2 + 4;
      }
      if (PositionRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PositionRightUnit);
      }
      if (PositionRight != 0F) {
        size += 2 + 4;
      }
      if (PositionBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PositionBottomUnit);
      }
      if (PositionBottom != 0F) {
        size += 2 + 4;
      }
      if (MarginLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MarginLeftUnit);
      }
      if (MarginLeft != 0F) {
        size += 2 + 4;
      }
      if (MarginTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MarginTopUnit);
      }
      if (MarginTop != 0F) {
        size += 2 + 4;
      }
      if (MarginRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MarginRightUnit);
      }
      if (MarginRight != 0F) {
        size += 2 + 4;
      }
      if (MarginBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MarginBottomUnit);
      }
      if (MarginBottom != 0F) {
        size += 2 + 4;
      }
      if (PaddingLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PaddingLeftUnit);
      }
      if (PaddingLeft != 0F) {
        size += 2 + 4;
      }
      if (PaddingTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PaddingTopUnit);
      }
      if (PaddingTop != 0F) {
        size += 2 + 4;
      }
      if (PaddingRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PaddingRightUnit);
      }
      if (PaddingRight != 0F) {
        size += 2 + 4;
      }
      if (PaddingBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PaddingBottomUnit);
      }
      if (PaddingBottom != 0F) {
        size += 2 + 4;
      }
      if (HasPointerFilter) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PointerFilter);
      }
      if (HasBorderLeftWidthUnit) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BorderLeftWidthUnit);
      }
      if (HasBorderLeftWidth) {
        size += 2 + 4;
      }
      if (HasBorderTopWidthUnit) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BorderTopWidthUnit);
      }
      if (HasBorderTopWidth) {
        size += 2 + 4;
      }
      if (HasBorderRightWidthUnit) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BorderRightWidthUnit);
      }
      if (HasBorderRightWidth) {
        size += 2 + 4;
      }
      if (HasBorderBottomWidthUnit) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BorderBottomWidthUnit);
      }
      if (HasBorderBottomWidth) {
        size += 2 + 4;
      }
      if (HasBorderTopLeftRadiusUnit) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BorderTopLeftRadiusUnit);
      }
      if (HasBorderTopLeftRadius) {
        size += 2 + 4;
      }
      if (HasBorderTopRightRadiusUnit) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BorderTopRightRadiusUnit);
      }
      if (HasBorderTopRightRadius) {
        size += 2 + 4;
      }
      if (HasBorderBottomLeftRadiusUnit) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BorderBottomLeftRadiusUnit);
      }
      if (HasBorderBottomLeftRadius) {
        size += 2 + 4;
      }
      if (HasBorderBottomRightRadiusUnit) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BorderBottomRightRadiusUnit);
      }
      if (HasBorderBottomRightRadius) {
        size += 2 + 4;
      }
      if (borderTopColor_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BorderTopColor);
      }
      if (borderBottomColor_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BorderBottomColor);
      }
      if (borderLeftColor_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BorderLeftColor);
      }
      if (borderRightColor_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BorderRightColor);
      }
      if (HasOpacity) {
        size += 2 + 4;
      }
      if (HasZIndex) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ZIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PBUiTransform other) {
      if (other == null) {
        return;
      }
      if (other.Parent != 0) {
        Parent = other.Parent;
      }
      if (other.RightOf != 0) {
        RightOf = other.RightOf;
      }
      if (other.HasAlignContent) {
        AlignContent = other.AlignContent;
      }
      if (other.HasAlignItems) {
        AlignItems = other.AlignItems;
      }
      if (other.HasFlexWrap) {
        FlexWrap = other.FlexWrap;
      }
      if (other.HasFlexShrink) {
        FlexShrink = other.FlexShrink;
      }
      if (other.PositionType != global::DCL.ECSComponents.YGPositionType.YgptRelative) {
        PositionType = other.PositionType;
      }
      if (other.AlignSelf != global::DCL.ECSComponents.YGAlign.YgaAuto) {
        AlignSelf = other.AlignSelf;
      }
      if (other.FlexDirection != global::DCL.ECSComponents.YGFlexDirection.YgfdRow) {
        FlexDirection = other.FlexDirection;
      }
      if (other.JustifyContent != global::DCL.ECSComponents.YGJustify.YgjFlexStart) {
        JustifyContent = other.JustifyContent;
      }
      if (other.Overflow != global::DCL.ECSComponents.YGOverflow.YgoVisible) {
        Overflow = other.Overflow;
      }
      if (other.Display != global::DCL.ECSComponents.YGDisplay.YgdFlex) {
        Display = other.Display;
      }
      if (other.FlexBasisUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        FlexBasisUnit = other.FlexBasisUnit;
      }
      if (other.FlexBasis != 0F) {
        FlexBasis = other.FlexBasis;
      }
      if (other.FlexGrow != 0F) {
        FlexGrow = other.FlexGrow;
      }
      if (other.WidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        WidthUnit = other.WidthUnit;
      }
      if (other.Width != 0F) {
        Width = other.Width;
      }
      if (other.HeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        HeightUnit = other.HeightUnit;
      }
      if (other.Height != 0F) {
        Height = other.Height;
      }
      if (other.MinWidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        MinWidthUnit = other.MinWidthUnit;
      }
      if (other.MinWidth != 0F) {
        MinWidth = other.MinWidth;
      }
      if (other.MinHeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        MinHeightUnit = other.MinHeightUnit;
      }
      if (other.MinHeight != 0F) {
        MinHeight = other.MinHeight;
      }
      if (other.MaxWidthUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        MaxWidthUnit = other.MaxWidthUnit;
      }
      if (other.MaxWidth != 0F) {
        MaxWidth = other.MaxWidth;
      }
      if (other.MaxHeightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        MaxHeightUnit = other.MaxHeightUnit;
      }
      if (other.MaxHeight != 0F) {
        MaxHeight = other.MaxHeight;
      }
      if (other.PositionLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        PositionLeftUnit = other.PositionLeftUnit;
      }
      if (other.PositionLeft != 0F) {
        PositionLeft = other.PositionLeft;
      }
      if (other.PositionTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        PositionTopUnit = other.PositionTopUnit;
      }
      if (other.PositionTop != 0F) {
        PositionTop = other.PositionTop;
      }
      if (other.PositionRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        PositionRightUnit = other.PositionRightUnit;
      }
      if (other.PositionRight != 0F) {
        PositionRight = other.PositionRight;
      }
      if (other.PositionBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        PositionBottomUnit = other.PositionBottomUnit;
      }
      if (other.PositionBottom != 0F) {
        PositionBottom = other.PositionBottom;
      }
      if (other.MarginLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        MarginLeftUnit = other.MarginLeftUnit;
      }
      if (other.MarginLeft != 0F) {
        MarginLeft = other.MarginLeft;
      }
      if (other.MarginTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        MarginTopUnit = other.MarginTopUnit;
      }
      if (other.MarginTop != 0F) {
        MarginTop = other.MarginTop;
      }
      if (other.MarginRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        MarginRightUnit = other.MarginRightUnit;
      }
      if (other.MarginRight != 0F) {
        MarginRight = other.MarginRight;
      }
      if (other.MarginBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        MarginBottomUnit = other.MarginBottomUnit;
      }
      if (other.MarginBottom != 0F) {
        MarginBottom = other.MarginBottom;
      }
      if (other.PaddingLeftUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        PaddingLeftUnit = other.PaddingLeftUnit;
      }
      if (other.PaddingLeft != 0F) {
        PaddingLeft = other.PaddingLeft;
      }
      if (other.PaddingTopUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        PaddingTopUnit = other.PaddingTopUnit;
      }
      if (other.PaddingTop != 0F) {
        PaddingTop = other.PaddingTop;
      }
      if (other.PaddingRightUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        PaddingRightUnit = other.PaddingRightUnit;
      }
      if (other.PaddingRight != 0F) {
        PaddingRight = other.PaddingRight;
      }
      if (other.PaddingBottomUnit != global::DCL.ECSComponents.YGUnit.YguUndefined) {
        PaddingBottomUnit = other.PaddingBottomUnit;
      }
      if (other.PaddingBottom != 0F) {
        PaddingBottom = other.PaddingBottom;
      }
      if (other.HasPointerFilter) {
        PointerFilter = other.PointerFilter;
      }
      if (other.HasBorderLeftWidthUnit) {
        BorderLeftWidthUnit = other.BorderLeftWidthUnit;
      }
      if (other.HasBorderLeftWidth) {
        BorderLeftWidth = other.BorderLeftWidth;
      }
      if (other.HasBorderTopWidthUnit) {
        BorderTopWidthUnit = other.BorderTopWidthUnit;
      }
      if (other.HasBorderTopWidth) {
        BorderTopWidth = other.BorderTopWidth;
      }
      if (other.HasBorderRightWidthUnit) {
        BorderRightWidthUnit = other.BorderRightWidthUnit;
      }
      if (other.HasBorderRightWidth) {
        BorderRightWidth = other.BorderRightWidth;
      }
      if (other.HasBorderBottomWidthUnit) {
        BorderBottomWidthUnit = other.BorderBottomWidthUnit;
      }
      if (other.HasBorderBottomWidth) {
        BorderBottomWidth = other.BorderBottomWidth;
      }
      if (other.HasBorderTopLeftRadiusUnit) {
        BorderTopLeftRadiusUnit = other.BorderTopLeftRadiusUnit;
      }
      if (other.HasBorderTopLeftRadius) {
        BorderTopLeftRadius = other.BorderTopLeftRadius;
      }
      if (other.HasBorderTopRightRadiusUnit) {
        BorderTopRightRadiusUnit = other.BorderTopRightRadiusUnit;
      }
      if (other.HasBorderTopRightRadius) {
        BorderTopRightRadius = other.BorderTopRightRadius;
      }
      if (other.HasBorderBottomLeftRadiusUnit) {
        BorderBottomLeftRadiusUnit = other.BorderBottomLeftRadiusUnit;
      }
      if (other.HasBorderBottomLeftRadius) {
        BorderBottomLeftRadius = other.BorderBottomLeftRadius;
      }
      if (other.HasBorderBottomRightRadiusUnit) {
        BorderBottomRightRadiusUnit = other.BorderBottomRightRadiusUnit;
      }
      if (other.HasBorderBottomRightRadius) {
        BorderBottomRightRadius = other.BorderBottomRightRadius;
      }
      if (other.borderTopColor_ != null) {
        if (borderTopColor_ == null) {
          BorderTopColor = new global::Decentraland.Common.Color4();
        }
        BorderTopColor.MergeFrom(other.BorderTopColor);
      }
      if (other.borderBottomColor_ != null) {
        if (borderBottomColor_ == null) {
          BorderBottomColor = new global::Decentraland.Common.Color4();
        }
        BorderBottomColor.MergeFrom(other.BorderBottomColor);
      }
      if (other.borderLeftColor_ != null) {
        if (borderLeftColor_ == null) {
          BorderLeftColor = new global::Decentraland.Common.Color4();
        }
        BorderLeftColor.MergeFrom(other.BorderLeftColor);
      }
      if (other.borderRightColor_ != null) {
        if (borderRightColor_ == null) {
          BorderRightColor = new global::Decentraland.Common.Color4();
        }
        BorderRightColor.MergeFrom(other.BorderRightColor);
      }
      if (other.HasOpacity) {
        Opacity = other.Opacity;
      }
      if (other.HasZIndex) {
        ZIndex = other.ZIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Parent = input.ReadInt32();
            break;
          }
          case 16: {
            RightOf = input.ReadInt32();
            break;
          }
          case 24: {
            AlignContent = (global::DCL.ECSComponents.YGAlign) input.ReadEnum();
            break;
          }
          case 32: {
            AlignItems = (global::DCL.ECSComponents.YGAlign) input.ReadEnum();
            break;
          }
          case 40: {
            FlexWrap = (global::DCL.ECSComponents.YGWrap) input.ReadEnum();
            break;
          }
          case 53: {
            FlexShrink = input.ReadFloat();
            break;
          }
          case 56: {
            PositionType = (global::DCL.ECSComponents.YGPositionType) input.ReadEnum();
            break;
          }
          case 64: {
            AlignSelf = (global::DCL.ECSComponents.YGAlign) input.ReadEnum();
            break;
          }
          case 72: {
            FlexDirection = (global::DCL.ECSComponents.YGFlexDirection) input.ReadEnum();
            break;
          }
          case 80: {
            JustifyContent = (global::DCL.ECSComponents.YGJustify) input.ReadEnum();
            break;
          }
          case 88: {
            Overflow = (global::DCL.ECSComponents.YGOverflow) input.ReadEnum();
            break;
          }
          case 96: {
            Display = (global::DCL.ECSComponents.YGDisplay) input.ReadEnum();
            break;
          }
          case 104: {
            FlexBasisUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 117: {
            FlexBasis = input.ReadFloat();
            break;
          }
          case 125: {
            FlexGrow = input.ReadFloat();
            break;
          }
          case 128: {
            WidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 141: {
            Width = input.ReadFloat();
            break;
          }
          case 144: {
            HeightUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 157: {
            Height = input.ReadFloat();
            break;
          }
          case 160: {
            MinWidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 173: {
            MinWidth = input.ReadFloat();
            break;
          }
          case 176: {
            MinHeightUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 189: {
            MinHeight = input.ReadFloat();
            break;
          }
          case 192: {
            MaxWidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 205: {
            MaxWidth = input.ReadFloat();
            break;
          }
          case 208: {
            MaxHeightUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 221: {
            MaxHeight = input.ReadFloat();
            break;
          }
          case 224: {
            PositionLeftUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 237: {
            PositionLeft = input.ReadFloat();
            break;
          }
          case 240: {
            PositionTopUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 253: {
            PositionTop = input.ReadFloat();
            break;
          }
          case 256: {
            PositionRightUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 269: {
            PositionRight = input.ReadFloat();
            break;
          }
          case 272: {
            PositionBottomUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 285: {
            PositionBottom = input.ReadFloat();
            break;
          }
          case 288: {
            MarginLeftUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 301: {
            MarginLeft = input.ReadFloat();
            break;
          }
          case 304: {
            MarginTopUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 317: {
            MarginTop = input.ReadFloat();
            break;
          }
          case 320: {
            MarginRightUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 333: {
            MarginRight = input.ReadFloat();
            break;
          }
          case 336: {
            MarginBottomUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 349: {
            MarginBottom = input.ReadFloat();
            break;
          }
          case 352: {
            PaddingLeftUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 365: {
            PaddingLeft = input.ReadFloat();
            break;
          }
          case 368: {
            PaddingTopUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 381: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 384: {
            PaddingRightUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 397: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 400: {
            PaddingBottomUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 413: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 416: {
            PointerFilter = (global::DCL.ECSComponents.PointerFilterMode) input.ReadEnum();
            break;
          }
          case 424: {
            BorderLeftWidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 437: {
            BorderLeftWidth = input.ReadFloat();
            break;
          }
          case 440: {
            BorderTopWidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 453: {
            BorderTopWidth = input.ReadFloat();
            break;
          }
          case 456: {
            BorderRightWidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 469: {
            BorderRightWidth = input.ReadFloat();
            break;
          }
          case 472: {
            BorderBottomWidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 485: {
            BorderBottomWidth = input.ReadFloat();
            break;
          }
          case 488: {
            BorderTopLeftRadiusUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 501: {
            BorderTopLeftRadius = input.ReadFloat();
            break;
          }
          case 504: {
            BorderTopRightRadiusUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 517: {
            BorderTopRightRadius = input.ReadFloat();
            break;
          }
          case 520: {
            BorderBottomLeftRadiusUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 533: {
            BorderBottomLeftRadius = input.ReadFloat();
            break;
          }
          case 536: {
            BorderBottomRightRadiusUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 549: {
            BorderBottomRightRadius = input.ReadFloat();
            break;
          }
          case 554: {
            if (borderTopColor_ == null) {
              BorderTopColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(BorderTopColor);
            break;
          }
          case 562: {
            if (borderBottomColor_ == null) {
              BorderBottomColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(BorderBottomColor);
            break;
          }
          case 570: {
            if (borderLeftColor_ == null) {
              BorderLeftColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(BorderLeftColor);
            break;
          }
          case 578: {
            if (borderRightColor_ == null) {
              BorderRightColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(BorderRightColor);
            break;
          }
          case 589: {
            Opacity = input.ReadFloat();
            break;
          }
          case 616: {
            ZIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Parent = input.ReadInt32();
            break;
          }
          case 16: {
            RightOf = input.ReadInt32();
            break;
          }
          case 24: {
            AlignContent = (global::DCL.ECSComponents.YGAlign) input.ReadEnum();
            break;
          }
          case 32: {
            AlignItems = (global::DCL.ECSComponents.YGAlign) input.ReadEnum();
            break;
          }
          case 40: {
            FlexWrap = (global::DCL.ECSComponents.YGWrap) input.ReadEnum();
            break;
          }
          case 53: {
            FlexShrink = input.ReadFloat();
            break;
          }
          case 56: {
            PositionType = (global::DCL.ECSComponents.YGPositionType) input.ReadEnum();
            break;
          }
          case 64: {
            AlignSelf = (global::DCL.ECSComponents.YGAlign) input.ReadEnum();
            break;
          }
          case 72: {
            FlexDirection = (global::DCL.ECSComponents.YGFlexDirection) input.ReadEnum();
            break;
          }
          case 80: {
            JustifyContent = (global::DCL.ECSComponents.YGJustify) input.ReadEnum();
            break;
          }
          case 88: {
            Overflow = (global::DCL.ECSComponents.YGOverflow) input.ReadEnum();
            break;
          }
          case 96: {
            Display = (global::DCL.ECSComponents.YGDisplay) input.ReadEnum();
            break;
          }
          case 104: {
            FlexBasisUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 117: {
            FlexBasis = input.ReadFloat();
            break;
          }
          case 125: {
            FlexGrow = input.ReadFloat();
            break;
          }
          case 128: {
            WidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 141: {
            Width = input.ReadFloat();
            break;
          }
          case 144: {
            HeightUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 157: {
            Height = input.ReadFloat();
            break;
          }
          case 160: {
            MinWidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 173: {
            MinWidth = input.ReadFloat();
            break;
          }
          case 176: {
            MinHeightUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 189: {
            MinHeight = input.ReadFloat();
            break;
          }
          case 192: {
            MaxWidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 205: {
            MaxWidth = input.ReadFloat();
            break;
          }
          case 208: {
            MaxHeightUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 221: {
            MaxHeight = input.ReadFloat();
            break;
          }
          case 224: {
            PositionLeftUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 237: {
            PositionLeft = input.ReadFloat();
            break;
          }
          case 240: {
            PositionTopUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 253: {
            PositionTop = input.ReadFloat();
            break;
          }
          case 256: {
            PositionRightUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 269: {
            PositionRight = input.ReadFloat();
            break;
          }
          case 272: {
            PositionBottomUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 285: {
            PositionBottom = input.ReadFloat();
            break;
          }
          case 288: {
            MarginLeftUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 301: {
            MarginLeft = input.ReadFloat();
            break;
          }
          case 304: {
            MarginTopUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 317: {
            MarginTop = input.ReadFloat();
            break;
          }
          case 320: {
            MarginRightUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 333: {
            MarginRight = input.ReadFloat();
            break;
          }
          case 336: {
            MarginBottomUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 349: {
            MarginBottom = input.ReadFloat();
            break;
          }
          case 352: {
            PaddingLeftUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 365: {
            PaddingLeft = input.ReadFloat();
            break;
          }
          case 368: {
            PaddingTopUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 381: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 384: {
            PaddingRightUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 397: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 400: {
            PaddingBottomUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 413: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 416: {
            PointerFilter = (global::DCL.ECSComponents.PointerFilterMode) input.ReadEnum();
            break;
          }
          case 424: {
            BorderLeftWidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 437: {
            BorderLeftWidth = input.ReadFloat();
            break;
          }
          case 440: {
            BorderTopWidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 453: {
            BorderTopWidth = input.ReadFloat();
            break;
          }
          case 456: {
            BorderRightWidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 469: {
            BorderRightWidth = input.ReadFloat();
            break;
          }
          case 472: {
            BorderBottomWidthUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 485: {
            BorderBottomWidth = input.ReadFloat();
            break;
          }
          case 488: {
            BorderTopLeftRadiusUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 501: {
            BorderTopLeftRadius = input.ReadFloat();
            break;
          }
          case 504: {
            BorderTopRightRadiusUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 517: {
            BorderTopRightRadius = input.ReadFloat();
            break;
          }
          case 520: {
            BorderBottomLeftRadiusUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 533: {
            BorderBottomLeftRadius = input.ReadFloat();
            break;
          }
          case 536: {
            BorderBottomRightRadiusUnit = (global::DCL.ECSComponents.YGUnit) input.ReadEnum();
            break;
          }
          case 549: {
            BorderBottomRightRadius = input.ReadFloat();
            break;
          }
          case 554: {
            if (borderTopColor_ == null) {
              BorderTopColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(BorderTopColor);
            break;
          }
          case 562: {
            if (borderBottomColor_ == null) {
              BorderBottomColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(BorderBottomColor);
            break;
          }
          case 570: {
            if (borderLeftColor_ == null) {
              BorderLeftColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(BorderLeftColor);
            break;
          }
          case 578: {
            if (borderRightColor_ == null) {
              BorderRightColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(BorderRightColor);
            break;
          }
          case 589: {
            Opacity = input.ReadFloat();
            break;
          }
          case 616: {
            ZIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
