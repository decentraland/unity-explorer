(function (exports, require, module, __filename, __dirname) {
    (function (exports, require, module, __filename, __dirname) {
        "use strict";
        var $x = Object.create;
        var D6 = Object.defineProperty;
        var vc = Object.getOwnPropertyDescriptor;
        var nb = Object.getOwnPropertyNames;
        var eb = Object.getPrototypeOf, lb = Object.prototype.hasOwnProperty;
        var t2 = (n, e) => () => (n && (e = n(n = 0)), e);
        var Mn = (n, e) => () => (e || n((e = {exports: {}}).exports, e), e.exports), Cc = (n, e) => {
            for (var r in e) D6(n, r, {get: e[r], enumerable: !0})
        }, _c = (n, e, r, l) => {
            if (e && typeof e == "object" || typeof e == "function") for (let i of nb(e)) !lb.call(n, i) && i !== r && D6(n, i, {
                get: () => e[i],
                enumerable: !(l = vc(e, i)) || l.enumerable
            });
            return n
        };
        var _3 = (n, e, r) => (r = n != null ? $x(eb(n)) : {}, _c(e || !n || !n.__esModule ? D6(r, "default", {
            value: n,
            enumerable: !0
        }) : r, n)), tb = n => _c(D6({}, "__esModule", {value: !0}), n), Ne = (n, e, r, l) => {
            for (var i = l > 1 ? void 0 : l ? vc(e, r) : e, o = n.length - 1, f; o >= 0; o--) (f = n[o]) && (i = (l ? f(e, r, i) : f(i)) || i);
            return l && i && D6(e, r, i), i
        };
        var Ac = Mn((Jv, Pc) => {
            "use strict";
            Pc.exports = rb;

            function rb(n, e) {
                for (var r = new Array(arguments.length - 1), l = 0, i = 2, o = !0; i < arguments.length;) r[l++] = arguments[i++];
                return new Promise(function (s, a) {
                    r[l] = function (b) {
                        if (o) if (o = !1, b) a(b); else {
                            for (var B = new Array(arguments.length - 1), w = 0; w < B.length;) B[w++] = arguments[w];
                            s.apply(null, B)
                        }
                    };
                    try {
                        n.apply(e || null, r)
                    } catch (g) {
                        o && (o = !1, a(g))
                    }
                })
            }
        });
        var Rc = Mn(Nc => {
            "use strict";
            var i9 = Nc;
            i9.length = function (e) {
                var r = e.length;
                if (!r) return 0;
                for (var l = 0; --r % 4 > 1 && e.charAt(r) === "=";) ++l;
                return Math.ceil(e.length * 3) / 4 - l
            };
            var Q5 = new Array(64), Ic = new Array(123);
            for (qt = 0; qt < 64;) Ic[Q5[qt] = qt < 26 ? qt + 65 : qt < 52 ? qt + 71 : qt < 62 ? qt - 4 : qt - 59 | 43] = qt++;
            var qt;
            i9.encode = function (e, r, l) {
                for (var i = null, o = [], f = 0, s = 0, a; r < l;) {
                    var g = e[r++];
                    switch (s) {
                        case 0:
                            o[f++] = Q5[g >> 2], a = (g & 3) << 4, s = 1;
                            break;
                        case 1:
                            o[f++] = Q5[a | g >> 4], a = (g & 15) << 2, s = 2;
                            break;
                        case 2:
                            o[f++] = Q5[a | g >> 6], o[f++] = Q5[g & 63], s = 0;
                            break
                    }
                    f > 8191 && ((i || (i = [])).push(String.fromCharCode.apply(String, o)), f = 0)
                }
                return s && (o[f++] = Q5[a], o[f++] = 61, s === 1 && (o[f++] = 61)), i ? (f && i.push(String.fromCharCode.apply(String, o.slice(0, f))), i.join("")) : String.fromCharCode.apply(String, o.slice(0, f))
            };
            var kc = "invalid encoding";
            i9.decode = function (e, r, l) {
                for (var i = l, o = 0, f, s = 0; s < e.length;) {
                    var a = e.charCodeAt(s++);
                    if (a === 61 && o > 1) break;
                    if ((a = Ic[a]) === void 0) throw Error(kc);
                    switch (o) {
                        case 0:
                            f = a, o = 1;
                            break;
                        case 1:
                            r[l++] = f << 2 | (a & 48) >> 4, f = a, o = 2;
                            break;
                        case 2:
                            r[l++] = (f & 15) << 4 | (a & 60) >> 2, f = a, o = 3;
                            break;
                        case 3:
                            r[l++] = (f & 3) << 6 | a, o = 0;
                            break
                    }
                }
                if (o === 1) throw Error(kc);
                return l - i
            };
            i9.test = function (e) {
                return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)
            }
        });
        var Oc = Mn((Kv, Mc) => {
            "use strict";
            Mc.exports = a9;

            function a9() {
                this._listeners = {}
            }

            a9.prototype.on = function (e, r, l) {
                return (this._listeners[e] || (this._listeners[e] = [])).push({fn: r, ctx: l || this}), this
            };
            a9.prototype.off = function (e, r) {
                if (e === void 0) this._listeners = {}; else if (r === void 0) this._listeners[e] = []; else for (var l = this._listeners[e], i = 0; i < l.length;) l[i].fn === r ? l.splice(i, 1) : ++i;
                return this
            };
            a9.prototype.emit = function (e) {
                var r = this._listeners[e];
                if (r) {
                    for (var l = [], i = 1; i < arguments.length;) l.push(arguments[i++]);
                    for (i = 0; i < r.length;) r[i].fn.apply(r[i++].ctx, l)
                }
                return this
            }
        });
        var Wc = Mn((Zv, zc) => {
            "use strict";
            zc.exports = Dc(Dc);

            function Dc(n) {
                return typeof Float32Array < "u" ? function () {
                    var e = new Float32Array([-0]), r = new Uint8Array(e.buffer), l = r[3] === 128;

                    function i(a, g, b) {
                        e[0] = a, g[b] = r[0], g[b + 1] = r[1], g[b + 2] = r[2], g[b + 3] = r[3]
                    }

                    function o(a, g, b) {
                        e[0] = a, g[b] = r[3], g[b + 1] = r[2], g[b + 2] = r[1], g[b + 3] = r[0]
                    }

                    n.writeFloatLE = l ? i : o, n.writeFloatBE = l ? o : i;

                    function f(a, g) {
                        return r[0] = a[g], r[1] = a[g + 1], r[2] = a[g + 2], r[3] = a[g + 3], e[0]
                    }

                    function s(a, g) {
                        return r[3] = a[g], r[2] = a[g + 1], r[1] = a[g + 2], r[0] = a[g + 3], e[0]
                    }

                    n.readFloatLE = l ? f : s, n.readFloatBE = l ? s : f
                }() : function () {
                    function e(l, i, o, f) {
                        var s = i < 0 ? 1 : 0;
                        if (s && (i = -i), i === 0) l(1 / i > 0 ? 0 : 2147483648, o, f); else if (isNaN(i)) l(2143289344, o, f); else if (i > 34028234663852886e22) l((s << 31 | 2139095040) >>> 0, o, f); else if (i < 11754943508222875e-54) l((s << 31 | Math.round(i / 1401298464324817e-60)) >>> 0, o, f); else {
                            var a = Math.floor(Math.log(i) / Math.LN2),
                                g = Math.round(i * Math.pow(2, -a) * 8388608) & 8388607;
                            l((s << 31 | a + 127 << 23 | g) >>> 0, o, f)
                        }
                    }

                    n.writeFloatLE = e.bind(null, Bc), n.writeFloatBE = e.bind(null, Fc);

                    function r(l, i, o) {
                        var f = l(i, o), s = (f >> 31) * 2 + 1, a = f >>> 23 & 255, g = f & 8388607;
                        return a === 255 ? g ? NaN : s * (1 / 0) : a === 0 ? s * 1401298464324817e-60 * g : s * Math.pow(2, a - 150) * (g + 8388608)
                    }

                    n.readFloatLE = r.bind(null, Uc), n.readFloatBE = r.bind(null, Lc)
                }(), typeof Float64Array < "u" ? function () {
                    var e = new Float64Array([-0]), r = new Uint8Array(e.buffer), l = r[7] === 128;

                    function i(a, g, b) {
                        e[0] = a, g[b] = r[0], g[b + 1] = r[1], g[b + 2] = r[2], g[b + 3] = r[3], g[b + 4] = r[4], g[b + 5] = r[5], g[b + 6] = r[6], g[b + 7] = r[7]
                    }

                    function o(a, g, b) {
                        e[0] = a, g[b] = r[7], g[b + 1] = r[6], g[b + 2] = r[5], g[b + 3] = r[4], g[b + 4] = r[3], g[b + 5] = r[2], g[b + 6] = r[1], g[b + 7] = r[0]
                    }

                    n.writeDoubleLE = l ? i : o, n.writeDoubleBE = l ? o : i;

                    function f(a, g) {
                        return r[0] = a[g], r[1] = a[g + 1], r[2] = a[g + 2], r[3] = a[g + 3], r[4] = a[g + 4], r[5] = a[g + 5], r[6] = a[g + 6], r[7] = a[g + 7], e[0]
                    }

                    function s(a, g) {
                        return r[7] = a[g], r[6] = a[g + 1], r[5] = a[g + 2], r[4] = a[g + 3], r[3] = a[g + 4], r[2] = a[g + 5], r[1] = a[g + 6], r[0] = a[g + 7], e[0]
                    }

                    n.readDoubleLE = l ? f : s, n.readDoubleBE = l ? s : f
                }() : function () {
                    function e(l, i, o, f, s, a) {
                        var g = f < 0 ? 1 : 0;
                        if (g && (f = -f), f === 0) l(0, s, a + i), l(1 / f > 0 ? 0 : 2147483648, s, a + o); else if (isNaN(f)) l(0, s, a + i), l(2146959360, s, a + o); else if (f > 17976931348623157e292) l(0, s, a + i), l((g << 31 | 2146435072) >>> 0, s, a + o); else {
                            var b;
                            if (f < 22250738585072014e-324) b = f / 5e-324, l(b >>> 0, s, a + i), l((g << 31 | b / 4294967296) >>> 0, s, a + o); else {
                                var B = Math.floor(Math.log(f) / Math.LN2);
                                B === 1024 && (B = 1023), b = f * Math.pow(2, -B), l(b * 4503599627370496 >>> 0, s, a + i), l((g << 31 | B + 1023 << 20 | b * 1048576 & 1048575) >>> 0, s, a + o)
                            }
                        }
                    }

                    n.writeDoubleLE = e.bind(null, Bc, 0, 4), n.writeDoubleBE = e.bind(null, Fc, 4, 0);

                    function r(l, i, o, f, s) {
                        var a = l(f, s + i), g = l(f, s + o), b = (g >> 31) * 2 + 1, B = g >>> 20 & 2047,
                            w = 4294967296 * (g & 1048575) + a;
                        return B === 2047 ? w ? NaN : b * (1 / 0) : B === 0 ? b * 5e-324 * w : b * Math.pow(2, B - 1075) * (w + 4503599627370496)
                    }

                    n.readDoubleLE = r.bind(null, Uc, 0, 4), n.readDoubleBE = r.bind(null, Lc, 4, 0)
                }(), n
            }

            function Bc(n, e, r) {
                e[r] = n & 255, e[r + 1] = n >>> 8 & 255, e[r + 2] = n >>> 16 & 255, e[r + 3] = n >>> 24
            }

            function Fc(n, e, r) {
                e[r] = n >>> 24, e[r + 1] = n >>> 16 & 255, e[r + 2] = n >>> 8 & 255, e[r + 3] = n & 255
            }

            function Uc(n, e) {
                return (n[e] | n[e + 1] << 8 | n[e + 2] << 16 | n[e + 3] << 24) >>> 0
            }

            function Lc(n, e) {
                return (n[e] << 24 | n[e + 1] << 16 | n[e + 2] << 8 | n[e + 3]) >>> 0
            }
        });
        var Hc = Mn((exports, module) => {
            "use strict";
            module.exports = inquire;

            function inquire(moduleName) {
                try {
                    var mod = eval("quire".replace(/^/, "re"))(moduleName);
                    if (mod && (mod.length || Object.keys(mod).length)) return mod
                } catch (n) {
                }
                return null
            }
        });
        var s9 = Mn(Vc => {
            "use strict";
            var zu = Vc;
            zu.length = function (e) {
                for (var r = 0, l = 0, i = 0; i < e.length; ++i) l = e.charCodeAt(i), l < 128 ? r += 1 : l < 2048 ? r += 2 : (l & 64512) === 55296 && (e.charCodeAt(i + 1) & 64512) === 56320 ? (++i, r += 4) : r += 3;
                return r
            };
            zu.read = function (e, r, l) {
                var i = l - r;
                if (i < 1) return "";
                for (var o = null, f = [], s = 0, a; r < l;) a = e[r++], a < 128 ? f[s++] = a : a > 191 && a < 224 ? f[s++] = (a & 31) << 6 | e[r++] & 63 : a > 239 && a < 365 ? (a = ((a & 7) << 18 | (e[r++] & 63) << 12 | (e[r++] & 63) << 6 | e[r++] & 63) - 65536, f[s++] = 55296 + (a >> 10), f[s++] = 56320 + (a & 1023)) : f[s++] = (a & 15) << 12 | (e[r++] & 63) << 6 | e[r++] & 63, s > 8191 && ((o || (o = [])).push(String.fromCharCode.apply(String, f)), s = 0);
                return o ? (s && o.push(String.fromCharCode.apply(String, f.slice(0, s))), o.join("")) : String.fromCharCode.apply(String, f.slice(0, s))
            };
            zu.write = function (e, r, l) {
                for (var i = l, o, f, s = 0; s < e.length; ++s) o = e.charCodeAt(s), o < 128 ? r[l++] = o : o < 2048 ? (r[l++] = o >> 6 | 192, r[l++] = o & 63 | 128) : (o & 64512) === 55296 && ((f = e.charCodeAt(s + 1)) & 64512) === 56320 ? (o = 65536 + ((o & 1023) << 10) + (f & 1023), ++s, r[l++] = o >> 18 | 240, r[l++] = o >> 12 & 63 | 128, r[l++] = o >> 6 & 63 | 128, r[l++] = o & 63 | 128) : (r[l++] = o >> 12 | 224, r[l++] = o >> 6 & 63 | 128, r[l++] = o & 63 | 128);
                return l - i
            }
        });
        var jc = Mn(($v, Gc) => {
            "use strict";
            Gc.exports = ub;

            function ub(n, e, r) {
                var l = r || 8192, i = l >>> 1, o = null, f = l;
                return function (a) {
                    if (a < 1 || a > i) return n(a);
                    f + a > l && (o = n(l), f = 0);
                    var g = e.call(o, f, f += a);
                    return f & 7 && (f = (f | 7) + 1), g
                }
            }
        });
        var Yc = Mn((nC, qc) => {
            "use strict";
            qc.exports = We;
            var B6 = g1();

            function We(n, e) {
                this.lo = n >>> 0, this.hi = e >>> 0
            }

            var i5 = We.zero = new We(0, 0);
            i5.toNumber = function () {
                return 0
            };
            i5.zzEncode = i5.zzDecode = function () {
                return this
            };
            i5.length = function () {
                return 1
            };
            var ob = We.zeroHash = "\0\0\0\0\0\0\0\0";
            We.fromNumber = function (e) {
                if (e === 0) return i5;
                var r = e < 0;
                r && (e = -e);
                var l = e >>> 0, i = (e - l) / 4294967296 >>> 0;
                return r && (i = ~i >>> 0, l = ~l >>> 0, ++l > 4294967295 && (l = 0, ++i > 4294967295 && (i = 0))), new We(l, i)
            };
            We.from = function (e) {
                if (typeof e == "number") return We.fromNumber(e);
                if (B6.isString(e)) if (B6.Long) e = B6.Long.fromString(e); else return We.fromNumber(parseInt(e, 10));
                return e.low || e.high ? new We(e.low >>> 0, e.high >>> 0) : i5
            };
            We.prototype.toNumber = function (e) {
                if (!e && this.hi >>> 31) {
                    var r = ~this.lo + 1 >>> 0, l = ~this.hi >>> 0;
                    return r || (l = l + 1 >>> 0), -(r + l * 4294967296)
                }
                return this.lo + this.hi * 4294967296
            };
            We.prototype.toLong = function (e) {
                return B6.Long ? new B6.Long(this.lo | 0, this.hi | 0, !!e) : {
                    low: this.lo | 0,
                    high: this.hi | 0,
                    unsigned: !!e
                }
            };
            var y1 = String.prototype.charCodeAt;
            We.fromHash = function (e) {
                return e === ob ? i5 : new We((y1.call(e, 0) | y1.call(e, 1) << 8 | y1.call(e, 2) << 16 | y1.call(e, 3) << 24) >>> 0, (y1.call(e, 4) | y1.call(e, 5) << 8 | y1.call(e, 6) << 16 | y1.call(e, 7) << 24) >>> 0)
            };
            We.prototype.toHash = function () {
                return String.fromCharCode(this.lo & 255, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, this.hi & 255, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24)
            };
            We.prototype.zzEncode = function () {
                var e = this.hi >> 31;
                return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ e) >>> 0, this.lo = (this.lo << 1 ^ e) >>> 0, this
            };
            We.prototype.zzDecode = function () {
                var e = -(this.lo & 1);
                return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ e) >>> 0, this.hi = (this.hi >>> 1 ^ e) >>> 0, this
            };
            We.prototype.length = function () {
                var e = this.lo, r = (this.lo >>> 28 | this.hi << 4) >>> 0, l = this.hi >>> 24;
                return l === 0 ? r === 0 ? e < 16384 ? e < 128 ? 1 : 2 : e < 2097152 ? 3 : 4 : r < 16384 ? r < 128 ? 5 : 6 : r < 2097152 ? 7 : 8 : l < 128 ? 9 : 10
            }
        });
        var g1 = Mn(Wu => {
            "use strict";
            var y3 = Wu;
            y3.asPromise = Ac();
            y3.base64 = Rc();
            y3.EventEmitter = Oc();
            y3.float = Wc();
            y3.inquire = Hc();
            y3.utf8 = s9();
            y3.pool = jc();
            y3.LongBits = Yc();
            y3.isNode = !!(typeof global < "u" && global && global.process && global.process.versions && global.process.versions.node);
            y3.global = y3.isNode && global || !1 || typeof self < "u" && self || Wu;
            y3.emptyArray = Object.freeze ? Object.freeze([]) : [];
            y3.emptyObject = Object.freeze ? Object.freeze({}) : {};
            y3.isInteger = Number.isInteger || function (e) {
                return typeof e == "number" && isFinite(e) && Math.floor(e) === e
            };
            y3.isString = function (e) {
                return typeof e == "string" || e instanceof String
            };
            y3.isObject = function (e) {
                return e && typeof e == "object"
            };
            y3.isset = y3.isSet = function (e, r) {
                var l = e[r];
                return l != null && e.hasOwnProperty(r) ? typeof l != "object" || (Array.isArray(l) ? l.length : Object.keys(l).length) > 0 : !1
            };
            y3.Buffer = function () {
                try {
                    var n = y3.inquire("buffer").Buffer;
                    return n.prototype.utf8Write ? n : null
                } catch {
                    return null
                }
            }();
            y3._Buffer_from = null;
            y3._Buffer_allocUnsafe = null;
            y3.newBuffer = function (e) {
                return typeof e == "number" ? y3.Buffer ? y3._Buffer_allocUnsafe(e) : new y3.Array(e) : y3.Buffer ? y3._Buffer_from(e) : typeof Uint8Array > "u" ? e : new Uint8Array(e)
            };
            y3.Array = typeof Uint8Array < "u" ? Uint8Array : Array;
            y3.Long = y3.global.dcodeIO && y3.global.dcodeIO.Long || y3.global.Long || y3.inquire("long");
            y3.key2Re = /^true|false|0|1$/;
            y3.key32Re = /^-?(?:0|[1-9][0-9]*)$/;
            y3.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;
            y3.longToHash = function (e) {
                return e ? y3.LongBits.from(e).toHash() : y3.LongBits.zeroHash
            };
            y3.longFromHash = function (e, r) {
                var l = y3.LongBits.fromHash(e);
                return y3.Long ? y3.Long.fromBits(l.lo, l.hi, r) : l.toNumber(!!r)
            };

            function Jc(n, e, r) {
                for (var l = Object.keys(e), i = 0; i < l.length; ++i) (n[l[i]] === void 0 || !r) && (n[l[i]] = e[l[i]]);
                return n
            }

            y3.merge = Jc;
            y3.lcFirst = function (e) {
                return e.charAt(0).toLowerCase() + e.substring(1)
            };

            function Xc(n) {
                function e(r, l) {
                    if (!(this instanceof e)) return new e(r, l);
                    Object.defineProperty(this, "message", {
                        get: function () {
                            return r
                        }
                    }), Error.captureStackTrace ? Error.captureStackTrace(this, e) : Object.defineProperty(this, "stack", {value: new Error().stack || ""}), l && Jc(this, l)
                }

                return e.prototype = Object.create(Error.prototype, {
                    constructor: {
                        value: e,
                        writable: !0,
                        enumerable: !1,
                        configurable: !0
                    }, name: {
                        get: function () {
                            return n
                        }, set: void 0, enumerable: !1, configurable: !0
                    }, toString: {
                        value: function () {
                            return this.name + ": " + this.message
                        }, writable: !0, enumerable: !1, configurable: !0
                    }
                }), e
            }

            y3.newError = Xc;
            y3.ProtocolError = Xc("ProtocolError");
            y3.oneOfGetter = function (e) {
                for (var r = {}, l = 0; l < e.length; ++l) r[e[l]] = 1;
                return function () {
                    for (var i = Object.keys(this), o = i.length - 1; o > -1; --o) if (r[i[o]] === 1 && this[i[o]] !== void 0 && this[i[o]] !== null) return i[o]
                }
            };
            y3.oneOfSetter = function (e) {
                return function (r) {
                    for (var l = 0; l < e.length; ++l) e[l] !== r && delete this[e[l]]
                }
            };
            y3.toJSONOptions = {longs: String, enums: String, bytes: String, json: !0};
            y3._configure = function () {
                var n = y3.Buffer;
                if (!n) {
                    y3._Buffer_from = y3._Buffer_allocUnsafe = null;
                    return
                }
                y3._Buffer_from = n.from !== Uint8Array.from && n.from || function (r, l) {
                    return new n(r, l)
                }, y3._Buffer_allocUnsafe = n.allocUnsafe || function (r) {
                    return new n(r)
                }
            }
        });
        var Ju = Mn((lC, $c) => {
            "use strict";
            $c.exports = fn;
            var vt = g1(), Hu, c9 = vt.LongBits, Kc = vt.base64, Zc = vt.utf8;

            function F6(n, e, r) {
                this.fn = n, this.len = e, this.next = void 0, this.val = r
            }

            function Gu() {
            }

            function ib(n) {
                this.head = n.head, this.tail = n.tail, this.len = n.len, this.next = n.states
            }

            function fn() {
                this.len = 0, this.head = new F6(Gu, 0, 0), this.tail = this.head, this.states = null
            }

            var Qc = function () {
                return vt.Buffer ? function () {
                    return (fn.create = function () {
                        return new Hu
                    })()
                } : function () {
                    return new fn
                }
            };
            fn.create = Qc();
            fn.alloc = function (e) {
                return new vt.Array(e)
            };
            vt.Array !== Array && (fn.alloc = vt.pool(fn.alloc, vt.Array.prototype.subarray));
            fn.prototype._push = function (e, r, l) {
                return this.tail = this.tail.next = new F6(e, r, l), this.len += r, this
            };

            function ju(n, e, r) {
                e[r] = n & 255
            }

            function ab(n, e, r) {
                for (; n > 127;) e[r++] = n & 127 | 128, n >>>= 7;
                e[r] = n
            }

            function qu(n, e) {
                this.len = n, this.next = void 0, this.val = e
            }

            qu.prototype = Object.create(F6.prototype);
            qu.prototype.fn = ab;
            fn.prototype.uint32 = function (e) {
                return this.len += (this.tail = this.tail.next = new qu((e = e >>> 0) < 128 ? 1 : e < 16384 ? 2 : e < 2097152 ? 3 : e < 268435456 ? 4 : 5, e)).len, this
            };
            fn.prototype.int32 = function (e) {
                return e < 0 ? this._push(Yu, 10, c9.fromNumber(e)) : this.uint32(e)
            };
            fn.prototype.sint32 = function (e) {
                return this.uint32((e << 1 ^ e >> 31) >>> 0)
            };

            function Yu(n, e, r) {
                for (; n.hi;) e[r++] = n.lo & 127 | 128, n.lo = (n.lo >>> 7 | n.hi << 25) >>> 0, n.hi >>>= 7;
                for (; n.lo > 127;) e[r++] = n.lo & 127 | 128, n.lo = n.lo >>> 7;
                e[r++] = n.lo
            }

            fn.prototype.uint64 = function (e) {
                var r = c9.from(e);
                return this._push(Yu, r.length(), r)
            };
            fn.prototype.int64 = fn.prototype.uint64;
            fn.prototype.sint64 = function (e) {
                var r = c9.from(e).zzEncode();
                return this._push(Yu, r.length(), r)
            };
            fn.prototype.bool = function (e) {
                return this._push(ju, 1, e ? 1 : 0)
            };

            function Vu(n, e, r) {
                e[r] = n & 255, e[r + 1] = n >>> 8 & 255, e[r + 2] = n >>> 16 & 255, e[r + 3] = n >>> 24
            }

            fn.prototype.fixed32 = function (e) {
                return this._push(Vu, 4, e >>> 0)
            };
            fn.prototype.sfixed32 = fn.prototype.fixed32;
            fn.prototype.fixed64 = function (e) {
                var r = c9.from(e);
                return this._push(Vu, 4, r.lo)._push(Vu, 4, r.hi)
            };
            fn.prototype.sfixed64 = fn.prototype.fixed64;
            fn.prototype.float = function (e) {
                return this._push(vt.float.writeFloatLE, 4, e)
            };
            fn.prototype.double = function (e) {
                return this._push(vt.float.writeDoubleLE, 8, e)
            };
            var sb = vt.Array.prototype.set ? function (e, r, l) {
                r.set(e, l)
            } : function (e, r, l) {
                for (var i = 0; i < e.length; ++i) r[l + i] = e[i]
            };
            fn.prototype.bytes = function (e) {
                var r = e.length >>> 0;
                if (!r) return this._push(ju, 1, 0);
                if (vt.isString(e)) {
                    var l = fn.alloc(r = Kc.length(e));
                    Kc.decode(e, l, 0), e = l
                }
                return this.uint32(r)._push(sb, r, e)
            };
            fn.prototype.string = function (e) {
                var r = Zc.length(e);
                return r ? this.uint32(r)._push(Zc.write, r, e) : this._push(ju, 1, 0)
            };
            fn.prototype.fork = function () {
                return this.states = new ib(this), this.head = this.tail = new F6(Gu, 0, 0), this.len = 0, this
            };
            fn.prototype.reset = function () {
                return this.states ? (this.head = this.states.head, this.tail = this.states.tail, this.len = this.states.len, this.states = this.states.next) : (this.head = this.tail = new F6(Gu, 0, 0), this.len = 0), this
            };
            fn.prototype.ldelim = function () {
                var e = this.head, r = this.tail, l = this.len;
                return this.reset().uint32(l), l && (this.tail.next = e.next, this.tail = r, this.len += l), this
            };
            fn.prototype.finish = function () {
                for (var e = this.head.next, r = this.constructor.alloc(this.len), l = 0; e;) e.fn(e.val, r, l), l += e.len, e = e.next;
                return r
            };
            fn._configure = function (n) {
                Hu = n, fn.create = Qc(), Hu._configure()
            }
        });
        var lf = Mn((tC, ef) => {
            "use strict";
            ef.exports = d4;
            var nf = Ju();
            (d4.prototype = Object.create(nf.prototype)).constructor = d4;
            var x1 = g1();

            function d4() {
                nf.call(this)
            }

            d4._configure = function () {
                d4.alloc = x1._Buffer_allocUnsafe, d4.writeBytesBuffer = x1.Buffer && x1.Buffer.prototype instanceof Uint8Array && x1.Buffer.prototype.set.name === "set" ? function (e, r, l) {
                    r.set(e, l)
                } : function (e, r, l) {
                    if (e.copy) e.copy(r, l, 0, e.length); else for (var i = 0; i < e.length;) r[l++] = e[i++]
                }
            };
            d4.prototype.bytes = function (e) {
                x1.isString(e) && (e = x1._Buffer_from(e, "base64"));
                var r = e.length >>> 0;
                return this.uint32(r), r && this._push(d4.writeBytesBuffer, r, e), this
            };

            function cb(n, e, r) {
                n.length < 40 ? x1.utf8.write(n, e, r) : e.utf8Write ? e.utf8Write(n, r) : e.write(n, r)
            }

            d4.prototype.string = function (e) {
                var r = x1.Buffer.byteLength(e);
                return this.uint32(r), r && this._push(cb, r, e), this
            };
            d4._configure()
        });
        var Zu = Mn((rC, af) => {
            "use strict";
            af.exports = ye;
            var Yt = g1(), Ku, uf = Yt.LongBits, fb = Yt.utf8;

            function Jt(n, e) {
                return RangeError("index out of range: " + n.pos + " + " + (e || 1) + " > " + n.len)
            }

            function ye(n) {
                this.buf = n, this.pos = 0, this.len = n.length
            }

            var tf = typeof Uint8Array < "u" ? function (e) {
                if (e instanceof Uint8Array || Array.isArray(e)) return new ye(e);
                throw Error("illegal buffer")
            } : function (e) {
                if (Array.isArray(e)) return new ye(e);
                throw Error("illegal buffer")
            }, of = function () {
                return Yt.Buffer ? function (r) {
                    return (ye.create = function (i) {
                        return Yt.Buffer.isBuffer(i) ? new Ku(i) : tf(i)
                    })(r)
                } : tf
            };
            ye.create = of();
            ye.prototype._slice = Yt.Array.prototype.subarray || Yt.Array.prototype.slice;
            ye.prototype.uint32 = function () {
                var e = 4294967295;
                return function () {
                    if (e = (this.buf[this.pos] & 127) >>> 0, this.buf[this.pos++] < 128 || (e = (e | (this.buf[this.pos] & 127) << 7) >>> 0, this.buf[this.pos++] < 128) || (e = (e | (this.buf[this.pos] & 127) << 14) >>> 0, this.buf[this.pos++] < 128) || (e = (e | (this.buf[this.pos] & 127) << 21) >>> 0, this.buf[this.pos++] < 128) || (e = (e | (this.buf[this.pos] & 15) << 28) >>> 0, this.buf[this.pos++] < 128)) return e;
                    if ((this.pos += 5) > this.len) throw this.pos = this.len, Jt(this, 10);
                    return e
                }
            }();
            ye.prototype.int32 = function () {
                return this.uint32() | 0
            };
            ye.prototype.sint32 = function () {
                var e = this.uint32();
                return e >>> 1 ^ -(e & 1) | 0
            };

            function Xu() {
                var n = new uf(0, 0), e = 0;
                if (this.len - this.pos > 4) {
                    for (; e < 4; ++e) if (n.lo = (n.lo | (this.buf[this.pos] & 127) << e * 7) >>> 0, this.buf[this.pos++] < 128) return n;
                    if (n.lo = (n.lo | (this.buf[this.pos] & 127) << 28) >>> 0, n.hi = (n.hi | (this.buf[this.pos] & 127) >> 4) >>> 0, this.buf[this.pos++] < 128) return n;
                    e = 0
                } else {
                    for (; e < 3; ++e) {
                        if (this.pos >= this.len) throw Jt(this);
                        if (n.lo = (n.lo | (this.buf[this.pos] & 127) << e * 7) >>> 0, this.buf[this.pos++] < 128) return n
                    }
                    return n.lo = (n.lo | (this.buf[this.pos++] & 127) << e * 7) >>> 0, n
                }
                if (this.len - this.pos > 4) {
                    for (; e < 5; ++e) if (n.hi = (n.hi | (this.buf[this.pos] & 127) << e * 7 + 3) >>> 0, this.buf[this.pos++] < 128) return n
                } else for (; e < 5; ++e) {
                    if (this.pos >= this.len) throw Jt(this);
                    if (n.hi = (n.hi | (this.buf[this.pos] & 127) << e * 7 + 3) >>> 0, this.buf[this.pos++] < 128) return n
                }
                throw Error("invalid varint encoding")
            }

            ye.prototype.bool = function () {
                return this.uint32() !== 0
            };

            function f9(n, e) {
                return (n[e - 4] | n[e - 3] << 8 | n[e - 2] << 16 | n[e - 1] << 24) >>> 0
            }

            ye.prototype.fixed32 = function () {
                if (this.pos + 4 > this.len) throw Jt(this, 4);
                return f9(this.buf, this.pos += 4)
            };
            ye.prototype.sfixed32 = function () {
                if (this.pos + 4 > this.len) throw Jt(this, 4);
                return f9(this.buf, this.pos += 4) | 0
            };

            function rf() {
                if (this.pos + 8 > this.len) throw Jt(this, 8);
                return new uf(f9(this.buf, this.pos += 4), f9(this.buf, this.pos += 4))
            }

            ye.prototype.float = function () {
                if (this.pos + 4 > this.len) throw Jt(this, 4);
                var e = Yt.float.readFloatLE(this.buf, this.pos);
                return this.pos += 4, e
            };
            ye.prototype.double = function () {
                if (this.pos + 8 > this.len) throw Jt(this, 4);
                var e = Yt.float.readDoubleLE(this.buf, this.pos);
                return this.pos += 8, e
            };
            ye.prototype.bytes = function () {
                var e = this.uint32(), r = this.pos, l = this.pos + e;
                if (l > this.len) throw Jt(this, e);
                if (this.pos += e, Array.isArray(this.buf)) return this.buf.slice(r, l);
                if (r === l) {
                    var i = Yt.Buffer;
                    return i ? i.alloc(0) : new this.buf.constructor(0)
                }
                return this._slice.call(this.buf, r, l)
            };
            ye.prototype.string = function () {
                var e = this.bytes();
                return fb.read(e, 0, e.length)
            };
            ye.prototype.skip = function (e) {
                if (typeof e == "number") {
                    if (this.pos + e > this.len) throw Jt(this, e);
                    this.pos += e
                } else do if (this.pos >= this.len) throw Jt(this); while (this.buf[this.pos++] & 128);
                return this
            };
            ye.prototype.skipType = function (n) {
                switch (n) {
                    case 0:
                        this.skip();
                        break;
                    case 1:
                        this.skip(8);
                        break;
                    case 2:
                        this.skip(this.uint32());
                        break;
                    case 3:
                        for (; (n = this.uint32() & 7) !== 4;) this.skipType(n);
                        break;
                    case 5:
                        this.skip(4);
                        break;
                    default:
                        throw Error("invalid wire type " + n + " at offset " + this.pos)
                }
                return this
            };
            ye._configure = function (n) {
                Ku = n, ye.create = of(), Ku._configure();
                var e = Yt.Long ? "toLong" : "toNumber";
                Yt.merge(ye.prototype, {
                    int64: function () {
                        return Xu.call(this)[e](!1)
                    }, uint64: function () {
                        return Xu.call(this)[e](!0)
                    }, sint64: function () {
                        return Xu.call(this).zzDecode()[e](!1)
                    }, fixed64: function () {
                        return rf.call(this)[e](!0)
                    }, sfixed64: function () {
                        return rf.call(this)[e](!1)
                    }
                })
            }
        });
        var df = Mn((uC, ff) => {
            "use strict";
            ff.exports = a5;
            var cf = Zu();
            (a5.prototype = Object.create(cf.prototype)).constructor = a5;
            var sf = g1();

            function a5(n) {
                cf.call(this, n)
            }

            a5._configure = function () {
                sf.Buffer && (a5.prototype._slice = sf.Buffer.prototype.slice)
            };
            a5.prototype.string = function () {
                var e = this.uint32();
                return this.buf.utf8Slice ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + e, this.len)) : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + e, this.len))
            };
            a5._configure()
        });
        var mf = Mn((oC, pf) => {
            "use strict";
            pf.exports = U6;
            var Qu = g1();
            (U6.prototype = Object.create(Qu.EventEmitter.prototype)).constructor = U6;

            function U6(n, e, r) {
                if (typeof n != "function") throw TypeError("rpcImpl must be a function");
                Qu.EventEmitter.call(this), this.rpcImpl = n, this.requestDelimited = !!e, this.responseDelimited = !!r
            }

            U6.prototype.rpcCall = function n(e, r, l, i, o) {
                if (!i) throw TypeError("request must be specified");
                var f = this;
                if (!o) return Qu.asPromise(n, f, e, r, l, i);
                if (!f.rpcImpl) {
                    setTimeout(function () {
                        o(Error("already ended"))
                    }, 0);
                    return
                }
                try {
                    return f.rpcImpl(e, r[f.requestDelimited ? "encodeDelimited" : "encode"](i).finish(), function (a, g) {
                        if (a) return f.emit("error", a, e), o(a);
                        if (g === null) {
                            f.end(!0);
                            return
                        }
                        if (!(g instanceof l)) try {
                            g = l[f.responseDelimited ? "decodeDelimited" : "decode"](g)
                        } catch (b) {
                            return f.emit("error", b, e), o(b)
                        }
                        return f.emit("data", g, e), o(null, g)
                    })
                } catch (s) {
                    f.emit("error", s, e), setTimeout(function () {
                        o(s)
                    }, 0);
                    return
                }
            };
            U6.prototype.end = function (e) {
                return this.rpcImpl && (e || this.rpcImpl(null, null, null), this.rpcImpl = null, this.emit("end").off()), this
            }
        });
        var yf = Mn(hf => {
            "use strict";
            var db = hf;
            db.Service = mf()
        });
        var xf = Mn((aC, gf) => {
            "use strict";
            gf.exports = {}
        });
        var Tf = Mn(Ef => {
            "use strict";
            var Rl = Ef;
            Rl.build = "minimal";
            Rl.Writer = Ju();
            Rl.BufferWriter = lf();
            Rl.Reader = Zu();
            Rl.BufferReader = df();
            Rl.util = g1();
            Rl.rpc = yf();
            Rl.roots = xf();
            Rl.configure = bf;

            function bf() {
                Rl.util._configure(), Rl.Writer._configure(Rl.BufferWriter), Rl.Reader._configure(Rl.BufferReader)
            }

            bf()
        });
        var M3 = Mn((cC, Sf) => {
            "use strict";
            Sf.exports = Tf()
        });

        function pb() {
            return {states: []}
        }

        function mb() {
            return {clip: "", playing: void 0, weight: void 0, speed: void 0, loop: void 0, shouldReset: void 0}
        }

        var s5, $5, d9, $u = t2(() => {
            "use strict";
            s5 = _3(M3());
            (function (n) {
                function e(l, i = s5.default.Writer.create()) {
                    for (let o of l.states) d9.encode(o, i.uint32(10).fork()).ldelim();
                    return i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof s5.default.Reader ? l : s5.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = pb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.states.push(d9.decode(o, o.uint32()));
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })($5 || ($5 = {}));
            (function (n) {
                function e(l, i = s5.default.Writer.create()) {
                    return l.clip !== "" && i.uint32(18).string(l.clip), l.playing !== void 0 && i.uint32(24).bool(l.playing), l.weight !== void 0 && i.uint32(37).float(l.weight), l.speed !== void 0 && i.uint32(45).float(l.speed), l.loop !== void 0 && i.uint32(48).bool(l.loop), l.shouldReset !== void 0 && i.uint32(56).bool(l.shouldReset), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof s5.default.Reader ? l : s5.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = mb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 2:
                                if (a !== 18) break;
                                s.clip = o.string();
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.playing = o.bool();
                                continue;
                            case 4:
                                if (a !== 37) break;
                                s.weight = o.float();
                                continue;
                            case 5:
                                if (a !== 45) break;
                                s.speed = o.float();
                                continue;
                            case 6:
                                if (a !== 48) break;
                                s.loop = o.bool();
                                continue;
                            case 7:
                                if (a !== 56) break;
                                s.shouldReset = o.bool();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(d9 || (d9 = {}))
        });
        var wf, vf = t2(() => {
            "use strict";
            $u();
            wf = {
                COMPONENT_ID: 1042,
                serialize(n, e) {
                    let r = $5.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return $5.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return $5.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBAnimator"
                }
            }
        });

        function hb() {
            return {playing: void 0, volume: void 0, loop: void 0, pitch: void 0, audioClipUrl: ""}
        }

        var p9, n0, no = t2(() => {
            "use strict";
            p9 = _3(M3());
            (function (n) {
                function e(l, i = p9.default.Writer.create()) {
                    return l.playing !== void 0 && i.uint32(8).bool(l.playing), l.volume !== void 0 && i.uint32(21).float(l.volume), l.loop !== void 0 && i.uint32(24).bool(l.loop), l.pitch !== void 0 && i.uint32(37).float(l.pitch), l.audioClipUrl !== "" && i.uint32(42).string(l.audioClipUrl), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof p9.default.Reader ? l : p9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = hb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.playing = o.bool();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.volume = o.float();
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.loop = o.bool();
                                continue;
                            case 4:
                                if (a !== 37) break;
                                s.pitch = o.float();
                                continue;
                            case 5:
                                if (a !== 42) break;
                                s.audioClipUrl = o.string();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(n0 || (n0 = {}))
        });
        var Cf, _f = t2(() => {
            "use strict";
            no();
            Cf = {
                COMPONENT_ID: 1020,
                serialize(n, e) {
                    let r = n0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return n0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return n0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBAudioSource"
                }
            }
        });

        function yb() {
            return {playing: void 0, volume: void 0, url: ""}
        }

        var m9, e0, eo = t2(() => {
            "use strict";
            m9 = _3(M3());
            (function (n) {
                function e(l, i = m9.default.Writer.create()) {
                    return l.playing !== void 0 && i.uint32(8).bool(l.playing), l.volume !== void 0 && i.uint32(21).float(l.volume), l.url !== "" && i.uint32(26).string(l.url), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof m9.default.Reader ? l : m9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = yb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.playing = o.bool();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.volume = o.float();
                                continue;
                            case 3:
                                if (a !== 26) break;
                                s.url = o.string();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(e0 || (e0 = {}))
        });
        var Pf, Af = t2(() => {
            "use strict";
            eo();
            Pf = {
                COMPONENT_ID: 1021,
                serialize(n, e) {
                    let r = e0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return e0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return e0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBAudioStream"
                }
            }
        });

        function gb() {
            return {avatarId: void 0, anchorPointId: 0}
        }

        var h9, kf, l0, lo = t2(() => {
            "use strict";
            h9 = _3(M3());
            (function (n) {
                n[n.AAPT_POSITION = 0] = "AAPT_POSITION", n[n.AAPT_NAME_TAG = 1] = "AAPT_NAME_TAG", n[n.AAPT_LEFT_HAND = 2] = "AAPT_LEFT_HAND", n[n.AAPT_RIGHT_HAND = 3] = "AAPT_RIGHT_HAND"
            })(kf || (kf = {}));
            (function (n) {
                function e(l, i = h9.default.Writer.create()) {
                    return l.avatarId !== void 0 && i.uint32(10).string(l.avatarId), l.anchorPointId !== 0 && i.uint32(16).int32(l.anchorPointId), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof h9.default.Reader ? l : h9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = gb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.avatarId = o.string();
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.anchorPointId = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(l0 || (l0 = {}))
        });
        var If, Nf = t2(() => {
            "use strict";
            lo();
            If = {
                COMPONENT_ID: 1073,
                serialize(n, e) {
                    let r = l0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return l0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return l0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBAvatarAttach"
                }
            }
        });

        function xb() {
            return {r: 0, g: 0, b: 0}
        }

        function bb() {
            return {r: 0, g: 0, b: 0, a: 0}
        }

        var c5, An, $n, p4 = t2(() => {
            "use strict";
            c5 = _3(M3());
            (function (n) {
                function e(l, i = c5.default.Writer.create()) {
                    return l.r !== 0 && i.uint32(13).float(l.r), l.g !== 0 && i.uint32(21).float(l.g), l.b !== 0 && i.uint32(29).float(l.b), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof c5.default.Reader ? l : c5.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = xb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 13) break;
                                s.r = o.float();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.g = o.float();
                                continue;
                            case 3:
                                if (a !== 29) break;
                                s.b = o.float();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(An || (An = {}));
            (function (n) {
                function e(l, i = c5.default.Writer.create()) {
                    return l.r !== 0 && i.uint32(13).float(l.r), l.g !== 0 && i.uint32(21).float(l.g), l.b !== 0 && i.uint32(29).float(l.b), l.a !== 0 && i.uint32(37).float(l.a), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof c5.default.Reader ? l : c5.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = bb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 13) break;
                                s.r = o.float();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.g = o.float();
                                continue;
                            case 3:
                                if (a !== 29) break;
                                s.b = o.float();
                                continue;
                            case 4:
                                if (a !== 37) break;
                                s.a = o.float();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })($n || ($n = {}))
        });

        function Eb() {
            return {skinColor: void 0, eyesColor: void 0, hairColor: void 0, bodyShapeUrn: "", name: ""}
        }

        var y9, t0, to = t2(() => {
            "use strict";
            y9 = _3(M3());
            p4();
            (function (n) {
                function e(l, i = y9.default.Writer.create()) {
                    return l.skinColor !== void 0 && An.encode(l.skinColor, i.uint32(10).fork()).ldelim(), l.eyesColor !== void 0 && An.encode(l.eyesColor, i.uint32(18).fork()).ldelim(), l.hairColor !== void 0 && An.encode(l.hairColor, i.uint32(26).fork()).ldelim(), l.bodyShapeUrn !== "" && i.uint32(34).string(l.bodyShapeUrn), l.name !== "" && i.uint32(42).string(l.name), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof y9.default.Reader ? l : y9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Eb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.skinColor = An.decode(o, o.uint32());
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.eyesColor = An.decode(o, o.uint32());
                                continue;
                            case 3:
                                if (a !== 26) break;
                                s.hairColor = An.decode(o, o.uint32());
                                continue;
                            case 4:
                                if (a !== 34) break;
                                s.bodyShapeUrn = o.string();
                                continue;
                            case 5:
                                if (a !== 42) break;
                                s.name = o.string();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(t0 || (t0 = {}))
        });
        var Rf, Mf = t2(() => {
            "use strict";
            to();
            Rf = {
                COMPONENT_ID: 1087,
                serialize(n, e) {
                    let r = t0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return t0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return t0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBAvatarBase"
                }
            }
        });

        function Tb() {
            return {emoteUrn: "", loop: !1, timestamp: 0}
        }

        var g9, r0, ro = t2(() => {
            "use strict";
            g9 = _3(M3());
            (function (n) {
                function e(l, i = g9.default.Writer.create()) {
                    return l.emoteUrn !== "" && i.uint32(10).string(l.emoteUrn), l.loop === !0 && i.uint32(16).bool(l.loop), l.timestamp !== 0 && i.uint32(24).uint32(l.timestamp), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof g9.default.Reader ? l : g9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Tb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.emoteUrn = o.string();
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.loop = o.bool();
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.timestamp = o.uint32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(r0 || (r0 = {}))
        });
        var Of, Df = t2(() => {
            "use strict";
            ro();
            Of = {
                COMPONENT_ID: 1088,
                serialize(n, e) {
                    let r = r0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return r0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return r0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBAvatarEmoteCommand"
                }
            }
        });

        function Sb() {
            return {wearableUrns: [], emoteUrns: []}
        }

        var x9, u0, uo = t2(() => {
            "use strict";
            x9 = _3(M3());
            (function (n) {
                function e(l, i = x9.default.Writer.create()) {
                    for (let o of l.wearableUrns) i.uint32(10).string(o);
                    for (let o of l.emoteUrns) i.uint32(18).string(o);
                    return i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof x9.default.Reader ? l : x9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Sb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.wearableUrns.push(o.string());
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.emoteUrns.push(o.string());
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(u0 || (u0 = {}))
        });
        var Bf, Ff = t2(() => {
            "use strict";
            uo();
            Bf = {
                COMPONENT_ID: 1091,
                serialize(n, e) {
                    let r = u0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return u0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return u0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBAvatarEquippedData"
                }
            }
        });

        function wb() {
            return {x: 0, y: 0, z: 0}
        }

        function vb() {
            return {x: 0, y: 0, z: 0}
        }

        function Cb() {
            return {x: 0, y: 0}
        }

        function _b() {
            return {x: 0, y: 0, z: 0, w: 0}
        }

        var Yl, Uf, J3, Lf, f5, d5 = t2(() => {
            "use strict";
            Yl = _3(M3());
            (function (n) {
                function e(l, i = Yl.default.Writer.create()) {
                    return l.x !== 0 && i.uint32(13).float(l.x), l.y !== 0 && i.uint32(21).float(l.y), l.z !== 0 && i.uint32(29).float(l.z), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Yl.default.Reader ? l : Yl.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = wb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 13) break;
                                s.x = o.float();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.y = o.float();
                                continue;
                            case 3:
                                if (a !== 29) break;
                                s.z = o.float();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(Uf || (Uf = {}));
            (function (n) {
                function e(l, i = Yl.default.Writer.create()) {
                    return l.x !== 0 && i.uint32(13).float(l.x), l.y !== 0 && i.uint32(21).float(l.y), l.z !== 0 && i.uint32(29).float(l.z), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Yl.default.Reader ? l : Yl.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = vb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 13) break;
                                s.x = o.float();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.y = o.float();
                                continue;
                            case 3:
                                if (a !== 29) break;
                                s.z = o.float();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(J3 || (J3 = {}));
            (function (n) {
                function e(l, i = Yl.default.Writer.create()) {
                    return l.x !== 0 && i.uint32(13).float(l.x), l.y !== 0 && i.uint32(21).float(l.y), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Yl.default.Reader ? l : Yl.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Cb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 13) break;
                                s.x = o.float();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.y = o.float();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(Lf || (Lf = {}));
            (function (n) {
                function e(l, i = Yl.default.Writer.create()) {
                    return l.x !== 0 && i.uint32(13).float(l.x), l.y !== 0 && i.uint32(21).float(l.y), l.z !== 0 && i.uint32(29).float(l.z), l.w !== 0 && i.uint32(37).float(l.w), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Yl.default.Reader ? l : Yl.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = _b();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 13) break;
                                s.x = o.float();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.y = o.float();
                                continue;
                            case 3:
                                if (a !== 29) break;
                                s.z = o.float();
                                continue;
                            case 4:
                                if (a !== 37) break;
                                s.w = o.float();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(f5 || (f5 = {}))
        });

        function Pb() {
            return {area: void 0, excludeIds: [], modifiers: []}
        }

        var b9, zf, o0, oo = t2(() => {
            "use strict";
            b9 = _3(M3());
            d5();
            (function (n) {
                n[n.AMT_HIDE_AVATARS = 0] = "AMT_HIDE_AVATARS", n[n.AMT_DISABLE_PASSPORTS = 1] = "AMT_DISABLE_PASSPORTS"
            })(zf || (zf = {}));
            (function (n) {
                function e(l, i = b9.default.Writer.create()) {
                    l.area !== void 0 && J3.encode(l.area, i.uint32(10).fork()).ldelim();
                    for (let o of l.excludeIds) i.uint32(18).string(o);
                    i.uint32(26).fork();
                    for (let o of l.modifiers) i.int32(o);
                    return i.ldelim(), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof b9.default.Reader ? l : b9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Pb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.area = J3.decode(o, o.uint32());
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.excludeIds.push(o.string());
                                continue;
                            case 3:
                                if (a === 24) {
                                    s.modifiers.push(o.int32());
                                    continue
                                }
                                if (a === 26) {
                                    let g = o.uint32() + o.pos;
                                    for (; o.pos < g;) s.modifiers.push(o.int32());
                                    continue
                                }
                                break
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(o0 || (o0 = {}))
        });
        var Wf, Hf = t2(() => {
            "use strict";
            oo();
            Wf = {
                COMPONENT_ID: 1070,
                serialize(n, e) {
                    let r = o0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return o0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return o0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBAvatarModifierArea"
                }
            }
        });

        function Gn(n, e, r) {
            this.low = n | 0, this.high = e | 0, this.unsigned = !!r
        }

        function tl(n) {
            return (n && n.__isLong__) === !0
        }

        function Vf(n) {
            var e = Math.clz32(n & -n);
            return n ? 31 - e : e
        }

        function p5(n, e) {
            var r, l, i;
            return e ? (n >>>= 0, (i = 0 <= n && n < 256) && (l = jf[n], l) ? l : (r = gn(n, 0, !0), i && (jf[n] = r), r)) : (n |= 0, (i = -128 <= n && n < 128) && (l = Gf[n], l) ? l : (r = gn(n, n < 0 ? -1 : 0, !1), i && (Gf[n] = r), r))
        }

        function _t(n, e) {
            if (isNaN(n)) return e ? L4 : Xt;
            if (e) {
                if (n < 0) return L4;
                if (n >= Xf) return Qf
            } else {
                if (n <= -Yf) return Ml;
                if (n + 1 >= Yf) return Zf
            }
            return n < 0 ? _t(-n, e).neg() : gn(n % a0 | 0, n / a0 | 0, e)
        }

        function gn(n, e, r) {
            return new Gn(n, e, r)
        }

        function ao(n, e, r) {
            if (n.length === 0) throw Error("empty string");
            if (typeof e == "number" ? (r = e, e = !1) : e = !!e, n === "NaN" || n === "Infinity" || n === "+Infinity" || n === "-Infinity") return e ? L4 : Xt;
            if (r = r || 10, r < 2 || 36 < r) throw RangeError("radix");
            var l;
            if ((l = n.indexOf("-")) > 0) throw Error("interior hyphen");
            if (l === 0) return ao(n.substring(1), e, r).neg();
            for (var i = _t(E9(r, 8)), o = Xt, f = 0; f < n.length; f += 8) {
                var s = Math.min(8, n.length - f), a = parseInt(n.substring(f, f + s), r);
                if (s < 8) {
                    var g = _t(E9(r, s));
                    o = o.mul(g).add(_t(a))
                } else o = o.mul(i), o = o.add(_t(a))
            }
            return o.unsigned = e, o
        }

        function Kt(n, e) {
            return typeof n == "number" ? _t(n, e) : typeof n == "string" ? ao(n, e) : gn(n.low, n.high, typeof e == "boolean" ? e : n.unsigned)
        }

        var Ct, Gf, jf, E9, qf, Ab, a0, Xf, Yf, Jf, Xt, L4, i0, Kf, io, Zf, Qf, Ml, U2, so, $f = t2(() => {
            "use strict";
            Ct = null;
            try {
                Ct = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports
            } catch {
            }
            Gn.prototype.__isLong__;
            Object.defineProperty(Gn.prototype, "__isLong__", {value: !0});
            Gn.isLong = tl;
            Gf = {}, jf = {};
            Gn.fromInt = p5;
            Gn.fromNumber = _t;
            Gn.fromBits = gn;
            E9 = Math.pow;
            Gn.fromString = ao;
            Gn.fromValue = Kt;
            qf = 65536, Ab = 1 << 24, a0 = qf * qf, Xf = a0 * a0, Yf = Xf / 2, Jf = p5(Ab), Xt = p5(0);
            Gn.ZERO = Xt;
            L4 = p5(0, !0);
            Gn.UZERO = L4;
            i0 = p5(1);
            Gn.ONE = i0;
            Kf = p5(1, !0);
            Gn.UONE = Kf;
            io = p5(-1);
            Gn.NEG_ONE = io;
            Zf = gn(-1, 2147483647, !1);
            Gn.MAX_VALUE = Zf;
            Qf = gn(-1, -1, !0);
            Gn.MAX_UNSIGNED_VALUE = Qf;
            Ml = gn(0, -2147483648, !1);
            Gn.MIN_VALUE = Ml;
            U2 = Gn.prototype;
            U2.toInt = function () {
                return this.unsigned ? this.low >>> 0 : this.low
            };
            U2.toNumber = function () {
                return this.unsigned ? (this.high >>> 0) * a0 + (this.low >>> 0) : this.high * a0 + (this.low >>> 0)
            };
            U2.toString = function (e) {
                if (e = e || 10, e < 2 || 36 < e) throw RangeError("radix");
                if (this.isZero()) return "0";
                if (this.isNegative()) if (this.eq(Ml)) {
                    var r = _t(e), l = this.div(r), i = l.mul(r).sub(this);
                    return l.toString(e) + i.toInt().toString(e)
                } else return "-" + this.neg().toString(e);
                for (var o = _t(E9(e, 6), this.unsigned), f = this, s = ""; ;) {
                    var a = f.div(o), g = f.sub(a.mul(o)).toInt() >>> 0, b = g.toString(e);
                    if (f = a, f.isZero()) return b + s;
                    for (; b.length < 6;) b = "0" + b;
                    s = "" + b + s
                }
            };
            U2.getHighBits = function () {
                return this.high
            };
            U2.getHighBitsUnsigned = function () {
                return this.high >>> 0
            };
            U2.getLowBits = function () {
                return this.low
            };
            U2.getLowBitsUnsigned = function () {
                return this.low >>> 0
            };
            U2.getNumBitsAbs = function () {
                if (this.isNegative()) return this.eq(Ml) ? 64 : this.neg().getNumBitsAbs();
                for (var e = this.high != 0 ? this.high : this.low, r = 31; r > 0 && !(e & 1 << r); r--) ;
                return this.high != 0 ? r + 33 : r + 1
            };
            U2.isZero = function () {
                return this.high === 0 && this.low === 0
            };
            U2.eqz = U2.isZero;
            U2.isNegative = function () {
                return !this.unsigned && this.high < 0
            };
            U2.isPositive = function () {
                return this.unsigned || this.high >= 0
            };
            U2.isOdd = function () {
                return (this.low & 1) === 1
            };
            U2.isEven = function () {
                return (this.low & 1) === 0
            };
            U2.equals = function (e) {
                return tl(e) || (e = Kt(e)), this.unsigned !== e.unsigned && this.high >>> 31 === 1 && e.high >>> 31 === 1 ? !1 : this.high === e.high && this.low === e.low
            };
            U2.eq = U2.equals;
            U2.notEquals = function (e) {
                return !this.eq(e)
            };
            U2.neq = U2.notEquals;
            U2.ne = U2.notEquals;
            U2.lessThan = function (e) {
                return this.comp(e) < 0
            };
            U2.lt = U2.lessThan;
            U2.lessThanOrEqual = function (e) {
                return this.comp(e) <= 0
            };
            U2.lte = U2.lessThanOrEqual;
            U2.le = U2.lessThanOrEqual;
            U2.greaterThan = function (e) {
                return this.comp(e) > 0
            };
            U2.gt = U2.greaterThan;
            U2.greaterThanOrEqual = function (e) {
                return this.comp(e) >= 0
            };
            U2.gte = U2.greaterThanOrEqual;
            U2.ge = U2.greaterThanOrEqual;
            U2.compare = function (e) {
                if (tl(e) || (e = Kt(e)), this.eq(e)) return 0;
                var r = this.isNegative(), l = e.isNegative();
                return r && !l ? -1 : !r && l ? 1 : this.unsigned ? e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e).isNegative() ? -1 : 1
            };
            U2.comp = U2.compare;
            U2.negate = function () {
                return !this.unsigned && this.eq(Ml) ? Ml : this.not().add(i0)
            };
            U2.neg = U2.negate;
            U2.add = function (e) {
                tl(e) || (e = Kt(e));
                var r = this.high >>> 16, l = this.high & 65535, i = this.low >>> 16, o = this.low & 65535,
                    f = e.high >>> 16, s = e.high & 65535, a = e.low >>> 16, g = e.low & 65535, b = 0, B = 0, w = 0,
                    P = 0;
                return P += o + g, w += P >>> 16, P &= 65535, w += i + a, B += w >>> 16, w &= 65535, B += l + s, b += B >>> 16, B &= 65535, b += r + f, b &= 65535, gn(w << 16 | P, b << 16 | B, this.unsigned)
            };
            U2.subtract = function (e) {
                return tl(e) || (e = Kt(e)), this.add(e.neg())
            };
            U2.sub = U2.subtract;
            U2.multiply = function (e) {
                if (this.isZero()) return this;
                if (tl(e) || (e = Kt(e)), Ct) {
                    var r = Ct.mul(this.low, this.high, e.low, e.high);
                    return gn(r, Ct.get_high(), this.unsigned)
                }
                if (e.isZero()) return this.unsigned ? L4 : Xt;
                if (this.eq(Ml)) return e.isOdd() ? Ml : Xt;
                if (e.eq(Ml)) return this.isOdd() ? Ml : Xt;
                if (this.isNegative()) return e.isNegative() ? this.neg().mul(e.neg()) : this.neg().mul(e).neg();
                if (e.isNegative()) return this.mul(e.neg()).neg();
                if (this.lt(Jf) && e.lt(Jf)) return _t(this.toNumber() * e.toNumber(), this.unsigned);
                var l = this.high >>> 16, i = this.high & 65535, o = this.low >>> 16, f = this.low & 65535,
                    s = e.high >>> 16, a = e.high & 65535, g = e.low >>> 16, b = e.low & 65535, B = 0, w = 0, P = 0,
                    D = 0;
                return D += f * b, P += D >>> 16, D &= 65535, P += o * b, w += P >>> 16, P &= 65535, P += f * g, w += P >>> 16, P &= 65535, w += i * b, B += w >>> 16, w &= 65535, w += o * g, B += w >>> 16, w &= 65535, w += f * a, B += w >>> 16, w &= 65535, B += l * b + i * g + o * a + f * s, B &= 65535, gn(P << 16 | D, B << 16 | w, this.unsigned)
            };
            U2.mul = U2.multiply;
            U2.divide = function (e) {
                if (tl(e) || (e = Kt(e)), e.isZero()) throw Error("division by zero");
                if (Ct) {
                    if (!this.unsigned && this.high === -2147483648 && e.low === -1 && e.high === -1) return this;
                    var r = (this.unsigned ? Ct.div_u : Ct.div_s)(this.low, this.high, e.low, e.high);
                    return gn(r, Ct.get_high(), this.unsigned)
                }
                if (this.isZero()) return this.unsigned ? L4 : Xt;
                var l, i, o;
                if (this.unsigned) {
                    if (e.unsigned || (e = e.toUnsigned()), e.gt(this)) return L4;
                    if (e.gt(this.shru(1))) return Kf;
                    o = L4
                } else {
                    if (this.eq(Ml)) {
                        if (e.eq(i0) || e.eq(io)) return Ml;
                        if (e.eq(Ml)) return i0;
                        var f = this.shr(1);
                        return l = f.div(e).shl(1), l.eq(Xt) ? e.isNegative() ? i0 : io : (i = this.sub(e.mul(l)), o = l.add(i.div(e)), o)
                    } else if (e.eq(Ml)) return this.unsigned ? L4 : Xt;
                    if (this.isNegative()) return e.isNegative() ? this.neg().div(e.neg()) : this.neg().div(e).neg();
                    if (e.isNegative()) return this.div(e.neg()).neg();
                    o = Xt
                }
                for (i = this; i.gte(e);) {
                    l = Math.max(1, Math.floor(i.toNumber() / e.toNumber()));
                    for (var s = Math.ceil(Math.log(l) / Math.LN2), a = s <= 48 ? 1 : E9(2, s - 48), g = _t(l), b = g.mul(e); b.isNegative() || b.gt(i);) l -= a, g = _t(l, this.unsigned), b = g.mul(e);
                    g.isZero() && (g = i0), o = o.add(g), i = i.sub(b)
                }
                return o
            };
            U2.div = U2.divide;
            U2.modulo = function (e) {
                if (tl(e) || (e = Kt(e)), Ct) {
                    var r = (this.unsigned ? Ct.rem_u : Ct.rem_s)(this.low, this.high, e.low, e.high);
                    return gn(r, Ct.get_high(), this.unsigned)
                }
                return this.sub(this.div(e).mul(e))
            };
            U2.mod = U2.modulo;
            U2.rem = U2.modulo;
            U2.not = function () {
                return gn(~this.low, ~this.high, this.unsigned)
            };
            U2.countLeadingZeros = function () {
                return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32
            };
            U2.clz = U2.countLeadingZeros;
            U2.countTrailingZeros = function () {
                return this.low ? Vf(this.low) : Vf(this.high) + 32
            };
            U2.ctz = U2.countTrailingZeros;
            U2.and = function (e) {
                return tl(e) || (e = Kt(e)), gn(this.low & e.low, this.high & e.high, this.unsigned)
            };
            U2.or = function (e) {
                return tl(e) || (e = Kt(e)), gn(this.low | e.low, this.high | e.high, this.unsigned)
            };
            U2.xor = function (e) {
                return tl(e) || (e = Kt(e)), gn(this.low ^ e.low, this.high ^ e.high, this.unsigned)
            };
            U2.shiftLeft = function (e) {
                return tl(e) && (e = e.toInt()), (e &= 63) === 0 ? this : e < 32 ? gn(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned) : gn(0, this.low << e - 32, this.unsigned)
            };
            U2.shl = U2.shiftLeft;
            U2.shiftRight = function (e) {
                return tl(e) && (e = e.toInt()), (e &= 63) === 0 ? this : e < 32 ? gn(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned) : gn(this.high >> e - 32, this.high >= 0 ? 0 : -1, this.unsigned)
            };
            U2.shr = U2.shiftRight;
            U2.shiftRightUnsigned = function (e) {
                return tl(e) && (e = e.toInt()), (e &= 63) === 0 ? this : e < 32 ? gn(this.low >>> e | this.high << 32 - e, this.high >>> e, this.unsigned) : e === 32 ? gn(this.high, 0, this.unsigned) : gn(this.high >>> e - 32, 0, this.unsigned)
            };
            U2.shru = U2.shiftRightUnsigned;
            U2.shr_u = U2.shiftRightUnsigned;
            U2.rotateLeft = function (e) {
                var r;
                return tl(e) && (e = e.toInt()), (e &= 63) === 0 ? this : e === 32 ? gn(this.high, this.low, this.unsigned) : e < 32 ? (r = 32 - e, gn(this.low << e | this.high >>> r, this.high << e | this.low >>> r, this.unsigned)) : (e -= 32, r = 32 - e, gn(this.high << e | this.low >>> r, this.low << e | this.high >>> r, this.unsigned))
            };
            U2.rotl = U2.rotateLeft;
            U2.rotateRight = function (e) {
                var r;
                return tl(e) && (e = e.toInt()), (e &= 63) === 0 ? this : e === 32 ? gn(this.high, this.low, this.unsigned) : e < 32 ? (r = 32 - e, gn(this.high << r | this.low >>> e, this.low << r | this.high >>> e, this.unsigned)) : (e -= 32, r = 32 - e, gn(this.low << r | this.high >>> e, this.high << r | this.low >>> e, this.unsigned))
            };
            U2.rotr = U2.rotateRight;
            U2.toSigned = function () {
                return this.unsigned ? gn(this.low, this.high, !1) : this
            };
            U2.toUnsigned = function () {
                return this.unsigned ? this : gn(this.low, this.high, !0)
            };
            U2.toBytes = function (e) {
                return e ? this.toBytesLE() : this.toBytesBE()
            };
            U2.toBytesLE = function () {
                var e = this.high, r = this.low;
                return [r & 255, r >>> 8 & 255, r >>> 16 & 255, r >>> 24, e & 255, e >>> 8 & 255, e >>> 16 & 255, e >>> 24]
            };
            U2.toBytesBE = function () {
                var e = this.high, r = this.low;
                return [e >>> 24, e >>> 16 & 255, e >>> 8 & 255, e & 255, r >>> 24, r >>> 16 & 255, r >>> 8 & 255, r & 255]
            };
            Gn.fromBytes = function (e, r, l) {
                return l ? Gn.fromBytesLE(e, r) : Gn.fromBytesBE(e, r)
            };
            Gn.fromBytesLE = function (e, r) {
                return new Gn(e[0] | e[1] << 8 | e[2] << 16 | e[3] << 24, e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24, r)
            };
            Gn.fromBytesBE = function (e, r) {
                return new Gn(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7], e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3], r)
            };
            so = Gn
        });

        function kb() {
            return {
                id: "",
                name: void 0,
                bodyShape: void 0,
                skinColor: void 0,
                hairColor: void 0,
                eyeColor: void 0,
                expressionTriggerId: void 0,
                expressionTriggerTimestamp: void 0,
                talking: void 0,
                wearables: [],
                emotes: []
            }
        }

        function Nb(n) {
            if (n.gt(Number.MAX_SAFE_INTEGER)) throw new Ib.Error("Value is larger than Number.MAX_SAFE_INTEGER");
            return n.toNumber()
        }

        var m5, s0, Ib, co = t2(() => {
            "use strict";
            $f();
            m5 = _3(M3());
            p4();
            (function (n) {
                function e(l, i = m5.default.Writer.create()) {
                    l.id !== "" && i.uint32(10).string(l.id), l.name !== void 0 && i.uint32(18).string(l.name), l.bodyShape !== void 0 && i.uint32(26).string(l.bodyShape), l.skinColor !== void 0 && An.encode(l.skinColor, i.uint32(34).fork()).ldelim(), l.hairColor !== void 0 && An.encode(l.hairColor, i.uint32(42).fork()).ldelim(), l.eyeColor !== void 0 && An.encode(l.eyeColor, i.uint32(50).fork()).ldelim(), l.expressionTriggerId !== void 0 && i.uint32(58).string(l.expressionTriggerId), l.expressionTriggerTimestamp !== void 0 && i.uint32(64).int64(l.expressionTriggerTimestamp), l.talking !== void 0 && i.uint32(72).bool(l.talking);
                    for (let o of l.wearables) i.uint32(82).string(o);
                    for (let o of l.emotes) i.uint32(90).string(o);
                    return i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof m5.default.Reader ? l : m5.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = kb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.id = o.string();
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.name = o.string();
                                continue;
                            case 3:
                                if (a !== 26) break;
                                s.bodyShape = o.string();
                                continue;
                            case 4:
                                if (a !== 34) break;
                                s.skinColor = An.decode(o, o.uint32());
                                continue;
                            case 5:
                                if (a !== 42) break;
                                s.hairColor = An.decode(o, o.uint32());
                                continue;
                            case 6:
                                if (a !== 50) break;
                                s.eyeColor = An.decode(o, o.uint32());
                                continue;
                            case 7:
                                if (a !== 58) break;
                                s.expressionTriggerId = o.string();
                                continue;
                            case 8:
                                if (a !== 64) break;
                                s.expressionTriggerTimestamp = Nb(o.int64());
                                continue;
                            case 9:
                                if (a !== 72) break;
                                s.talking = o.bool();
                                continue;
                            case 10:
                                if (a !== 82) break;
                                s.wearables.push(o.string());
                                continue;
                            case 11:
                                if (a !== 90) break;
                                s.emotes.push(o.string());
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(s0 || (s0 = {}));
            Ib = (() => {
                if (typeof globalThis < "u") return globalThis;
                if (typeof self < "u") return self;
                if (typeof global < "u") return global;
                throw"Unable to locate global object"
            })();
            m5.default.util.Long !== so && (m5.default.util.Long = so, m5.default.configure())
        });
        var nd, ed = t2(() => {
            "use strict";
            co();
            nd = {
                COMPONENT_ID: 1080,
                serialize(n, e) {
                    let r = s0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return s0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return s0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBAvatarShape"
                }
            }
        });

        function Rb() {
            return {billboardMode: void 0}
        }

        var T9, ld, c0, fo = t2(() => {
            "use strict";
            T9 = _3(M3());
            (function (n) {
                n[n.BM_NONE = 0] = "BM_NONE", n[n.BM_X = 1] = "BM_X", n[n.BM_Y = 2] = "BM_Y", n[n.BM_Z = 4] = "BM_Z", n[n.BM_ALL = 7] = "BM_ALL"
            })(ld || (ld = {}));
            (function (n) {
                function e(l, i = T9.default.Writer.create()) {
                    return l.billboardMode !== void 0 && i.uint32(8).int32(l.billboardMode), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof T9.default.Reader ? l : T9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Rb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.billboardMode = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(c0 || (c0 = {}))
        });
        var td, rd = t2(() => {
            "use strict";
            fo();
            td = {
                COMPONENT_ID: 1090,
                serialize(n, e) {
                    let r = c0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return c0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return c0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBBillboard"
                }
            }
        });

        function Mb() {
            return {mode: 0}
        }

        var S9, f0, po = t2(() => {
            "use strict";
            S9 = _3(M3());
            (function (n) {
                function e(l, i = S9.default.Writer.create()) {
                    return l.mode !== 0 && i.uint32(8).int32(l.mode), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof S9.default.Reader ? l : S9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Mb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.mode = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(f0 || (f0 = {}))
        });
        var ud, od = t2(() => {
            "use strict";
            po();
            ud = {
                COMPONENT_ID: 1072,
                serialize(n, e) {
                    let r = f0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return f0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return f0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBCameraMode"
                }
            }
        });

        function Ob() {
            return {area: void 0, mode: 0}
        }

        var w9, d0, mo = t2(() => {
            "use strict";
            w9 = _3(M3());
            d5();
            (function (n) {
                function e(l, i = w9.default.Writer.create()) {
                    return l.area !== void 0 && J3.encode(l.area, i.uint32(10).fork()).ldelim(), l.mode !== 0 && i.uint32(16).int32(l.mode), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof w9.default.Reader ? l : w9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Ob();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.area = J3.decode(o, o.uint32());
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.mode = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(d0 || (d0 = {}))
        });
        var id, ad = t2(() => {
            "use strict";
            mo();
            id = {
                COMPONENT_ID: 1071,
                serialize(n, e) {
                    let r = d0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return d0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return d0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBCameraModeArea"
                }
            }
        });

        function Db() {
            return {frameNumber: 0, totalRuntime: 0, tickNumber: 0}
        }

        var v9, p0, ho = t2(() => {
            "use strict";
            v9 = _3(M3());
            (function (n) {
                function e(l, i = v9.default.Writer.create()) {
                    return l.frameNumber !== 0 && i.uint32(8).uint32(l.frameNumber), l.totalRuntime !== 0 && i.uint32(21).float(l.totalRuntime), l.tickNumber !== 0 && i.uint32(24).uint32(l.tickNumber), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof v9.default.Reader ? l : v9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Db();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.frameNumber = o.uint32();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.totalRuntime = o.float();
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.tickNumber = o.uint32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(p0 || (p0 = {}))
        });
        var sd, cd = t2(() => {
            "use strict";
            ho();
            sd = {
                COMPONENT_ID: 1048,
                serialize(n, e) {
                    let r = p0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return p0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return p0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBEngineInfo"
                }
            }
        });

        function Bb() {
            return {src: "", visibleMeshesCollisionMask: void 0, invisibleMeshesCollisionMask: void 0}
        }

        var C9, h5, yo = t2(() => {
            "use strict";
            C9 = _3(M3());
            (function (n) {
                function e(l, i = C9.default.Writer.create()) {
                    return l.src !== "" && i.uint32(10).string(l.src), l.visibleMeshesCollisionMask !== void 0 && i.uint32(32).uint32(l.visibleMeshesCollisionMask), l.invisibleMeshesCollisionMask !== void 0 && i.uint32(40).uint32(l.invisibleMeshesCollisionMask), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof C9.default.Reader ? l : C9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Bb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.src = o.string();
                                continue;
                            case 4:
                                if (a !== 32) break;
                                s.visibleMeshesCollisionMask = o.uint32();
                                continue;
                            case 5:
                                if (a !== 40) break;
                                s.invisibleMeshesCollisionMask = o.uint32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(h5 || (h5 = {}))
        });
        var fd, dd = t2(() => {
            "use strict";
            yo();
            fd = {
                COMPONENT_ID: 1041,
                serialize(n, e) {
                    let r = h5.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return h5.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return h5.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBGltfContainer"
                }
            }
        });

        function Fb() {
            return {currentState: 0}
        }

        var _9, m0, go = t2(() => {
            "use strict";
            _9 = _3(M3());
            (function (n) {
                function e(l, i = _9.default.Writer.create()) {
                    return l.currentState !== 0 && i.uint32(8).int32(l.currentState), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof _9.default.Reader ? l : _9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Fb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.currentState = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(m0 || (m0 = {}))
        });
        var pd, md = t2(() => {
            "use strict";
            go();
            pd = {
                COMPONENT_ID: 1049,
                serialize(n, e) {
                    let r = m0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return m0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return m0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBGltfContainerLoadingState"
                }
            }
        });

        function Ub() {
            return {src: "", wrapMode: void 0, filterMode: void 0}
        }

        function Lb() {
            return {userId: "", wrapMode: void 0, filterMode: void 0}
        }

        function zb() {
            return {videoPlayerEntity: 0, wrapMode: void 0, filterMode: void 0}
        }

        function Wb() {
            return {tex: void 0}
        }

        var Jl, y5, P9, A9, k9, I9, rl, N9 = t2(() => {
            "use strict";
            Jl = _3(M3());
            (function (n) {
                n[n.TWM_REPEAT = 0] = "TWM_REPEAT", n[n.TWM_CLAMP = 1] = "TWM_CLAMP", n[n.TWM_MIRROR = 2] = "TWM_MIRROR"
            })(y5 || (y5 = {}));
            (function (n) {
                n[n.TFM_POINT = 0] = "TFM_POINT", n[n.TFM_BILINEAR = 1] = "TFM_BILINEAR", n[n.TFM_TRILINEAR = 2] = "TFM_TRILINEAR"
            })(P9 || (P9 = {}));
            (function (n) {
                function e(l, i = Jl.default.Writer.create()) {
                    return l.src !== "" && i.uint32(10).string(l.src), l.wrapMode !== void 0 && i.uint32(16).int32(l.wrapMode), l.filterMode !== void 0 && i.uint32(24).int32(l.filterMode), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Jl.default.Reader ? l : Jl.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Ub();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.src = o.string();
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.wrapMode = o.int32();
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.filterMode = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(A9 || (A9 = {}));
            (function (n) {
                function e(l, i = Jl.default.Writer.create()) {
                    return l.userId !== "" && i.uint32(10).string(l.userId), l.wrapMode !== void 0 && i.uint32(16).int32(l.wrapMode), l.filterMode !== void 0 && i.uint32(24).int32(l.filterMode), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Jl.default.Reader ? l : Jl.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Lb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.userId = o.string();
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.wrapMode = o.int32();
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.filterMode = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(k9 || (k9 = {}));
            (function (n) {
                function e(l, i = Jl.default.Writer.create()) {
                    return l.videoPlayerEntity !== 0 && i.uint32(8).uint32(l.videoPlayerEntity), l.wrapMode !== void 0 && i.uint32(16).int32(l.wrapMode), l.filterMode !== void 0 && i.uint32(24).int32(l.filterMode), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Jl.default.Reader ? l : Jl.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = zb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.videoPlayerEntity = o.uint32();
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.wrapMode = o.int32();
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.filterMode = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(I9 || (I9 = {}));
            (function (n) {
                function e(l, i = Jl.default.Writer.create()) {
                    switch (l.tex?.$case) {
                        case"texture":
                            A9.encode(l.tex.texture, i.uint32(10).fork()).ldelim();
                            break;
                        case"avatarTexture":
                            k9.encode(l.tex.avatarTexture, i.uint32(18).fork()).ldelim();
                            break;
                        case"videoTexture":
                            I9.encode(l.tex.videoTexture, i.uint32(26).fork()).ldelim();
                            break
                    }
                    return i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Jl.default.Reader ? l : Jl.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Wb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.tex = {$case: "texture", texture: A9.decode(o, o.uint32())};
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.tex = {$case: "avatarTexture", avatarTexture: k9.decode(o, o.uint32())};
                                continue;
                            case 3:
                                if (a !== 26) break;
                                s.tex = {$case: "videoTexture", videoTexture: I9.decode(o, o.uint32())};
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(rl || (rl = {}))
        });

        function Hb() {
            return {material: void 0}
        }

        function Vb() {
            return {texture: void 0, alphaTest: void 0, castShadows: void 0, diffuseColor: void 0}
        }

        function Gb() {
            return {
                texture: void 0,
                alphaTest: void 0,
                castShadows: void 0,
                alphaTexture: void 0,
                emissiveTexture: void 0,
                bumpTexture: void 0,
                albedoColor: void 0,
                emissiveColor: void 0,
                reflectivityColor: void 0,
                transparencyMode: void 0,
                metallic: void 0,
                roughness: void 0,
                specularIntensity: void 0,
                emissiveIntensity: void 0,
                directIntensity: void 0
            }
        }

        var m4, hd, h0, R9, M9, xo = t2(() => {
            "use strict";
            m4 = _3(M3());
            p4();
            N9();
            (function (n) {
                n[n.MTM_OPAQUE = 0] = "MTM_OPAQUE", n[n.MTM_ALPHA_TEST = 1] = "MTM_ALPHA_TEST", n[n.MTM_ALPHA_BLEND = 2] = "MTM_ALPHA_BLEND", n[n.MTM_ALPHA_TEST_AND_ALPHA_BLEND = 3] = "MTM_ALPHA_TEST_AND_ALPHA_BLEND", n[n.MTM_AUTO = 4] = "MTM_AUTO"
            })(hd || (hd = {}));
            (function (n) {
                function e(l, i = m4.default.Writer.create()) {
                    switch (l.material?.$case) {
                        case"unlit":
                            R9.encode(l.material.unlit, i.uint32(10).fork()).ldelim();
                            break;
                        case"pbr":
                            M9.encode(l.material.pbr, i.uint32(18).fork()).ldelim();
                            break
                    }
                    return i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof m4.default.Reader ? l : m4.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Hb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.material = {$case: "unlit", unlit: R9.decode(o, o.uint32())};
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.material = {$case: "pbr", pbr: M9.decode(o, o.uint32())};
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(h0 || (h0 = {}));
            (function (n) {
                function e(l, i = m4.default.Writer.create()) {
                    return l.texture !== void 0 && rl.encode(l.texture, i.uint32(10).fork()).ldelim(), l.alphaTest !== void 0 && i.uint32(21).float(l.alphaTest), l.castShadows !== void 0 && i.uint32(24).bool(l.castShadows), l.diffuseColor !== void 0 && $n.encode(l.diffuseColor, i.uint32(34).fork()).ldelim(), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof m4.default.Reader ? l : m4.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Vb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.texture = rl.decode(o, o.uint32());
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.alphaTest = o.float();
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.castShadows = o.bool();
                                continue;
                            case 4:
                                if (a !== 34) break;
                                s.diffuseColor = $n.decode(o, o.uint32());
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(R9 || (R9 = {}));
            (function (n) {
                function e(l, i = m4.default.Writer.create()) {
                    return l.texture !== void 0 && rl.encode(l.texture, i.uint32(10).fork()).ldelim(), l.alphaTest !== void 0 && i.uint32(21).float(l.alphaTest), l.castShadows !== void 0 && i.uint32(24).bool(l.castShadows), l.alphaTexture !== void 0 && rl.encode(l.alphaTexture, i.uint32(34).fork()).ldelim(), l.emissiveTexture !== void 0 && rl.encode(l.emissiveTexture, i.uint32(42).fork()).ldelim(), l.bumpTexture !== void 0 && rl.encode(l.bumpTexture, i.uint32(50).fork()).ldelim(), l.albedoColor !== void 0 && $n.encode(l.albedoColor, i.uint32(58).fork()).ldelim(), l.emissiveColor !== void 0 && An.encode(l.emissiveColor, i.uint32(66).fork()).ldelim(), l.reflectivityColor !== void 0 && An.encode(l.reflectivityColor, i.uint32(74).fork()).ldelim(), l.transparencyMode !== void 0 && i.uint32(80).int32(l.transparencyMode), l.metallic !== void 0 && i.uint32(93).float(l.metallic), l.roughness !== void 0 && i.uint32(101).float(l.roughness), l.specularIntensity !== void 0 && i.uint32(117).float(l.specularIntensity), l.emissiveIntensity !== void 0 && i.uint32(125).float(l.emissiveIntensity), l.directIntensity !== void 0 && i.uint32(133).float(l.directIntensity), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof m4.default.Reader ? l : m4.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Gb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.texture = rl.decode(o, o.uint32());
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.alphaTest = o.float();
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.castShadows = o.bool();
                                continue;
                            case 4:
                                if (a !== 34) break;
                                s.alphaTexture = rl.decode(o, o.uint32());
                                continue;
                            case 5:
                                if (a !== 42) break;
                                s.emissiveTexture = rl.decode(o, o.uint32());
                                continue;
                            case 6:
                                if (a !== 50) break;
                                s.bumpTexture = rl.decode(o, o.uint32());
                                continue;
                            case 7:
                                if (a !== 58) break;
                                s.albedoColor = $n.decode(o, o.uint32());
                                continue;
                            case 8:
                                if (a !== 66) break;
                                s.emissiveColor = An.decode(o, o.uint32());
                                continue;
                            case 9:
                                if (a !== 74) break;
                                s.reflectivityColor = An.decode(o, o.uint32());
                                continue;
                            case 10:
                                if (a !== 80) break;
                                s.transparencyMode = o.int32();
                                continue;
                            case 11:
                                if (a !== 93) break;
                                s.metallic = o.float();
                                continue;
                            case 12:
                                if (a !== 101) break;
                                s.roughness = o.float();
                                continue;
                            case 14:
                                if (a !== 117) break;
                                s.specularIntensity = o.float();
                                continue;
                            case 15:
                                if (a !== 125) break;
                                s.emissiveIntensity = o.float();
                                continue;
                            case 16:
                                if (a !== 133) break;
                                s.directIntensity = o.float();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(M9 || (M9 = {}))
        });
        var yd, gd = t2(() => {
            "use strict";
            xo();
            yd = {
                COMPONENT_ID: 1017,
                serialize(n, e) {
                    let r = h0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return h0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return h0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBMaterial"
                }
            }
        });

        function jb() {
            return {collisionMask: void 0, mesh: void 0}
        }

        function qb() {
            return {}
        }

        function Yb() {
            return {radiusTop: void 0, radiusBottom: void 0}
        }

        function Jb() {
            return {}
        }

        function Xb() {
            return {}
        }

        var ul, L6, y0, O9, D9, B9, F9, bo = t2(() => {
            "use strict";
            ul = _3(M3());
            (function (n) {
                n[n.CL_NONE = 0] = "CL_NONE", n[n.CL_POINTER = 1] = "CL_POINTER", n[n.CL_PHYSICS = 2] = "CL_PHYSICS", n[n.CL_RESERVED1 = 4] = "CL_RESERVED1", n[n.CL_RESERVED2 = 8] = "CL_RESERVED2", n[n.CL_RESERVED3 = 16] = "CL_RESERVED3", n[n.CL_RESERVED4 = 32] = "CL_RESERVED4", n[n.CL_RESERVED5 = 64] = "CL_RESERVED5", n[n.CL_RESERVED6 = 128] = "CL_RESERVED6", n[n.CL_CUSTOM1 = 256] = "CL_CUSTOM1", n[n.CL_CUSTOM2 = 512] = "CL_CUSTOM2", n[n.CL_CUSTOM3 = 1024] = "CL_CUSTOM3", n[n.CL_CUSTOM4 = 2048] = "CL_CUSTOM4", n[n.CL_CUSTOM5 = 4096] = "CL_CUSTOM5", n[n.CL_CUSTOM6 = 8192] = "CL_CUSTOM6", n[n.CL_CUSTOM7 = 16384] = "CL_CUSTOM7", n[n.CL_CUSTOM8 = 32768] = "CL_CUSTOM8"
            })(L6 || (L6 = {}));
            (function (n) {
                function e(l, i = ul.default.Writer.create()) {
                    switch (l.collisionMask !== void 0 && i.uint32(8).uint32(l.collisionMask), l.mesh?.$case) {
                        case"box":
                            O9.encode(l.mesh.box, i.uint32(18).fork()).ldelim();
                            break;
                        case"sphere":
                            F9.encode(l.mesh.sphere, i.uint32(26).fork()).ldelim();
                            break;
                        case"cylinder":
                            D9.encode(l.mesh.cylinder, i.uint32(34).fork()).ldelim();
                            break;
                        case"plane":
                            B9.encode(l.mesh.plane, i.uint32(42).fork()).ldelim();
                            break
                    }
                    return i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof ul.default.Reader ? l : ul.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = jb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.collisionMask = o.uint32();
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.mesh = {$case: "box", box: O9.decode(o, o.uint32())};
                                continue;
                            case 3:
                                if (a !== 26) break;
                                s.mesh = {$case: "sphere", sphere: F9.decode(o, o.uint32())};
                                continue;
                            case 4:
                                if (a !== 34) break;
                                s.mesh = {$case: "cylinder", cylinder: D9.decode(o, o.uint32())};
                                continue;
                            case 5:
                                if (a !== 42) break;
                                s.mesh = {$case: "plane", plane: B9.decode(o, o.uint32())};
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(y0 || (y0 = {}));
            (function (n) {
                function e(l, i = ul.default.Writer.create()) {
                    return i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof ul.default.Reader ? l : ul.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = qb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(O9 || (O9 = {}));
            (function (n) {
                function e(l, i = ul.default.Writer.create()) {
                    return l.radiusTop !== void 0 && i.uint32(13).float(l.radiusTop), l.radiusBottom !== void 0 && i.uint32(21).float(l.radiusBottom), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof ul.default.Reader ? l : ul.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Yb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 13) break;
                                s.radiusTop = o.float();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.radiusBottom = o.float();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(D9 || (D9 = {}));
            (function (n) {
                function e(l, i = ul.default.Writer.create()) {
                    return i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof ul.default.Reader ? l : ul.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Jb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(B9 || (B9 = {}));
            (function (n) {
                function e(l, i = ul.default.Writer.create()) {
                    return i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof ul.default.Reader ? l : ul.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Xb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(F9 || (F9 = {}))
        });
        var xd, bd = t2(() => {
            "use strict";
            bo();
            xd = {
                COMPONENT_ID: 1019,
                serialize(n, e) {
                    let r = y0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return y0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return y0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBMeshCollider"
                }
            }
        });

        function Kb() {
            return {mesh: void 0}
        }

        function Zb() {
            return {uvs: []}
        }

        function Qb() {
            return {radiusTop: void 0, radiusBottom: void 0}
        }

        function $b() {
            return {uvs: []}
        }

        function nE() {
            return {}
        }

        var ol, g0, U9, L9, z9, W9, Eo = t2(() => {
            "use strict";
            ol = _3(M3());
            (function (n) {
                function e(l, i = ol.default.Writer.create()) {
                    switch (l.mesh?.$case) {
                        case"box":
                            U9.encode(l.mesh.box, i.uint32(10).fork()).ldelim();
                            break;
                        case"sphere":
                            W9.encode(l.mesh.sphere, i.uint32(18).fork()).ldelim();
                            break;
                        case"cylinder":
                            L9.encode(l.mesh.cylinder, i.uint32(26).fork()).ldelim();
                            break;
                        case"plane":
                            z9.encode(l.mesh.plane, i.uint32(34).fork()).ldelim();
                            break
                    }
                    return i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof ol.default.Reader ? l : ol.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Kb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.mesh = {$case: "box", box: U9.decode(o, o.uint32())};
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.mesh = {$case: "sphere", sphere: W9.decode(o, o.uint32())};
                                continue;
                            case 3:
                                if (a !== 26) break;
                                s.mesh = {$case: "cylinder", cylinder: L9.decode(o, o.uint32())};
                                continue;
                            case 4:
                                if (a !== 34) break;
                                s.mesh = {$case: "plane", plane: z9.decode(o, o.uint32())};
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(g0 || (g0 = {}));
            (function (n) {
                function e(l, i = ol.default.Writer.create()) {
                    i.uint32(10).fork();
                    for (let o of l.uvs) i.float(o);
                    return i.ldelim(), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof ol.default.Reader ? l : ol.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Zb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a === 13) {
                                    s.uvs.push(o.float());
                                    continue
                                }
                                if (a === 10) {
                                    let g = o.uint32() + o.pos;
                                    for (; o.pos < g;) s.uvs.push(o.float());
                                    continue
                                }
                                break
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(U9 || (U9 = {}));
            (function (n) {
                function e(l, i = ol.default.Writer.create()) {
                    return l.radiusTop !== void 0 && i.uint32(13).float(l.radiusTop), l.radiusBottom !== void 0 && i.uint32(21).float(l.radiusBottom), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof ol.default.Reader ? l : ol.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = Qb();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 13) break;
                                s.radiusTop = o.float();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.radiusBottom = o.float();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(L9 || (L9 = {}));
            (function (n) {
                function e(l, i = ol.default.Writer.create()) {
                    i.uint32(10).fork();
                    for (let o of l.uvs) i.float(o);
                    return i.ldelim(), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof ol.default.Reader ? l : ol.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = $b();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a === 13) {
                                    s.uvs.push(o.float());
                                    continue
                                }
                                if (a === 10) {
                                    let g = o.uint32() + o.pos;
                                    for (; o.pos < g;) s.uvs.push(o.float());
                                    continue
                                }
                                break
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(z9 || (z9 = {}));
            (function (n) {
                function e(l, i = ol.default.Writer.create()) {
                    return i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof ol.default.Reader ? l : ol.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = nE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(W9 || (W9 = {}))
        });
        var Ed, Td = t2(() => {
            "use strict";
            Eo();
            Ed = {
                COMPONENT_ID: 1018,
                serialize(n, e) {
                    let r = g0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return g0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return g0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBMeshRenderer"
                }
            }
        });

        function eE() {
            return {urn: "", style: void 0, color: void 0}
        }

        var H9, Sd, x0, To = t2(() => {
            "use strict";
            H9 = _3(M3());
            p4();
            (function (n) {
                n[n.NFT_CLASSIC = 0] = "NFT_CLASSIC", n[n.NFT_BAROQUE_ORNAMENT = 1] = "NFT_BAROQUE_ORNAMENT", n[n.NFT_DIAMOND_ORNAMENT = 2] = "NFT_DIAMOND_ORNAMENT", n[n.NFT_MINIMAL_WIDE = 3] = "NFT_MINIMAL_WIDE", n[n.NFT_MINIMAL_GREY = 4] = "NFT_MINIMAL_GREY", n[n.NFT_BLOCKY = 5] = "NFT_BLOCKY", n[n.NFT_GOLD_EDGES = 6] = "NFT_GOLD_EDGES", n[n.NFT_GOLD_CARVED = 7] = "NFT_GOLD_CARVED", n[n.NFT_GOLD_WIDE = 8] = "NFT_GOLD_WIDE", n[n.NFT_GOLD_ROUNDED = 9] = "NFT_GOLD_ROUNDED", n[n.NFT_METAL_MEDIUM = 10] = "NFT_METAL_MEDIUM", n[n.NFT_METAL_WIDE = 11] = "NFT_METAL_WIDE", n[n.NFT_METAL_SLIM = 12] = "NFT_METAL_SLIM", n[n.NFT_METAL_ROUNDED = 13] = "NFT_METAL_ROUNDED", n[n.NFT_PINS = 14] = "NFT_PINS", n[n.NFT_MINIMAL_BLACK = 15] = "NFT_MINIMAL_BLACK", n[n.NFT_MINIMAL_WHITE = 16] = "NFT_MINIMAL_WHITE", n[n.NFT_TAPE = 17] = "NFT_TAPE", n[n.NFT_WOOD_SLIM = 18] = "NFT_WOOD_SLIM", n[n.NFT_WOOD_WIDE = 19] = "NFT_WOOD_WIDE", n[n.NFT_WOOD_TWIGS = 20] = "NFT_WOOD_TWIGS", n[n.NFT_CANVAS = 21] = "NFT_CANVAS", n[n.NFT_NONE = 22] = "NFT_NONE"
            })(Sd || (Sd = {}));
            (function (n) {
                function e(l, i = H9.default.Writer.create()) {
                    return l.urn !== "" && i.uint32(10).string(l.urn), l.style !== void 0 && i.uint32(16).int32(l.style), l.color !== void 0 && An.encode(l.color, i.uint32(26).fork()).ldelim(), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof H9.default.Reader ? l : H9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = eE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.urn = o.string();
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.style = o.int32();
                                continue;
                            case 3:
                                if (a !== 26) break;
                                s.color = An.decode(o, o.uint32());
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(x0 || (x0 = {}))
        });
        var wd, vd = t2(() => {
            "use strict";
            To();
            wd = {
                COMPONENT_ID: 1040,
                serialize(n, e) {
                    let r = x0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return x0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return x0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBNftShape"
                }
            }
        });

        function lE() {
            return {address: "", isGuest: !1}
        }

        var V9, b0, So = t2(() => {
            "use strict";
            V9 = _3(M3());
            (function (n) {
                function e(l, i = V9.default.Writer.create()) {
                    return l.address !== "" && i.uint32(10).string(l.address), l.isGuest === !0 && i.uint32(24).bool(l.isGuest), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof V9.default.Reader ? l : V9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = lE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.address = o.string();
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.isGuest = o.bool();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(b0 || (b0 = {}))
        });
        var Cd, _d = t2(() => {
            "use strict";
            So();
            Cd = {
                COMPONENT_ID: 1089,
                serialize(n, e) {
                    let r = b0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return b0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return b0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBPlayerIdentityData"
                }
            }
        });

        function tE() {
            return {pointerEvents: []}
        }

        function rE() {
            return {button: void 0, hoverText: void 0, maxDistance: void 0, showFeedback: void 0}
        }

        function uE() {
            return {eventType: 0, eventInfo: void 0}
        }

        var h4, E0, G9, j9, wo = t2(() => {
            "use strict";
            h4 = _3(M3());
            (function (n) {
                function e(l, i = h4.default.Writer.create()) {
                    for (let o of l.pointerEvents) j9.encode(o, i.uint32(10).fork()).ldelim();
                    return i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof h4.default.Reader ? l : h4.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = tE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.pointerEvents.push(j9.decode(o, o.uint32()));
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(E0 || (E0 = {}));
            (function (n) {
                function e(l, i = h4.default.Writer.create()) {
                    return l.button !== void 0 && i.uint32(8).int32(l.button), l.hoverText !== void 0 && i.uint32(18).string(l.hoverText), l.maxDistance !== void 0 && i.uint32(29).float(l.maxDistance), l.showFeedback !== void 0 && i.uint32(32).bool(l.showFeedback), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof h4.default.Reader ? l : h4.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = rE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.button = o.int32();
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.hoverText = o.string();
                                continue;
                            case 3:
                                if (a !== 29) break;
                                s.maxDistance = o.float();
                                continue;
                            case 4:
                                if (a !== 32) break;
                                s.showFeedback = o.bool();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(G9 || (G9 = {}));
            (function (n) {
                function e(l, i = h4.default.Writer.create()) {
                    return l.eventType !== 0 && i.uint32(8).int32(l.eventType), l.eventInfo !== void 0 && G9.encode(l.eventInfo, i.uint32(18).fork()).ldelim(), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof h4.default.Reader ? l : h4.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = uE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.eventType = o.int32();
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.eventInfo = G9.decode(o, o.uint32());
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(j9 || (j9 = {}))
        });
        var Pd, Ad = t2(() => {
            "use strict";
            wo();
            Pd = {
                COMPONENT_ID: 1062,
                serialize(n, e) {
                    let r = E0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return E0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return E0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBPointerEvents"
                }
            }
        });

        function oE() {
            return {
                position: void 0,
                globalOrigin: void 0,
                direction: void 0,
                normalHit: void 0,
                length: 0,
                meshName: void 0,
                entityId: void 0
            }
        }

        var q9, b1, Y9 = t2(() => {
            "use strict";
            q9 = _3(M3());
            d5();
            (function (n) {
                function e(l, i = q9.default.Writer.create()) {
                    return l.position !== void 0 && J3.encode(l.position, i.uint32(10).fork()).ldelim(), l.globalOrigin !== void 0 && J3.encode(l.globalOrigin, i.uint32(18).fork()).ldelim(), l.direction !== void 0 && J3.encode(l.direction, i.uint32(26).fork()).ldelim(), l.normalHit !== void 0 && J3.encode(l.normalHit, i.uint32(34).fork()).ldelim(), l.length !== 0 && i.uint32(45).float(l.length), l.meshName !== void 0 && i.uint32(50).string(l.meshName), l.entityId !== void 0 && i.uint32(56).uint32(l.entityId), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof q9.default.Reader ? l : q9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = oE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.position = J3.decode(o, o.uint32());
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.globalOrigin = J3.decode(o, o.uint32());
                                continue;
                            case 3:
                                if (a !== 26) break;
                                s.direction = J3.decode(o, o.uint32());
                                continue;
                            case 4:
                                if (a !== 34) break;
                                s.normalHit = J3.decode(o, o.uint32());
                                continue;
                            case 5:
                                if (a !== 45) break;
                                s.length = o.float();
                                continue;
                            case 6:
                                if (a !== 50) break;
                                s.meshName = o.string();
                                continue;
                            case 7:
                                if (a !== 56) break;
                                s.entityId = o.uint32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(b1 || (b1 = {}))
        });

        function iE() {
            return {button: 0, hit: void 0, state: 0, timestamp: 0, analog: void 0, tickNumber: 0}
        }

        var J9, T0, vo = t2(() => {
            "use strict";
            J9 = _3(M3());
            Y9();
            (function (n) {
                function e(l, i = J9.default.Writer.create()) {
                    return l.button !== 0 && i.uint32(8).int32(l.button), l.hit !== void 0 && b1.encode(l.hit, i.uint32(18).fork()).ldelim(), l.state !== 0 && i.uint32(32).int32(l.state), l.timestamp !== 0 && i.uint32(40).uint32(l.timestamp), l.analog !== void 0 && i.uint32(53).float(l.analog), l.tickNumber !== 0 && i.uint32(56).uint32(l.tickNumber), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof J9.default.Reader ? l : J9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = iE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.button = o.int32();
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.hit = b1.decode(o, o.uint32());
                                continue;
                            case 4:
                                if (a !== 32) break;
                                s.state = o.int32();
                                continue;
                            case 5:
                                if (a !== 40) break;
                                s.timestamp = o.uint32();
                                continue;
                            case 6:
                                if (a !== 53) break;
                                s.analog = o.float();
                                continue;
                            case 7:
                                if (a !== 56) break;
                                s.tickNumber = o.uint32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(T0 || (T0 = {}))
        });
        var kd, Id = t2(() => {
            "use strict";
            vo();
            kd = {
                COMPONENT_ID: 1063,
                serialize(n, e) {
                    let r = T0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return T0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return T0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBPointerEventsResult"
                }
            }
        });

        function aE() {
            return {isPointerLocked: !1}
        }

        var X9, S0, Co = t2(() => {
            "use strict";
            X9 = _3(M3());
            (function (n) {
                function e(l, i = X9.default.Writer.create()) {
                    return l.isPointerLocked === !0 && i.uint32(8).bool(l.isPointerLocked), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof X9.default.Reader ? l : X9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = aE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.isPointerLocked = o.bool();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(S0 || (S0 = {}))
        });
        var Nd, Rd = t2(() => {
            "use strict";
            Co();
            Nd = {
                COMPONENT_ID: 1074,
                serialize(n, e) {
                    let r = S0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return S0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return S0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBPointerLock"
                }
            }
        });

        function sE() {
            return {
                timestamp: void 0,
                originOffset: void 0,
                direction: void 0,
                maxDistance: 0,
                queryType: 0,
                continuous: void 0,
                collisionMask: void 0
            }
        }

        var K9, Md, w0, _o = t2(() => {
            "use strict";
            K9 = _3(M3());
            d5();
            (function (n) {
                n[n.RQT_HIT_FIRST = 0] = "RQT_HIT_FIRST", n[n.RQT_QUERY_ALL = 1] = "RQT_QUERY_ALL", n[n.RQT_NONE = 2] = "RQT_NONE"
            })(Md || (Md = {}));
            (function (n) {
                function e(l, i = K9.default.Writer.create()) {
                    switch (l.timestamp !== void 0 && i.uint32(8).uint32(l.timestamp), l.originOffset !== void 0 && J3.encode(l.originOffset, i.uint32(18).fork()).ldelim(), l.direction?.$case) {
                        case"localDirection":
                            J3.encode(l.direction.localDirection, i.uint32(50).fork()).ldelim();
                            break;
                        case"globalDirection":
                            J3.encode(l.direction.globalDirection, i.uint32(26).fork()).ldelim();
                            break;
                        case"globalTarget":
                            J3.encode(l.direction.globalTarget, i.uint32(58).fork()).ldelim();
                            break;
                        case"targetEntity":
                            i.uint32(80).uint32(l.direction.targetEntity);
                            break
                    }
                    return l.maxDistance !== 0 && i.uint32(37).float(l.maxDistance), l.queryType !== 0 && i.uint32(40).int32(l.queryType), l.continuous !== void 0 && i.uint32(64).bool(l.continuous), l.collisionMask !== void 0 && i.uint32(72).uint32(l.collisionMask), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof K9.default.Reader ? l : K9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = sE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.timestamp = o.uint32();
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.originOffset = J3.decode(o, o.uint32());
                                continue;
                            case 6:
                                if (a !== 50) break;
                                s.direction = {$case: "localDirection", localDirection: J3.decode(o, o.uint32())};
                                continue;
                            case 3:
                                if (a !== 26) break;
                                s.direction = {$case: "globalDirection", globalDirection: J3.decode(o, o.uint32())};
                                continue;
                            case 7:
                                if (a !== 58) break;
                                s.direction = {$case: "globalTarget", globalTarget: J3.decode(o, o.uint32())};
                                continue;
                            case 10:
                                if (a !== 80) break;
                                s.direction = {$case: "targetEntity", targetEntity: o.uint32()};
                                continue;
                            case 4:
                                if (a !== 37) break;
                                s.maxDistance = o.float();
                                continue;
                            case 5:
                                if (a !== 40) break;
                                s.queryType = o.int32();
                                continue;
                            case 8:
                                if (a !== 64) break;
                                s.continuous = o.bool();
                                continue;
                            case 9:
                                if (a !== 72) break;
                                s.collisionMask = o.uint32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(w0 || (w0 = {}))
        });
        var Od, Dd = t2(() => {
            "use strict";
            _o();
            Od = {
                COMPONENT_ID: 1067,
                serialize(n, e) {
                    let r = w0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return w0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return w0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBRaycast"
                }
            }
        });

        function cE() {
            return {timestamp: void 0, globalOrigin: void 0, direction: void 0, hits: [], tickNumber: 0}
        }

        var Z9, v0, Po = t2(() => {
            "use strict";
            Z9 = _3(M3());
            d5();
            Y9();
            (function (n) {
                function e(l, i = Z9.default.Writer.create()) {
                    l.timestamp !== void 0 && i.uint32(8).uint32(l.timestamp), l.globalOrigin !== void 0 && J3.encode(l.globalOrigin, i.uint32(18).fork()).ldelim(), l.direction !== void 0 && J3.encode(l.direction, i.uint32(26).fork()).ldelim();
                    for (let o of l.hits) b1.encode(o, i.uint32(34).fork()).ldelim();
                    return l.tickNumber !== 0 && i.uint32(40).uint32(l.tickNumber), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Z9.default.Reader ? l : Z9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = cE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.timestamp = o.uint32();
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.globalOrigin = J3.decode(o, o.uint32());
                                continue;
                            case 3:
                                if (a !== 26) break;
                                s.direction = J3.decode(o, o.uint32());
                                continue;
                            case 4:
                                if (a !== 34) break;
                                s.hits.push(b1.decode(o, o.uint32()));
                                continue;
                            case 5:
                                if (a !== 40) break;
                                s.tickNumber = o.uint32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(v0 || (v0 = {}))
        });
        var Bd, Fd = t2(() => {
            "use strict";
            Po();
            Bd = {
                COMPONENT_ID: 1068,
                serialize(n, e) {
                    let r = v0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return v0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return v0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBRaycastResult"
                }
            }
        });

        function fE() {
            return {
                text: "",
                font: void 0,
                fontSize: void 0,
                fontAutoSize: void 0,
                textAlign: void 0,
                width: void 0,
                height: void 0,
                paddingTop: void 0,
                paddingRight: void 0,
                paddingBottom: void 0,
                paddingLeft: void 0,
                lineSpacing: void 0,
                lineCount: void 0,
                textWrapping: void 0,
                shadowBlur: void 0,
                shadowOffsetX: void 0,
                shadowOffsetY: void 0,
                outlineWidth: void 0,
                shadowColor: void 0,
                outlineColor: void 0,
                textColor: void 0
            }
        }

        var Q9, C0, Ao = t2(() => {
            "use strict";
            Q9 = _3(M3());
            p4();
            (function (n) {
                function e(l, i = Q9.default.Writer.create()) {
                    return l.text !== "" && i.uint32(10).string(l.text), l.font !== void 0 && i.uint32(16).int32(l.font), l.fontSize !== void 0 && i.uint32(29).float(l.fontSize), l.fontAutoSize !== void 0 && i.uint32(32).bool(l.fontAutoSize), l.textAlign !== void 0 && i.uint32(40).int32(l.textAlign), l.width !== void 0 && i.uint32(53).float(l.width), l.height !== void 0 && i.uint32(61).float(l.height), l.paddingTop !== void 0 && i.uint32(69).float(l.paddingTop), l.paddingRight !== void 0 && i.uint32(77).float(l.paddingRight), l.paddingBottom !== void 0 && i.uint32(85).float(l.paddingBottom), l.paddingLeft !== void 0 && i.uint32(93).float(l.paddingLeft), l.lineSpacing !== void 0 && i.uint32(101).float(l.lineSpacing), l.lineCount !== void 0 && i.uint32(104).int32(l.lineCount), l.textWrapping !== void 0 && i.uint32(112).bool(l.textWrapping), l.shadowBlur !== void 0 && i.uint32(125).float(l.shadowBlur), l.shadowOffsetX !== void 0 && i.uint32(133).float(l.shadowOffsetX), l.shadowOffsetY !== void 0 && i.uint32(141).float(l.shadowOffsetY), l.outlineWidth !== void 0 && i.uint32(149).float(l.outlineWidth), l.shadowColor !== void 0 && An.encode(l.shadowColor, i.uint32(154).fork()).ldelim(), l.outlineColor !== void 0 && An.encode(l.outlineColor, i.uint32(162).fork()).ldelim(), l.textColor !== void 0 && $n.encode(l.textColor, i.uint32(170).fork()).ldelim(), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Q9.default.Reader ? l : Q9.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = fE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.text = o.string();
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.font = o.int32();
                                continue;
                            case 3:
                                if (a !== 29) break;
                                s.fontSize = o.float();
                                continue;
                            case 4:
                                if (a !== 32) break;
                                s.fontAutoSize = o.bool();
                                continue;
                            case 5:
                                if (a !== 40) break;
                                s.textAlign = o.int32();
                                continue;
                            case 6:
                                if (a !== 53) break;
                                s.width = o.float();
                                continue;
                            case 7:
                                if (a !== 61) break;
                                s.height = o.float();
                                continue;
                            case 8:
                                if (a !== 69) break;
                                s.paddingTop = o.float();
                                continue;
                            case 9:
                                if (a !== 77) break;
                                s.paddingRight = o.float();
                                continue;
                            case 10:
                                if (a !== 85) break;
                                s.paddingBottom = o.float();
                                continue;
                            case 11:
                                if (a !== 93) break;
                                s.paddingLeft = o.float();
                                continue;
                            case 12:
                                if (a !== 101) break;
                                s.lineSpacing = o.float();
                                continue;
                            case 13:
                                if (a !== 104) break;
                                s.lineCount = o.int32();
                                continue;
                            case 14:
                                if (a !== 112) break;
                                s.textWrapping = o.bool();
                                continue;
                            case 15:
                                if (a !== 125) break;
                                s.shadowBlur = o.float();
                                continue;
                            case 16:
                                if (a !== 133) break;
                                s.shadowOffsetX = o.float();
                                continue;
                            case 17:
                                if (a !== 141) break;
                                s.shadowOffsetY = o.float();
                                continue;
                            case 18:
                                if (a !== 149) break;
                                s.outlineWidth = o.float();
                                continue;
                            case 19:
                                if (a !== 154) break;
                                s.shadowColor = An.decode(o, o.uint32());
                                continue;
                            case 20:
                                if (a !== 162) break;
                                s.outlineColor = An.decode(o, o.uint32());
                                continue;
                            case 21:
                                if (a !== 170) break;
                                s.textColor = $n.decode(o, o.uint32());
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(C0 || (C0 = {}))
        });
        var Ud, Ld = t2(() => {
            "use strict";
            Ao();
            Ud = {
                COMPONENT_ID: 1030,
                serialize(n, e) {
                    let r = C0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return C0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return C0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBTextShape"
                }
            }
        });

        function dE() {
            return {duration: 0, easingFunction: 0, mode: void 0, playing: void 0, currentTime: void 0}
        }

        function pE() {
            return {start: void 0, end: void 0, faceDirection: void 0}
        }

        function mE() {
            return {start: void 0, end: void 0}
        }

        function hE() {
            return {start: void 0, end: void 0}
        }

        var Xl, zd, z4, $9, n7, e7, l7 = t2(() => {
            "use strict";
            Xl = _3(M3());
            d5();
            (function (n) {
                n[n.EF_LINEAR = 0] = "EF_LINEAR", n[n.EF_EASEINQUAD = 1] = "EF_EASEINQUAD", n[n.EF_EASEOUTQUAD = 2] = "EF_EASEOUTQUAD", n[n.EF_EASEQUAD = 3] = "EF_EASEQUAD", n[n.EF_EASEINSINE = 4] = "EF_EASEINSINE", n[n.EF_EASEOUTSINE = 5] = "EF_EASEOUTSINE", n[n.EF_EASESINE = 6] = "EF_EASESINE", n[n.EF_EASEINEXPO = 7] = "EF_EASEINEXPO", n[n.EF_EASEOUTEXPO = 8] = "EF_EASEOUTEXPO", n[n.EF_EASEEXPO = 9] = "EF_EASEEXPO", n[n.EF_EASEINELASTIC = 10] = "EF_EASEINELASTIC", n[n.EF_EASEOUTELASTIC = 11] = "EF_EASEOUTELASTIC", n[n.EF_EASEELASTIC = 12] = "EF_EASEELASTIC", n[n.EF_EASEINBOUNCE = 13] = "EF_EASEINBOUNCE", n[n.EF_EASEOUTBOUNCE = 14] = "EF_EASEOUTBOUNCE", n[n.EF_EASEBOUNCE = 15] = "EF_EASEBOUNCE", n[n.EF_EASEINCUBIC = 16] = "EF_EASEINCUBIC", n[n.EF_EASEOUTCUBIC = 17] = "EF_EASEOUTCUBIC", n[n.EF_EASECUBIC = 18] = "EF_EASECUBIC", n[n.EF_EASEINQUART = 19] = "EF_EASEINQUART", n[n.EF_EASEOUTQUART = 20] = "EF_EASEOUTQUART", n[n.EF_EASEQUART = 21] = "EF_EASEQUART", n[n.EF_EASEINQUINT = 22] = "EF_EASEINQUINT", n[n.EF_EASEOUTQUINT = 23] = "EF_EASEOUTQUINT", n[n.EF_EASEQUINT = 24] = "EF_EASEQUINT", n[n.EF_EASEINCIRC = 25] = "EF_EASEINCIRC", n[n.EF_EASEOUTCIRC = 26] = "EF_EASEOUTCIRC", n[n.EF_EASECIRC = 27] = "EF_EASECIRC", n[n.EF_EASEINBACK = 28] = "EF_EASEINBACK", n[n.EF_EASEOUTBACK = 29] = "EF_EASEOUTBACK", n[n.EF_EASEBACK = 30] = "EF_EASEBACK"
            })(zd || (zd = {}));
            (function (n) {
                function e(l, i = Xl.default.Writer.create()) {
                    switch (l.duration !== 0 && i.uint32(13).float(l.duration), l.easingFunction !== 0 && i.uint32(16).int32(l.easingFunction), l.mode?.$case) {
                        case"move":
                            $9.encode(l.mode.move, i.uint32(26).fork()).ldelim();
                            break;
                        case"rotate":
                            n7.encode(l.mode.rotate, i.uint32(34).fork()).ldelim();
                            break;
                        case"scale":
                            e7.encode(l.mode.scale, i.uint32(42).fork()).ldelim();
                            break
                    }
                    return l.playing !== void 0 && i.uint32(48).bool(l.playing), l.currentTime !== void 0 && i.uint32(61).float(l.currentTime), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Xl.default.Reader ? l : Xl.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = dE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 13) break;
                                s.duration = o.float();
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.easingFunction = o.int32();
                                continue;
                            case 3:
                                if (a !== 26) break;
                                s.mode = {$case: "move", move: $9.decode(o, o.uint32())};
                                continue;
                            case 4:
                                if (a !== 34) break;
                                s.mode = {$case: "rotate", rotate: n7.decode(o, o.uint32())};
                                continue;
                            case 5:
                                if (a !== 42) break;
                                s.mode = {$case: "scale", scale: e7.decode(o, o.uint32())};
                                continue;
                            case 6:
                                if (a !== 48) break;
                                s.playing = o.bool();
                                continue;
                            case 7:
                                if (a !== 61) break;
                                s.currentTime = o.float();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(z4 || (z4 = {}));
            (function (n) {
                function e(l, i = Xl.default.Writer.create()) {
                    return l.start !== void 0 && J3.encode(l.start, i.uint32(10).fork()).ldelim(), l.end !== void 0 && J3.encode(l.end, i.uint32(18).fork()).ldelim(), l.faceDirection !== void 0 && i.uint32(24).bool(l.faceDirection), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Xl.default.Reader ? l : Xl.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = pE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.start = J3.decode(o, o.uint32());
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.end = J3.decode(o, o.uint32());
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.faceDirection = o.bool();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })($9 || ($9 = {}));
            (function (n) {
                function e(l, i = Xl.default.Writer.create()) {
                    return l.start !== void 0 && f5.encode(l.start, i.uint32(10).fork()).ldelim(), l.end !== void 0 && f5.encode(l.end, i.uint32(18).fork()).ldelim(), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Xl.default.Reader ? l : Xl.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = mE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.start = f5.decode(o, o.uint32());
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.end = f5.decode(o, o.uint32());
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(n7 || (n7 = {}));
            (function (n) {
                function e(l, i = Xl.default.Writer.create()) {
                    return l.start !== void 0 && J3.encode(l.start, i.uint32(10).fork()).ldelim(), l.end !== void 0 && J3.encode(l.end, i.uint32(18).fork()).ldelim(), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof Xl.default.Reader ? l : Xl.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = hE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.start = J3.decode(o, o.uint32());
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.end = J3.decode(o, o.uint32());
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(e7 || (e7 = {}))
        });
        var Wd, Hd = t2(() => {
            "use strict";
            l7();
            Wd = {
                COMPONENT_ID: 1102,
                serialize(n, e) {
                    let r = z4.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return z4.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return z4.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBTween"
                }
            }
        });

        function yE() {
            return {sequence: [], loop: void 0}
        }

        var t7, Vd, _0, ko = t2(() => {
            "use strict";
            t7 = _3(M3());
            l7();
            (function (n) {
                n[n.TL_RESTART = 0] = "TL_RESTART", n[n.TL_YOYO = 1] = "TL_YOYO"
            })(Vd || (Vd = {}));
            (function (n) {
                function e(l, i = t7.default.Writer.create()) {
                    for (let o of l.sequence) z4.encode(o, i.uint32(10).fork()).ldelim();
                    return l.loop !== void 0 && i.uint32(16).int32(l.loop), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof t7.default.Reader ? l : t7.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = yE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.sequence.push(z4.decode(o, o.uint32()));
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.loop = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(_0 || (_0 = {}))
        });
        var Gd, jd = t2(() => {
            "use strict";
            ko();
            Gd = {
                COMPONENT_ID: 1104,
                serialize(n, e) {
                    let r = _0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return _0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return _0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBTweenSequence"
                }
            }
        });

        function gE() {
            return {state: 0, currentTime: 0}
        }

        var r7, qd, P0, Io = t2(() => {
            "use strict";
            r7 = _3(M3());
            (function (n) {
                n[n.TS_ACTIVE = 0] = "TS_ACTIVE", n[n.TS_COMPLETED = 1] = "TS_COMPLETED", n[n.TS_PAUSED = 2] = "TS_PAUSED"
            })(qd || (qd = {}));
            (function (n) {
                function e(l, i = r7.default.Writer.create()) {
                    return l.state !== 0 && i.uint32(8).int32(l.state), l.currentTime !== 0 && i.uint32(21).float(l.currentTime), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof r7.default.Reader ? l : r7.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = gE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.state = o.int32();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.currentTime = o.float();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(P0 || (P0 = {}))
        });
        var Yd, Jd = t2(() => {
            "use strict";
            Io();
            Yd = {
                COMPONENT_ID: 1103,
                serialize(n, e) {
                    let r = P0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return P0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return P0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBTweenState"
                }
            }
        });

        function xE() {
            return {top: 0, left: 0, right: 0, bottom: 0}
        }

        function bE() {
            return {x: 0, y: 0, width: 0, height: 0}
        }

        var g5, E1, Xd, u7 = t2(() => {
            "use strict";
            g5 = _3(M3());
            (function (n) {
                function e(l, i = g5.default.Writer.create()) {
                    return l.top !== 0 && i.uint32(13).float(l.top), l.left !== 0 && i.uint32(21).float(l.left), l.right !== 0 && i.uint32(29).float(l.right), l.bottom !== 0 && i.uint32(37).float(l.bottom), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof g5.default.Reader ? l : g5.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = xE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 13) break;
                                s.top = o.float();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.left = o.float();
                                continue;
                            case 3:
                                if (a !== 29) break;
                                s.right = o.float();
                                continue;
                            case 4:
                                if (a !== 37) break;
                                s.bottom = o.float();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(E1 || (E1 = {}));
            (function (n) {
                function e(l, i = g5.default.Writer.create()) {
                    return l.x !== 0 && i.uint32(13).float(l.x), l.y !== 0 && i.uint32(21).float(l.y), l.width !== 0 && i.uint32(29).float(l.width), l.height !== 0 && i.uint32(37).float(l.height), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof g5.default.Reader ? l : g5.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = bE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 13) break;
                                s.x = o.float();
                                continue;
                            case 2:
                                if (a !== 21) break;
                                s.y = o.float();
                                continue;
                            case 3:
                                if (a !== 29) break;
                                s.width = o.float();
                                continue;
                            case 4:
                                if (a !== 37) break;
                                s.height = o.float();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(Xd || (Xd = {}))
        });

        function EE() {
            return {color: void 0, texture: void 0, textureMode: 0, textureSlices: void 0, uvs: []}
        }

        var o7, Kd, A0, No = t2(() => {
            "use strict";
            o7 = _3(M3());
            u7();
            p4();
            N9();
            (function (n) {
                n[n.NINE_SLICES = 0] = "NINE_SLICES", n[n.CENTER = 1] = "CENTER", n[n.STRETCH = 2] = "STRETCH"
            })(Kd || (Kd = {}));
            (function (n) {
                function e(l, i = o7.default.Writer.create()) {
                    l.color !== void 0 && $n.encode(l.color, i.uint32(10).fork()).ldelim(), l.texture !== void 0 && rl.encode(l.texture, i.uint32(18).fork()).ldelim(), l.textureMode !== 0 && i.uint32(24).int32(l.textureMode), l.textureSlices !== void 0 && E1.encode(l.textureSlices, i.uint32(34).fork()).ldelim(), i.uint32(42).fork();
                    for (let o of l.uvs) i.float(o);
                    return i.ldelim(), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof o7.default.Reader ? l : o7.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = EE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.color = $n.decode(o, o.uint32());
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.texture = rl.decode(o, o.uint32());
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.textureMode = o.int32();
                                continue;
                            case 4:
                                if (a !== 34) break;
                                s.textureSlices = E1.decode(o, o.uint32());
                                continue;
                            case 5:
                                if (a === 45) {
                                    s.uvs.push(o.float());
                                    continue
                                }
                                if (a === 42) {
                                    let g = o.uint32() + o.pos;
                                    for (; o.pos < g;) s.uvs.push(o.float());
                                    continue
                                }
                                break
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(A0 || (A0 = {}))
        });
        var Zd, Qd = t2(() => {
            "use strict";
            No();
            Zd = {
                COMPONENT_ID: 1053,
                serialize(n, e) {
                    let r = A0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return A0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return A0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBUiBackground"
                }
            }
        });

        function TE() {
            return {devicePixelRatio: 0, width: 0, height: 0, interactableArea: void 0}
        }

        var i7, k0, Ro = t2(() => {
            "use strict";
            i7 = _3(M3());
            u7();
            (function (n) {
                function e(l, i = i7.default.Writer.create()) {
                    return l.devicePixelRatio !== 0 && i.uint32(13).float(l.devicePixelRatio), l.width !== 0 && i.uint32(16).int32(l.width), l.height !== 0 && i.uint32(24).int32(l.height), l.interactableArea !== void 0 && E1.encode(l.interactableArea, i.uint32(34).fork()).ldelim(), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof i7.default.Reader ? l : i7.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = TE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 13) break;
                                s.devicePixelRatio = o.float();
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.width = o.int32();
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.height = o.int32();
                                continue;
                            case 4:
                                if (a !== 34) break;
                                s.interactableArea = E1.decode(o, o.uint32());
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(k0 || (k0 = {}))
        });
        var $d, np = t2(() => {
            "use strict";
            Ro();
            $d = {
                COMPONENT_ID: 1054,
                serialize(n, e) {
                    let r = k0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return k0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return k0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBUiCanvasInformation"
                }
            }
        });

        function SE() {
            return {
                acceptEmpty: !1,
                emptyLabel: void 0,
                options: [],
                selectedIndex: void 0,
                disabled: !1,
                color: void 0,
                textAlign: void 0,
                font: void 0,
                fontSize: void 0
            }
        }

        var a7, I0, Mo = t2(() => {
            "use strict";
            a7 = _3(M3());
            p4();
            (function (n) {
                function e(l, i = a7.default.Writer.create()) {
                    l.acceptEmpty === !0 && i.uint32(8).bool(l.acceptEmpty), l.emptyLabel !== void 0 && i.uint32(18).string(l.emptyLabel);
                    for (let o of l.options) i.uint32(26).string(o);
                    return l.selectedIndex !== void 0 && i.uint32(32).int32(l.selectedIndex), l.disabled === !0 && i.uint32(40).bool(l.disabled), l.color !== void 0 && $n.encode(l.color, i.uint32(50).fork()).ldelim(), l.textAlign !== void 0 && i.uint32(80).int32(l.textAlign), l.font !== void 0 && i.uint32(88).int32(l.font), l.fontSize !== void 0 && i.uint32(96).int32(l.fontSize), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof a7.default.Reader ? l : a7.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = SE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.acceptEmpty = o.bool();
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.emptyLabel = o.string();
                                continue;
                            case 3:
                                if (a !== 26) break;
                                s.options.push(o.string());
                                continue;
                            case 4:
                                if (a !== 32) break;
                                s.selectedIndex = o.int32();
                                continue;
                            case 5:
                                if (a !== 40) break;
                                s.disabled = o.bool();
                                continue;
                            case 6:
                                if (a !== 50) break;
                                s.color = $n.decode(o, o.uint32());
                                continue;
                            case 10:
                                if (a !== 80) break;
                                s.textAlign = o.int32();
                                continue;
                            case 11:
                                if (a !== 88) break;
                                s.font = o.int32();
                                continue;
                            case 12:
                                if (a !== 96) break;
                                s.fontSize = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(I0 || (I0 = {}))
        });
        var ep, lp = t2(() => {
            "use strict";
            Mo();
            ep = {
                COMPONENT_ID: 1094,
                serialize(n, e) {
                    let r = I0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return I0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return I0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBUiDropdown"
                }
            }
        });

        function wE() {
            return {value: 0}
        }

        var s7, N0, Oo = t2(() => {
            "use strict";
            s7 = _3(M3());
            (function (n) {
                function e(l, i = s7.default.Writer.create()) {
                    return l.value !== 0 && i.uint32(8).int32(l.value), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof s7.default.Reader ? l : s7.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = wE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.value = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(N0 || (N0 = {}))
        });
        var tp, rp = t2(() => {
            "use strict";
            Oo();
            tp = {
                COMPONENT_ID: 1096,
                serialize(n, e) {
                    let r = N0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return N0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return N0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBUiDropdownResult"
                }
            }
        });

        function vE() {
            return {
                placeholder: "",
                color: void 0,
                placeholderColor: void 0,
                disabled: !1,
                textAlign: void 0,
                font: void 0,
                fontSize: void 0,
                value: void 0
            }
        }

        var c7, R0, Do = t2(() => {
            "use strict";
            c7 = _3(M3());
            p4();
            (function (n) {
                function e(l, i = c7.default.Writer.create()) {
                    return l.placeholder !== "" && i.uint32(10).string(l.placeholder), l.color !== void 0 && $n.encode(l.color, i.uint32(18).fork()).ldelim(), l.placeholderColor !== void 0 && $n.encode(l.placeholderColor, i.uint32(26).fork()).ldelim(), l.disabled === !0 && i.uint32(32).bool(l.disabled), l.textAlign !== void 0 && i.uint32(80).int32(l.textAlign), l.font !== void 0 && i.uint32(88).int32(l.font), l.fontSize !== void 0 && i.uint32(96).int32(l.fontSize), l.value !== void 0 && i.uint32(106).string(l.value), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof c7.default.Reader ? l : c7.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = vE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.placeholder = o.string();
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.color = $n.decode(o, o.uint32());
                                continue;
                            case 3:
                                if (a !== 26) break;
                                s.placeholderColor = $n.decode(o, o.uint32());
                                continue;
                            case 4:
                                if (a !== 32) break;
                                s.disabled = o.bool();
                                continue;
                            case 10:
                                if (a !== 80) break;
                                s.textAlign = o.int32();
                                continue;
                            case 11:
                                if (a !== 88) break;
                                s.font = o.int32();
                                continue;
                            case 12:
                                if (a !== 96) break;
                                s.fontSize = o.int32();
                                continue;
                            case 13:
                                if (a !== 106) break;
                                s.value = o.string();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(R0 || (R0 = {}))
        });
        var up, op = t2(() => {
            "use strict";
            Do();
            up = {
                COMPONENT_ID: 1093,
                serialize(n, e) {
                    let r = R0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return R0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return R0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBUiInput"
                }
            }
        });

        function CE() {
            return {value: "", isSubmit: void 0}
        }

        var f7, M0, Bo = t2(() => {
            "use strict";
            f7 = _3(M3());
            (function (n) {
                function e(l, i = f7.default.Writer.create()) {
                    return l.value !== "" && i.uint32(10).string(l.value), l.isSubmit !== void 0 && i.uint32(16).bool(l.isSubmit), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof f7.default.Reader ? l : f7.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = CE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.value = o.string();
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.isSubmit = o.bool();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(M0 || (M0 = {}))
        });
        var ip, ap = t2(() => {
            "use strict";
            Bo();
            ip = {
                COMPONENT_ID: 1095,
                serialize(n, e) {
                    let r = M0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return M0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return M0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBUiInputResult"
                }
            }
        });

        function _E() {
            return {value: "", color: void 0, textAlign: void 0, font: void 0, fontSize: void 0}
        }

        var d7, O0, Fo = t2(() => {
            "use strict";
            d7 = _3(M3());
            p4();
            (function (n) {
                function e(l, i = d7.default.Writer.create()) {
                    return l.value !== "" && i.uint32(10).string(l.value), l.color !== void 0 && $n.encode(l.color, i.uint32(18).fork()).ldelim(), l.textAlign !== void 0 && i.uint32(24).int32(l.textAlign), l.font !== void 0 && i.uint32(32).int32(l.font), l.fontSize !== void 0 && i.uint32(40).int32(l.fontSize), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof d7.default.Reader ? l : d7.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = _E();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.value = o.string();
                                continue;
                            case 2:
                                if (a !== 18) break;
                                s.color = $n.decode(o, o.uint32());
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.textAlign = o.int32();
                                continue;
                            case 4:
                                if (a !== 32) break;
                                s.font = o.int32();
                                continue;
                            case 5:
                                if (a !== 40) break;
                                s.fontSize = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(O0 || (O0 = {}))
        });
        var sp, cp = t2(() => {
            "use strict";
            Fo();
            sp = {
                COMPONENT_ID: 1052,
                serialize(n, e) {
                    let r = O0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return O0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return O0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBUiText"
                }
            }
        });

        function PE() {
            return {
                parent: 0,
                rightOf: 0,
                alignContent: void 0,
                alignItems: void 0,
                flexWrap: void 0,
                flexShrink: void 0,
                positionType: 0,
                alignSelf: 0,
                flexDirection: 0,
                justifyContent: 0,
                overflow: 0,
                display: 0,
                flexBasisUnit: 0,
                flexBasis: 0,
                flexGrow: 0,
                widthUnit: 0,
                width: 0,
                heightUnit: 0,
                height: 0,
                minWidthUnit: 0,
                minWidth: 0,
                minHeightUnit: 0,
                minHeight: 0,
                maxWidthUnit: 0,
                maxWidth: 0,
                maxHeightUnit: 0,
                maxHeight: 0,
                positionLeftUnit: 0,
                positionLeft: 0,
                positionTopUnit: 0,
                positionTop: 0,
                positionRightUnit: 0,
                positionRight: 0,
                positionBottomUnit: 0,
                positionBottom: 0,
                marginLeftUnit: 0,
                marginLeft: 0,
                marginTopUnit: 0,
                marginTop: 0,
                marginRightUnit: 0,
                marginRight: 0,
                marginBottomUnit: 0,
                marginBottom: 0,
                paddingLeftUnit: 0,
                paddingLeft: 0,
                paddingTopUnit: 0,
                paddingTop: 0,
                paddingRightUnit: 0,
                paddingRight: 0,
                paddingBottomUnit: 0,
                paddingBottom: 0,
                pointerFilter: void 0
            }
        }

        var p7, fp, dp, pp, mp, hp, yp, gp, xp, bp, Ep, D0, Uo = t2(() => {
            "use strict";
            p7 = _3(M3());
            (function (n) {
                n[n.YGPT_RELATIVE = 0] = "YGPT_RELATIVE", n[n.YGPT_ABSOLUTE = 1] = "YGPT_ABSOLUTE"
            })(fp || (fp = {}));
            (function (n) {
                n[n.YGA_AUTO = 0] = "YGA_AUTO", n[n.YGA_FLEX_START = 1] = "YGA_FLEX_START", n[n.YGA_CENTER = 2] = "YGA_CENTER", n[n.YGA_FLEX_END = 3] = "YGA_FLEX_END", n[n.YGA_STRETCH = 4] = "YGA_STRETCH", n[n.YGA_BASELINE = 5] = "YGA_BASELINE", n[n.YGA_SPACE_BETWEEN = 6] = "YGA_SPACE_BETWEEN", n[n.YGA_SPACE_AROUND = 7] = "YGA_SPACE_AROUND"
            })(dp || (dp = {}));
            (function (n) {
                n[n.YGU_UNDEFINED = 0] = "YGU_UNDEFINED", n[n.YGU_POINT = 1] = "YGU_POINT", n[n.YGU_PERCENT = 2] = "YGU_PERCENT", n[n.YGU_AUTO = 3] = "YGU_AUTO"
            })(pp || (pp = {}));
            (function (n) {
                n[n.YGFD_ROW = 0] = "YGFD_ROW", n[n.YGFD_COLUMN = 1] = "YGFD_COLUMN", n[n.YGFD_COLUMN_REVERSE = 2] = "YGFD_COLUMN_REVERSE", n[n.YGFD_ROW_REVERSE = 3] = "YGFD_ROW_REVERSE"
            })(mp || (mp = {}));
            (function (n) {
                n[n.YGW_NO_WRAP = 0] = "YGW_NO_WRAP", n[n.YGW_WRAP = 1] = "YGW_WRAP", n[n.YGW_WRAP_REVERSE = 2] = "YGW_WRAP_REVERSE"
            })(hp || (hp = {}));
            (function (n) {
                n[n.YGJ_FLEX_START = 0] = "YGJ_FLEX_START", n[n.YGJ_CENTER = 1] = "YGJ_CENTER", n[n.YGJ_FLEX_END = 2] = "YGJ_FLEX_END", n[n.YGJ_SPACE_BETWEEN = 3] = "YGJ_SPACE_BETWEEN", n[n.YGJ_SPACE_AROUND = 4] = "YGJ_SPACE_AROUND", n[n.YGJ_SPACE_EVENLY = 5] = "YGJ_SPACE_EVENLY"
            })(yp || (yp = {}));
            (function (n) {
                n[n.YGO_VISIBLE = 0] = "YGO_VISIBLE", n[n.YGO_HIDDEN = 1] = "YGO_HIDDEN", n[n.YGO_SCROLL = 2] = "YGO_SCROLL"
            })(gp || (gp = {}));
            (function (n) {
                n[n.YGD_FLEX = 0] = "YGD_FLEX", n[n.YGD_NONE = 1] = "YGD_NONE"
            })(xp || (xp = {}));
            (function (n) {
                n[n.YGE_LEFT = 0] = "YGE_LEFT", n[n.YGE_TOP = 1] = "YGE_TOP", n[n.YGE_RIGHT = 2] = "YGE_RIGHT", n[n.YGE_BOTTOM = 3] = "YGE_BOTTOM", n[n.YGE_START = 4] = "YGE_START", n[n.YGE_END = 5] = "YGE_END", n[n.YGE_HORIZONTAL = 6] = "YGE_HORIZONTAL", n[n.YGE_VERTICAL = 7] = "YGE_VERTICAL", n[n.YGE_ALL = 8] = "YGE_ALL"
            })(bp || (bp = {}));
            (function (n) {
                n[n.PFM_NONE = 0] = "PFM_NONE", n[n.PFM_BLOCK = 1] = "PFM_BLOCK"
            })(Ep || (Ep = {}));
            (function (n) {
                function e(l, i = p7.default.Writer.create()) {
                    return l.parent !== 0 && i.uint32(8).int32(l.parent), l.rightOf !== 0 && i.uint32(16).int32(l.rightOf), l.alignContent !== void 0 && i.uint32(24).int32(l.alignContent), l.alignItems !== void 0 && i.uint32(32).int32(l.alignItems), l.flexWrap !== void 0 && i.uint32(40).int32(l.flexWrap), l.flexShrink !== void 0 && i.uint32(53).float(l.flexShrink), l.positionType !== 0 && i.uint32(56).int32(l.positionType), l.alignSelf !== 0 && i.uint32(64).int32(l.alignSelf), l.flexDirection !== 0 && i.uint32(72).int32(l.flexDirection), l.justifyContent !== 0 && i.uint32(80).int32(l.justifyContent), l.overflow !== 0 && i.uint32(88).int32(l.overflow), l.display !== 0 && i.uint32(96).int32(l.display), l.flexBasisUnit !== 0 && i.uint32(104).int32(l.flexBasisUnit), l.flexBasis !== 0 && i.uint32(117).float(l.flexBasis), l.flexGrow !== 0 && i.uint32(125).float(l.flexGrow), l.widthUnit !== 0 && i.uint32(128).int32(l.widthUnit), l.width !== 0 && i.uint32(141).float(l.width), l.heightUnit !== 0 && i.uint32(144).int32(l.heightUnit), l.height !== 0 && i.uint32(157).float(l.height), l.minWidthUnit !== 0 && i.uint32(160).int32(l.minWidthUnit), l.minWidth !== 0 && i.uint32(173).float(l.minWidth), l.minHeightUnit !== 0 && i.uint32(176).int32(l.minHeightUnit), l.minHeight !== 0 && i.uint32(189).float(l.minHeight), l.maxWidthUnit !== 0 && i.uint32(192).int32(l.maxWidthUnit), l.maxWidth !== 0 && i.uint32(205).float(l.maxWidth), l.maxHeightUnit !== 0 && i.uint32(208).int32(l.maxHeightUnit), l.maxHeight !== 0 && i.uint32(221).float(l.maxHeight), l.positionLeftUnit !== 0 && i.uint32(224).int32(l.positionLeftUnit), l.positionLeft !== 0 && i.uint32(237).float(l.positionLeft), l.positionTopUnit !== 0 && i.uint32(240).int32(l.positionTopUnit), l.positionTop !== 0 && i.uint32(253).float(l.positionTop), l.positionRightUnit !== 0 && i.uint32(256).int32(l.positionRightUnit), l.positionRight !== 0 && i.uint32(269).float(l.positionRight), l.positionBottomUnit !== 0 && i.uint32(272).int32(l.positionBottomUnit), l.positionBottom !== 0 && i.uint32(285).float(l.positionBottom), l.marginLeftUnit !== 0 && i.uint32(288).int32(l.marginLeftUnit), l.marginLeft !== 0 && i.uint32(301).float(l.marginLeft), l.marginTopUnit !== 0 && i.uint32(304).int32(l.marginTopUnit), l.marginTop !== 0 && i.uint32(317).float(l.marginTop), l.marginRightUnit !== 0 && i.uint32(320).int32(l.marginRightUnit), l.marginRight !== 0 && i.uint32(333).float(l.marginRight), l.marginBottomUnit !== 0 && i.uint32(336).int32(l.marginBottomUnit), l.marginBottom !== 0 && i.uint32(349).float(l.marginBottom), l.paddingLeftUnit !== 0 && i.uint32(352).int32(l.paddingLeftUnit), l.paddingLeft !== 0 && i.uint32(365).float(l.paddingLeft), l.paddingTopUnit !== 0 && i.uint32(368).int32(l.paddingTopUnit), l.paddingTop !== 0 && i.uint32(381).float(l.paddingTop), l.paddingRightUnit !== 0 && i.uint32(384).int32(l.paddingRightUnit), l.paddingRight !== 0 && i.uint32(397).float(l.paddingRight), l.paddingBottomUnit !== 0 && i.uint32(400).int32(l.paddingBottomUnit), l.paddingBottom !== 0 && i.uint32(413).float(l.paddingBottom), l.pointerFilter !== void 0 && i.uint32(416).int32(l.pointerFilter), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof p7.default.Reader ? l : p7.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = PE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.parent = o.int32();
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.rightOf = o.int32();
                                continue;
                            case 3:
                                if (a !== 24) break;
                                s.alignContent = o.int32();
                                continue;
                            case 4:
                                if (a !== 32) break;
                                s.alignItems = o.int32();
                                continue;
                            case 5:
                                if (a !== 40) break;
                                s.flexWrap = o.int32();
                                continue;
                            case 6:
                                if (a !== 53) break;
                                s.flexShrink = o.float();
                                continue;
                            case 7:
                                if (a !== 56) break;
                                s.positionType = o.int32();
                                continue;
                            case 8:
                                if (a !== 64) break;
                                s.alignSelf = o.int32();
                                continue;
                            case 9:
                                if (a !== 72) break;
                                s.flexDirection = o.int32();
                                continue;
                            case 10:
                                if (a !== 80) break;
                                s.justifyContent = o.int32();
                                continue;
                            case 11:
                                if (a !== 88) break;
                                s.overflow = o.int32();
                                continue;
                            case 12:
                                if (a !== 96) break;
                                s.display = o.int32();
                                continue;
                            case 13:
                                if (a !== 104) break;
                                s.flexBasisUnit = o.int32();
                                continue;
                            case 14:
                                if (a !== 117) break;
                                s.flexBasis = o.float();
                                continue;
                            case 15:
                                if (a !== 125) break;
                                s.flexGrow = o.float();
                                continue;
                            case 16:
                                if (a !== 128) break;
                                s.widthUnit = o.int32();
                                continue;
                            case 17:
                                if (a !== 141) break;
                                s.width = o.float();
                                continue;
                            case 18:
                                if (a !== 144) break;
                                s.heightUnit = o.int32();
                                continue;
                            case 19:
                                if (a !== 157) break;
                                s.height = o.float();
                                continue;
                            case 20:
                                if (a !== 160) break;
                                s.minWidthUnit = o.int32();
                                continue;
                            case 21:
                                if (a !== 173) break;
                                s.minWidth = o.float();
                                continue;
                            case 22:
                                if (a !== 176) break;
                                s.minHeightUnit = o.int32();
                                continue;
                            case 23:
                                if (a !== 189) break;
                                s.minHeight = o.float();
                                continue;
                            case 24:
                                if (a !== 192) break;
                                s.maxWidthUnit = o.int32();
                                continue;
                            case 25:
                                if (a !== 205) break;
                                s.maxWidth = o.float();
                                continue;
                            case 26:
                                if (a !== 208) break;
                                s.maxHeightUnit = o.int32();
                                continue;
                            case 27:
                                if (a !== 221) break;
                                s.maxHeight = o.float();
                                continue;
                            case 28:
                                if (a !== 224) break;
                                s.positionLeftUnit = o.int32();
                                continue;
                            case 29:
                                if (a !== 237) break;
                                s.positionLeft = o.float();
                                continue;
                            case 30:
                                if (a !== 240) break;
                                s.positionTopUnit = o.int32();
                                continue;
                            case 31:
                                if (a !== 253) break;
                                s.positionTop = o.float();
                                continue;
                            case 32:
                                if (a !== 256) break;
                                s.positionRightUnit = o.int32();
                                continue;
                            case 33:
                                if (a !== 269) break;
                                s.positionRight = o.float();
                                continue;
                            case 34:
                                if (a !== 272) break;
                                s.positionBottomUnit = o.int32();
                                continue;
                            case 35:
                                if (a !== 285) break;
                                s.positionBottom = o.float();
                                continue;
                            case 36:
                                if (a !== 288) break;
                                s.marginLeftUnit = o.int32();
                                continue;
                            case 37:
                                if (a !== 301) break;
                                s.marginLeft = o.float();
                                continue;
                            case 38:
                                if (a !== 304) break;
                                s.marginTopUnit = o.int32();
                                continue;
                            case 39:
                                if (a !== 317) break;
                                s.marginTop = o.float();
                                continue;
                            case 40:
                                if (a !== 320) break;
                                s.marginRightUnit = o.int32();
                                continue;
                            case 41:
                                if (a !== 333) break;
                                s.marginRight = o.float();
                                continue;
                            case 42:
                                if (a !== 336) break;
                                s.marginBottomUnit = o.int32();
                                continue;
                            case 43:
                                if (a !== 349) break;
                                s.marginBottom = o.float();
                                continue;
                            case 44:
                                if (a !== 352) break;
                                s.paddingLeftUnit = o.int32();
                                continue;
                            case 45:
                                if (a !== 365) break;
                                s.paddingLeft = o.float();
                                continue;
                            case 46:
                                if (a !== 368) break;
                                s.paddingTopUnit = o.int32();
                                continue;
                            case 47:
                                if (a !== 381) break;
                                s.paddingTop = o.float();
                                continue;
                            case 48:
                                if (a !== 384) break;
                                s.paddingRightUnit = o.int32();
                                continue;
                            case 49:
                                if (a !== 397) break;
                                s.paddingRight = o.float();
                                continue;
                            case 50:
                                if (a !== 400) break;
                                s.paddingBottomUnit = o.int32();
                                continue;
                            case 51:
                                if (a !== 413) break;
                                s.paddingBottom = o.float();
                                continue;
                            case 52:
                                if (a !== 416) break;
                                s.pointerFilter = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(D0 || (D0 = {}))
        });
        var Tp, Sp = t2(() => {
            "use strict";
            Uo();
            Tp = {
                COMPONENT_ID: 1050,
                serialize(n, e) {
                    let r = D0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return D0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return D0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBUiTransform"
                }
            }
        });

        function AE() {
            return {timestamp: 0, tickNumber: 0, currentOffset: 0, videoLength: 0, state: 0}
        }

        var m7, wp, B0, Lo = t2(() => {
            "use strict";
            m7 = _3(M3());
            (function (n) {
                n[n.VS_NONE = 0] = "VS_NONE", n[n.VS_ERROR = 1] = "VS_ERROR", n[n.VS_LOADING = 2] = "VS_LOADING", n[n.VS_READY = 3] = "VS_READY", n[n.VS_PLAYING = 4] = "VS_PLAYING", n[n.VS_BUFFERING = 5] = "VS_BUFFERING", n[n.VS_SEEKING = 6] = "VS_SEEKING", n[n.VS_PAUSED = 7] = "VS_PAUSED"
            })(wp || (wp = {}));
            (function (n) {
                function e(l, i = m7.default.Writer.create()) {
                    return l.timestamp !== 0 && i.uint32(8).uint32(l.timestamp), l.tickNumber !== 0 && i.uint32(16).uint32(l.tickNumber), l.currentOffset !== 0 && i.uint32(29).float(l.currentOffset), l.videoLength !== 0 && i.uint32(37).float(l.videoLength), l.state !== 0 && i.uint32(40).int32(l.state), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof m7.default.Reader ? l : m7.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = AE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.timestamp = o.uint32();
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.tickNumber = o.uint32();
                                continue;
                            case 3:
                                if (a !== 29) break;
                                s.currentOffset = o.float();
                                continue;
                            case 4:
                                if (a !== 37) break;
                                s.videoLength = o.float();
                                continue;
                            case 5:
                                if (a !== 40) break;
                                s.state = o.int32();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(B0 || (B0 = {}))
        });
        var vp, Cp = t2(() => {
            "use strict";
            Lo();
            vp = {
                COMPONENT_ID: 1044,
                serialize(n, e) {
                    let r = B0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return B0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return B0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBVideoEvent"
                }
            }
        });

        function kE() {
            return {src: "", playing: void 0, position: void 0, volume: void 0, playbackRate: void 0, loop: void 0}
        }

        var h7, F0, zo = t2(() => {
            "use strict";
            h7 = _3(M3());
            (function (n) {
                function e(l, i = h7.default.Writer.create()) {
                    return l.src !== "" && i.uint32(10).string(l.src), l.playing !== void 0 && i.uint32(16).bool(l.playing), l.position !== void 0 && i.uint32(29).float(l.position), l.volume !== void 0 && i.uint32(37).float(l.volume), l.playbackRate !== void 0 && i.uint32(45).float(l.playbackRate), l.loop !== void 0 && i.uint32(48).bool(l.loop), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof h7.default.Reader ? l : h7.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = kE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 10) break;
                                s.src = o.string();
                                continue;
                            case 2:
                                if (a !== 16) break;
                                s.playing = o.bool();
                                continue;
                            case 3:
                                if (a !== 29) break;
                                s.position = o.float();
                                continue;
                            case 4:
                                if (a !== 37) break;
                                s.volume = o.float();
                                continue;
                            case 5:
                                if (a !== 45) break;
                                s.playbackRate = o.float();
                                continue;
                            case 6:
                                if (a !== 48) break;
                                s.loop = o.bool();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(F0 || (F0 = {}))
        });
        var _p, Pp = t2(() => {
            "use strict";
            zo();
            _p = {
                COMPONENT_ID: 1043,
                serialize(n, e) {
                    let r = F0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return F0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return F0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBVideoPlayer"
                }
            }
        });

        function IE() {
            return {visible: void 0}
        }

        var y7, U0, Wo = t2(() => {
            "use strict";
            y7 = _3(M3());
            (function (n) {
                function e(l, i = y7.default.Writer.create()) {
                    return l.visible !== void 0 && i.uint32(8).bool(l.visible), i
                }

                n.encode = e;

                function r(l, i) {
                    let o = l instanceof y7.default.Reader ? l : y7.default.Reader.create(l),
                        f = i === void 0 ? o.len : o.pos + i, s = IE();
                    for (; o.pos < f;) {
                        let a = o.uint32();
                        switch (a >>> 3) {
                            case 1:
                                if (a !== 8) break;
                                s.visible = o.bool();
                                continue
                        }
                        if ((a & 7) === 4 || a === 0) break;
                        o.skipType(a & 7)
                    }
                    return s
                }

                n.decode = r
            })(U0 || (U0 = {}))
        });
        var Ap, kp = t2(() => {
            "use strict";
            Wo();
            Ap = {
                COMPONENT_ID: 1081,
                serialize(n, e) {
                    let r = U0.encode(n), l = new Uint8Array(r.finish(), 0, r.len);
                    e.writeBuffer(l, !1)
                },
                deserialize(n) {
                    return U0.decode(n.buffer(), n.remainingBytes())
                },
                create() {
                    return U0.decode(new Uint8Array)
                },
                jsonSchema: {
                    type: "object",
                    properties: {},
                    serializationType: "protocol-buffer",
                    protocolBuffer: "PBVisibilityComponent"
                }
            }
        });
        var Ip, Np, Rp, Mp, Op, Dp, Bp, Fp, Up, Lp, Ho, zp, Vo, Go, jo, qo, Yo, Jo, Wp, Hp, g7, z6, Xo, Ko, Zo, Qo, $o,
            W6, x7, b7, ni, E7, T7, S7, w7, v7, C7, ei, _7, Vp, li, W4 = t2(() => {
                "use strict";
                vf();
                _f();
                Af();
                Nf();
                Mf();
                Df();
                Ff();
                Hf();
                ed();
                rd();
                od();
                ad();
                cd();
                dd();
                md();
                gd();
                bd();
                Td();
                vd();
                _d();
                Ad();
                Id();
                Rd();
                Dd();
                Fd();
                Ld();
                Hd();
                jd();
                Jd();
                Qd();
                np();
                lp();
                rp();
                op();
                ap();
                cp();
                Sp();
                Cp();
                Pp();
                kp();
                $u();
                no();
                eo();
                lo();
                to();
                ro();
                uo();
                oo();
                co();
                fo();
                po();
                mo();
                ho();
                yo();
                go();
                xo();
                bo();
                Eo();
                To();
                So();
                wo();
                vo();
                Co();
                _o();
                Po();
                Ao();
                l7();
                ko();
                Io();
                No();
                Ro();
                Mo();
                Oo();
                Do();
                Bo();
                Fo();
                Uo();
                Lo();
                zo();
                Wo();
                Ip = n => n.defineComponentFromSchema("core::Animator", wf), Np = n => n.defineComponentFromSchema("core::AudioSource", Cf), Rp = n => n.defineComponentFromSchema("core::AudioStream", Pf), Mp = n => n.defineComponentFromSchema("core::AvatarAttach", If), Op = n => n.defineComponentFromSchema("core::AvatarBase", Rf), Dp = n => n.defineValueSetComponentFromSchema("core::AvatarEmoteCommand", Of, {
                    timestampFunction: e => e.timestamp,
                    maxElements: 100
                }), Bp = n => n.defineComponentFromSchema("core::AvatarEquippedData", Bf), Fp = n => n.defineComponentFromSchema("core::AvatarModifierArea", Wf), Up = n => n.defineComponentFromSchema("core::AvatarShape", nd), Lp = n => n.defineComponentFromSchema("core::Billboard", td), Ho = n => n.defineComponentFromSchema("core::CameraMode", ud), zp = n => n.defineComponentFromSchema("core::CameraModeArea", id), Vo = n => n.defineComponentFromSchema("core::EngineInfo", sd), Go = n => n.defineComponentFromSchema("core::GltfContainer", fd), jo = n => n.defineComponentFromSchema("core::GltfContainerLoadingState", pd), qo = n => n.defineComponentFromSchema("core::Material", yd), Yo = n => n.defineComponentFromSchema("core::MeshCollider", xd), Jo = n => n.defineComponentFromSchema("core::MeshRenderer", Ed), Wp = n => n.defineComponentFromSchema("core::NftShape", wd), Hp = n => n.defineComponentFromSchema("core::PlayerIdentityData", Cd), g7 = n => n.defineComponentFromSchema("core::PointerEvents", Pd), z6 = n => n.defineValueSetComponentFromSchema("core::PointerEventsResult", kd, {
                    timestampFunction: e => e.timestamp,
                    maxElements: 100
                }), Xo = n => n.defineComponentFromSchema("core::PointerLock", Nd), Ko = n => n.defineComponentFromSchema("core::Raycast", Od), Zo = n => n.defineComponentFromSchema("core::RaycastResult", Bd), Qo = n => n.defineComponentFromSchema("core::TextShape", Ud), $o = n => n.defineComponentFromSchema("core::Tween", Wd), W6 = n => n.defineComponentFromSchema("core::TweenSequence", Gd), x7 = n => n.defineComponentFromSchema("core::TweenState", Yd), b7 = n => n.defineComponentFromSchema("core::UiBackground", Zd), ni = n => n.defineComponentFromSchema("core::UiCanvasInformation", $d), E7 = n => n.defineComponentFromSchema("core::UiDropdown", ep), T7 = n => n.defineComponentFromSchema("core::UiDropdownResult", tp), S7 = n => n.defineComponentFromSchema("core::UiInput", up), w7 = n => n.defineComponentFromSchema("core::UiInputResult", ip), v7 = n => n.defineComponentFromSchema("core::UiText", sp), C7 = n => n.defineComponentFromSchema("core::UiTransform", Tp), ei = n => n.defineValueSetComponentFromSchema("core::VideoEvent", vp, {
                    timestampFunction: e => e.timestamp,
                    maxElements: 100
                }), _7 = n => n.defineComponentFromSchema("core::VideoPlayer", _p), Vp = n => n.defineComponentFromSchema("core::VisibilityComponent", Ap), li = {
                    "core::Animator": Ip,
                    "core::AudioSource": Np,
                    "core::AudioStream": Rp,
                    "core::AvatarAttach": Mp,
                    "core::AvatarBase": Op,
                    "core::AvatarEmoteCommand": Dp,
                    "core::AvatarEquippedData": Bp,
                    "core::AvatarModifierArea": Fp,
                    "core::AvatarShape": Up,
                    "core::Billboard": Lp,
                    "core::CameraMode": Ho,
                    "core::CameraModeArea": zp,
                    "core::EngineInfo": Vo,
                    "core::GltfContainer": Go,
                    "core::GltfContainerLoadingState": jo,
                    "core::Material": qo,
                    "core::MeshCollider": Yo,
                    "core::MeshRenderer": Jo,
                    "core::NftShape": Wp,
                    "core::PlayerIdentityData": Hp,
                    "core::PointerEvents": g7,
                    "core::PointerEventsResult": z6,
                    "core::PointerLock": Xo,
                    "core::Raycast": Ko,
                    "core::RaycastResult": Zo,
                    "core::TextShape": Qo,
                    "core::Tween": $o,
                    "core::TweenSequence": W6,
                    "core::TweenState": x7,
                    "core::UiBackground": b7,
                    "core::UiCanvasInformation": ni,
                    "core::UiDropdown": E7,
                    "core::UiDropdownResult": T7,
                    "core::UiInput": S7,
                    "core::UiInputResult": w7,
                    "core::UiText": v7,
                    "core::UiTransform": C7,
                    "core::VideoEvent": ei,
                    "core::VideoPlayer": _7,
                    "core::VisibilityComponent": Vp
                }
            });
        var Gp = t2(() => {
            "use strict";
            W4()
        });

        function jp(n) {
            let e = qo(n);
            return {
                ...e, Texture: RE, setBasicMaterial(r, l) {
                    e.createOrReplace(r, {material: {$case: "unlit", unlit: l}})
                }, setPbrMaterial(r, l) {
                    e.createOrReplace(r, {material: {$case: "pbr", pbr: l}})
                }
            }
        }

        var RE, qp = t2(() => {
            "use strict";
            W4();
            RE = {
                Common(n) {
                    return {tex: {$case: "texture", texture: n}}
                }, Avatar(n) {
                    return {tex: {$case: "avatarTexture", avatarTexture: n}}
                }, Video(n) {
                    return {tex: {$case: "videoTexture", videoTexture: n}}
                }
            }
        });

        function Yp(n) {
            let e = Yo(n);

            function r(l) {
                if (Array.isArray(l)) return l.map(i => i).reduce((i, o) => i | o, 0);
                if (l) return l
            }

            return {
                ...e, setBox(l, i) {
                    e.createOrReplace(l, {mesh: {$case: "box", box: {}}, collisionMask: r(i)})
                }, setPlane(l, i) {
                    e.createOrReplace(l, {mesh: {$case: "plane", plane: {}}, collisionMask: r(i)})
                }, setCylinder(l, i, o, f) {
                    e.createOrReplace(l, {
                        mesh: {$case: "cylinder", cylinder: {radiusBottom: i, radiusTop: o}},
                        collisionMask: r(f)
                    })
                }, setSphere(l, i) {
                    e.createOrReplace(l, {mesh: {$case: "sphere", sphere: {}}, collisionMask: r(i)})
                }
            }
        }

        var Jp = t2(() => {
            "use strict";
            W4()
        });

        function Xp(n) {
            let e = Jo(n);
            return {
                ...e, setBox(r, l) {
                    e.createOrReplace(r, {mesh: {$case: "box", box: {uvs: l || []}}})
                }, setPlane(r, l) {
                    e.createOrReplace(r, {mesh: {$case: "plane", plane: {uvs: l || []}}})
                }, setCylinder(r, l, i) {
                    e.createOrReplace(r, {mesh: {$case: "cylinder", cylinder: {radiusBottom: l, radiusTop: i}}})
                }, setSphere(r) {
                    e.createOrReplace(r, {mesh: {$case: "sphere", sphere: {}}})
                }
            }
        }

        var Kp = t2(() => {
            "use strict";
            W4()
        });

        function Zp(n) {
            return {...$o(n), Mode: ME}
        }

        var ME, Qp = t2(() => {
            "use strict";
            W4();
            ME = {
                Move(n) {
                    return {$case: "move", move: n}
                }, Rotate(n) {
                    return {$case: "rotate", rotate: n}
                }, Scale(n) {
                    return {$case: "scale", scale: n}
                }
            }
        });
        var P7, ti = t2(() => {
            "use strict";
            P7 = n => ({
                serialize(e, r) {
                    r.writeUint32(e.length);
                    for (let l of e) n.serialize(l, r)
                }, deserialize(e) {
                    let r = [], l = e.readUint32();
                    for (let i = 0; i < l; i++) r.push(n.deserialize(e));
                    return r
                }, create() {
                    return []
                }, jsonSchema: {type: "array", items: n.jsonSchema, serializationType: "array"}
            })
        });
        var H6, ri = t2(() => {
            "use strict";
            H6 = {
                serialize(n, e) {
                    e.writeInt8(n ? 1 : 0)
                }, deserialize(n) {
                    return n.readInt8() === 1
                }, create() {
                    return !1
                }, jsonSchema: {type: "boolean", serializationType: "boolean"}
            }
        });
        var V6, T1, G6, j6, A7 = t2(() => {
            "use strict";
            V6 = {
                serialize(n, e) {
                    e.writeInt64(BigInt(n))
                }, deserialize(n) {
                    return Number(n.readInt64())
                }, create() {
                    return 0
                }, jsonSchema: {type: "integer", serializationType: "int64"}
            }, T1 = {
                serialize(n, e) {
                    e.writeInt32(n)
                }, deserialize(n) {
                    return n.readInt32()
                }, create() {
                    return 0
                }, jsonSchema: {type: "integer", serializationType: "int32"}
            }, G6 = {
                serialize(n, e) {
                    e.writeInt16(n)
                }, deserialize(n) {
                    return n.readInt16()
                }, create() {
                    return 0
                }, jsonSchema: {type: "integer", serializationType: "int16"}
            }, j6 = {
                serialize(n, e) {
                    e.writeInt8(n)
                }, deserialize(n) {
                    return n.readInt8()
                }, create() {
                    return 0
                }, jsonSchema: {type: "integer", serializationType: "int8"}
            }
        });
        var k7, q6, I7 = t2(() => {
            "use strict";
            k7 = {
                serialize(n, e) {
                    e.writeUtf8String(n)
                }, deserialize(n) {
                    return n.readUtf8String()
                }, create() {
                    return ""
                }, jsonSchema: {type: "string", serializationType: "utf8-string"}
            }, q6 = k7
        });

        function OE(n) {
            let l = 0, i = 0;
            for (let o in n) {
                if (typeof n[o] == "number") {
                    if (n[o] > 2147483647 || n[o] < -2147483648) throw new Error("Enum member values must be numbers within the range of -2147483648 to 2147483647.");
                    l++
                }
                i++
            }
            if (i !== l * 2) throw new Error("All enum member values must be of numeric type.")
        }

        function DE(n) {
            for (let e in n) if (typeof n[e] != "string") throw new Error("All enum member values must be of string type.")
        }

        var BE, N7, FE, R7, ui = t2(() => {
            "use strict";
            A7();
            I7();
            BE = "enum-int", N7 = (n, e) => (OE(n), {
                serialize(r, l) {
                    T1.serialize(r, l)
                },
                deserialize(r) {
                    return T1.deserialize(r)
                },
                create() {
                    return e
                },
                jsonSchema: {
                    type: "integer",
                    enum: Object.values(n).filter(r => Number.isInteger(r)),
                    default: e,
                    serializationType: BE,
                    enumObject: n
                }
            }), FE = "enum-string", R7 = (n, e) => (DE(n), {
                serialize(r, l) {
                    k7.serialize(r, l)
                },
                deserialize(r) {
                    return k7.deserialize(r)
                },
                create() {
                    return e
                },
                jsonSchema: {type: "string", enum: Object.values(n), default: e, serializationType: FE, enumObject: n}
            })
        });
        var L0, Y6, oi = t2(() => {
            "use strict";
            L0 = {
                serialize(n, e) {
                    e.writeFloat32(n)
                }, deserialize(n) {
                    return n.readFloat32()
                }, create() {
                    return 0
                }, jsonSchema: {type: "number", serializationType: "float32"}
            }, Y6 = {
                serialize(n, e) {
                    e.writeFloat64(n)
                }, deserialize(n) {
                    return n.readFloat64()
                }, create() {
                    return 0
                }, jsonSchema: {type: "number", serializationType: "float64"}
            }
        });
        var J6, ii = t2(() => {
            "use strict";
            J6 = {
                serialize(n, e) {
                    e.writeFloat32(n.r), e.writeFloat32(n.g), e.writeFloat32(n.b)
                },
                deserialize(n) {
                    return {r: n.readFloat32(), g: n.readFloat32(), b: n.readFloat32()}
                },
                create() {
                    return {r: 0, g: 0, b: 0}
                },
                jsonSchema: {
                    type: "object",
                    properties: {r: {type: "number"}, g: {type: "number"}, b: {type: "number"}},
                    serializationType: "color3"
                }
            }
        });
        var X6, ai = t2(() => {
            "use strict";
            X6 = {
                serialize(n, e) {
                    e.writeFloat32(n.r), e.writeFloat32(n.g), e.writeFloat32(n.b), e.writeFloat32(n.a)
                },
                deserialize(n) {
                    return {r: n.readFloat32(), g: n.readFloat32(), b: n.readFloat32(), a: n.readFloat32()}
                },
                create() {
                    return {r: 0, g: 0, b: 0, a: 0}
                },
                jsonSchema: {
                    type: "object",
                    properties: {r: {type: "number"}, g: {type: "number"}, b: {type: "number"}, a: {type: "number"}},
                    serializationType: "color4"
                }
            }
        });
        var K6, si = t2(() => {
            "use strict";
            K6 = {
                serialize(n, e) {
                    e.writeInt32(n)
                }, deserialize(n) {
                    return n.readInt32()
                }, create() {
                    return 0
                }, jsonSchema: {type: "integer", serializationType: "entity"}
            }
        });
        var Z6, ci = t2(() => {
            "use strict";
            Z6 = {
                serialize(n, e) {
                    e.writeFloat32(n.x), e.writeFloat32(n.y), e.writeFloat32(n.z), e.writeFloat32(n.w)
                },
                deserialize(n) {
                    return {x: n.readFloat32(), y: n.readFloat32(), z: n.readFloat32(), w: n.readFloat32()}
                },
                create() {
                    return {x: 0, y: 0, z: 0, w: 0}
                },
                jsonSchema: {
                    type: "object",
                    properties: {x: {type: "number"}, y: {type: "number"}, z: {type: "number"}, w: {type: "number"}},
                    serializationType: "quaternion"
                }
            }
        });
        var Q6, fi = t2(() => {
            "use strict";
            Q6 = {
                serialize(n, e) {
                    e.writeFloat32(n.x), e.writeFloat32(n.y), e.writeFloat32(n.z)
                },
                deserialize(n) {
                    return {x: n.readFloat32(), y: n.readFloat32(), z: n.readFloat32()}
                },
                create() {
                    return {x: 0, y: 0, z: 0}
                },
                jsonSchema: {
                    type: "object",
                    properties: {x: {type: "number"}, y: {type: "number"}, z: {type: "number"}, w: {type: "number"}},
                    serializationType: "vector3"
                }
            }
        });
        var M7, di = t2(() => {
            "use strict";
            M7 = (n, e) => {
                let r = Object.keys(n).reduce((l, i) => (l[i] = n[i].jsonSchema, l), {});
                return {
                    serialize(l, i) {
                        for (let o in n) n[o].serialize(l[o], i)
                    }, deserialize(l) {
                        let i = {};
                        for (let o in n) i[o] = n[o].deserialize(l);
                        return i
                    }, create() {
                        let l = {};
                        for (let i in n) l[i] = n[i].create();
                        return {...l, ...e}
                    }, extend: l => {
                        let i = {};
                        for (let o in n) i[o] = n[o].create();
                        return {...i, ...e, ...l}
                    }, jsonSchema: {type: "object", properties: r, serializationType: "map"}
                }
            }
        });
        var O7, pi = t2(() => {
            "use strict";
            O7 = n => ({
                serialize(e, r) {
                    e ? (r.writeInt8(1), n.serialize(e, r)) : r.writeInt8(0)
                },
                deserialize(e) {
                    if (e.readInt8()) return n.deserialize(e)
                },
                create() {
                },
                jsonSchema: {type: n.jsonSchema.type, serializationType: "optional", optionalJsonSchema: n.jsonSchema}
            })
        });
        var D7, mi = t2(() => {
            "use strict";
            D7 = n => {
                let e = Object.keys(n), r = e.reduce((i, o, f) => (i[o] = f, i), {}),
                    l = e.reduce((i, o) => (i[o] = n[o].jsonSchema, i), {});
                return {
                    serialize({$case: i, value: o}, f) {
                        let s = r[i.toString()] + 1;
                        f.writeUint8(s), n[i].serialize(o, f)
                    }, deserialize(i) {
                        let o = e[i.readInt8() - 1], f = n[o].deserialize(i);
                        return {$case: o, value: f}
                    }, create() {
                        return {}
                    }, jsonSchema: {type: "object", properties: l, serializationType: "one-of"}
                }
            }
        });
        var $p, UE, LE, B7, hi, nm = t2(() => {
            "use strict";
            $p = (n, e) => e.includes(n.serializationType), UE = n => $p(n, ["one-of"]), LE = () => ({
                type: {
                    type: "object",
                    serializationType: "unknown"
                }, value: void 0
            }), B7 = n => $p(n, ["array", "map"]), hi = (n, e, r) => {
                let l = n[r], i = e[r];
                if (UE(l)) {
                    let o = i;
                    if (!o.$case) return LE();
                    let f = l.properties[o.$case];
                    return B7(f) && (e[r] = {[o.$case]: o.value}), {type: f, value: o.value}
                }
                return {type: l, value: i}
            }
        });

        function z0(n) {
            if (em[n.serializationType]) return em[n.serializationType];
            if (n.serializationType === "map") {
                let e = n, r = {};
                for (let l in e.properties) r[l] = z0(e.properties[l]);
                return M7(r)
            }
            if (n.serializationType === "optional") return O7(z0(n.optionalJsonSchema));
            if (n.serializationType === "array") return P7(z0(n.items));
            if (n.serializationType === "enum-int") {
                let e = n;
                return N7(e.enumObject, e.default)
            }
            if (n.serializationType === "enum-string") {
                let e = n;
                return R7(e.enumObject, e.default)
            }
            if (n.serializationType === "one-of") {
                let e = n, r = {};
                for (let l in e.properties) r[l] = z0(e.properties[l]);
                return D7(r)
            }
            throw new Error(`${n.serializationType} is not supported as reverse schema generation.`)
        }

        function F7(n, e, r) {
            if (n.serializationType === "map") {
                let {properties: l} = n, i = e;
                for (let o in l) {
                    let {type: f, value: s} = hi(l, i, o);
                    if (f.serializationType !== "unknown") if (B7(f)) F7(f, s, r); else {
                        let a = r(s, f);
                        a.changed && (i[o] = a.value)
                    }
                }
            } else if (n.serializationType === "array") {
                let {items: l} = n, i = e;
                for (let o = 0, f = i.length; o < f; o++) {
                    let {type: s, value: a} = hi({items: l}, {items: i[o]}, "items");
                    if (B7(s)) F7(s, a, r); else {
                        let g = r(a, s);
                        g.changed && (i[o] = g.value)
                    }
                }
            }
        }

        var em, lm = t2(() => {
            "use strict";
            ti();
            ri();
            ui();
            oi();
            A7();
            I7();
            ii();
            ai();
            si();
            ci();
            fi();
            di();
            mi();
            pi();
            nm();
            em = {
                [H6.jsonSchema.serializationType]: H6,
                [q6.jsonSchema.serializationType]: q6,
                [L0.jsonSchema.serializationType]: L0,
                [Y6.jsonSchema.serializationType]: Y6,
                [j6.jsonSchema.serializationType]: j6,
                [G6.jsonSchema.serializationType]: G6,
                [T1.jsonSchema.serializationType]: T1,
                [V6.jsonSchema.serializationType]: V6,
                [Q6.jsonSchema.serializationType]: Q6,
                [Z6.jsonSchema.serializationType]: Z6,
                [J6.jsonSchema.serializationType]: J6,
                [X6.jsonSchema.serializationType]: X6,
                [K6.jsonSchema.serializationType]: K6
            }
        });
        var b3, H4 = t2(() => {
            "use strict";
            ti();
            ri();
            ui();
            oi();
            A7();
            I7();
            ii();
            ai();
            si();
            ci();
            fi();
            di();
            pi();
            mi();
            lm();
            (function (n) {
                n.Boolean = H6, n.String = q6, n.Float = L0, n.Double = Y6, n.Byte = j6, n.Short = G6, n.Int = T1, n.Int64 = V6, n.Number = L0, n.Vector3 = Q6, n.Quaternion = Z6, n.Color3 = J6, n.Color4 = X6, n.Entity = K6, n.EnumNumber = N7, n.EnumString = R7, n.Array = P7, n.Map = M7, n.Optional = O7, n.OneOf = D7, n.fromJson = z0, n.mutateNestedValues = F7
            })(b3 || (b3 = {}))
        });

        function zE(n) {
            return n.defineComponent("core-schema::Name", {value: b3.String})
        }

        var tm, rm = t2(() => {
            "use strict";
            H4();
            tm = zE
        });

        function WE(n) {
            return n.defineComponent("core-schema::Sync-Components", {componentIds: b3.Array(b3.Int64)})
        }

        var um, om = t2(() => {
            "use strict";
            H4();
            um = WE
        });

        function HE(n) {
            return n.defineComponent("core-schema::Network-Entity", {networkId: b3.Int64, entityId: b3.Entity})
        }

        var im, am = t2(() => {
            "use strict";
            H4();
            im = HE
        });

        function VE(n) {
            return n.defineComponent("core-schema::Network-Parent", {networkId: b3.Int64, entityId: b3.Entity})
        }

        var sm, cm = t2(() => {
            "use strict";
            H4();
            sm = VE
        });

        function fm(n) {
            let e = n.defineComponentFromSchema("core::Transform", W0);
            return {
                ...e, create(r, l) {
                    return e.create(r, W0.extend(l))
                }, createOrReplace(r, l) {
                    return e.createOrReplace(r, W0.extend(l))
                }
            }
        }

        var W0, yi = t2(() => {
            "use strict";
            W0 = {
                serialize(n, e) {
                    let r = e.incrementWriteOffset(44);
                    e.setFloat32(r, n.position.x), e.setFloat32(r + 4, n.position.y), e.setFloat32(r + 8, n.position.z), e.setFloat32(r + 12, n.rotation.x), e.setFloat32(r + 16, n.rotation.y), e.setFloat32(r + 20, n.rotation.z), e.setFloat32(r + 24, n.rotation.w), e.setFloat32(r + 28, n.scale.x), e.setFloat32(r + 32, n.scale.y), e.setFloat32(r + 36, n.scale.z), e.setUint32(r + 40, n.parent || 0)
                },
                deserialize(n) {
                    let e = n.incrementReadOffset(44);
                    return {
                        position: {x: n.getFloat32(e), y: n.getFloat32(e + 4), z: n.getFloat32(e + 8)},
                        rotation: {
                            x: n.getFloat32(e + 12),
                            y: n.getFloat32(e + 16),
                            z: n.getFloat32(e + 20),
                            w: n.getFloat32(e + 24)
                        },
                        scale: {x: n.getFloat32(e + 28), y: n.getFloat32(e + 32), z: n.getFloat32(e + 36)},
                        parent: n.getUint32(e + 40)
                    }
                },
                create() {
                    return {
                        position: {x: 0, y: 0, z: 0},
                        scale: {x: 1, y: 1, z: 1},
                        rotation: {x: 0, y: 0, z: 0, w: 1},
                        parent: 0
                    }
                },
                extend(n) {
                    return {
                        position: {x: 0, y: 0, z: 0},
                        scale: {x: 1, y: 1, z: 1},
                        rotation: {x: 0, y: 0, z: 0, w: 1},
                        parent: 0, ...n
                    }
                },
                jsonSchema: {
                    type: "object",
                    properties: {
                        position: {
                            type: "object",
                            properties: {x: {type: "number"}, y: {type: "number"}, z: {type: "number"}}
                        },
                        scale: {
                            type: "object",
                            properties: {x: {type: "number"}, y: {type: "number"}, z: {type: "number"}}
                        },
                        rotation: {
                            type: "object",
                            properties: {
                                x: {type: "number"},
                                y: {type: "number"},
                                z: {type: "number"},
                                w: {type: "number"}
                            }
                        },
                        parent: {type: "integer"}
                    },
                    serializationType: "transform"
                }
            }
        });
        var V4, dm, pm, mm, U7, L7, hm, x5, H0, Kl = t2(() => {
            "use strict";
            Gp();
            qp();
            Jp();
            Kp();
            Qp();
            rm();
            om();
            am();
            cm();
            yi();
            W4();
            V4 = n => fm(n), dm = n => jp(n), pm = n => Xp(n), mm = n => Yp(n), U7 = n => Zp(n), L7 = n => tm(n), hm = n => um(n), x5 = n => im(n), H0 = n => sm(n)
        });
        var gi, ym = t2(() => {
            "use strict";
            gi = {
                "core::Transform": 1,
                "core::Animator": 1042,
                "core::AudioSource": 1020,
                "core::AudioStream": 1021,
                "core::AvatarAttach": 1073,
                "core::AvatarBase": 1087,
                "core::AvatarEmoteCommand": 1088,
                "core::AvatarEquippedData": 1091,
                "core::AvatarModifierArea": 1070,
                "core::AvatarShape": 1080,
                "core::Billboard": 1090,
                "core::CameraMode": 1072,
                "core::CameraModeArea": 1071,
                "core::EngineInfo": 1048,
                "core::GltfContainer": 1041,
                "core::GltfContainerLoadingState": 1049,
                "core::Material": 1017,
                "core::MeshCollider": 1019,
                "core::MeshRenderer": 1018,
                "core::NftShape": 1040,
                "core::PlayerIdentityData": 1089,
                "core::PointerEvents": 1062,
                "core::PointerEventsResult": 1063,
                "core::PointerLock": 1074,
                "core::Raycast": 1067,
                "core::RaycastResult": 1068,
                "core::TextShape": 1030,
                "core::Tween": 1102,
                "core::TweenSequence": 1104,
                "core::TweenState": 1103,
                "core::UiBackground": 1053,
                "core::UiCanvasInformation": 1054,
                "core::UiDropdown": 1094,
                "core::UiDropdownResult": 1096,
                "core::UiInput": 1093,
                "core::UiInputResult": 1095,
                "core::UiText": 1052,
                "core::UiTransform": 1050,
                "core::VideoEvent": 1044,
                "core::VideoPlayer": 1043,
                "core::VisibilityComponent": 1081
            }
        });

        function jE(n, e) {
            let r = ~~e ^ -1;
            for (let l = 0; l < n.length; l++) r = GE[(r ^ n[l]) & 255] ^ r >>> 8;
            return r ^ -1
        }

        function gm(n, e = 0) {
            return jE(n, e) >>> 0
        }

        var GE, xm = t2(() => {
            "use strict";
            GE = new Int32Array([0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918e3, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117])
        });

        function Pt(n) {
            if (gi[n]) return gi[n];
            let e = new Uint8Array(128);
            return bm.write(n, e, 0), (gm(e) + xi & 4294967295) >>> 0
        }

        var bm, xi, $6 = t2(() => {
            "use strict";
            ym();
            bm = _3(s9());
            xm();
            xi = 2048
        });

        function n8(n, e) {
            if (bi && n && typeof n == "object" && typeof n.then == "function") throw new Error(e);
            return n
        }

        var bi, z7 = t2(() => {
            "use strict";
            bi = typeof process == "object" && !1 || !1
        });

        function Em() {
            let n = new Map;
            return {
                addTo(e, r) {
                    if (r < 0) return !1;
                    let l = n.get(e);
                    return l !== void 0 && l >= r || n.set(e, r), !0
                }, has(e, r) {
                    let l = n.get(e);
                    return l !== void 0 && l >= r
                }, getMap() {
                    return n
                }
            }
        }

        var Tm = t2(() => {
            "use strict"
        });

        function wm(n) {
            let e = n?.reservedStaticEntities ?? Ei, r = e, l = new Set, i = [], o = Em();

            function f() {
                if (r > Sm - 1) throw new Error(`It fails trying to generate an entity out of range ${Sm}.`);
                let P = r++, D = o.getMap().has(P) ? o.getMap().get(P) + 1 : 0, T = At.toEntityId(P, D);
                return l.has(T) ? f() : (l.add(T), T)
            }

            function s() {
                if (l.size + e >= r) return f();
                for (let [D, T] of o.getMap()) if (T < b5) {
                    let k = At.toEntityId(D, T + 1);
                    if (!l.has(k) && !i.includes(k)) return l.add(k), k
                }
                return f()
            }

            function a(P) {
                return P < e ? !1 : (l.has(P) ? (l.delete(P), i.push(P)) : b(P), !0)
            }

            function g() {
                let P = i;
                if (P.length) {
                    i = [];
                    for (let D of P) {
                        let [T, k] = At.fromEntityId(D);
                        o.addTo(T, k)
                    }
                }
                return P
            }

            function b(P) {
                let [D, T] = At.fromEntityId(P);
                o.addTo(D, T);
                for (let k = 0; k <= T; k++) l.delete(At.toEntityId(D, k));
                return !0
            }

            function B(P) {
                let [D, T] = At.fromEntityId(P);
                if (o.has(D, T)) return !1;
                if (T > 0) {
                    for (let k = 0; k <= T - 1; k++) l.delete(At.toEntityId(D, k));
                    o.addTo(D, T - 1)
                }
                return l.add(P), !0
            }

            function w(P) {
                let [D, T] = At.fromEntityId(P);
                if (D < e) return ne.Reserved;
                if (l.has(P)) return ne.UsedEntity;
                let k = o.getMap().get(D);
                return k !== void 0 && k >= T ? ne.Removed : ne.Unknown
            }

            return {
                generateEntity: s, removeEntity: a, getExistingEntities() {
                    return new Set(l)
                }, getEntityState: w, releaseRemovedEntities: g, updateRemovedEntity: b, updateUsedEntity: B
            }
        }

        var b5, qE, rN, Sm, Ei, At, ne, E5 = t2(() => {
            "use strict";
            Tm();
            b5 = 65535, qE = 4294901760, rN = b5 + 1, Sm = b5, Ei = 512;
            (function (n) {
                function e(l) {
                    return [(l & b5) >>> 0, ((l & qE) >> 16 & b5) >>> 0]
                }

                n.fromEntityId = e;

                function r(l, i) {
                    return (l & b5 | (i & b5) << 16) >>> 0
                }

                n.toEntityId = r
            })(At || (At = {}));
            (function (n) {
                n[n.Unknown = 0] = "Unknown", n[n.UsedEntity = 1] = "UsedEntity", n[n.Removed = 2] = "Removed", n[n.Reserved = 3] = "Reserved"
            })(ne || (ne = {}))
        });

        function YE(n, e) {
            let r = Math.max(n, e) + 1024;
            return Math.ceil(r / 1024) * 1024
        }

        var V0, vn, xn, Ol, He, JE, kn, G4 = t2(() => {
            "use strict";
            V0 = _3(s9()), vn = function (n, e, r, l) {
                if (r === "a" && !l) throw new TypeError("Private accessor was defined without a getter");
                if (typeof e == "function" ? n !== e || !l : !e.has(n)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
                return r === "m" ? l : r === "a" ? l.call(n) : l ? l.value : e.get(n)
            };
            JE = 10240, kn = class {
                constructor(e, r, l) {
                    xn.add(this), this._buffer = e || new Uint8Array(JE), this.view = new DataView(this._buffer.buffer, this._buffer.byteOffset), this.woffset = l ?? (e ? this._buffer.length : null) ?? 0, this.roffset = r ?? 0
                }

                buffer() {
                    return this._buffer
                }

                bufferLength() {
                    return this._buffer.length
                }

                resetBuffer() {
                    this.roffset = 0, this.woffset = 0
                }

                currentReadOffset() {
                    return this.roffset
                }

                currentWriteOffset() {
                    return this.woffset
                }

                incrementReadOffset(e) {
                    return vn(this, xn, "m", He).call(this, e)
                }

                remainingBytes() {
                    return this.woffset - this.roffset
                }

                readFloat32() {
                    return this.view.getFloat32(vn(this, xn, "m", He).call(this, 4), !0)
                }

                readFloat64() {
                    return this.view.getFloat64(vn(this, xn, "m", He).call(this, 8), !0)
                }

                readInt8() {
                    return this.view.getInt8(vn(this, xn, "m", He).call(this, 1))
                }

                readInt16() {
                    return this.view.getInt16(vn(this, xn, "m", He).call(this, 2), !0)
                }

                readInt32() {
                    return this.view.getInt32(vn(this, xn, "m", He).call(this, 4), !0)
                }

                readInt64() {
                    return this.view.getBigInt64(vn(this, xn, "m", He).call(this, 8), !0)
                }

                readUint8() {
                    return this.view.getUint8(vn(this, xn, "m", He).call(this, 1))
                }

                readUint16() {
                    return this.view.getUint16(vn(this, xn, "m", He).call(this, 2), !0)
                }

                readUint32() {
                    return this.view.getUint32(vn(this, xn, "m", He).call(this, 4), !0)
                }

                readUint64() {
                    return this.view.getBigUint64(vn(this, xn, "m", He).call(this, 8), !0)
                }

                readBuffer() {
                    let e = this.view.getUint32(vn(this, xn, "m", He).call(this, 4), !0);
                    return this._buffer.subarray(vn(this, xn, "m", He).call(this, e), vn(this, xn, "m", He).call(this, 0))
                }

                readUtf8String() {
                    let e = this.view.getUint32(vn(this, xn, "m", He).call(this, 4), !0);
                    return V0.read(this._buffer, vn(this, xn, "m", He).call(this, e), vn(this, xn, "m", He).call(this, 0))
                }

                incrementWriteOffset(e) {
                    return vn(this, xn, "m", Ol).call(this, e)
                }

                toBinary() {
                    return this._buffer.subarray(0, this.woffset)
                }

                toCopiedBinary() {
                    return new Uint8Array(this.toBinary())
                }

                writeBuffer(e, r = !0) {
                    r && this.writeUint32(e.byteLength);
                    let l = vn(this, xn, "m", Ol).call(this, e.byteLength);
                    this._buffer.set(e, l)
                }

                writeUtf8String(e, r = !0) {
                    let l = V0.length(e);
                    r && this.writeUint32(l);
                    let i = vn(this, xn, "m", Ol).call(this, l);
                    V0.write(e, this._buffer, i)
                }

                writeFloat32(e) {
                    let r = vn(this, xn, "m", Ol).call(this, 4);
                    this.view.setFloat32(r, e, !0)
                }

                writeFloat64(e) {
                    let r = vn(this, xn, "m", Ol).call(this, 8);
                    this.view.setFloat64(r, e, !0)
                }

                writeInt8(e) {
                    let r = vn(this, xn, "m", Ol).call(this, 1);
                    this.view.setInt8(r, e)
                }

                writeInt16(e) {
                    let r = vn(this, xn, "m", Ol).call(this, 2);
                    this.view.setInt16(r, e, !0)
                }

                writeInt32(e) {
                    let r = vn(this, xn, "m", Ol).call(this, 4);
                    this.view.setInt32(r, e, !0)
                }

                writeInt64(e) {
                    let r = vn(this, xn, "m", Ol).call(this, 8);
                    this.view.setBigInt64(r, e, !0)
                }

                writeUint8(e) {
                    let r = vn(this, xn, "m", Ol).call(this, 1);
                    this.view.setUint8(r, e)
                }

                writeUint16(e) {
                    let r = vn(this, xn, "m", Ol).call(this, 2);
                    this.view.setUint16(r, e, !0)
                }

                writeUint32(e) {
                    let r = vn(this, xn, "m", Ol).call(this, 4);
                    this.view.setUint32(r, e, !0)
                }

                writeUint64(e) {
                    let r = vn(this, xn, "m", Ol).call(this, 8);
                    this.view.setBigUint64(r, e, !0)
                }

                getFloat32(e) {
                    return this.view.getFloat32(e, !0)
                }

                getFloat64(e) {
                    return this.view.getFloat64(e, !0)
                }

                getInt8(e) {
                    return this.view.getInt8(e)
                }

                getInt16(e) {
                    return this.view.getInt16(e, !0)
                }

                getInt32(e) {
                    return this.view.getInt32(e, !0)
                }

                getInt64(e) {
                    return this.view.getBigInt64(e, !0)
                }

                getUint8(e) {
                    return this.view.getUint8(e)
                }

                getUint16(e) {
                    return this.view.getUint16(e, !0)
                }

                getUint32(e) {
                    return this.view.getUint32(e, !0)
                }

                getUint64(e) {
                    return this.view.getBigUint64(e, !0)
                }

                setFloat32(e, r) {
                    this.view.setFloat32(e, r, !0)
                }

                setFloat64(e, r) {
                    this.view.setFloat64(e, r, !0)
                }

                setInt8(e, r) {
                    this.view.setInt8(e, r)
                }

                setInt16(e, r) {
                    this.view.setInt16(e, r, !0)
                }

                setInt32(e, r) {
                    this.view.setInt32(e, r, !0)
                }

                setInt64(e, r) {
                    this.view.setBigInt64(e, r, !0)
                }

                setUint8(e, r) {
                    this.view.setUint8(e, r)
                }

                setUint16(e, r) {
                    this.view.setUint16(e, r, !0)
                }

                setUint32(e, r) {
                    this.view.setUint32(e, r, !0)
                }

                setUint64(e, r) {
                    this.view.setBigUint64(e, r, !0)
                }
            };
            xn = new WeakSet, Ol = function (e) {
                if (this.woffset + e > this._buffer.byteLength) {
                    let r = YE(this._buffer.byteLength, this.woffset + e), l = new Uint8Array(r);
                    l.set(this._buffer);
                    let i = this._buffer.byteOffset;
                    this._buffer = l, this.view = new DataView(this._buffer.buffer, i)
                }
                return this.woffset += e, this.woffset - e
            }, He = function (e) {
                if (this.roffset + e > this.woffset) throw new Error("Outside of the bounds of writen data.");
                return this.roffset += e, this.roffset - e
            }
        });
        var e3, Re, Zl, kt = t2(() => {
            "use strict";
            (function (n) {
                n[n.RESERVED = 0] = "RESERVED", n[n.PUT_COMPONENT = 1] = "PUT_COMPONENT", n[n.DELETE_COMPONENT = 2] = "DELETE_COMPONENT", n[n.DELETE_ENTITY = 3] = "DELETE_ENTITY", n[n.APPEND_VALUE = 4] = "APPEND_VALUE", n[n.PUT_COMPONENT_NETWORK = 5] = "PUT_COMPONENT_NETWORK", n[n.DELETE_COMPONENT_NETWORK = 6] = "DELETE_COMPONENT_NETWORK", n[n.DELETE_ENTITY_NETWORK = 7] = "DELETE_ENTITY_NETWORK", n[n.MAX_MESSAGE_TYPE = 8] = "MAX_MESSAGE_TYPE"
            })(e3 || (e3 = {}));
            Re = 8;
            (function (n) {
                n[n.StateUpdatedTimestamp = 1] = "StateUpdatedTimestamp", n[n.StateOutdatedTimestamp = 2] = "StateOutdatedTimestamp", n[n.NoChanges = 3] = "NoChanges", n[n.StateOutdatedData = 4] = "StateOutdatedData", n[n.StateUpdatedData = 5] = "StateUpdatedData", n[n.EntityWasDeleted = 6] = "EntityWasDeleted", n[n.EntityDeleted = 7] = "EntityDeleted"
            })(Zl || (Zl = {}))
        });
        var we, j4 = t2(() => {
            "use strict";
            kt();
            (function (n) {
                function e(o) {
                    let f = o.remainingBytes();
                    if (f < Re) return !1;
                    let s = o.getUint32(o.currentReadOffset());
                    return !(f < s)
                }

                n.validate = e;

                function r(o) {
                    return e(o) ? {length: o.readUint32(), type: o.readUint32()} : null
                }

                n.readHeader = r;

                function l(o) {
                    if (!e(o)) return null;
                    let f = o.currentReadOffset();
                    return {length: o.getUint32(f), type: o.getUint32(f + 4)}
                }

                n.getHeader = l;

                function i(o) {
                    let f = l(o);
                    return f ? (o.incrementReadOffset(f.length), !0) : !1
                }

                n.consumeMessage = i
            })(we || (we = {}))
        });
        var q4, W7 = t2(() => {
            "use strict";
            j4();
            kt();
            (function (n) {
                n.MESSAGE_HEADER_LENGTH = 12;

                function e(l, i, o, f) {
                    let s = Re + n.MESSAGE_HEADER_LENGTH, a = f.incrementWriteOffset(s);
                    f.setUint32(a, s), f.setUint32(a + 4, e3.DELETE_COMPONENT), f.setUint32(a + 8, l), f.setUint32(a + 12, i), f.setUint32(a + 16, o)
                }

                n.write = e;

                function r(l) {
                    let i = we.readHeader(l);
                    if (!i) return null;
                    if (i.type !== e3.DELETE_COMPONENT) throw new Error("DeleteComponentOperation tried to read another message type.");
                    return {...i, entityId: l.readUint32(), componentId: l.readUint32(), timestamp: l.readUint32()}
                }

                n.read = r
            })(q4 || (q4 = {}))
        });
        var T5, vm = t2(() => {
            "use strict";
            j4();
            kt();
            (function (n) {
                n.MESSAGE_HEADER_LENGTH = 16;

                function e(l, i, o, f, s) {
                    let a = s.incrementWriteOffset(Re + n.MESSAGE_HEADER_LENGTH);
                    s.writeBuffer(f, !1);
                    let g = s.currentWriteOffset() - a;
                    s.setUint32(a, g), s.setUint32(a + 4, e3.APPEND_VALUE), s.setUint32(a + 8, l), s.setUint32(a + 12, o), s.setUint32(a + 16, i);
                    let b = g - n.MESSAGE_HEADER_LENGTH - Re;
                    s.setUint32(a + 20, b)
                }

                n.write = e;

                function r(l) {
                    let i = we.readHeader(l);
                    if (!i) return null;
                    if (i.type !== e3.APPEND_VALUE) throw new Error("AppendValueOperation tried to read another message type.");
                    return {
                        ...i,
                        entityId: l.readUint32(),
                        componentId: l.readUint32(),
                        timestamp: l.readUint32(),
                        data: l.readBuffer()
                    }
                }

                n.read = r
            })(T5 || (T5 = {}))
        });
        var S5, H7 = t2(() => {
            "use strict";
            j4();
            kt();
            (function (n) {
                n.MESSAGE_HEADER_LENGTH = 4;

                function e(l, i) {
                    i.writeUint32(Re + 4), i.writeUint32(e3.DELETE_ENTITY), i.writeUint32(l)
                }

                n.write = e;

                function r(l) {
                    let i = we.readHeader(l);
                    if (!i) return null;
                    if (i.type !== e3.DELETE_ENTITY) throw new Error("DeleteEntity tried to read another message type.");
                    return {...i, entityId: l.readUint32()}
                }

                n.read = r
            })(S5 || (S5 = {}))
        });
        var Ql, V7 = t2(() => {
            "use strict";
            j4();
            kt();
            (function (n) {
                n.MESSAGE_HEADER_LENGTH = 16;

                function e(l, i, o, f, s) {
                    let a = s.incrementWriteOffset(Re + n.MESSAGE_HEADER_LENGTH);
                    s.writeBuffer(f, !1);
                    let g = s.currentWriteOffset() - a;
                    s.setUint32(a, g), s.setUint32(a + 4, e3.PUT_COMPONENT), s.setUint32(a + 8, l), s.setUint32(a + 12, o), s.setUint32(a + 16, i);
                    let b = g - n.MESSAGE_HEADER_LENGTH - Re;
                    s.setUint32(a + 20, b)
                }

                n.write = e;

                function r(l) {
                    let i = we.readHeader(l);
                    if (!i) return null;
                    if (i.type !== e3.PUT_COMPONENT) throw new Error("PutComponentOperation tried to read another message type.");
                    return {
                        ...i,
                        entityId: l.readUint32(),
                        componentId: l.readUint32(),
                        timestamp: l.readUint32(),
                        data: l.readBuffer()
                    }
                }

                n.read = r
            })(Ql || (Ql = {}))
        });
        var S1, G7 = t2(() => {
            "use strict";
            j4();
            kt();
            (function (n) {
                n.MESSAGE_HEADER_LENGTH = 20;

                function e(l, i, o, f, s, a) {
                    let g = a.incrementWriteOffset(Re + n.MESSAGE_HEADER_LENGTH);
                    a.writeBuffer(s, !1);
                    let b = a.currentWriteOffset() - g;
                    a.setUint32(g, b), a.setUint32(g + 4, e3.PUT_COMPONENT_NETWORK), a.setUint32(g + 8, l), a.setUint32(g + 12, o), a.setUint32(g + 16, i), a.setUint32(g + 20, f);
                    let B = b - n.MESSAGE_HEADER_LENGTH - Re;
                    a.setUint32(g + 24, B)
                }

                n.write = e;

                function r(l) {
                    let i = we.readHeader(l);
                    if (!i) return null;
                    if (i.type !== e3.PUT_COMPONENT_NETWORK) throw new Error("PutComponentNetworkOperation tried to read another message type.");
                    return {
                        ...i,
                        entityId: l.readUint32(),
                        componentId: l.readUint32(),
                        timestamp: l.readUint32(),
                        networkId: l.readUint32(),
                        data: l.readBuffer()
                    }
                }

                n.read = r
            })(S1 || (S1 = {}))
        });
        var G0, Ti = t2(() => {
            "use strict";
            j4();
            kt();
            (function (n) {
                n.MESSAGE_HEADER_LENGTH = 16;

                function e(l, i, o, f, s) {
                    let a = Re + n.MESSAGE_HEADER_LENGTH, g = s.incrementWriteOffset(a);
                    s.setUint32(g, a), s.setUint32(g + 4, e3.DELETE_COMPONENT_NETWORK), s.setUint32(g + 8, l), s.setUint32(g + 12, i), s.setUint32(g + 16, o), s.setUint32(g + 20, f)
                }

                n.write = e;

                function r(l) {
                    let i = we.readHeader(l);
                    if (!i) return null;
                    if (i.type !== e3.DELETE_COMPONENT_NETWORK) throw new Error("DeleteComponentOperation tried to read another message type.");
                    return {
                        ...i,
                        entityId: l.readUint32(),
                        componentId: l.readUint32(),
                        timestamp: l.readUint32(),
                        networkId: l.readUint32()
                    }
                }

                n.read = r
            })(G0 || (G0 = {}))
        });
        var j0, Si = t2(() => {
            "use strict";
            j4();
            kt();
            (function (n) {
                n.MESSAGE_HEADER_LENGTH = 8;

                function e(l, i, o) {
                    o.writeUint32(Re + 4), o.writeUint32(e3.DELETE_ENTITY_NETWORK), o.writeUint32(l), o.writeUint32(i)
                }

                n.write = e;

                function r(l) {
                    let i = we.readHeader(l);
                    if (!i) return null;
                    if (i.type !== e3.DELETE_ENTITY_NETWORK) throw new Error("DeleteEntityNetwork tried to read another message type.");
                    return {...i, entityId: l.readUint32(), networkId: l.readUint32()}
                }

                n.read = r
            })(j0 || (j0 = {}))
        });
        var q0 = t2(() => {
            "use strict";
            W7();
            vm();
            H7();
            V7();
            G7();
            Ti();
            Si();
            kt();
            j4()
        });

        function j7(n) {
            return [e3.DELETE_COMPONENT_NETWORK, e3.DELETE_ENTITY_NETWORK, e3.PUT_COMPONENT_NETWORK].includes(n.type)
        }

        function Cm(n, e, r, l) {
            let i = r.currentWriteOffset();
            n.type === e3.PUT_COMPONENT_NETWORK ? Ql.write(e, n.timestamp, n.componentId, n.data, r) : n.type === e3.DELETE_COMPONENT_NETWORK ? q4.write(e, n.componentId, n.timestamp, r) : n.type === e3.DELETE_ENTITY_NETWORK && S5.write(e, r), l.writeBuffer(r.buffer().subarray(i, r.currentWriteOffset()), !1)
        }

        function _m(n, e, r, l) {
            let i = r.currentWriteOffset();
            n.type === e3.PUT_COMPONENT ? S1.write(e.entityId, n.timestamp, n.componentId, e.networkId, n.data, r) : n.type === e3.DELETE_COMPONENT ? G0.write(e.entityId, n.componentId, n.timestamp, e.networkId, r) : n.type === e3.DELETE_ENTITY && j0.write(e.entityId, e.networkId, r), l.writeBuffer(r.buffer().subarray(i, r.currentWriteOffset()), !1)
        }

        function q7(n, e, r) {
            let l = e, i = new kn;
            if (!l && "data" in n && (i.writeBuffer(n.data), l = W0.deserialize(i), i.resetBuffer()), !l) throw new Error("Invalid parent transform");
            let o = {...l, parent: r};
            return i.resetBuffer(), W0.serialize(o, i), i.toBinary()
        }

        var Pm = t2(() => {
            "use strict";
            G4();
            V7();
            kt();
            W7();
            H7();
            G7();
            Ti();
            Si();
            yi()
        });

        function Am(n, e) {
            let r = [], l = x5(n), i = H0(n), o = V4(n), f = [], s = [];

            function a(D) {
                return function (k) {
                    let R = new kn(k), G;
                    for (; G = we.getHeader(R);) {
                        let Z = R.currentReadOffset(), S2;
                        G.type === e3.DELETE_COMPONENT ? S2 = q4.read(R) : G.type === e3.DELETE_COMPONENT_NETWORK ? S2 = G0.read(R) : G.type === e3.PUT_COMPONENT ? S2 = Ql.read(R) : G.type === e3.PUT_COMPONENT_NETWORK ? S2 = S1.read(R) : G.type === e3.DELETE_ENTITY ? S2 = S5.read(R) : G.type === e3.DELETE_ENTITY_NETWORK ? S2 = j0.read(R) : G.type === e3.APPEND_VALUE ? S2 = T5.read(R) : R.incrementReadOffset(G.length), S2 && f.push({
                            ...S2,
                            transportId: D,
                            messageBuffer: R.buffer().subarray(Z, R.currentReadOffset())
                        })
                    }
                }
            }

            function g(D) {
                return D.splice(0, D.length)
            }

            function b(D) {
                if ("networkId" in D) {
                    for (let [k, R] of n.getEntitiesWith(l)) if (R.networkId === D.networkId && R.entityId === D.entityId) return {
                        entityId: k,
                        network: R
                    }
                }
                return {entityId: D.entityId}
            }

            async function B() {
                let D = g(f), T = [];
                for (let k of D) {
                    let {entityId: R, network: G} = b(k);
                    if (j7(k) && !G && (R = n.addEntity(), G = {
                        entityId: k.entityId,
                        networkId: k.networkId
                    }, l.createOrReplace(R, G)), k.type === e3.DELETE_ENTITY || k.type === e3.DELETE_ENTITY_NETWORK) T.push(R), s.push(k); else {
                        let Z = n.entityContainer.getEntityState(R);
                        if (Z === ne.Removed) continue;
                        Z === ne.Unknown && n.entityContainer.updateUsedEntity(R);
                        let S2 = n.getComponentOrNull(k.componentId);
                        if (S2) {
                            k.type === e3.PUT_COMPONENT && S2.componentId === o.componentId && l.has(R) && i.has(R) && (k.data = q7(k));
                            let [D2, T2] = S2.updateFromCrdt({...k, entityId: R});
                            D2 || (s.push(k), e && e(R, k.type, S2, T2))
                        } else s.push(k)
                    }
                }
                for (let k of T) {
                    for (let R of n.componentsIter()) R.entityDeleted(k, !0);
                    n.entityContainer.updateRemovedEntity(k), e && e(k, e3.DELETE_ENTITY)
                }
            }

            async function w(D) {
                let T = g(s), k = new kn;
                for (let G of n.componentsIter()) for (let Z of G.getCrdtUpdates()) {
                    let S2 = k.currentWriteOffset();
                    if (r.some(D2 => D2.filter(Z)) && (Z.type === e3.PUT_COMPONENT ? Ql.write(Z.entityId, Z.timestamp, Z.componentId, Z.data, k) : Z.type === e3.DELETE_COMPONENT ? q4.write(Z.entityId, G.componentId, Z.timestamp, k) : Z.type === e3.APPEND_VALUE && T5.write(Z.entityId, Z.timestamp, Z.componentId, Z.data, k), T.push({
                        ...Z,
                        messageBuffer: k.buffer().subarray(S2, k.currentWriteOffset())
                    }), e)) {
                        let D2 = Z.type === e3.PUT_COMPONENT || Z.type === e3.APPEND_VALUE ? G.get(Z.entityId) : void 0;
                        e(Z.entityId, Z.type, G, D2)
                    }
                }
                for (let G of D) {
                    let Z = k.currentWriteOffset();
                    S5.write(G, k), T.push({
                        type: e3.DELETE_ENTITY,
                        entityId: G,
                        messageBuffer: k.buffer().subarray(Z, k.currentWriteOffset())
                    }), e && e(G, e3.DELETE_ENTITY)
                }
                let R = new kn;
                for (let G in r) {
                    let Z = Number(G), S2 = r[Z], D2 = S2.type === "renderer", T2 = S2.type === "network";
                    R.resetBuffer();
                    let l2 = new kn;
                    for (let g2 of T) {
                        if (g2.transportId === Z || !S2.filter(g2)) continue;
                        let {entityId: p2} = b(g2),
                            O = "componentId" in g2 && g2.componentId === o.componentId && o.has(p2) && i.has(p2) && l.has(p2);
                        if (D2 && g2.type === e3.PUT_COMPONENT && O) {
                            let J = b(i.get(p2)), h2 = q7(g2, o.get(p2), J.entityId), y2 = l2.currentWriteOffset();
                            Ql.write(p2, g2.timestamp, g2.componentId, h2, l2), R.writeBuffer(l2.buffer().subarray(y2, l2.currentWriteOffset()), !1);
                            continue
                        }
                        if (D2 && j7(g2)) {
                            let J = "data" in g2 ? g2.data : new Uint8Array;
                            if (O) {
                                let h2 = b(i.get(p2));
                                J = q7(g2, o.get(p2), h2.entityId)
                            }
                            Cm({...g2, data: J}, p2, l2, R);
                            continue
                        }
                        if (T2 && !j7(g2)) {
                            let J = l.getOrNull(g2.entityId);
                            if (J) {
                                _m(g2, J, l2, R);
                                continue
                            }
                        }
                        R.writeBuffer(g2.messageBuffer, !1)
                    }
                    let b2 = R.currentWriteOffset() ? R.toBinary() : new Uint8Array([]);
                    await S2.send(b2)
                }
            }

            function P(D) {
                let T = r.push(D) - 1;
                D.onmessage = a(T)
            }

            return {sendMessages: w, receiveMessages: B, addTransport: P}
        }

        var km = t2(() => {
            "use strict";
            E5();
            G4();
            q0();
            W7();
            H7();
            V7();
            kt();
            G7();
            Kl();
            Pm()
        });

        function e8(n, e) {
            if (n === e) return 0;
            if (n === null && e !== null) return -1;
            if (n !== null && e === null) return 1;
            if (n instanceof Uint8Array && e instanceof Uint8Array) {
                let r = n.byteLength - e.byteLength;
                if (r !== 0) return r > 0 ? 1 : -1;
                let l;
                for (let i = 0, o = n.byteLength; i < o; i++) if (l = n[i] - e[i], l !== 0) return l > 0 ? 1 : -1;
                return 0
            }
            if (typeof n == "string") {
                let r = n.length - e.length;
                return r !== 0 ? r > 0 ? 1 : -1 : n.localeCompare(e)
            }
            return n > e ? 1 : -1
        }

        var Im, wi = t2(() => {
            "use strict";
            (function (n) {
                let e;
                (function (r) {
                    r[r.NETWORKED = 0] = "NETWORKED", r[r.RENDERER = 1] = "RENDERER"
                })(e = n.SynchronizedEntityType || (n.SynchronizedEntityType = {}))
            })(Im || (Im = {}))
        });

        function vi(n) {
            return Object.freeze({...n})
        }

        var Ci = t2(() => {
            "use strict"
        });

        function KE(n, e) {
            let r = (e.get(n) || 0) + 1;
            return e.set(n, r), r
        }

        function ZE(n, e, r, l) {
            return function (o, f) {
                for (let [s, a] of e) if (!(f && !f(s))) if (l.has(s)) {
                    let g = l.get(s), b = new kn;
                    r.serialize(g, b), Ql.write(s, a, n, b.toBinary(), o)
                } else q4.write(s, n, a, o)
            }
        }

        function QE(n, e, r, l) {
            function i(o) {
                let {entityId: f, timestamp: s} = o, a = e.get(f);
                if (a === void 0 || a < s) return Zl.StateUpdatedTimestamp;
                if (a > s) return Zl.StateOutdatedTimestamp;
                if (o.type === e3.DELETE_COMPONENT && !l.has(f)) return Zl.NoChanges;
                let g = 0;
                if (l.has(f)) {
                    let b = new kn;
                    r.serialize(l.get(f), b), g = e8(b.toBinary(), o.data || null)
                } else g = e8(null, o.data);
                return g === 0 ? Zl.NoChanges : g > 0 ? Zl.StateOutdatedData : Zl.StateUpdatedData
            }

            return o => {
                if (o.type !== e3.PUT_COMPONENT && o.type !== e3.PUT_COMPONENT_NETWORK && o.type !== e3.DELETE_COMPONENT && o.type !== e3.DELETE_COMPONENT_NETWORK) return [null, l.get(o.entityId)];
                let f = i(o), s = o.entityId;
                switch (f) {
                    case Zl.StateUpdatedData:
                    case Zl.StateUpdatedTimestamp: {
                        if (e.set(s, o.timestamp), o.type === e3.PUT_COMPONENT || o.type === e3.PUT_COMPONENT_NETWORK) {
                            let a = new kn(o.data);
                            l.set(s, r.deserialize(a))
                        } else l.delete(s);
                        return [null, l.get(s)]
                    }
                    case Zl.StateOutdatedTimestamp:
                    case Zl.StateOutdatedData:
                        if (l.has(s)) {
                            let a = new kn;
                            return r.serialize(l.get(s), a), [{
                                type: e3.PUT_COMPONENT,
                                componentId: n,
                                data: a.toBinary(),
                                entityId: s,
                                timestamp: e.get(s)
                            }, l.get(s)]
                        } else return [{
                            type: e3.DELETE_COMPONENT,
                            componentId: n,
                            entityId: s,
                            timestamp: e.get(s)
                        }, void 0]
                }
                return [null, l.get(s)]
            }
        }

        function $E(n, e, r, l, i) {
            return function* () {
                for (let o of r) {
                    let f = KE(o, e);
                    if (i.has(o)) {
                        let s = new kn;
                        l.serialize(i.get(o), s), yield{
                            type: e3.PUT_COMPONENT,
                            componentId: n,
                            entityId: o,
                            data: s.toBinary(),
                            timestamp: f
                        }
                    } else yield{type: e3.DELETE_COMPONENT, componentId: n, entityId: o, timestamp: f}
                }
                r.clear()
            }
        }

        function _i(n, e, r) {
            let l = new Map, i = new Set, o = new Map, f = new Map;
            return {
                get componentId() {
                    return e
                },
                get componentName() {
                    return n
                },
                get componentType() {
                    return 0
                },
                schema: r,
                has(s) {
                    return l.has(s)
                },
                deleteFrom(s, a = !0) {
                    let g = l.get(s);
                    return l.delete(s) && a && i.add(s), g || null
                },
                entityDeleted(s, a) {
                    l.delete(s) && a && i.add(s)
                },
                getOrNull(s) {
                    let a = l.get(s);
                    return a ? vi(a) : null
                },
                get(s) {
                    let a = l.get(s);
                    if (!a) throw new Error(`[getFrom] Component ${n} for entity #${s} not found`);
                    return vi(a)
                },
                create(s, a) {
                    if (l.get(s)) throw new Error(`[create] Component ${n} for ${s} already exists`);
                    let b = a === void 0 ? r.create() : r.extend ? r.extend(a) : a;
                    return l.set(s, b), i.add(s), b
                },
                createOrReplace(s, a) {
                    let g = a === void 0 ? r.create() : r.extend ? r.extend(a) : a;
                    return l.set(s, g), i.add(s), g
                },
                getMutableOrNull(s) {
                    let a = l.get(s);
                    return a ? (i.add(s), a) : null
                },
                getOrCreateMutable(s, a) {
                    let g = l.get(s);
                    return g ? (i.add(s), g) : this.create(s, a)
                },
                getMutable(s) {
                    let a = this.getMutableOrNull(s);
                    if (a === null) throw new Error(`[mutable] Component ${n} for ${s} not found`);
                    return a
                },
                * iterator() {
                    for (let [s, a] of l) yield[s, a]
                },
                * dirtyIterator() {
                    for (let s of i) yield s
                },
                getCrdtUpdates: $E(e, o, i, r, l),
                updateFromCrdt: QE(e, o, r, l),
                dumpCrdtStateToBuffer: ZE(e, o, r, l),
                onChange(s, a) {
                    f.set(s, a)
                },
                __onChangeCallbacks(s) {
                    return f.get(s)
                }
            }
        }

        var Nm = t2(() => {
            "use strict";
            G4();
            q0();
            wi();
            Ci()
        });

        function Rm() {
            let n = [];

            function e() {
                n.sort((i, o) => o.priority - i.priority)
            }

            function r(i, o, f) {
                let s = f ?? i.name;
                if (n.find(a => a.fn === i)) throw new Error(`System ${JSON.stringify(s)} already added to the engine`);
                n.push({fn: i, priority: o, name: s}), e()
            }

            function l(i) {
                let o = -1;
                return typeof i == "string" ? o = n.findIndex(f => f.name === i) : o = n.findIndex(f => f.fn === i), o === -1 ? !1 : (n.splice(o, 1), e(), !0)
            }

            return {
                add: r, remove: l, getSystems() {
                    return n
                }
            }
        }

        var Mm = t2(() => {
            "use strict"
        });

        function Om() {
            throw new Error("The set is frozen")
        }

        function Dm(n) {
            return n.add = Om, n.clear = Om, n
        }

        function nT(n, e) {
            return n.timestamp > e.timestamp ? 1 : -1
        }

        function Bm(n, e, r, l) {
            let i = new Map, o = new Set, f = [], s = new Map;

            function a(w) {
                let P = w.raw.length;
                return P > 1 && w.raw[P - 1].timestamp <= w.raw[P - 2].timestamp
            }

            function g(w) {
                let P = i.get(w);
                if (P) {
                    for (a(P) && P.raw.sort(nT); P.raw.length > l.maxElements;) P.raw.shift();
                    let D = Dm(new Set(P?.raw.map(T => T.value)));
                    return P.frozenSet = D, D
                } else return Pi
            }

            function b(w, P) {
                let D = i.get(w);
                D || (D = {raw: [], frozenSet: Pi}, i.set(w, D));
                let T = r.extend ? r.extend(P) : P, k = l.timestampFunction(T);
                return bi && Object.freeze(T), D.raw.push({value: T, timestamp: k}), {set: g(w), value: T}
            }

            return {
                get componentId() {
                    return e
                }, get componentName() {
                    return n
                }, get componentType() {
                    return 1
                }, schema: r, has(w) {
                    return i.has(w)
                }, entityDeleted(w) {
                    i.delete(w)
                }, get(w) {
                    let P = i.get(w);
                    return P ? P.frozenSet : Pi
                }, addValue(w, P) {
                    let {set: D, value: T} = b(w, P);
                    o.add(w);
                    let k = new kn;
                    return r.serialize(T, k), f.push({
                        componentId: e,
                        data: k.toBinary(),
                        entityId: w,
                        timestamp: 0,
                        type: e3.APPEND_VALUE
                    }), D
                }, * iterator() {
                    for (let [w, P] of i) yield[w, P.frozenSet]
                }, * dirtyIterator() {
                    for (let w of o) yield w
                }, getCrdtUpdates() {
                    return o.clear(), f.splice(0, f.length)
                }, updateFromCrdt(w) {
                    if (w.type === e3.APPEND_VALUE) {
                        let P = new kn(w.data), {value: D} = b(w.entityId, r.deserialize(P));
                        return [null, D]
                    }
                    return [null, void 0]
                }, dumpCrdtStateToBuffer: function (w, P) {
                    for (let [D, {raw: T}] of i) if (!(P && !P(D))) for (let k of T) {
                        let R = new kn;
                        r.serialize(k.value, R), T5.write(D, 0, e, R.toBinary(), w)
                    }
                }, onChange(w, P) {
                    s.set(w, P)
                }, __onChangeCallbacks(w) {
                    return s.get(w)
                }
            }
        }

        var Pi, Fm = t2(() => {
            "use strict";
            G4();
            q0();
            z7();
            Pi = Dm(new Set)
        });

        function* Um(n, e) {
            if (e.has(n)) {
                e.delete(n);
                for (let [r, l] of e) l.parent === n && (yield* Um(r, e));
                yield n
            }
        }

        function eT(n, e, r) {
            let l = new Map(n.getEntitiesWith(r));
            return Um(e, l)
        }

        function Lm(n, e) {
            let r = H0(n), l = x5(n);
            n.removeEntity(e);
            let i = l.getOrNull(e);
            if (i) for (let [o, f] of n.getEntitiesWith(r)) f.entityId === i.entityId && f.networkId === i.networkId && Lm(n, o)
        }

        function zm(n, e) {
            let r = V4(n);
            if (x5(n).has(e)) return Lm(n, e);
            for (let i of eT(n, e, r)) n.removeEntity(i)
        }

        var Ai = t2(() => {
            "use strict";
            Kl()
        });

        function Hm(n) {
            let e = z6(n), r = {
                previousFrameMaxTimestamp: 0,
                currentFrameMaxTimestamp: 0,
                buttonState: new Map,
                thisFrameCommands: []
            };

            function l(T, k, R) {
                let G = e.get(R);
                for (let Z of Array.from(G).reverse()) if (Z.button === k && Z.state === T) return Z
            }

            function* i(T, k) {
                let R = e.get(k);
                for (let G of Array.from(R).reverse()) G.button === T && (yield G)
            }

            function o() {
                let T = r.currentFrameMaxTimestamp;
                r.previousFrameMaxTimestamp = T, r.thisFrameCommands.length && (r.thisFrameCommands = []);
                for (let [, k] of n.getEntitiesWith(e)) {
                    let R = Array.from(k);
                    for (let G = R.length - 1; G >= 0; G--) {
                        let Z = R[G];
                        if (Z.timestamp > T && (T = Z.timestamp), Z.timestamp > r.previousFrameMaxTimestamp && r.thisFrameCommands.push(Z), Z.state === 0 || Z.state === 1) {
                            let S2 = r.buttonState.get(Z.button);
                            if (!S2 || Z.timestamp > S2.timestamp) r.buttonState.set(Z.button, Z); else break
                        }
                    }
                }
                r.currentFrameMaxTimestamp = T
            }

            n.addSystem(o, lT, "@dcl/ecs#inputSystem");

            function f(T) {
                return T > r.previousFrameMaxTimestamp && T <= r.currentFrameMaxTimestamp
            }

            function s(T, k) {
                if (T !== 3) return a(T, k);
                for (let R of Wm) {
                    let G = a(R, k);
                    if (G) return G
                }
                return null
            }

            function a(T, k) {
                let R = null, G = null;
                for (let Z of i(T, k)) if (G) {
                    if (!R && Z.state === 1) {
                        R = Z;
                        break
                    }
                } else if (Z.state === 0) {
                    G = Z;
                    continue
                }
                return !G || !R ? null : R.timestamp < G.timestamp && f(G.timestamp) ? {up: G, down: R} : null
            }

            function g(T, k, R) {
                if (T !== 3) return B(T, k, R);
                for (let G of Wm) {
                    let Z = B(G, k, R);
                    if (Z) return Z
                }
                return null
            }

            function b(T, k, R) {
                if (R) return g(T, k, R);
                for (let G of r.thisFrameCommands) if ((G.button === T || T === 3) && G.state === k) return G;
                return null
            }

            function B(T, k, R) {
                let G = l(k, T, R);
                return G && f(G.timestamp) ? G : null
            }

            function w(T, k) {
                return s(T, k) !== null
            }

            function P(T, k, R) {
                if (R) {
                    let G = l(k, T, R);
                    return G && f(G.timestamp) || !1
                } else {
                    for (let G of r.thisFrameCommands) if ((G.button === T || T === 3) && G.state === k) return !0;
                    return !1
                }
            }

            function D(T) {
                return r.buttonState.get(T)?.state === 1
            }

            return {isPressed: D, getClick: s, getInputCommand: b, isClicked: w, isTriggered: P}
        }

        var Wm, lT, ki = t2(() => {
            "use strict";
            Kl();
            Wm = [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], lT = 1 << 20
        });
        var Vm, Ii = t2(() => {
            "use strict";
            (function (n) {
                n[n.LastWriteWinElementSet = 0] = "LastWriteWinElementSet", n[n.GrowOnlyValueSet = 1] = "GrowOnlyValueSet"
            })(Vm || (Vm = {}))
        });
        var Gm = t2(() => {
            "use strict";
            Ii()
        });

        function rT(n) {
            let e = n?.entityContainer ?? wm(), r = new Map, l = Rm(), i = !1;

            function o(l2, b2 = 1e5, g2) {
                l.add(l2, b2, g2)
            }

            function f(l2) {
                return l.remove(l2)
            }

            function s() {
                return e.generateEntity()
            }

            function a(l2) {
                for (let [, b2] of r) b2.componentName !== "core-schema::Network-Entity" && b2.entityDeleted(l2, !0);
                return e.removeEntity(l2)
            }

            function g(l2) {
                return zm({removeEntity: a, defineComponentFromSchema: B, getEntitiesWith: k, defineComponent: P}, l2)
            }

            function b(l2, b2) {
                if (i) throw new Error("Engine is already sealed. No components can be added at this stage");
                let g2 = Pt(l2);
                if (r.get(g2)) throw new Error(`Component number ${g2} was already registered.`);
                if (b2.componentName !== l2) throw new Error(`Component name doesn't match componentDefinition.componentName ${l2} != ${b2.componentName}`);
                if (b2.componentId !== g2) throw new Error(`Component number doesn't match componentDefinition.componentId ${g2} != ${b2.componentId}`);
                return r.set(g2, b2), b2
            }

            function B(l2, b2) {
                let g2 = Pt(l2), p2 = r.get(g2);
                if (p2) return p2;
                if (i) throw new Error("Engine is already sealed. No components can be added at this stage");
                let O = _i(l2, g2, b2);
                return r.set(g2, O), O
            }

            function w(l2, b2, g2) {
                let p2 = Pt(l2), O = r.get(p2);
                if (O) return O;
                if (i) throw new Error("Engine is already sealed. No components can be added at this stage");
                let J = Bm(l2, p2, b2, g2);
                return r.set(p2, J), J
            }

            function P(l2, b2, g2) {
                let p2 = Pt(l2), O = r.get(p2);
                if (O) return O;
                if (i) throw new Error("Engine is already sealed. No components can be added at this stage");
                let J = b3.Map(b2, g2), h2 = _i(l2, p2, J), y2 = {
                    ...h2, create(k2, Z2) {
                        return h2.create(k2, Z2)
                    }, createOrReplace(k2, Z2) {
                        return h2.createOrReplace(k2, Z2)
                    }
                };
                return r.set(p2, y2), y2
            }

            function D(l2) {
                let b2 = typeof l2 == "number" ? l2 : Pt(l2), g2 = r.get(b2);
                if (!g2) throw new Error(`Component ${l2} not found. You need to declare the components at the beginnig of the engine declaration`);
                return g2
            }

            function T(l2) {
                let b2 = typeof l2 == "number" ? l2 : Pt(l2);
                return r.get(b2) ?? null
            }

            function* k(...l2) {
                for (let [b2, ...g2] of G(...l2)) yield[b2, ...g2.map(p2 => p2.get(b2))]
            }

            function R(l2) {
                let b2 = L7({defineComponent: P});
                for (let [g2, p2] of k(b2)) if (p2.value === l2) return g2;
                return null
            }

            function* G(...l2) {
                let [b2, ...g2] = l2;
                for (let [p2] of b2.iterator()) {
                    let O = !0;
                    for (let J of g2) if (!J.has(p2)) {
                        O = !1;
                        break
                    }
                    O && (yield[p2, ...l2])
                }
            }

            function Z() {
                return l.getSystems()
            }

            function S2() {
                return r.values()
            }

            function D2(l2) {
                if (i) throw new Error("Engine is already sealed. No components can be removed at this stage");
                let b2 = typeof l2 == "number" ? l2 : Pt(l2);
                r.delete(b2)
            }

            V4({defineComponentFromSchema: B});

            function T2() {
                i || (i = !0)
            }

            return {
                addEntity: s,
                removeEntity: a,
                removeEntityWithChildren: g,
                addSystem: o,
                getSystems: Z,
                removeSystem: f,
                defineComponent: P,
                defineComponentFromSchema: B,
                defineValueSetComponentFromSchema: w,
                getEntitiesWith: k,
                getComponent: D,
                getComponentOrNull: T,
                getEntityOrNullByName: R,
                removeComponentDefinition: D2,
                registerComponentDefinition: b,
                entityContainer: e,
                componentsIter: S2,
                seal: T2
            }
        }

        function jm(n) {
            let e = rT(n), l = Am(e, (o, f, s, a) => {
                if (f === e3.DELETE_ENTITY) for (let g of e.componentsIter()) {
                    let b = g?.__onChangeCallbacks(o);
                    b && b(void 0)
                } else {
                    let g = s?.__onChangeCallbacks(o);
                    g && g(a)
                }
                return n?.onChangeFunction(o, f, s, a)
            });

            async function i(o) {
                await l.receiveMessages();
                for (let s of e.getSystems()) {
                    let a = s.fn(o);
                    n8(a, `A system (${s.name || "anonymous"}) returned a thenable. Systems cannot be async functions. Documentation: https://dcl.gg/sdk/sync-systems`)
                }
                let f = e.entityContainer.releaseRemovedEntities();
                await l.sendMessages(f)
            }

            return {
                addEntity: e.addEntity,
                removeEntity: e.removeEntity,
                removeEntityWithChildren: e.removeEntityWithChildren,
                addSystem: e.addSystem,
                removeSystem: e.removeSystem,
                defineComponent: e.defineComponent,
                defineComponentFromSchema: e.defineComponentFromSchema,
                defineValueSetComponentFromSchema: e.defineValueSetComponentFromSchema,
                registerComponentDefinition: e.registerComponentDefinition,
                getEntitiesWith: e.getEntitiesWith,
                getComponent: e.getComponent,
                getComponentOrNull: e.getComponentOrNull,
                removeComponentDefinition: e.removeComponentDefinition,
                componentsIter: e.componentsIter,
                seal: e.seal,
                getEntityOrNullByName: e.getEntityOrNullByName,
                update: i,
                RootEntity: 0,
                PlayerEntity: 1,
                CameraEntity: 2,
                getEntityState: e.entityContainer.getEntityState,
                addTransport: l.addTransport,
                entityContainer: e.entityContainer
            }
        }

        var Ni = t2(() => {
            "use strict";
            Kl();
            $6();
            z7();
            H4();
            km();
            Nm();
            E5();
            Mm();
            Fm();
            Ai();
            q0();
            ki();
            Ci();
            Gm()
        });

        function uT(n) {
            let e = Array.from(n);
            return n.length = 0, e
        }

        function qm(n) {
            let e = [];

            async function r(i) {
                try {
                    return await i()
                } catch (o) {
                    console.error(o)
                }
            }

            function l() {
                for (let i of uT(e)) r(i).catch(console.error)
            }

            return n.addSystem(l), function (i) {
                e.push(i)
            }
        }

        var Ri = t2(() => {
            "use strict"
        });

        function Ym(n, e) {
            let r = g7(n), l;
            (function (P) {
                P[P.Click = 0] = "Click", P[P.Down = 1] = "Down", P[P.Up = 2] = "Up"
            })(l || (l = {}));
            let i = (P = {}) => ({button: 3, ...P}), o = new Map;

            function f(P) {
                return o.get(P) || o.set(P, new Map).get(P)
            }

            function s(P, D, T) {
                (T.hoverText || T.showFeedback) && (r.getMutableOrNull(P) || r.create(P)).pointerEvents.push({
                    eventType: D,
                    eventInfo: {
                        button: T.button,
                        showFeedback: T.showFeedback,
                        hoverText: T.hoverText,
                        maxDistance: T.maxDistance
                    }
                })
            }

            function a(P, D, T) {
                let k = r.getMutableOrNull(P);
                k && (k.pointerEvents = k.pointerEvents.filter(R => !(R.eventInfo?.button === T && R.eventType === D)))
            }

            function g(P) {
                return P === l.Up ? 0 : 1
            }

            function b(P, D) {
                let T = f(P), k = T.get(D);
                k?.opts.hoverText && a(P, g(D), k.opts.button), T.delete(D)
            }

            n.addSystem(function () {
                for (let [D, T] of o) {
                    if (n.getEntityState(D) === ne.Removed) {
                        o.delete(D);
                        continue
                    }
                    for (let [k, {cb: R, opts: G}] of T) {
                        if (k === l.Click) {
                            let Z = e.getClick(G.button, D);
                            Z && n8(R(Z.up), "Click event returned a thenable. Only synchronous functions are allowed")
                        }
                        if (k === l.Down || k === l.Up) {
                            let Z = e.getInputCommand(G.button, g(k), D);
                            Z && n8(R(Z), "Event handler returned a thenable. Only synchronous functions are allowed")
                        }
                    }
                }
            });
            let B = (...P) => {
                let [D, T, k] = P;
                if (typeof D == "number") return B({entity: D, opts: k ?? {}}, T);
                let {entity: R, opts: G} = D, Z = i(G);
                b(R, l.Down), f(R).set(l.Down, {cb: T, opts: Z}), s(R, 1, Z)
            }, w = (...P) => {
                let [D, T, k] = P;
                if (typeof D == "number") return w({entity: D, opts: k ?? {}}, T);
                let {entity: R, opts: G} = D, Z = i(G);
                b(R, l.Up), f(R).set(l.Up, {cb: T, opts: Z}), s(R, 0, Z)
            };
            return {
                removeOnClick(P) {
                    b(P, l.Click)
                }, removeOnPointerDown(P) {
                    b(P, l.Down)
                }, removeOnPointerUp(P) {
                    b(P, l.Up)
                }, onClick(P, D) {
                    let {entity: T} = P, k = i(P.opts);
                    b(T, l.Click), f(T).set(l.Click, {cb: D, opts: k}), s(T, 1, k)
                }, onPointerDown: B, onPointerUp: w
            }
        }

        var Mi = t2(() => {
            "use strict";
            Kl();
            E5();
            z7()
        });
        var Oi = t2(() => {
            "use strict";
            Kl();
            E5()
        });
        var Di = t2(() => {
            "use strict";
            Kl();
            E5()
        });

        function Jm(n) {
            let e = U7(n), r = x7(n), l = W6(n), i = new Map;

            function o(g) {
                let b = r.getOrNull(g), B = e.getOrNull(g), w = i.get(g);
                return !b || !B ? !1 : !!((f(g) || b.state === 1) && !w?.completed && (w?.frames ?? 0) > 2)
            }

            function f(g) {
                let b = e.getOrNull(g), B = i.get(g)?.tween;
                if (b && !B || !b && B) return !0;
                let w = new kn;
                return e.schema.serialize(b, w), e8(w.toBinary(), B)
            }

            let s = [];
            n.addSystem(() => {
                for (let g of s) g();
                s.length = 0;
                for (let [g, b] of n.getEntitiesWith(e)) {
                    if (f(g)) {
                        let w = new kn;
                        e.schema.serialize(b, w), i.set(g, {
                            tween: w.toBinary(),
                            frames: 0,
                            completed: !1,
                            changed: !0
                        });
                        continue
                    }
                    let B = i.get(g);
                    if (B.frames += 1, B.changed = !1, o(g)) {
                        B.frames = 0, B.completed = !0;
                        let w = l.getOrNull(g);
                        if (!w) continue;
                        let {sequence: P} = w;
                        if (P && P.length) {
                            let [D, ...T] = P;
                            e.createOrReplace(g, D);
                            let k = l.getMutable(g);
                            k.sequence = T, w.loop === 0 && k.sequence.push(b)
                        } else w.loop === 1 ? e.createOrReplace(g, a(b)) : w.loop === 0 && (e.deleteFrom(g), i.delete(g), s.push(() => {
                            e.createOrReplace(g, b)
                        }))
                    }
                }
            }, Number.NEGATIVE_INFINITY);

            function a(g) {
                if (g.mode?.$case === "move" && g.mode.move) return {
                    ...g,
                    mode: {...g.mode, move: {start: g.mode.move.end, end: g.mode.move.start}}
                };
                if (g.mode?.$case === "rotate" && g.mode.rotate) return {
                    ...g,
                    mode: {...g.mode, rotate: {start: g.mode.rotate.end, end: g.mode.rotate.start}}
                };
                if (g.mode?.$case === "scale" && g.mode.scale) return {
                    ...g,
                    mode: {...g.mode, scale: {start: g.mode.scale.end, end: g.mode.scale.start}}
                };
                throw new Error("Invalid tween")
            }

            return {tweenCompleted: o}
        }

        var Xm = t2(() => {
            "use strict";
            Kl();
            G4();
            wi()
        });
        var A2, Km, Hn, tM, It, Y7 = t2(() => {
            "use strict";
            Ni();
            Ri();
            Mi();
            ki();
            Oi();
            Di();
            Xm();
            A2 = jm(), Km = Hm(A2), Hn = Ym(A2, Km), tM = Jm(A2), It = qm(A2)
        });
        var Zm = t2(() => {
            "use strict"
        });
        var Qm = t2(() => {
            "use strict";
            Ii();
            Zm()
        });
        var $m = t2(() => {
            "use strict"
        });
        var nh = t2(() => {
            "use strict";
            $m();
            Ai()
        });
        var eh = t2(() => {
            "use strict";
            Kl()
        });
        var lh = t2(() => {
            "use strict"
        });
        var l8, Bi, t8, th, rh, uh, $l, J7, w5, v5, oh = t2(() => {
            "use strict";
            Y7();
            W4();
            W4();
            l8 = Ho(A2), Bi = Vo(A2), t8 = Go(A2), th = jo(A2), rh = z6(A2), uh = Xo(A2), $l = Qo(A2), J7 = W6(A2), w5 = ni(A2), v5 = _7(A2)
        });
        var r8, ih = t2(() => {
            "use strict";
            (function (n) {
                n[n.CT_FIRST_PERSON = 0] = "CT_FIRST_PERSON", n[n.CT_THIRD_PERSON = 1] = "CT_THIRD_PERSON", n[n.CT_CINEMATIC = 2] = "CT_CINEMATIC"
            })(r8 || (r8 = {}))
        });
        var jn, Fi, ah = t2(() => {
            "use strict";
            (function (n) {
                n[n.IA_POINTER = 0] = "IA_POINTER", n[n.IA_PRIMARY = 1] = "IA_PRIMARY", n[n.IA_SECONDARY = 2] = "IA_SECONDARY", n[n.IA_ANY = 3] = "IA_ANY", n[n.IA_FORWARD = 4] = "IA_FORWARD", n[n.IA_BACKWARD = 5] = "IA_BACKWARD", n[n.IA_RIGHT = 6] = "IA_RIGHT", n[n.IA_LEFT = 7] = "IA_LEFT", n[n.IA_JUMP = 8] = "IA_JUMP", n[n.IA_WALK = 9] = "IA_WALK", n[n.IA_ACTION_3 = 10] = "IA_ACTION_3", n[n.IA_ACTION_4 = 11] = "IA_ACTION_4", n[n.IA_ACTION_5 = 12] = "IA_ACTION_5", n[n.IA_ACTION_6 = 13] = "IA_ACTION_6"
            })(jn || (jn = {}));
            (function (n) {
                n[n.PET_UP = 0] = "PET_UP", n[n.PET_DOWN = 1] = "PET_DOWN", n[n.PET_HOVER_ENTER = 2] = "PET_HOVER_ENTER", n[n.PET_HOVER_LEAVE = 3] = "PET_HOVER_LEAVE"
            })(Fi || (Fi = {}))
        });
        var sh, ch = t2(() => {
            "use strict";
            (function (n) {
                n[n.UNKNOWN = 0] = "UNKNOWN", n[n.LOADING = 1] = "LOADING", n[n.NOT_FOUND = 2] = "NOT_FOUND", n[n.FINISHED_WITH_ERROR = 3] = "FINISHED_WITH_ERROR", n[n.FINISHED = 4] = "FINISHED"
            })(sh || (sh = {}))
        });
        var u8, o8, fh = t2(() => {
            "use strict";
            (function (n) {
                n[n.TAM_TOP_LEFT = 0] = "TAM_TOP_LEFT", n[n.TAM_TOP_CENTER = 1] = "TAM_TOP_CENTER", n[n.TAM_TOP_RIGHT = 2] = "TAM_TOP_RIGHT", n[n.TAM_MIDDLE_LEFT = 3] = "TAM_MIDDLE_LEFT", n[n.TAM_MIDDLE_CENTER = 4] = "TAM_MIDDLE_CENTER", n[n.TAM_MIDDLE_RIGHT = 5] = "TAM_MIDDLE_RIGHT", n[n.TAM_BOTTOM_LEFT = 6] = "TAM_BOTTOM_LEFT", n[n.TAM_BOTTOM_CENTER = 7] = "TAM_BOTTOM_CENTER", n[n.TAM_BOTTOM_RIGHT = 8] = "TAM_BOTTOM_RIGHT"
            })(u8 || (u8 = {}));
            (function (n) {
                n[n.F_SANS_SERIF = 0] = "F_SANS_SERIF", n[n.F_SERIF = 1] = "F_SERIF", n[n.F_MONOSPACE = 2] = "F_MONOSPACE"
            })(o8 || (o8 = {}))
        });
        var dh = t2(() => {
            "use strict";
            ih();
            ah();
            ch();
            Y9();
            fh();
            u7();
            N9()
        });

        function Ui(n) {
            let e = n.getComponentOrNull("composite::root");
            return e || n.defineComponent("composite::root", {
                src: b3.String,
                entities: b3.Array(b3.Map({src: b3.Entity, dest: b3.Entity}))
            })
        }

        var Li = t2(() => {
            "use strict";
            H4()
        });

        function iT(n, e = !1) {
            let r = "", l = 0, i = -1, o = 0, f;
            for (let s = 0; s <= n.length; ++s) {
                if (s < n.length) f = n.charCodeAt(s); else {
                    if (f === 47) break;
                    f = 47
                }
                if (f === 47) {
                    if (!(i === s - 1 || o === 1)) if (i !== s - 1 && o === 2) {
                        if (r.length < 2 || l !== 2 || r.charCodeAt(r.length - 1) !== 46 || r.charCodeAt(r.length - 2) !== 46) {
                            if (r.length > 2) {
                                let a = r.lastIndexOf("/");
                                if (a !== r.length - 1) {
                                    a === -1 ? (r = "", l = 0) : (r = r.slice(0, a), l = r.length - 1 - r.lastIndexOf("/")), i = s, o = 0;
                                    continue
                                }
                            } else if (r.length === 2 || r.length === 1) {
                                r = "", l = 0, i = s, o = 0;
                                continue
                            }
                        }
                        e && (r.length > 0 ? r += "/.." : r = "..", l = 2)
                    } else r.length > 0 ? r += "/" + n.slice(i + 1, s) : r = n.slice(i + 1, s), l = s - i - 1;
                    i = s, o = 0
                } else f === 46 && o !== -1 ? ++o : o = -1
            }
            return r
        }

        function X7(...n) {
            let e = "", r = !1, l;
            for (let i = n.length - 1; i >= -1 && !r; i--) {
                let o;
                i >= 0 ? o = n[i] : (l === void 0 && (l = oT), o = l), o.length !== 0 && (e = o + "/" + e, r = o.charCodeAt(0) === 47)
            }
            return e = iT(e, !r), r ? e.length > 0 ? "/" + e : "/" : e.length > 0 ? e : "."
        }

        function ph(n) {
            if (n.length === 0) return ".";
            let e = n.charCodeAt(0), r = e === 47, l = -1, i = !0;
            for (let o = n.length - 1; o >= 1; --o) if (e = n.charCodeAt(o), e === 47) {
                if (!i) {
                    l = o;
                    break
                }
            } else i = !1;
            return l === -1 ? r ? "/" : "." : r && l === 1 ? "//" : n.slice(0, l)
        }

        function K7(n, e) {
            return (n.startsWith(".") ? X7(e, n) : X7(n)).substring(1)
        }

        var oT, zi = t2(() => {
            "use strict";
            oT = "/"
        });

        function mh(n, e) {
            return e.data?.$case === "json" ? e.data.json : n.schema.deserialize(new kn(e.data?.binary))
        }

        function sT(n, e) {
            let r = n.getComponentOrNull(e.name);
            if (r) return r;
            if (e.name.startsWith("core::")) {
                if (e.name in li) return li[e.name](n);
                throw new Error(`The core component ${e.name} was not found.`)
            } else {
                if (e.jsonSchema) return n.defineComponentFromSchema(e.name, b3.fromJson(e.jsonSchema));
                throw new Error(`${e.name} is not defined and there is no schema to define it.`)
            }
        }

        function cT(n, e, r, {entityMapping: l}) {
            let i = r.get(e);
            if (i) return i;
            if (l?.type === Y0.EMM_DIRECT_MAPPING) {
                let f = l.getCompositeEntity(e);
                return r.set(e, f), f
            }
            let o = l?.type === Y0.EMM_NEXT_AVAILABLE ? l.getNextAvailableEntity() : n.addEntity();
            if (o === null) throw new Error("There is no more entities to allocate");
            return r.set(e, o), o
        }

        function Wi(n, e, r, l) {
            let {rootEntity: i, alreadyRequestedSrc: o, entityMapping: f} = l, s = o || new Set, a = ph(X7(e.src)),
                g = Pt("core::Transform"), b = Ui(n), B = new Map, w = k => cT(n, k, B, l), P = i ?? w(0);
            i && B.set(0, i);
            let D = e.composite.components.find(k => k.name === b.componentName);
            if (D) for (let [k, R] of D.data) {
                let G = mh(b, R), Z = K7(G.src, a), S2 = r.getCompositeOrNull(Z), D2 = w(k);
                if (S2) {
                    if (s.has(S2.src) || S2.src === e.src) throw new Error(`Composite ${e.src} has a recursive instanciation while try to instance ${S2.src}. Previous instances: ${s.toString()}`);
                    Wi(n, S2, r, {
                        rootEntity: D2,
                        alreadyRequestedSrc: new Set(s).add(S2.src),
                        entityMapping: f?.type === Y0.EMM_NEXT_AVAILABLE ? f : void 0
                    })
                }
            }
            for (let k of e.composite.components) {
                if (k.name === b.componentName) continue;
                let R = sT(n, k);
                for (let [G, Z] of k.data) {
                    let S2 = mh(R, Z), D2 = w(G), T2 = R.create(D2, S2);
                    if (R.componentId === g) {
                        let l2 = T2;
                        l2.parent ? l2.parent = w(l2.parent) : l2.parent = w(0)
                    } else b3.mutateNestedValues(R.schema.jsonSchema, T2, (l2, b2) => b2.serializationType === "entity" ? {
                        changed: !0,
                        value: w(l2)
                    } : {changed: !1})
                }
            }
            let T = b.getMutableOrNull(P) || b.create(P);
            for (let [k, R] of B) T.entities.push({src: k, dest: R});
            return T.src = e.src, P
        }

        var Y0, hh = t2(() => {
            "use strict";
            Kl();
            $6();
            H4();
            G4();
            Li();
            zi();
            (function (n) {
                n[n.EMM_NONE = 0] = "EMM_NONE", n[n.EMM_NEXT_AVAILABLE = 1] = "EMM_NEXT_AVAILABLE", n[n.EMM_DIRECT_MAPPING = 2] = "EMM_DIRECT_MAPPING"
            })(Y0 || (Y0 = {}))
        });

        function fT(n) {
            switch (n) {
                case 0:
                case"NULL_VALUE":
                    return 0;
                default:
                    throw new Eh.Error("Unrecognized enum value " + n + " for enum NullValue")
            }
        }

        function dT(n) {
            switch (n) {
                case 0:
                    return "NULL_VALUE";
                default:
                    throw new Eh.Error("Unrecognized enum value " + n + " for enum NullValue")
            }
        }

        function gh() {
            return {fields: new Map}
        }

        function pT() {
            return {key: "", value: void 0}
        }

        function xh() {
            return {kind: void 0}
        }

        function bh() {
            return {values: []}
        }

        function mT(n) {
            return typeof n == "object" && n !== null
        }

        function w1(n) {
            return n != null
        }

        var nt, yh, J0, Z7, Me, X0, Eh, Th = t2(() => {
            "use strict";
            nt = _3(M3());
            (function (n) {
                n[n.NULL_VALUE = 0] = "NULL_VALUE"
            })(yh || (yh = {}));
            (function (n) {
                function e(s, a = nt.default.Writer.create()) {
                    return s.fields.forEach((g, b) => {
                        g !== void 0 && Z7.encode({key: b, value: g}, a.uint32(10).fork()).ldelim()
                    }), a
                }

                n.encode = e;

                function r(s, a) {
                    let g = s instanceof nt.default.Reader ? s : nt.default.Reader.create(s),
                        b = a === void 0 ? g.len : g.pos + a, B = gh();
                    for (; g.pos < b;) {
                        let w = g.uint32();
                        switch (w >>> 3) {
                            case 1:
                                if (w !== 10) break;
                                let P = Z7.decode(g, g.uint32());
                                P.value !== void 0 && B.fields.set(P.key, P.value);
                                continue
                        }
                        if ((w & 7) === 4 || w === 0) break;
                        g.skipType(w & 7)
                    }
                    return B
                }

                n.decode = r;

                function l(s) {
                    return {fields: mT(s.fields) ? Object.entries(s.fields).reduce((a, [g, b]) => (a.set(g, b), a), new Map) : new Map}
                }

                n.fromJSON = l;

                function i(s) {
                    let a = {};
                    return a.fields = {}, s.fields && s.fields.forEach((g, b) => {
                        a.fields[b] = g
                    }), a
                }

                n.toJSON = i;

                function o(s) {
                    let a = gh();
                    return s !== void 0 && Object.keys(s).forEach(g => {
                        a.fields.set(g, s[g])
                    }), a
                }

                n.wrap = o;

                function f(s) {
                    let a = {};
                    return [...s.fields.keys()].forEach(g => {
                        a[g] = s.fields.get(g)
                    }), a
                }

                n.unwrap = f
            })(J0 || (J0 = {}));
            (function (n) {
                function e(o, f = nt.default.Writer.create()) {
                    return o.key !== "" && f.uint32(10).string(o.key), o.value !== void 0 && Me.encode(Me.wrap(o.value), f.uint32(18).fork()).ldelim(), f
                }

                n.encode = e;

                function r(o, f) {
                    let s = o instanceof nt.default.Reader ? o : nt.default.Reader.create(o),
                        a = f === void 0 ? s.len : s.pos + f, g = pT();
                    for (; s.pos < a;) {
                        let b = s.uint32();
                        switch (b >>> 3) {
                            case 1:
                                if (b !== 10) break;
                                g.key = s.string();
                                continue;
                            case 2:
                                if (b !== 18) break;
                                g.value = Me.unwrap(Me.decode(s, s.uint32()));
                                continue
                        }
                        if ((b & 7) === 4 || b === 0) break;
                        s.skipType(b & 7)
                    }
                    return g
                }

                n.decode = r;

                function l(o) {
                    return {key: w1(o.key) ? String(o.key) : "", value: w1(o?.value) ? o.value : void 0}
                }

                n.fromJSON = l;

                function i(o) {
                    let f = {};
                    return o.key !== void 0 && (f.key = o.key), o.value !== void 0 && (f.value = o.value), f
                }

                n.toJSON = i
            })(Z7 || (Z7 = {}));
            (function (n) {
                function e(s, a = nt.default.Writer.create()) {
                    switch (s.kind?.$case) {
                        case"nullValue":
                            a.uint32(8).int32(s.kind.nullValue);
                            break;
                        case"numberValue":
                            a.uint32(17).double(s.kind.numberValue);
                            break;
                        case"stringValue":
                            a.uint32(26).string(s.kind.stringValue);
                            break;
                        case"boolValue":
                            a.uint32(32).bool(s.kind.boolValue);
                            break;
                        case"structValue":
                            J0.encode(J0.wrap(s.kind.structValue), a.uint32(42).fork()).ldelim();
                            break;
                        case"listValue":
                            X0.encode(X0.wrap(s.kind.listValue), a.uint32(50).fork()).ldelim();
                            break
                    }
                    return a
                }

                n.encode = e;

                function r(s, a) {
                    let g = s instanceof nt.default.Reader ? s : nt.default.Reader.create(s),
                        b = a === void 0 ? g.len : g.pos + a, B = xh();
                    for (; g.pos < b;) {
                        let w = g.uint32();
                        switch (w >>> 3) {
                            case 1:
                                if (w !== 8) break;
                                B.kind = {$case: "nullValue", nullValue: g.int32()};
                                continue;
                            case 2:
                                if (w !== 17) break;
                                B.kind = {$case: "numberValue", numberValue: g.double()};
                                continue;
                            case 3:
                                if (w !== 26) break;
                                B.kind = {$case: "stringValue", stringValue: g.string()};
                                continue;
                            case 4:
                                if (w !== 32) break;
                                B.kind = {$case: "boolValue", boolValue: g.bool()};
                                continue;
                            case 5:
                                if (w !== 42) break;
                                B.kind = {$case: "structValue", structValue: J0.unwrap(J0.decode(g, g.uint32()))};
                                continue;
                            case 6:
                                if (w !== 50) break;
                                B.kind = {$case: "listValue", listValue: X0.unwrap(X0.decode(g, g.uint32()))};
                                continue
                        }
                        if ((w & 7) === 4 || w === 0) break;
                        g.skipType(w & 7)
                    }
                    return B
                }

                n.decode = r;

                function l(s) {
                    return {
                        kind: w1(s.nullValue) ? {
                            $case: "nullValue",
                            nullValue: fT(s.nullValue)
                        } : w1(s.numberValue) ? {
                            $case: "numberValue",
                            numberValue: Number(s.numberValue)
                        } : w1(s.stringValue) ? {
                            $case: "stringValue",
                            stringValue: String(s.stringValue)
                        } : w1(s.boolValue) ? {
                            $case: "boolValue",
                            boolValue: !!s.boolValue
                        } : w1(s.structValue) ? {
                            $case: "structValue",
                            structValue: s.structValue
                        } : w1(s.listValue) ? {$case: "listValue", listValue: [...s.listValue]} : void 0
                    }
                }

                n.fromJSON = l;

                function i(s) {
                    let a = {};
                    return s.kind?.$case === "nullValue" && (a.nullValue = s.kind?.nullValue !== void 0 ? dT(s.kind?.nullValue) : void 0), s.kind?.$case === "numberValue" && (a.numberValue = s.kind?.numberValue), s.kind?.$case === "stringValue" && (a.stringValue = s.kind?.stringValue), s.kind?.$case === "boolValue" && (a.boolValue = s.kind?.boolValue), s.kind?.$case === "structValue" && (a.structValue = s.kind?.structValue), s.kind?.$case === "listValue" && (a.listValue = s.kind?.listValue), a
                }

                n.toJSON = i;

                function o(s) {
                    let a = xh();
                    if (s === null) a.kind = {
                        $case: "nullValue",
                        nullValue: 0
                    }; else if (typeof s == "boolean") a.kind = {
                        $case: "boolValue",
                        boolValue: s
                    }; else if (typeof s == "number") a.kind = {
                        $case: "numberValue",
                        numberValue: s
                    }; else if (typeof s == "string") a.kind = {
                        $case: "stringValue",
                        stringValue: s
                    }; else if (Array.isArray(s)) a.kind = {
                        $case: "listValue",
                        listValue: s
                    }; else if (typeof s == "object") a.kind = {
                        $case: "structValue",
                        structValue: s
                    }; else if (typeof s < "u") throw new Error("Unsupported any value type: " + typeof s);
                    return a
                }

                n.wrap = o;

                function f(s) {
                    return s.kind?.$case === "nullValue" ? null : s.kind?.$case === "numberValue" ? s.kind?.numberValue : s.kind?.$case === "stringValue" ? s.kind?.stringValue : s.kind?.$case === "boolValue" ? s.kind?.boolValue : s.kind?.$case === "structValue" ? s.kind?.structValue : s.kind?.$case === "listValue" ? s.kind?.listValue : void 0
                }

                n.unwrap = f
            })(Me || (Me = {}));
            (function (n) {
                function e(s, a = nt.default.Writer.create()) {
                    for (let g of s.values) Me.encode(Me.wrap(g), a.uint32(10).fork()).ldelim();
                    return a
                }

                n.encode = e;

                function r(s, a) {
                    let g = s instanceof nt.default.Reader ? s : nt.default.Reader.create(s),
                        b = a === void 0 ? g.len : g.pos + a, B = bh();
                    for (; g.pos < b;) {
                        let w = g.uint32();
                        switch (w >>> 3) {
                            case 1:
                                if (w !== 10) break;
                                B.values.push(Me.unwrap(Me.decode(g, g.uint32())));
                                continue
                        }
                        if ((w & 7) === 4 || w === 0) break;
                        g.skipType(w & 7)
                    }
                    return B
                }

                n.decode = r;

                function l(s) {
                    return {values: Array.isArray(s?.values) ? [...s.values] : []}
                }

                n.fromJSON = l;

                function i(s) {
                    let a = {};
                    return s.values ? a.values = s.values.map(g => g) : a.values = [], a
                }

                n.toJSON = i;

                function o(s) {
                    let a = bh();
                    return a.values = s ?? [], a
                }

                n.wrap = o;

                function f(s) {
                    return s?.hasOwnProperty("values") && Array.isArray(s.values) ? s.values : s
                }

                n.unwrap = f
            })(X0 || (X0 = {}));
            Eh = (() => {
                if (typeof globalThis < "u") return globalThis;
                if (typeof self < "u") return self;
                if (typeof global < "u") return global;
                throw"Unable to locate global object"
            })()
        });

        function hT() {
            return {data: void 0}
        }

        function yT() {
            return {name: "", jsonSchema: void 0, data: new Map}
        }

        function gT() {
            return {key: 0, value: void 0}
        }

        function xT() {
            return {version: 0, components: []}
        }

        function bT(n) {
            if (Z0.Buffer) return Uint8Array.from(Z0.Buffer.from(n, "base64"));
            {
                let e = Z0.atob(n), r = new Uint8Array(e.length);
                for (let l = 0; l < e.length; ++l) r[l] = e.charCodeAt(l);
                return r
            }
        }

        function ET(n) {
            if (Z0.Buffer) return Z0.Buffer.from(n).toString("base64");
            {
                let e = [];
                return n.forEach(r => {
                    e.push(String.fromCharCode(r))
                }), Z0.btoa(e.join(""))
            }
        }

        function TT(n) {
            return typeof n == "object" && n !== null
        }

        function _5(n) {
            return n != null
        }

        var et, v1, K0, Q7, C5, Z0, Sh = t2(() => {
            "use strict";
            et = _3(M3());
            Th();
            (function (n) {
                function e(o, f = et.default.Writer.create()) {
                    switch (o.data?.$case) {
                        case"json":
                            Me.encode(Me.wrap(o.data.json), f.uint32(10).fork()).ldelim();
                            break;
                        case"binary":
                            f.uint32(18).bytes(o.data.binary);
                            break
                    }
                    return f
                }

                n.encode = e;

                function r(o, f) {
                    let s = o instanceof et.default.Reader ? o : et.default.Reader.create(o),
                        a = f === void 0 ? s.len : s.pos + f, g = hT();
                    for (; s.pos < a;) {
                        let b = s.uint32();
                        switch (b >>> 3) {
                            case 1:
                                if (b !== 10) break;
                                g.data = {$case: "json", json: Me.unwrap(Me.decode(s, s.uint32()))};
                                continue;
                            case 2:
                                if (b !== 18) break;
                                g.data = {$case: "binary", binary: s.bytes()};
                                continue
                        }
                        if ((b & 7) === 4 || b === 0) break;
                        s.skipType(b & 7)
                    }
                    return g
                }

                n.decode = r;

                function l(o) {
                    return {
                        data: _5(o.json) ? {$case: "json", json: o.json} : _5(o.binary) ? {
                            $case: "binary",
                            binary: bT(o.binary)
                        } : void 0
                    }
                }

                n.fromJSON = l;

                function i(o) {
                    let f = {};
                    return o.data?.$case === "json" && (f.json = o.data?.json), o.data?.$case === "binary" && (f.binary = o.data?.binary !== void 0 ? ET(o.data?.binary) : void 0), f
                }

                n.toJSON = i
            })(v1 || (v1 = {}));
            (function (n) {
                function e(o, f = et.default.Writer.create()) {
                    return o.name !== "" && f.uint32(10).string(o.name), o.jsonSchema !== void 0 && Me.encode(Me.wrap(o.jsonSchema), f.uint32(18).fork()).ldelim(), o.data.forEach((s, a) => {
                        Q7.encode({key: a, value: s}, f.uint32(26).fork()).ldelim()
                    }), f
                }

                n.encode = e;

                function r(o, f) {
                    let s = o instanceof et.default.Reader ? o : et.default.Reader.create(o),
                        a = f === void 0 ? s.len : s.pos + f, g = yT();
                    for (; s.pos < a;) {
                        let b = s.uint32();
                        switch (b >>> 3) {
                            case 1:
                                if (b !== 10) break;
                                g.name = s.string();
                                continue;
                            case 2:
                                if (b !== 18) break;
                                g.jsonSchema = Me.unwrap(Me.decode(s, s.uint32()));
                                continue;
                            case 3:
                                if (b !== 26) break;
                                let B = Q7.decode(s, s.uint32());
                                B.value !== void 0 && g.data.set(B.key, B.value);
                                continue
                        }
                        if ((b & 7) === 4 || b === 0) break;
                        s.skipType(b & 7)
                    }
                    return g
                }

                n.decode = r;

                function l(o) {
                    return {
                        name: _5(o.name) ? String(o.name) : "",
                        jsonSchema: _5(o?.jsonSchema) ? o.jsonSchema : void 0,
                        data: TT(o.data) ? Object.entries(o.data).reduce((f, [s, a]) => (f.set(Number(s), v1.fromJSON(a)), f), new Map) : new Map
                    }
                }

                n.fromJSON = l;

                function i(o) {
                    let f = {};
                    return o.name !== void 0 && (f.name = o.name), o.jsonSchema !== void 0 && (f.jsonSchema = o.jsonSchema), f.data = {}, o.data && o.data.forEach((s, a) => {
                        f.data[a] = v1.toJSON(s)
                    }), f
                }

                n.toJSON = i
            })(K0 || (K0 = {}));
            (function (n) {
                function e(o, f = et.default.Writer.create()) {
                    return o.key !== 0 && f.uint32(8).int32(o.key), o.value !== void 0 && v1.encode(o.value, f.uint32(18).fork()).ldelim(), f
                }

                n.encode = e;

                function r(o, f) {
                    let s = o instanceof et.default.Reader ? o : et.default.Reader.create(o),
                        a = f === void 0 ? s.len : s.pos + f, g = gT();
                    for (; s.pos < a;) {
                        let b = s.uint32();
                        switch (b >>> 3) {
                            case 1:
                                if (b !== 8) break;
                                g.key = s.int32();
                                continue;
                            case 2:
                                if (b !== 18) break;
                                g.value = v1.decode(s, s.uint32());
                                continue
                        }
                        if ((b & 7) === 4 || b === 0) break;
                        s.skipType(b & 7)
                    }
                    return g
                }

                n.decode = r;

                function l(o) {
                    return {key: _5(o.key) ? Number(o.key) : 0, value: _5(o.value) ? v1.fromJSON(o.value) : void 0}
                }

                n.fromJSON = l;

                function i(o) {
                    let f = {};
                    return o.key !== void 0 && (f.key = Math.round(o.key)), o.value !== void 0 && (f.value = o.value ? v1.toJSON(o.value) : void 0), f
                }

                n.toJSON = i
            })(Q7 || (Q7 = {}));
            (function (n) {
                function e(o, f = et.default.Writer.create()) {
                    o.version !== 0 && f.uint32(8).int32(o.version);
                    for (let s of o.components) K0.encode(s, f.uint32(18).fork()).ldelim();
                    return f
                }

                n.encode = e;

                function r(o, f) {
                    let s = o instanceof et.default.Reader ? o : et.default.Reader.create(o),
                        a = f === void 0 ? s.len : s.pos + f, g = xT();
                    for (; s.pos < a;) {
                        let b = s.uint32();
                        switch (b >>> 3) {
                            case 1:
                                if (b !== 8) break;
                                g.version = s.int32();
                                continue;
                            case 2:
                                if (b !== 18) break;
                                g.components.push(K0.decode(s, s.uint32()));
                                continue
                        }
                        if ((b & 7) === 4 || b === 0) break;
                        s.skipType(b & 7)
                    }
                    return g
                }

                n.decode = r;

                function l(o) {
                    return {
                        version: _5(o.version) ? Number(o.version) : 0,
                        components: Array.isArray(o?.components) ? o.components.map(f => K0.fromJSON(f)) : []
                    }
                }

                n.fromJSON = l;

                function i(o) {
                    let f = {};
                    return o.version !== void 0 && (f.version = Math.round(o.version)), o.components ? f.components = o.components.map(s => s ? K0.toJSON(s) : void 0) : f.components = [], f
                }

                n.toJSON = i
            })(C5 || (C5 = {}));
            Z0 = (() => {
                if (typeof globalThis < "u") return globalThis;
                if (typeof self < "u") return self;
                if (typeof global < "u") return global;
                throw"Unable to locate global object"
            })()
        });
        var C1, wh = t2(() => {
            "use strict";
            Li();
            hh();
            zi();
            Sh();
            (function (n) {
                function e(s) {
                    return C5.fromJSON(s)
                }

                n.fromJson = e;

                function r(s) {
                    return C5.decode(s)
                }

                n.fromBinary = r;

                function l(s) {
                    return C5.toJSON(s)
                }

                n.toJson = l;

                function i(s) {
                    return C5.encode(s).finish()
                }

                n.toBinary = i;

                function o(s, a, g, b = {}) {
                    Wi(s, a, g, b)
                }

                n.instance = o;

                function f(s, a = "/") {
                    return K7(s, a)
                }

                n.resolveAndNormalizePath = f
            })(C1 || (C1 = {}))
        });
        var Y2, O3, ve, Nt, YM, lt, Q0, _1, $7, g4 = t2(() => {
            "use strict";
            Ni();
            H4();
            Y7();
            Qm();
            nh();
            eh();
            Mi();
            Oi();
            Di();
            Ri();
            E5();
            lh();
            Kl();
            Y7();
            oh();
            dh();
            q0();
            wh();
            Y2 = V4(A2), O3 = dm(A2), ve = pm(A2), Nt = mm(A2), YM = L7(A2), lt = U7(A2), Q0 = hm(A2), _1 = x5(A2), $7 = H0(A2)
        });
        var Hh = Mn(rn => {
            "use strict";
            var d8 = Symbol.for("react.element"), NT = Symbol.for("react.portal"), RT = Symbol.for("react.fragment"),
                MT = Symbol.for("react.strict_mode"), OT = Symbol.for("react.profiler"),
                DT = Symbol.for("react.provider"), BT = Symbol.for("react.context"),
                FT = Symbol.for("react.forward_ref"), UT = Symbol.for("react.suspense"), LT = Symbol.for("react.memo"),
                zT = Symbol.for("react.lazy"), Rh = Symbol.iterator;

            function WT(n) {
                return n === null || typeof n != "object" ? null : (n = Rh && n[Rh] || n["@@iterator"], typeof n == "function" ? n : null)
            }

            var Dh = {
                isMounted: function () {
                    return !1
                }, enqueueForceUpdate: function () {
                }, enqueueReplaceState: function () {
                }, enqueueSetState: function () {
                }
            }, Bh = Object.assign, Fh = {};

            function l6(n, e, r) {
                this.props = n, this.context = e, this.refs = Fh, this.updater = r || Dh
            }

            l6.prototype.isReactComponent = {};
            l6.prototype.setState = function (n, e) {
                if (typeof n != "object" && typeof n != "function" && n != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
                this.updater.enqueueSetState(this, n, e, "setState")
            };
            l6.prototype.forceUpdate = function (n) {
                this.updater.enqueueForceUpdate(this, n, "forceUpdate")
            };

            function Uh() {
            }

            Uh.prototype = l6.prototype;

            function ea(n, e, r) {
                this.props = n, this.context = e, this.refs = Fh, this.updater = r || Dh
            }

            var la = ea.prototype = new Uh;
            la.constructor = ea;
            Bh(la, l6.prototype);
            la.isPureReactComponent = !0;
            var Mh = Array.isArray, Lh = Object.prototype.hasOwnProperty, ta = {current: null},
                zh = {key: !0, ref: !0, __self: !0, __source: !0};

            function Wh(n, e, r) {
                var l, i = {}, o = null, f = null;
                if (e != null) for (l in e.ref !== void 0 && (f = e.ref), e.key !== void 0 && (o = "" + e.key), e) Lh.call(e, l) && !zh.hasOwnProperty(l) && (i[l] = e[l]);
                var s = arguments.length - 2;
                if (s === 1) i.children = r; else if (1 < s) {
                    for (var a = Array(s), g = 0; g < s; g++) a[g] = arguments[g + 2];
                    i.children = a
                }
                if (n && n.defaultProps) for (l in s = n.defaultProps, s) i[l] === void 0 && (i[l] = s[l]);
                return {$$typeof: d8, type: n, key: o, ref: f, props: i, _owner: ta.current}
            }

            function HT(n, e) {
                return {$$typeof: d8, type: n.type, key: e, ref: n.ref, props: n.props, _owner: n._owner}
            }

            function ra(n) {
                return typeof n == "object" && n !== null && n.$$typeof === d8
            }

            function VT(n) {
                var e = {"=": "=0", ":": "=2"};
                return "$" + n.replace(/[=:]/g, function (r) {
                    return e[r]
                })
            }

            var Oh = /\/+/g;

            function na(n, e) {
                return typeof n == "object" && n !== null && n.key != null ? VT("" + n.key) : e.toString(36)
            }

            function or(n, e, r, l, i) {
                var o = typeof n;
                (o === "undefined" || o === "boolean") && (n = null);
                var f = !1;
                if (n === null) f = !0; else switch (o) {
                    case"string":
                    case"number":
                        f = !0;
                        break;
                    case"object":
                        switch (n.$$typeof) {
                            case d8:
                            case NT:
                                f = !0
                        }
                }
                if (f) return f = n, i = i(f), n = l === "" ? "." + na(f, 0) : l, Mh(i) ? (r = "", n != null && (r = n.replace(Oh, "$&/") + "/"), or(i, e, r, "", function (g) {
                    return g
                })) : i != null && (ra(i) && (i = HT(i, r + (!i.key || f && f.key === i.key ? "" : ("" + i.key).replace(Oh, "$&/") + "/") + n)), e.push(i)), 1;
                if (f = 0, l = l === "" ? "." : l + ":", Mh(n)) for (var s = 0; s < n.length; s++) {
                    o = n[s];
                    var a = l + na(o, s);
                    f += or(o, e, r, a, i)
                } else if (a = WT(n), typeof a == "function") for (n = a.call(n), s = 0; !(o = n.next()).done;) o = o.value, a = l + na(o, s++), f += or(o, e, r, a, i); else if (o === "object") throw e = String(n), Error("Objects are not valid as a React child (found: " + (e === "[object Object]" ? "object with keys {" + Object.keys(n).join(", ") + "}" : e) + "). If you meant to render a collection of children, use an array instead.");
                return f
            }

            function ur(n, e, r) {
                if (n == null) return n;
                var l = [], i = 0;
                return or(n, l, "", "", function (o) {
                    return e.call(r, o, i++)
                }), l
            }

            function GT(n) {
                if (n._status === -1) {
                    var e = n._result;
                    e = e(), e.then(function (r) {
                        (n._status === 0 || n._status === -1) && (n._status = 1, n._result = r)
                    }, function (r) {
                        (n._status === 0 || n._status === -1) && (n._status = 2, n._result = r)
                    }), n._status === -1 && (n._status = 0, n._result = e)
                }
                if (n._status === 1) return n._result.default;
                throw n._result
            }

            var xl = {current: null}, ir = {transition: null},
                jT = {ReactCurrentDispatcher: xl, ReactCurrentBatchConfig: ir, ReactCurrentOwner: ta};
            rn.Children = {
                map: ur, forEach: function (n, e, r) {
                    ur(n, function () {
                        e.apply(this, arguments)
                    }, r)
                }, count: function (n) {
                    var e = 0;
                    return ur(n, function () {
                        e++
                    }), e
                }, toArray: function (n) {
                    return ur(n, function (e) {
                        return e
                    }) || []
                }, only: function (n) {
                    if (!ra(n)) throw Error("React.Children.only expected to receive a single React element child.");
                    return n
                }
            };
            rn.Component = l6;
            rn.Fragment = RT;
            rn.Profiler = OT;
            rn.PureComponent = ea;
            rn.StrictMode = MT;
            rn.Suspense = UT;
            rn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = jT;
            rn.cloneElement = function (n, e, r) {
                if (n == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + n + ".");
                var l = Bh({}, n.props), i = n.key, o = n.ref, f = n._owner;
                if (e != null) {
                    if (e.ref !== void 0 && (o = e.ref, f = ta.current), e.key !== void 0 && (i = "" + e.key), n.type && n.type.defaultProps) var s = n.type.defaultProps;
                    for (a in e) Lh.call(e, a) && !zh.hasOwnProperty(a) && (l[a] = e[a] === void 0 && s !== void 0 ? s[a] : e[a])
                }
                var a = arguments.length - 2;
                if (a === 1) l.children = r; else if (1 < a) {
                    s = Array(a);
                    for (var g = 0; g < a; g++) s[g] = arguments[g + 2];
                    l.children = s
                }
                return {$$typeof: d8, type: n.type, key: i, ref: o, props: l, _owner: f}
            };
            rn.createContext = function (n) {
                return n = {
                    $$typeof: BT,
                    _currentValue: n,
                    _currentValue2: n,
                    _threadCount: 0,
                    Provider: null,
                    Consumer: null,
                    _defaultValue: null,
                    _globalName: null
                }, n.Provider = {$$typeof: DT, _context: n}, n.Consumer = n
            };
            rn.createElement = Wh;
            rn.createFactory = function (n) {
                var e = Wh.bind(null, n);
                return e.type = n, e
            };
            rn.createRef = function () {
                return {current: null}
            };
            rn.forwardRef = function (n) {
                return {$$typeof: FT, render: n}
            };
            rn.isValidElement = ra;
            rn.lazy = function (n) {
                return {$$typeof: zT, _payload: {_status: -1, _result: n}, _init: GT}
            };
            rn.memo = function (n, e) {
                return {$$typeof: LT, type: n, compare: e === void 0 ? null : e}
            };
            rn.startTransition = function (n) {
                var e = ir.transition;
                ir.transition = {};
                try {
                    n()
                } finally {
                    ir.transition = e
                }
            };
            rn.unstable_act = function () {
                throw Error("act(...) is not supported in production builds of React.")
            };
            rn.useCallback = function (n, e) {
                return xl.current.useCallback(n, e)
            };
            rn.useContext = function (n) {
                return xl.current.useContext(n)
            };
            rn.useDebugValue = function () {
            };
            rn.useDeferredValue = function (n) {
                return xl.current.useDeferredValue(n)
            };
            rn.useEffect = function (n, e) {
                return xl.current.useEffect(n, e)
            };
            rn.useId = function () {
                return xl.current.useId()
            };
            rn.useImperativeHandle = function (n, e, r) {
                return xl.current.useImperativeHandle(n, e, r)
            };
            rn.useInsertionEffect = function (n, e) {
                return xl.current.useInsertionEffect(n, e)
            };
            rn.useLayoutEffect = function (n, e) {
                return xl.current.useLayoutEffect(n, e)
            };
            rn.useMemo = function (n, e) {
                return xl.current.useMemo(n, e)
            };
            rn.useReducer = function (n, e, r) {
                return xl.current.useReducer(n, e, r)
            };
            rn.useRef = function (n) {
                return xl.current.useRef(n)
            };
            rn.useState = function (n) {
                return xl.current.useState(n)
            };
            rn.useSyncExternalStore = function (n, e, r) {
                return xl.current.useSyncExternalStore(n, e, r)
            };
            rn.useTransition = function () {
                return xl.current.useTransition()
            };
            rn.version = "18.2.0"
        });
        var ua = Mn((qD, Vh) => {
            "use strict";
            Vh.exports = Hh()
        });
        var ny = Mn(qn => {
            "use strict";

            function sa(n, e) {
                var r = n.length;
                n.push(e);
                n:for (; 0 < r;) {
                    var l = r - 1 >>> 1, i = n[l];
                    if (0 < ar(i, e)) n[l] = e, n[r] = i, r = l; else break n
                }
            }

            function $t(n) {
                return n.length === 0 ? null : n[0]
            }

            function cr(n) {
                if (n.length === 0) return null;
                var e = n[0], r = n.pop();
                if (r !== e) {
                    n[0] = r;
                    n:for (var l = 0, i = n.length, o = i >>> 1; l < o;) {
                        var f = 2 * (l + 1) - 1, s = n[f], a = f + 1, g = n[a];
                        if (0 > ar(s, r)) a < i && 0 > ar(g, s) ? (n[l] = g, n[a] = r, l = a) : (n[l] = s, n[f] = r, l = f); else if (a < i && 0 > ar(g, r)) n[l] = g, n[a] = r, l = a; else break n
                    }
                }
                return e
            }

            function ar(n, e) {
                var r = n.sortIndex - e.sortIndex;
                return r !== 0 ? r : n.id - e.id
            }

            typeof performance == "object" && typeof performance.now == "function" ? (jh = performance, qn.unstable_now = function () {
                return jh.now()
            }) : (oa = Date, qh = oa.now(), qn.unstable_now = function () {
                return oa.now() - qh
            });
            var jh, oa, qh, b4 = [], k1 = [], qT = 1, Rt = null, sl = 3, fr = !1, P5 = !1, m8 = !1,
                Xh = typeof setTimeout == "function" ? setTimeout : null,
                Kh = typeof clearTimeout == "function" ? clearTimeout : null,
                Yh = typeof setImmediate < "u" ? setImmediate : null;
            typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);

            function ca(n) {
                for (var e = $t(k1); e !== null;) {
                    if (e.callback === null) cr(k1); else if (e.startTime <= n) cr(k1), e.sortIndex = e.expirationTime, sa(b4, e); else break;
                    e = $t(k1)
                }
            }

            function fa(n) {
                if (m8 = !1, ca(n), !P5) if ($t(b4) !== null) P5 = !0, pa(da); else {
                    var e = $t(k1);
                    e !== null && ma(fa, e.startTime - n)
                }
            }

            function da(n, e) {
                P5 = !1, m8 && (m8 = !1, Kh(h8), h8 = -1), fr = !0;
                var r = sl;
                try {
                    for (ca(e), Rt = $t(b4); Rt !== null && (!(Rt.expirationTime > e) || n && !$h());) {
                        var l = Rt.callback;
                        if (typeof l == "function") {
                            Rt.callback = null, sl = Rt.priorityLevel;
                            var i = l(Rt.expirationTime <= e);
                            e = qn.unstable_now(), typeof i == "function" ? Rt.callback = i : Rt === $t(b4) && cr(b4), ca(e)
                        } else cr(b4);
                        Rt = $t(b4)
                    }
                    if (Rt !== null) var o = !0; else {
                        var f = $t(k1);
                        f !== null && ma(fa, f.startTime - e), o = !1
                    }
                    return o
                } finally {
                    Rt = null, sl = r, fr = !1
                }
            }

            var dr = !1, sr = null, h8 = -1, Zh = 5, Qh = -1;

            function $h() {
                return !(qn.unstable_now() - Qh < Zh)
            }

            function ia() {
                if (sr !== null) {
                    var n = qn.unstable_now();
                    Qh = n;
                    var e = !0;
                    try {
                        e = sr(!0, n)
                    } finally {
                        e ? p8() : (dr = !1, sr = null)
                    }
                } else dr = !1
            }

            var p8;
            typeof Yh == "function" ? p8 = function () {
                Yh(ia)
            } : typeof MessageChannel < "u" ? (aa = new MessageChannel, Jh = aa.port2, aa.port1.onmessage = ia, p8 = function () {
                Jh.postMessage(null)
            }) : p8 = function () {
                Xh(ia, 0)
            };
            var aa, Jh;

            function pa(n) {
                sr = n, dr || (dr = !0, p8())
            }

            function ma(n, e) {
                h8 = Xh(function () {
                    n(qn.unstable_now())
                }, e)
            }

            qn.unstable_IdlePriority = 5;
            qn.unstable_ImmediatePriority = 1;
            qn.unstable_LowPriority = 4;
            qn.unstable_NormalPriority = 3;
            qn.unstable_Profiling = null;
            qn.unstable_UserBlockingPriority = 2;
            qn.unstable_cancelCallback = function (n) {
                n.callback = null
            };
            qn.unstable_continueExecution = function () {
                P5 || fr || (P5 = !0, pa(da))
            };
            qn.unstable_forceFrameRate = function (n) {
                0 > n || 125 < n ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : Zh = 0 < n ? Math.floor(1e3 / n) : 5
            };
            qn.unstable_getCurrentPriorityLevel = function () {
                return sl
            };
            qn.unstable_getFirstCallbackNode = function () {
                return $t(b4)
            };
            qn.unstable_next = function (n) {
                switch (sl) {
                    case 1:
                    case 2:
                    case 3:
                        var e = 3;
                        break;
                    default:
                        e = sl
                }
                var r = sl;
                sl = e;
                try {
                    return n()
                } finally {
                    sl = r
                }
            };
            qn.unstable_pauseExecution = function () {
            };
            qn.unstable_requestPaint = function () {
            };
            qn.unstable_runWithPriority = function (n, e) {
                switch (n) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        n = 3
                }
                var r = sl;
                sl = n;
                try {
                    return e()
                } finally {
                    sl = r
                }
            };
            qn.unstable_scheduleCallback = function (n, e, r) {
                var l = qn.unstable_now();
                switch (typeof r == "object" && r !== null ? (r = r.delay, r = typeof r == "number" && 0 < r ? l + r : l) : r = l, n) {
                    case 1:
                        var i = -1;
                        break;
                    case 2:
                        i = 250;
                        break;
                    case 5:
                        i = 1073741823;
                        break;
                    case 4:
                        i = 1e4;
                        break;
                    default:
                        i = 5e3
                }
                return i = r + i, n = {
                    id: qT++,
                    callback: e,
                    priorityLevel: n,
                    startTime: r,
                    expirationTime: i,
                    sortIndex: -1
                }, r > l ? (n.sortIndex = r, sa(k1, n), $t(b4) === null && n === $t(k1) && (m8 ? (Kh(h8), h8 = -1) : m8 = !0, ma(fa, r - l))) : (n.sortIndex = i, sa(b4, n), P5 || fr || (P5 = !0, pa(da))), n
            };
            qn.unstable_shouldYield = $h;
            qn.unstable_wrapCallback = function (n) {
                var e = sl;
                return function () {
                    var r = sl;
                    sl = e;
                    try {
                        return n.apply(this, arguments)
                    } finally {
                        sl = r
                    }
                }
            }
        });
        var ly = Mn((XD, ey) => {
            "use strict";
            ey.exports = ny()
        });
        var ry = Mn((KD, ty) => {
            "use strict";
            ty.exports = function (e) {
                var r = {}, l = ua(), i = ly(), o = Object.assign;

                function f(t) {
                    for (var u = "https://reactjs.org/docs/error-decoder.html?invariant=" + t, c = 1; c < arguments.length; c++) u += "&args[]=" + encodeURIComponent(arguments[c]);
                    return "Minified React error #" + t + "; visit " + u + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
                }

                var s = l.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, a = Symbol.for("react.element"),
                    g = Symbol.for("react.portal"), b = Symbol.for("react.fragment"),
                    B = Symbol.for("react.strict_mode"), w = Symbol.for("react.profiler"),
                    P = Symbol.for("react.provider"), D = Symbol.for("react.context"),
                    T = Symbol.for("react.forward_ref"), k = Symbol.for("react.suspense"),
                    R = Symbol.for("react.suspense_list"), G = Symbol.for("react.memo"), Z = Symbol.for("react.lazy");
                Symbol.for("react.scope"), Symbol.for("react.debug_trace_mode");
                var S2 = Symbol.for("react.offscreen");
                Symbol.for("react.legacy_hidden"), Symbol.for("react.cache"), Symbol.for("react.tracing_marker");
                var D2 = Symbol.iterator;

                function T2(t) {
                    return t === null || typeof t != "object" ? null : (t = D2 && t[D2] || t["@@iterator"], typeof t == "function" ? t : null)
                }

                function l2(t) {
                    if (t == null) return null;
                    if (typeof t == "function") return t.displayName || t.name || null;
                    if (typeof t == "string") return t;
                    switch (t) {
                        case b:
                            return "Fragment";
                        case g:
                            return "Portal";
                        case w:
                            return "Profiler";
                        case B:
                            return "StrictMode";
                        case k:
                            return "Suspense";
                        case R:
                            return "SuspenseList"
                    }
                    if (typeof t == "object") switch (t.$$typeof) {
                        case D:
                            return (t.displayName || "Context") + ".Consumer";
                        case P:
                            return (t._context.displayName || "Context") + ".Provider";
                        case T:
                            var u = t.render;
                            return t = t.displayName, t || (t = u.displayName || u.name || "", t = t !== "" ? "ForwardRef(" + t + ")" : "ForwardRef"), t;
                        case G:
                            return u = t.displayName || null, u !== null ? u : l2(t.type) || "Memo";
                        case Z:
                            u = t._payload, t = t._init;
                            try {
                                return l2(t(u))
                            } catch {
                            }
                    }
                    return null
                }

                function b2(t) {
                    var u = t.type;
                    switch (t.tag) {
                        case 24:
                            return "Cache";
                        case 9:
                            return (u.displayName || "Context") + ".Consumer";
                        case 10:
                            return (u._context.displayName || "Context") + ".Provider";
                        case 18:
                            return "DehydratedFragment";
                        case 11:
                            return t = u.render, t = t.displayName || t.name || "", u.displayName || (t !== "" ? "ForwardRef(" + t + ")" : "ForwardRef");
                        case 7:
                            return "Fragment";
                        case 5:
                            return u;
                        case 4:
                            return "Portal";
                        case 3:
                            return "Root";
                        case 6:
                            return "Text";
                        case 16:
                            return l2(u);
                        case 8:
                            return u === B ? "StrictMode" : "Mode";
                        case 22:
                            return "Offscreen";
                        case 12:
                            return "Profiler";
                        case 21:
                            return "Scope";
                        case 13:
                            return "Suspense";
                        case 19:
                            return "SuspenseList";
                        case 25:
                            return "TracingMarker";
                        case 1:
                        case 0:
                        case 17:
                        case 2:
                        case 14:
                        case 15:
                            if (typeof u == "function") return u.displayName || u.name || null;
                            if (typeof u == "string") return u
                    }
                    return null
                }

                function g2(t) {
                    var u = t, c = t;
                    if (t.alternate) for (; u.return;) u = u.return; else {
                        t = u;
                        do u = t, u.flags & 4098 && (c = u.return), t = u.return; while (t)
                    }
                    return u.tag === 3 ? c : null
                }

                function p2(t) {
                    if (g2(t) !== t) throw Error(f(188))
                }

                function O(t) {
                    var u = t.alternate;
                    if (!u) {
                        if (u = g2(t), u === null) throw Error(f(188));
                        return u !== t ? null : t
                    }
                    for (var c = t, d = u; ;) {
                        var p = c.return;
                        if (p === null) break;
                        var x = p.alternate;
                        if (x === null) {
                            if (d = p.return, d !== null) {
                                c = d;
                                continue
                            }
                            break
                        }
                        if (p.child === x.child) {
                            for (x = p.child; x;) {
                                if (x === c) return p2(p), t;
                                if (x === d) return p2(p), u;
                                x = x.sibling
                            }
                            throw Error(f(188))
                        }
                        if (c.return !== d.return) c = p, d = x; else {
                            for (var C = !1, n2 = p.child; n2;) {
                                if (n2 === c) {
                                    C = !0, c = p, d = x;
                                    break
                                }
                                if (n2 === d) {
                                    C = !0, d = p, c = x;
                                    break
                                }
                                n2 = n2.sibling
                            }
                            if (!C) {
                                for (n2 = x.child; n2;) {
                                    if (n2 === c) {
                                        C = !0, c = x, d = p;
                                        break
                                    }
                                    if (n2 === d) {
                                        C = !0, d = x, c = p;
                                        break
                                    }
                                    n2 = n2.sibling
                                }
                                if (!C) throw Error(f(189))
                            }
                        }
                        if (c.alternate !== d) throw Error(f(190))
                    }
                    if (c.tag !== 3) throw Error(f(188));
                    return c.stateNode.current === c ? t : u
                }

                function J(t) {
                    return t = O(t), t !== null ? h2(t) : null
                }

                function h2(t) {
                    if (t.tag === 5 || t.tag === 6) return t;
                    for (t = t.child; t !== null;) {
                        var u = h2(t);
                        if (u !== null) return u;
                        t = t.sibling
                    }
                    return null
                }

                function y2(t) {
                    if (t.tag === 5 || t.tag === 6) return t;
                    for (t = t.child; t !== null;) {
                        if (t.tag !== 4) {
                            var u = y2(t);
                            if (u !== null) return u
                        }
                        t = t.sibling
                    }
                    return null
                }

                var k2 = Array.isArray, Z2 = e.getPublicInstance, g3 = e.getRootHostContext, P3 = e.getChildHostContext,
                    U3 = e.prepareForCommit, C3 = e.resetAfterCommit, N3 = e.createInstance, R3 = e.appendInitialChild,
                    un = e.finalizeInitialChildren, F3 = e.prepareUpdate, Dn = e.shouldSetTextContent,
                    o2 = e.createTextInstance, P2 = e.scheduleTimeout, I2 = e.cancelTimeout, $ = e.noTimeout,
                    f2 = e.isPrimaryRenderer, l3 = e.supportsMutation, D3 = e.supportsPersistence,
                    Q3 = e.supportsHydration, pn = e.getInstanceFromNode, Fl = e.preparePortalMount,
                    ie = e.getCurrentEventPriority, ct = e.detachDeletedInstance, Q = e.supportsMicrotasks,
                    E2 = e.scheduleMicrotask, s2 = e.supportsTestSelectors, Y = e.findFiberRoot, K = e.getBoundingRect,
                    d2 = e.getTextContent, N2 = e.isHiddenSubtree, c3 = e.matchAccessibilityRole,
                    B2 = e.setFocusIfFocusable, En = e.setupIntersectionObserver, Zn = e.appendChild,
                    de = e.appendChildToContainer, ee = e.commitTextUpdate, wl = e.commitMount, Xe = e.commitUpdate,
                    Ft = e.insertBefore, ft = e.insertInContainerBefore, C4 = e.removeChild,
                    _4 = e.removeChildFromContainer, Ut = e.resetTextContent, n1 = e.hideInstance,
                    Ul = e.hideTextInstance, N = e.unhideInstance, X = e.unhideTextInstance, a2 = e.clearContainer,
                    K2 = e.cloneInstance, G2 = e.createContainerChildSet, o3 = e.appendChildToContainerChildSet,
                    x3 = e.finalizeContainerChildren, Cn = e.replaceContainerChildren, on = e.cloneHiddenInstance,
                    Bn = e.cloneHiddenTextInstance, vl = e.canHydrateInstance, Ll = e.canHydrateTextInstance,
                    zl = e.canHydrateSuspenseInstance, dt = e.isSuspenseInstancePending,
                    G1 = e.isSuspenseInstanceFallback, E6 = e.getSuspenseInstanceFallbackErrorDetails,
                    j1 = e.registerSuspenseInstanceRetry, P4 = e.getNextHydratableSibling,
                    A4 = e.getFirstHydratableChild, pe = e.getFirstHydratableChildWithinContainer,
                    S = e.getFirstHydratableChildWithinSuspenseInstance, M = e.hydrateInstance,
                    L = e.hydrateTextInstance, F = e.hydrateSuspenseInstance,
                    e2 = e.getNextHydratableInstanceAfterSuspenseInstance, R2 = e.commitHydratedContainer,
                    w2 = e.commitHydratedSuspenseInstance, j2 = e.clearSuspenseBoundary,
                    $2 = e.clearSuspenseBoundaryFromContainer, S3 = e.shouldDeleteUnhydratedTailInstances,
                    k3 = e.didNotMatchHydratedContainerTextInstance, tn = e.didNotMatchHydratedTextInstance, w3;

                function wn(t) {
                    if (w3 === void 0) try {
                        throw Error()
                    } catch (c) {
                        var u = c.stack.trim().match(/\n( *(at )?)/);
                        w3 = u && u[1] || ""
                    }
                    return `
` + w3 + t
                }

                var Fn = !1;

                function Yn(t, u) {
                    if (!t || Fn) return "";
                    Fn = !0;
                    var c = Error.prepareStackTrace;
                    Error.prepareStackTrace = void 0;
                    try {
                        if (u) if (u = function () {
                            throw Error()
                        }, Object.defineProperty(u.prototype, "props", {
                            set: function () {
                                throw Error()
                            }
                        }), typeof Reflect == "object" && Reflect.construct) {
                            try {
                                Reflect.construct(u, [])
                            } catch (H2) {
                                var d = H2
                            }
                            Reflect.construct(t, [], u)
                        } else {
                            try {
                                u.call()
                            } catch (H2) {
                                d = H2
                            }
                            t.call(u.prototype)
                        } else {
                            try {
                                throw Error()
                            } catch (H2) {
                                d = H2
                            }
                            t()
                        }
                    } catch (H2) {
                        if (H2 && d && typeof H2.stack == "string") {
                            for (var p = H2.stack.split(`
`), x = d.stack.split(`
`), C = p.length - 1, n2 = x.length - 1; 1 <= C && 0 <= n2 && p[C] !== x[n2];) n2--;
                            for (; 1 <= C && 0 <= n2; C--, n2--) if (p[C] !== x[n2]) {
                                if (C !== 1 || n2 !== 1) do if (C--, n2--, 0 > n2 || p[C] !== x[n2]) {
                                    var x2 = `
` + p[C].replace(" at new ", " at ");
                                    return t.displayName && x2.includes("<anonymous>") && (x2 = x2.replace("<anonymous>", t.displayName)), x2
                                } while (1 <= C && 0 <= n2);
                                break
                            }
                        }
                    } finally {
                        Fn = !1, Error.prepareStackTrace = c
                    }
                    return (t = t ? t.displayName || t.name : "") ? wn(t) : ""
                }

                var Rn = Object.prototype.hasOwnProperty, E3 = [], Vn = -1;

                function Jn(t) {
                    return {current: t}
                }

                function G3(t) {
                    0 > Vn || (t.current = E3[Vn], E3[Vn] = null, Vn--)
                }

                function V3(t, u) {
                    Vn++, E3[Vn] = t.current, t.current = u
                }

                var q2 = {}, F2 = Jn(q2), W2 = Jn(!1), r3 = q2;

                function Tn(t, u) {
                    var c = t.type.contextTypes;
                    if (!c) return q2;
                    var d = t.stateNode;
                    if (d && d.__reactInternalMemoizedUnmaskedChildContext === u) return d.__reactInternalMemoizedMaskedChildContext;
                    var p = {}, x;
                    for (x in c) p[x] = u[x];
                    return d && (t = t.stateNode, t.__reactInternalMemoizedUnmaskedChildContext = u, t.__reactInternalMemoizedMaskedChildContext = p), p
                }

                function Un(t) {
                    return t = t.childContextTypes, t != null
                }

                function n3() {
                    G3(W2), G3(F2)
                }

                function Q2(t, u, c) {
                    if (F2.current !== q2) throw Error(f(168));
                    V3(F2, u), V3(W2, c)
                }

                function Ln(t, u, c) {
                    var d = t.stateNode;
                    if (u = u.childContextTypes, typeof d.getChildContext != "function") return c;
                    d = d.getChildContext();
                    for (var p in d) if (!(p in u)) throw Error(f(108, b2(t) || "Unknown", p));
                    return o({}, c, d)
                }

                function pl(t) {
                    return t = (t = t.stateNode) && t.__reactInternalMemoizedMergedChildContext || q2, r3 = F2.current, V3(F2, t), V3(W2, W2.current), !0
                }

                function Cl(t, u, c) {
                    var d = t.stateNode;
                    if (!d) throw Error(f(169));
                    c ? (t = Ln(t, u, r3), d.__reactInternalMemoizedMergedChildContext = t, G3(W2), G3(F2), V3(F2, t)) : G3(W2), V3(W2, c)
                }

                var Xn = Math.clz32 ? Math.clz32 : pt, Wl = Math.log, Lt = Math.LN2;

                function pt(t) {
                    return t >>>= 0, t === 0 ? 32 : 31 - (Wl(t) / Lt | 0) | 0
                }

                var m = 64, y = 4194304;

                function E(t) {
                    switch (t & -t) {
                        case 1:
                            return 1;
                        case 2:
                            return 2;
                        case 4:
                            return 4;
                        case 8:
                            return 8;
                        case 16:
                            return 16;
                        case 32:
                            return 32;
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                            return t & 4194240;
                        case 4194304:
                        case 8388608:
                        case 16777216:
                        case 33554432:
                        case 67108864:
                            return t & 130023424;
                        case 134217728:
                            return 134217728;
                        case 268435456:
                            return 268435456;
                        case 536870912:
                            return 536870912;
                        case 1073741824:
                            return 1073741824;
                        default:
                            return t
                    }
                }

                function I(t, u) {
                    var c = t.pendingLanes;
                    if (c === 0) return 0;
                    var d = 0, p = t.suspendedLanes, x = t.pingedLanes, C = c & 268435455;
                    if (C !== 0) {
                        var n2 = C & ~p;
                        n2 !== 0 ? d = E(n2) : (x &= C, x !== 0 && (d = E(x)))
                    } else C = c & ~p, C !== 0 ? d = E(C) : x !== 0 && (d = E(x));
                    if (d === 0) return 0;
                    if (u !== 0 && u !== d && !(u & p) && (p = d & -d, x = u & -u, p >= x || p === 16 && (x & 4194240) !== 0)) return u;
                    if (d & 4 && (d |= c & 16), u = t.entangledLanes, u !== 0) for (t = t.entanglements, u &= d; 0 < u;) c = 31 - Xn(u), p = 1 << c, d |= t[c], u &= ~p;
                    return d
                }

                function z(t, u) {
                    switch (t) {
                        case 1:
                        case 2:
                        case 4:
                            return u + 250;
                        case 8:
                        case 16:
                        case 32:
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                            return u + 5e3;
                        case 4194304:
                        case 8388608:
                        case 16777216:
                        case 33554432:
                        case 67108864:
                            return -1;
                        case 134217728:
                        case 268435456:
                        case 536870912:
                        case 1073741824:
                            return -1;
                        default:
                            return -1
                    }
                }

                function j(t, u) {
                    for (var c = t.suspendedLanes, d = t.pingedLanes, p = t.expirationTimes, x = t.pendingLanes; 0 < x;) {
                        var C = 31 - Xn(x), n2 = 1 << C, x2 = p[C];
                        x2 === -1 ? (!(n2 & c) || n2 & d) && (p[C] = z(n2, u)) : x2 <= u && (t.expiredLanes |= n2), x &= ~n2
                    }
                }

                function _2(t) {
                    return t = t.pendingLanes & -1073741825, t !== 0 ? t : t & 1073741824 ? 1073741824 : 0
                }

                function J2() {
                    var t = m;
                    return m <<= 1, !(m & 4194240) && (m = 64), t
                }

                function f3(t) {
                    for (var u = [], c = 0; 31 > c; c++) u.push(t);
                    return u
                }

                function d3(t, u, c) {
                    t.pendingLanes |= u, u !== 536870912 && (t.suspendedLanes = 0, t.pingedLanes = 0), t = t.eventTimes, u = 31 - Xn(u), t[u] = c
                }

                function _e(t, u) {
                    var c = t.pendingLanes & ~u;
                    t.pendingLanes = u, t.suspendedLanes = 0, t.pingedLanes = 0, t.expiredLanes &= u, t.mutableReadLanes &= u, t.entangledLanes &= u, u = t.entanglements;
                    var d = t.eventTimes;
                    for (t = t.expirationTimes; 0 < c;) {
                        var p = 31 - Xn(c), x = 1 << p;
                        u[p] = 0, d[p] = -1, t[p] = -1, c &= ~x
                    }
                }

                function _n(t, u) {
                    var c = t.entangledLanes |= u;
                    for (t = t.entanglements; c;) {
                        var d = 31 - Xn(c), p = 1 << d;
                        p & u | t[d] & u && (t[d] |= u), c &= ~p
                    }
                }

                var O2 = 0;

                function ae(t) {
                    return t &= -t, 1 < t ? 4 < t ? t & 268435455 ? 16 : 536870912 : 4 : 1
                }

                var mn = i.unstable_scheduleCallback, Sn = i.unstable_cancelCallback, Ee = i.unstable_shouldYield,
                    Hl = i.unstable_requestPaint, Pn = i.unstable_now, Te = i.unstable_ImmediatePriority,
                    mt = i.unstable_UserBlockingPriority, ht = i.unstable_NormalPriority, Pe = i.unstable_IdlePriority,
                    _l = null, zn = null;

                function yt(t) {
                    if (zn && typeof zn.onCommitFiberRoot == "function") try {
                        zn.onCommitFiberRoot(_l, t, void 0, (t.current.flags & 128) === 128)
                    } catch {
                    }
                }

                function z2(t, u) {
                    return t === u && (t !== 0 || 1 / t === 1 / u) || t !== t && u !== u
                }

                var me = typeof Object.is == "function" ? Object.is : z2, Ke = null, zt = !1, nn = !1;

                function Ze(t) {
                    Ke === null ? Ke = [t] : Ke.push(t)
                }

                function _(t) {
                    zt = !0, Ze(t)
                }

                function h() {
                    if (!nn && Ke !== null) {
                        nn = !0;
                        var t = 0, u = O2;
                        try {
                            var c = Ke;
                            for (O2 = 1; t < c.length; t++) {
                                var d = c[t];
                                do d = d(!0); while (d !== null)
                            }
                            Ke = null, zt = !1
                        } catch (p) {
                            throw Ke !== null && (Ke = Ke.slice(t + 1)), mn(Te, h), p
                        } finally {
                            O2 = u, nn = !1
                        }
                    }
                    return null
                }

                var v = [], U = 0, A = null, W = 0, H = [], V = 0, r2 = null, c2 = 1, i2 = "";

                function V2(t, u) {
                    v[U++] = W, v[U++] = A, A = t, W = u
                }

                function m3(t, u, c) {
                    H[V++] = c2, H[V++] = i2, H[V++] = r2, r2 = t;
                    var d = c2;
                    t = i2;
                    var p = 32 - Xn(d) - 1;
                    d &= ~(1 << p), c += 1;
                    var x = 32 - Xn(u) + p;
                    if (30 < x) {
                        var C = p - p % 5;
                        x = (d & (1 << C) - 1).toString(32), d >>= C, p -= C, c2 = 1 << 32 - Xn(u) + p | c << p | d, i2 = x + t
                    } else c2 = 1 << x | c << p | d, i2 = t
                }

                function v3(t) {
                    t.return !== null && (V2(t, 1), m3(t, 1, 0))
                }

                function X3(t) {
                    for (; t === A;) A = v[--U], v[U] = null, W = v[--U], v[U] = null;
                    for (; t === r2;) r2 = H[--V], H[V] = null, i2 = H[--V], H[V] = null, c2 = H[--V], H[V] = null
                }

                var q3 = null, en = null, p3 = !1, K3 = !1, cn = null;

                function gt(t, u) {
                    var c = wt(5, null, null, 0);
                    c.elementType = "DELETED", c.stateNode = u, c.return = t, u = t.deletions, u === null ? (t.deletions = [c], t.flags |= 16) : u.push(c)
                }

                function Wt(t, u) {
                    switch (t.tag) {
                        case 5:
                            return u = vl(u, t.type, t.pendingProps), u !== null ? (t.stateNode = u, q3 = t, en = A4(u), !0) : !1;
                        case 6:
                            return u = Ll(u, t.pendingProps), u !== null ? (t.stateNode = u, q3 = t, en = null, !0) : !1;
                        case 13:
                            if (u = zl(u), u !== null) {
                                var c = r2 !== null ? {id: c2, overflow: i2} : null;
                                return t.memoizedState = {
                                    dehydrated: u,
                                    treeContext: c,
                                    retryLane: 1073741824
                                }, c = wt(18, null, null, 0), c.stateNode = u, c.return = t, t.child = c, q3 = t, en = null, !0
                            }
                            return !1;
                        default:
                            return !1
                    }
                }

                function xt(t) {
                    return (t.mode & 1) !== 0 && (t.flags & 128) === 0
                }

                function Ae(t) {
                    if (p3) {
                        var u = en;
                        if (u) {
                            var c = u;
                            if (!Wt(t, u)) {
                                if (xt(t)) throw Error(f(418));
                                u = P4(c);
                                var d = q3;
                                u && Wt(t, u) ? gt(d, c) : (t.flags = t.flags & -4097 | 2, p3 = !1, q3 = t)
                            }
                        } else {
                            if (xt(t)) throw Error(f(418));
                            t.flags = t.flags & -4097 | 2, p3 = !1, q3 = t
                        }
                    }
                }

                function Vl(t) {
                    for (t = t.return; t !== null && t.tag !== 5 && t.tag !== 3 && t.tag !== 13;) t = t.return;
                    q3 = t
                }

                function se(t) {
                    if (!Q3 || t !== q3) return !1;
                    if (!p3) return Vl(t), p3 = !0, !1;
                    if (t.tag !== 3 && (t.tag !== 5 || S3(t.type) && !Dn(t.type, t.memoizedProps))) {
                        var u = en;
                        if (u) {
                            if (xt(t)) throw le(), Error(f(418));
                            for (; u;) gt(t, u), u = P4(u)
                        }
                    }
                    if (Vl(t), t.tag === 13) {
                        if (!Q3) throw Error(f(316));
                        if (t = t.memoizedState, t = t !== null ? t.dehydrated : null, !t) throw Error(f(317));
                        en = e2(t)
                    } else en = q3 ? P4(t.stateNode) : null;
                    return !0
                }

                function le() {
                    for (var t = en; t;) t = P4(t)
                }

                function an() {
                    Q3 && (en = q3 = null, K3 = p3 = !1)
                }

                function e1(t) {
                    cn === null ? cn = [t] : cn.push(t)
                }

                var V5 = s.ReactCurrentBatchConfig;

                function k4(t, u) {
                    if (me(t, u)) return !0;
                    if (typeof t != "object" || t === null || typeof u != "object" || u === null) return !1;
                    var c = Object.keys(t), d = Object.keys(u);
                    if (c.length !== d.length) return !1;
                    for (d = 0; d < c.length; d++) {
                        var p = c[d];
                        if (!Rn.call(u, p) || !me(t[p], u[p])) return !1
                    }
                    return !0
                }

                function G5(t) {
                    switch (t.tag) {
                        case 5:
                            return wn(t.type);
                        case 16:
                            return wn("Lazy");
                        case 13:
                            return wn("Suspense");
                        case 19:
                            return wn("SuspenseList");
                        case 0:
                        case 2:
                        case 15:
                            return t = Yn(t.type, !1), t;
                        case 11:
                            return t = Yn(t.type.render, !1), t;
                        case 1:
                            return t = Yn(t.type, !0), t;
                        default:
                            return ""
                    }
                }

                function Qe(t, u) {
                    if (t && t.defaultProps) {
                        u = o({}, u), t = t.defaultProps;
                        for (var c in t) u[c] === void 0 && (u[c] = t[c]);
                        return u
                    }
                    return u
                }

                var I4 = Jn(null), N4 = null, Ht = null, l1 = null;

                function t1() {
                    l1 = Ht = N4 = null
                }

                function q1(t, u, c) {
                    f2 ? (V3(I4, u._currentValue), u._currentValue = c) : (V3(I4, u._currentValue2), u._currentValue2 = c)
                }

                function r1(t) {
                    var u = I4.current;
                    G3(I4), f2 ? t._currentValue = u : t._currentValue2 = u
                }

                function u1(t, u, c) {
                    for (; t !== null;) {
                        var d = t.alternate;
                        if ((t.childLanes & u) !== u ? (t.childLanes |= u, d !== null && (d.childLanes |= u)) : d !== null && (d.childLanes & u) !== u && (d.childLanes |= u), t === c) break;
                        t = t.return
                    }
                }

                function Vt(t, u) {
                    N4 = t, l1 = Ht = null, t = t.dependencies, t !== null && t.firstContext !== null && (t.lanes & u && (Al = !0), t.firstContext = null)
                }

                function je(t) {
                    var u = f2 ? t._currentValue : t._currentValue2;
                    if (l1 !== t) if (t = {context: t, memoizedValue: u, next: null}, Ht === null) {
                        if (N4 === null) throw Error(f(308));
                        Ht = t, N4.dependencies = {lanes: 0, firstContext: t}
                    } else Ht = Ht.next = t;
                    return u
                }

                var bt = null;

                function o1(t) {
                    bt === null ? bt = [t] : bt.push(t)
                }

                function Y1(t, u, c, d) {
                    var p = u.interleaved;
                    return p === null ? (c.next = c, o1(u)) : (c.next = p.next, p.next = c), u.interleaved = c, ml(t, d)
                }

                function ml(t, u) {
                    t.lanes |= u;
                    var c = t.alternate;
                    for (c !== null && (c.lanes |= u), c = t, t = t.return; t !== null;) t.childLanes |= u, c = t.alternate, c !== null && (c.childLanes |= u), c = t, t = t.return;
                    return c.tag === 3 ? c.stateNode : null
                }

                var Gl = !1;

                function i1(t) {
                    t.updateQueue = {
                        baseState: t.memoizedState,
                        firstBaseUpdate: null,
                        lastBaseUpdate: null,
                        shared: {pending: null, interleaved: null, lanes: 0},
                        effects: null
                    }
                }

                function J1(t, u) {
                    t = t.updateQueue, u.updateQueue === t && (u.updateQueue = {
                        baseState: t.baseState,
                        firstBaseUpdate: t.firstBaseUpdate,
                        lastBaseUpdate: t.lastBaseUpdate,
                        shared: t.shared,
                        effects: t.effects
                    })
                }

                function Pl(t, u) {
                    return {eventTime: t, lane: u, tag: 0, payload: null, callback: null, next: null}
                }

                function jl(t, u, c) {
                    var d = t.updateQueue;
                    if (d === null) return null;
                    if (d = d.shared, $3 & 2) {
                        var p = d.pending;
                        return p === null ? u.next = u : (u.next = p.next, p.next = u), d.pending = u, ml(t, c)
                    }
                    return p = d.interleaved, p === null ? (u.next = u, o1(d)) : (u.next = p.next, p.next = u), d.interleaved = u, ml(t, c)
                }

                function R4(t, u, c) {
                    if (u = u.updateQueue, u !== null && (u = u.shared, (c & 4194240) !== 0)) {
                        var d = u.lanes;
                        d &= t.pendingLanes, c |= d, u.lanes = c, _n(t, c)
                    }
                }

                function X1(t, u) {
                    var c = t.updateQueue, d = t.alternate;
                    if (d !== null && (d = d.updateQueue, c === d)) {
                        var p = null, x = null;
                        if (c = c.firstBaseUpdate, c !== null) {
                            do {
                                var C = {
                                    eventTime: c.eventTime,
                                    lane: c.lane,
                                    tag: c.tag,
                                    payload: c.payload,
                                    callback: c.callback,
                                    next: null
                                };
                                x === null ? p = x = C : x = x.next = C, c = c.next
                            } while (c !== null);
                            x === null ? p = x = u : x = x.next = u
                        } else p = x = u;
                        c = {
                            baseState: d.baseState,
                            firstBaseUpdate: p,
                            lastBaseUpdate: x,
                            shared: d.shared,
                            effects: d.effects
                        }, t.updateQueue = c;
                        return
                    }
                    t = c.lastBaseUpdate, t === null ? c.firstBaseUpdate = u : t.next = u, c.lastBaseUpdate = u
                }

                function M4(t, u, c, d) {
                    var p = t.updateQueue;
                    Gl = !1;
                    var x = p.firstBaseUpdate, C = p.lastBaseUpdate, n2 = p.shared.pending;
                    if (n2 !== null) {
                        p.shared.pending = null;
                        var x2 = n2, H2 = x2.next;
                        x2.next = null, C === null ? x = H2 : C.next = H2, C = x2;
                        var a3 = t.alternate;
                        a3 !== null && (a3 = a3.updateQueue, n2 = a3.lastBaseUpdate, n2 !== C && (n2 === null ? a3.firstBaseUpdate = H2 : n2.next = H2, a3.lastBaseUpdate = x2))
                    }
                    if (x !== null) {
                        var z3 = p.baseState;
                        C = 0, a3 = H2 = x2 = null, n2 = x;
                        do {
                            var t3 = n2.lane, Kn = n2.eventTime;
                            if ((d & t3) === t3) {
                                a3 !== null && (a3 = a3.next = {
                                    eventTime: Kn,
                                    lane: 0,
                                    tag: n2.tag,
                                    payload: n2.payload,
                                    callback: n2.callback,
                                    next: null
                                });
                                n:{
                                    var Wn = t, Nl = n2;
                                    switch (t3 = u, Kn = c, Nl.tag) {
                                        case 1:
                                            if (Wn = Nl.payload, typeof Wn == "function") {
                                                z3 = Wn.call(Kn, z3, t3);
                                                break n
                                            }
                                            z3 = Wn;
                                            break n;
                                        case 3:
                                            Wn.flags = Wn.flags & -65537 | 128;
                                        case 0:
                                            if (Wn = Nl.payload, t3 = typeof Wn == "function" ? Wn.call(Kn, z3, t3) : Wn, t3 == null) break n;
                                            z3 = o({}, z3, t3);
                                            break n;
                                        case 2:
                                            Gl = !0
                                    }
                                }
                                n2.callback !== null && n2.lane !== 0 && (t.flags |= 64, t3 = p.effects, t3 === null ? p.effects = [n2] : t3.push(n2))
                            } else Kn = {
                                eventTime: Kn,
                                lane: t3,
                                tag: n2.tag,
                                payload: n2.payload,
                                callback: n2.callback,
                                next: null
                            }, a3 === null ? (H2 = a3 = Kn, x2 = z3) : a3 = a3.next = Kn, C |= t3;
                            if (n2 = n2.next, n2 === null) {
                                if (n2 = p.shared.pending, n2 === null) break;
                                t3 = n2, n2 = t3.next, t3.next = null, p.lastBaseUpdate = t3, p.shared.pending = null
                            }
                        } while (1);
                        if (a3 === null && (x2 = z3), p.baseState = x2, p.firstBaseUpdate = H2, p.lastBaseUpdate = a3, u = p.shared.interleaved, u !== null) {
                            p = u;
                            do C |= p.lane, p = p.next; while (p !== u)
                        } else x === null && (p.shared.lanes = 0);
                        l5 |= C, t.lanes = C, t.memoizedState = z3
                    }
                }

                function K1(t, u, c) {
                    if (t = u.effects, u.effects = null, t !== null) for (u = 0; u < t.length; u++) {
                        var d = t[u], p = d.callback;
                        if (p !== null) {
                            if (d.callback = null, d = c, typeof p != "function") throw Error(f(191, p));
                            p.call(d)
                        }
                    }
                }

                var Z1 = new l.Component().refs;

                function a1(t, u, c, d) {
                    u = t.memoizedState, c = c(d, u), c = c == null ? u : o({}, u, c), t.memoizedState = c, t.lanes === 0 && (t.updateQueue.baseState = c)
                }

                var O4 = {
                    isMounted: function (t) {
                        return (t = t._reactInternals) ? g2(t) === t : !1
                    }, enqueueSetState: function (t, u, c) {
                        t = t._reactInternals;
                        var d = ll(), p = d1(t), x = Pl(d, p);
                        x.payload = u, c != null && (x.callback = c), u = jl(t, x, p), u !== null && (St(u, t, p, d), R4(u, t, p))
                    }, enqueueReplaceState: function (t, u, c) {
                        t = t._reactInternals;
                        var d = ll(), p = d1(t), x = Pl(d, p);
                        x.tag = 1, x.payload = u, c != null && (x.callback = c), u = jl(t, x, p), u !== null && (St(u, t, p, d), R4(u, t, p))
                    }, enqueueForceUpdate: function (t, u) {
                        t = t._reactInternals;
                        var c = ll(), d = d1(t), p = Pl(c, d);
                        p.tag = 2, u != null && (p.callback = u), u = jl(t, p, d), u !== null && (St(u, t, d, c), R4(u, t, d))
                    }
                };

                function Q1(t, u, c, d, p, x, C) {
                    return t = t.stateNode, typeof t.shouldComponentUpdate == "function" ? t.shouldComponentUpdate(d, x, C) : u.prototype && u.prototype.isPureReactComponent ? !k4(c, d) || !k4(p, x) : !0
                }

                function $1(t, u, c) {
                    var d = !1, p = q2, x = u.contextType;
                    return typeof x == "object" && x !== null ? x = je(x) : (p = Un(u) ? r3 : F2.current, d = u.contextTypes, x = (d = d != null) ? Tn(t, p) : q2), u = new u(c, x), t.memoizedState = u.state !== null && u.state !== void 0 ? u.state : null, u.updater = O4, t.stateNode = u, u._reactInternals = t, d && (t = t.stateNode, t.__reactInternalMemoizedUnmaskedChildContext = p, t.__reactInternalMemoizedMaskedChildContext = x), u
                }

                function n5(t, u, c, d) {
                    t = u.state, typeof u.componentWillReceiveProps == "function" && u.componentWillReceiveProps(c, d), typeof u.UNSAFE_componentWillReceiveProps == "function" && u.UNSAFE_componentWillReceiveProps(c, d), u.state !== t && O4.enqueueReplaceState(u, u.state, null)
                }

                function s1(t, u, c, d) {
                    var p = t.stateNode;
                    p.props = c, p.state = t.memoizedState, p.refs = Z1, i1(t);
                    var x = u.contextType;
                    typeof x == "object" && x !== null ? p.context = je(x) : (x = Un(u) ? r3 : F2.current, p.context = Tn(t, x)), p.state = t.memoizedState, x = u.getDerivedStateFromProps, typeof x == "function" && (a1(t, u, x, c), p.state = t.memoizedState), typeof u.getDerivedStateFromProps == "function" || typeof p.getSnapshotBeforeUpdate == "function" || typeof p.UNSAFE_componentWillMount != "function" && typeof p.componentWillMount != "function" || (u = p.state, typeof p.componentWillMount == "function" && p.componentWillMount(), typeof p.UNSAFE_componentWillMount == "function" && p.UNSAFE_componentWillMount(), u !== p.state && O4.enqueueReplaceState(p, p.state, null), M4(t, c, p, d), p.state = t.memoizedState), typeof p.componentDidMount == "function" && (t.flags |= 4194308)
                }

                function o4(t, u, c) {
                    if (t = c.ref, t !== null && typeof t != "function" && typeof t != "object") {
                        if (c._owner) {
                            if (c = c._owner, c) {
                                if (c.tag !== 1) throw Error(f(309));
                                var d = c.stateNode
                            }
                            if (!d) throw Error(f(147, t));
                            var p = d, x = "" + t;
                            return u !== null && u.ref !== null && typeof u.ref == "function" && u.ref._stringRef === x ? u.ref : (u = function (C) {
                                var n2 = p.refs;
                                n2 === Z1 && (n2 = p.refs = {}), C === null ? delete n2[x] : n2[x] = C
                            }, u._stringRef = x, u)
                        }
                        if (typeof t != "string") throw Error(f(284));
                        if (!c._owner) throw Error(f(290, t))
                    }
                    return t
                }

                function D4(t, u) {
                    throw t = Object.prototype.toString.call(u), Error(f(31, t === "[object Object]" ? "object with keys {" + Object.keys(u).join(", ") + "}" : t))
                }

                function ss(t) {
                    var u = t._init;
                    return u(t._payload)
                }

                function cs(t) {
                    function u(m2, u2) {
                        if (t) {
                            var v2 = m2.deletions;
                            v2 === null ? (m2.deletions = [u2], m2.flags |= 16) : v2.push(u2)
                        }
                    }

                    function c(m2, u2) {
                        if (!t) return null;
                        for (; u2 !== null;) u(m2, u2), u2 = u2.sibling;
                        return null
                    }

                    function d(m2, u2) {
                        for (m2 = new Map; u2 !== null;) u2.key !== null ? m2.set(u2.key, u2) : m2.set(u2.index, u2), u2 = u2.sibling;
                        return m2
                    }

                    function p(m2, u2) {
                        return m2 = m1(m2, u2), m2.index = 0, m2.sibling = null, m2
                    }

                    function x(m2, u2, v2) {
                        return m2.index = v2, t ? (v2 = m2.alternate, v2 !== null ? (v2 = v2.index, v2 < u2 ? (m2.flags |= 2, u2) : v2) : (m2.flags |= 2, u2)) : (m2.flags |= 1048576, u2)
                    }

                    function C(m2) {
                        return t && m2.alternate === null && (m2.flags |= 2), m2
                    }

                    function n2(m2, u2, v2, u3) {
                        return u2 === null || u2.tag !== 6 ? (u2 = Uu(v2, m2.mode, u3), u2.return = m2, u2) : (u2 = p(u2, v2), u2.return = m2, u2)
                    }

                    function x2(m2, u2, v2, u3) {
                        var A3 = v2.type;
                        return A3 === b ? a3(m2, u2, v2.props.children, u3, v2.key) : u2 !== null && (u2.elementType === A3 || typeof A3 == "object" && A3 !== null && A3.$$typeof === Z && ss(A3) === u2.type) ? (u3 = p(u2, v2.props), u3.ref = o4(m2, u2, v2), u3.return = m2, u3) : (u3 = r9(v2.type, v2.key, v2.props, null, m2.mode, u3), u3.ref = o4(m2, u2, v2), u3.return = m2, u3)
                    }

                    function H2(m2, u2, v2, u3) {
                        return u2 === null || u2.tag !== 4 || u2.stateNode.containerInfo !== v2.containerInfo || u2.stateNode.implementation !== v2.implementation ? (u2 = Lu(v2, m2.mode, u3), u2.return = m2, u2) : (u2 = p(u2, v2.children || []), u2.return = m2, u2)
                    }

                    function a3(m2, u2, v2, u3, A3) {
                        return u2 === null || u2.tag !== 7 ? (u2 = o5(v2, m2.mode, u3, A3), u2.return = m2, u2) : (u2 = p(u2, v2), u2.return = m2, u2)
                    }

                    function z3(m2, u2, v2) {
                        if (typeof u2 == "string" && u2 !== "" || typeof u2 == "number") return u2 = Uu("" + u2, m2.mode, v2), u2.return = m2, u2;
                        if (typeof u2 == "object" && u2 !== null) {
                            switch (u2.$$typeof) {
                                case a:
                                    return v2 = r9(u2.type, u2.key, u2.props, null, m2.mode, v2), v2.ref = o4(m2, null, u2), v2.return = m2, v2;
                                case g:
                                    return u2 = Lu(u2, m2.mode, v2), u2.return = m2, u2;
                                case Z:
                                    var u3 = u2._init;
                                    return z3(m2, u3(u2._payload), v2)
                            }
                            if (k2(u2) || T2(u2)) return u2 = o5(u2, m2.mode, v2, null), u2.return = m2, u2;
                            D4(m2, u2)
                        }
                        return null
                    }

                    function t3(m2, u2, v2, u3) {
                        var A3 = u2 !== null ? u2.key : null;
                        if (typeof v2 == "string" && v2 !== "" || typeof v2 == "number") return A3 !== null ? null : n2(m2, u2, "" + v2, u3);
                        if (typeof v2 == "object" && v2 !== null) {
                            switch (v2.$$typeof) {
                                case a:
                                    return v2.key === A3 ? x2(m2, u2, v2, u3) : null;
                                case g:
                                    return v2.key === A3 ? H2(m2, u2, v2, u3) : null;
                                case Z:
                                    return A3 = v2._init, t3(m2, u2, A3(v2._payload), u3)
                            }
                            if (k2(v2) || T2(v2)) return A3 !== null ? null : a3(m2, u2, v2, u3, null);
                            D4(m2, v2)
                        }
                        return null
                    }

                    function Kn(m2, u2, v2, u3, A3) {
                        if (typeof u3 == "string" && u3 !== "" || typeof u3 == "number") return m2 = m2.get(v2) || null, n2(u2, m2, "" + u3, A3);
                        if (typeof u3 == "object" && u3 !== null) {
                            switch (u3.$$typeof) {
                                case a:
                                    return m2 = m2.get(u3.key === null ? v2 : u3.key) || null, x2(u2, m2, u3, A3);
                                case g:
                                    return m2 = m2.get(u3.key === null ? v2 : u3.key) || null, H2(u2, m2, u3, A3);
                                case Z:
                                    var Y3 = u3._init;
                                    return Kn(m2, u2, v2, Y3(u3._payload), A3)
                            }
                            if (k2(u3) || T2(u3)) return m2 = m2.get(v2) || null, a3(u2, m2, u3, A3, null);
                            D4(u2, u3)
                        }
                        return null
                    }

                    function Wn(m2, u2, v2, u3) {
                        for (var A3 = null, Y3 = null, W3 = u2, hn = u2 = 0, ze = null; W3 !== null && hn < v2.length; hn++) {
                            W3.index > hn ? (ze = W3, W3 = null) : ze = W3.sibling;
                            var yn = t3(m2, W3, v2[hn], u3);
                            if (yn === null) {
                                W3 === null && (W3 = ze);
                                break
                            }
                            t && W3 && yn.alternate === null && u(m2, W3), u2 = x(yn, u2, hn), Y3 === null ? A3 = yn : Y3.sibling = yn, Y3 = yn, W3 = ze
                        }
                        if (hn === v2.length) return c(m2, W3), p3 && V2(m2, hn), A3;
                        if (W3 === null) {
                            for (; hn < v2.length; hn++) W3 = z3(m2, v2[hn], u3), W3 !== null && (u2 = x(W3, u2, hn), Y3 === null ? A3 = W3 : Y3.sibling = W3, Y3 = W3);
                            return p3 && V2(m2, hn), A3
                        }
                        for (W3 = d(m2, W3); hn < v2.length; hn++) ze = Kn(W3, m2, hn, v2[hn], u3), ze !== null && (t && ze.alternate !== null && W3.delete(ze.key === null ? hn : ze.key), u2 = x(ze, u2, hn), Y3 === null ? A3 = ze : Y3.sibling = ze, Y3 = ze);
                        return t && W3.forEach(function (h1) {
                            return u(m2, h1)
                        }), p3 && V2(m2, hn), A3
                    }

                    function Nl(m2, u2, v2, u3) {
                        var A3 = T2(v2);
                        if (typeof A3 != "function") throw Error(f(150));
                        if (v2 = A3.call(v2), v2 == null) throw Error(f(151));
                        for (var Y3 = A3 = null, W3 = u2, hn = u2 = 0, ze = null, yn = v2.next(); W3 !== null && !yn.done; hn++, yn = v2.next()) {
                            W3.index > hn ? (ze = W3, W3 = null) : ze = W3.sibling;
                            var h1 = t3(m2, W3, yn.value, u3);
                            if (h1 === null) {
                                W3 === null && (W3 = ze);
                                break
                            }
                            t && W3 && h1.alternate === null && u(m2, W3), u2 = x(h1, u2, hn), Y3 === null ? A3 = h1 : Y3.sibling = h1, Y3 = h1, W3 = ze
                        }
                        if (yn.done) return c(m2, W3), p3 && V2(m2, hn), A3;
                        if (W3 === null) {
                            for (; !yn.done; hn++, yn = v2.next()) yn = z3(m2, yn.value, u3), yn !== null && (u2 = x(yn, u2, hn), Y3 === null ? A3 = yn : Y3.sibling = yn, Y3 = yn);
                            return p3 && V2(m2, hn), A3
                        }
                        for (W3 = d(m2, W3); !yn.done; hn++, yn = v2.next()) yn = Kn(W3, m2, hn, yn.value, u3), yn !== null && (t && yn.alternate !== null && W3.delete(yn.key === null ? hn : yn.key), u2 = x(yn, u2, hn), Y3 === null ? A3 = yn : Y3.sibling = yn, Y3 = yn);
                        return t && W3.forEach(function (Qx) {
                            return u(m2, Qx)
                        }), p3 && V2(m2, hn), A3
                    }

                    function U4(m2, u2, v2, u3) {
                        if (typeof v2 == "object" && v2 !== null && v2.type === b && v2.key === null && (v2 = v2.props.children), typeof v2 == "object" && v2 !== null) {
                            switch (v2.$$typeof) {
                                case a:
                                    n:{
                                        for (var A3 = v2.key, Y3 = u2; Y3 !== null;) {
                                            if (Y3.key === A3) {
                                                if (A3 = v2.type, A3 === b) {
                                                    if (Y3.tag === 7) {
                                                        c(m2, Y3.sibling), u2 = p(Y3, v2.props.children), u2.return = m2, m2 = u2;
                                                        break n
                                                    }
                                                } else if (Y3.elementType === A3 || typeof A3 == "object" && A3 !== null && A3.$$typeof === Z && ss(A3) === Y3.type) {
                                                    c(m2, Y3.sibling), u2 = p(Y3, v2.props), u2.ref = o4(m2, Y3, v2), u2.return = m2, m2 = u2;
                                                    break n
                                                }
                                                c(m2, Y3);
                                                break
                                            } else u(m2, Y3);
                                            Y3 = Y3.sibling
                                        }
                                        v2.type === b ? (u2 = o5(v2.props.children, m2.mode, u3, v2.key), u2.return = m2, m2 = u2) : (u3 = r9(v2.type, v2.key, v2.props, null, m2.mode, u3), u3.ref = o4(m2, u2, v2), u3.return = m2, m2 = u3)
                                    }
                                    return C(m2);
                                case g:
                                    n:{
                                        for (Y3 = v2.key; u2 !== null;) {
                                            if (u2.key === Y3) if (u2.tag === 4 && u2.stateNode.containerInfo === v2.containerInfo && u2.stateNode.implementation === v2.implementation) {
                                                c(m2, u2.sibling), u2 = p(u2, v2.children || []), u2.return = m2, m2 = u2;
                                                break n
                                            } else {
                                                c(m2, u2);
                                                break
                                            } else u(m2, u2);
                                            u2 = u2.sibling
                                        }
                                        u2 = Lu(v2, m2.mode, u3), u2.return = m2, m2 = u2
                                    }
                                    return C(m2);
                                case Z:
                                    return Y3 = v2._init, U4(m2, u2, Y3(v2._payload), u3)
                            }
                            if (k2(v2)) return Wn(m2, u2, v2, u3);
                            if (T2(v2)) return Nl(m2, u2, v2, u3);
                            D4(m2, v2)
                        }
                        return typeof v2 == "string" && v2 !== "" || typeof v2 == "number" ? (v2 = "" + v2, u2 !== null && u2.tag === 6 ? (c(m2, u2.sibling), u2 = p(u2, v2), u2.return = m2, m2 = u2) : (c(m2, u2), u2 = Uu(v2, m2.mode, u3), u2.return = m2, m2 = u2), C(m2)) : c(m2, u2)
                    }

                    return U4
                }

                var j5 = cs(!0), fs = cs(!1), T6 = {}, Et = Jn(T6), S6 = Jn(T6), q5 = Jn(T6);

                function i4(t) {
                    if (t === T6) throw Error(f(174));
                    return t
                }

                function Qr(t, u) {
                    V3(q5, u), V3(S6, t), V3(Et, T6), t = g3(u), G3(Et), V3(Et, t)
                }

                function Y5() {
                    G3(Et), G3(S6), G3(q5)
                }

                function ds(t) {
                    var u = i4(q5.current), c = i4(Et.current);
                    u = P3(c, t.type, u), c !== u && (V3(S6, t), V3(Et, u))
                }

                function $r(t) {
                    S6.current === t && (G3(Et), G3(S6))
                }

                var te = Jn(0);

                function M8(t) {
                    for (var u = t; u !== null;) {
                        if (u.tag === 13) {
                            var c = u.memoizedState;
                            if (c !== null && (c = c.dehydrated, c === null || dt(c) || G1(c))) return u
                        } else if (u.tag === 19 && u.memoizedProps.revealOrder !== void 0) {
                            if (u.flags & 128) return u
                        } else if (u.child !== null) {
                            u.child.return = u, u = u.child;
                            continue
                        }
                        if (u === t) break;
                        for (; u.sibling === null;) {
                            if (u.return === null || u.return === t) return null;
                            u = u.return
                        }
                        u.sibling.return = u.return, u = u.sibling
                    }
                    return null
                }

                var nu = [];

                function eu() {
                    for (var t = 0; t < nu.length; t++) {
                        var u = nu[t];
                        f2 ? u._workInProgressVersionPrimary = null : u._workInProgressVersionSecondary = null
                    }
                    nu.length = 0
                }

                var O8 = s.ReactCurrentDispatcher, lu = s.ReactCurrentBatchConfig, e5 = 0, re = null, ke = null,
                    Ue = null, D8 = !1, w6 = !1, v6 = 0, wx = 0;

                function $e() {
                    throw Error(f(321))
                }

                function tu(t, u) {
                    if (u === null) return !1;
                    for (var c = 0; c < u.length && c < t.length; c++) if (!me(t[c], u[c])) return !1;
                    return !0
                }

                function ru(t, u, c, d, p, x) {
                    if (e5 = x, re = u, u.memoizedState = null, u.updateQueue = null, u.lanes = 0, O8.current = t === null || t.memoizedState === null ? Px : Ax, t = c(d, p), w6) {
                        x = 0;
                        do {
                            if (w6 = !1, v6 = 0, 25 <= x) throw Error(f(301));
                            x += 1, Ue = ke = null, u.updateQueue = null, O8.current = kx, t = c(d, p)
                        } while (w6)
                    }
                    if (O8.current = U8, u = ke !== null && ke.next !== null, e5 = 0, Ue = ke = re = null, D8 = !1, u) throw Error(f(300));
                    return t
                }

                function uu() {
                    var t = v6 !== 0;
                    return v6 = 0, t
                }

                function a4() {
                    var t = {memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null};
                    return Ue === null ? re.memoizedState = Ue = t : Ue = Ue.next = t, Ue
                }

                function Tt() {
                    if (ke === null) {
                        var t = re.alternate;
                        t = t !== null ? t.memoizedState : null
                    } else t = ke.next;
                    var u = Ue === null ? re.memoizedState : Ue.next;
                    if (u !== null) Ue = u, ke = t; else {
                        if (t === null) throw Error(f(310));
                        ke = t, t = {
                            memoizedState: ke.memoizedState,
                            baseState: ke.baseState,
                            baseQueue: ke.baseQueue,
                            queue: ke.queue,
                            next: null
                        }, Ue === null ? re.memoizedState = Ue = t : Ue = Ue.next = t
                    }
                    return Ue
                }

                function C6(t, u) {
                    return typeof u == "function" ? u(t) : u
                }

                function ou(t) {
                    var u = Tt(), c = u.queue;
                    if (c === null) throw Error(f(311));
                    c.lastRenderedReducer = t;
                    var d = ke, p = d.baseQueue, x = c.pending;
                    if (x !== null) {
                        if (p !== null) {
                            var C = p.next;
                            p.next = x.next, x.next = C
                        }
                        d.baseQueue = p = x, c.pending = null
                    }
                    if (p !== null) {
                        x = p.next, d = d.baseState;
                        var n2 = C = null, x2 = null, H2 = x;
                        do {
                            var a3 = H2.lane;
                            if ((e5 & a3) === a3) x2 !== null && (x2 = x2.next = {
                                lane: 0,
                                action: H2.action,
                                hasEagerState: H2.hasEagerState,
                                eagerState: H2.eagerState,
                                next: null
                            }), d = H2.hasEagerState ? H2.eagerState : t(d, H2.action); else {
                                var z3 = {
                                    lane: a3,
                                    action: H2.action,
                                    hasEagerState: H2.hasEagerState,
                                    eagerState: H2.eagerState,
                                    next: null
                                };
                                x2 === null ? (n2 = x2 = z3, C = d) : x2 = x2.next = z3, re.lanes |= a3, l5 |= a3
                            }
                            H2 = H2.next
                        } while (H2 !== null && H2 !== x);
                        x2 === null ? C = d : x2.next = n2, me(d, u.memoizedState) || (Al = !0), u.memoizedState = d, u.baseState = C, u.baseQueue = x2, c.lastRenderedState = d
                    }
                    if (t = c.interleaved, t !== null) {
                        p = t;
                        do x = p.lane, re.lanes |= x, l5 |= x, p = p.next; while (p !== t)
                    } else p === null && (c.lanes = 0);
                    return [u.memoizedState, c.dispatch]
                }

                function iu(t) {
                    var u = Tt(), c = u.queue;
                    if (c === null) throw Error(f(311));
                    c.lastRenderedReducer = t;
                    var d = c.dispatch, p = c.pending, x = u.memoizedState;
                    if (p !== null) {
                        c.pending = null;
                        var C = p = p.next;
                        do x = t(x, C.action), C = C.next; while (C !== p);
                        me(x, u.memoizedState) || (Al = !0), u.memoizedState = x, u.baseQueue === null && (u.baseState = x), c.lastRenderedState = x
                    }
                    return [x, d]
                }

                function ps() {
                }

                function ms(t, u) {
                    var c = re, d = Tt(), p = u(), x = !me(d.memoizedState, p);
                    if (x && (d.memoizedState = p, Al = !0), d = d.queue, au(gs.bind(null, c, d, t), [t]), d.getSnapshot !== u || x || Ue !== null && Ue.memoizedState.tag & 1) {
                        if (c.flags |= 2048, _6(9, ys.bind(null, c, d, p, u), void 0, null), Le === null) throw Error(f(349));
                        e5 & 30 || hs(c, u, p)
                    }
                    return p
                }

                function hs(t, u, c) {
                    t.flags |= 16384, t = {
                        getSnapshot: u,
                        value: c
                    }, u = re.updateQueue, u === null ? (u = {
                        lastEffect: null,
                        stores: null
                    }, re.updateQueue = u, u.stores = [t]) : (c = u.stores, c === null ? u.stores = [t] : c.push(t))
                }

                function ys(t, u, c, d) {
                    u.value = c, u.getSnapshot = d, xs(u) && bs(t)
                }

                function gs(t, u, c) {
                    return c(function () {
                        xs(u) && bs(t)
                    })
                }

                function xs(t) {
                    var u = t.getSnapshot;
                    t = t.value;
                    try {
                        var c = u();
                        return !me(t, c)
                    } catch {
                        return !0
                    }
                }

                function bs(t) {
                    var u = ml(t, 1);
                    u !== null && St(u, t, 1, -1)
                }

                function Es(t) {
                    var u = a4();
                    return typeof t == "function" && (t = t()), u.memoizedState = u.baseState = t, t = {
                        pending: null,
                        interleaved: null,
                        lanes: 0,
                        dispatch: null,
                        lastRenderedReducer: C6,
                        lastRenderedState: t
                    }, u.queue = t, t = t.dispatch = _x.bind(null, re, t), [u.memoizedState, t]
                }

                function _6(t, u, c, d) {
                    return t = {
                        tag: t,
                        create: u,
                        destroy: c,
                        deps: d,
                        next: null
                    }, u = re.updateQueue, u === null ? (u = {
                        lastEffect: null,
                        stores: null
                    }, re.updateQueue = u, u.lastEffect = t.next = t) : (c = u.lastEffect, c === null ? u.lastEffect = t.next = t : (d = c.next, c.next = t, t.next = d, u.lastEffect = t)), t
                }

                function Ts() {
                    return Tt().memoizedState
                }

                function B8(t, u, c, d) {
                    var p = a4();
                    re.flags |= t, p.memoizedState = _6(1 | u, c, void 0, d === void 0 ? null : d)
                }

                function F8(t, u, c, d) {
                    var p = Tt();
                    d = d === void 0 ? null : d;
                    var x = void 0;
                    if (ke !== null) {
                        var C = ke.memoizedState;
                        if (x = C.destroy, d !== null && tu(d, C.deps)) {
                            p.memoizedState = _6(u, c, x, d);
                            return
                        }
                    }
                    re.flags |= t, p.memoizedState = _6(1 | u, c, x, d)
                }

                function Ss(t, u) {
                    return B8(8390656, 8, t, u)
                }

                function au(t, u) {
                    return F8(2048, 8, t, u)
                }

                function ws(t, u) {
                    return F8(4, 2, t, u)
                }

                function vs(t, u) {
                    return F8(4, 4, t, u)
                }

                function Cs(t, u) {
                    if (typeof u == "function") return t = t(), u(t), function () {
                        u(null)
                    };
                    if (u != null) return t = t(), u.current = t, function () {
                        u.current = null
                    }
                }

                function _s(t, u, c) {
                    return c = c != null ? c.concat([t]) : null, F8(4, 4, Cs.bind(null, u, t), c)
                }

                function su() {
                }

                function Ps(t, u) {
                    var c = Tt();
                    u = u === void 0 ? null : u;
                    var d = c.memoizedState;
                    return d !== null && u !== null && tu(u, d[1]) ? d[0] : (c.memoizedState = [t, u], t)
                }

                function As(t, u) {
                    var c = Tt();
                    u = u === void 0 ? null : u;
                    var d = c.memoizedState;
                    return d !== null && u !== null && tu(u, d[1]) ? d[0] : (t = t(), c.memoizedState = [t, u], t)
                }

                function ks(t, u, c) {
                    return e5 & 21 ? (me(c, u) || (c = J2(), re.lanes |= c, l5 |= c, t.baseState = !0), u) : (t.baseState && (t.baseState = !1, Al = !0), t.memoizedState = c)
                }

                function vx(t, u) {
                    var c = O2;
                    O2 = c !== 0 && 4 > c ? c : 4, t(!0);
                    var d = lu.transition;
                    lu.transition = {};
                    try {
                        t(!1), u()
                    } finally {
                        O2 = c, lu.transition = d
                    }
                }

                function Is() {
                    return Tt().memoizedState
                }

                function Cx(t, u, c) {
                    var d = d1(t);
                    if (c = {
                        lane: d,
                        action: c,
                        hasEagerState: !1,
                        eagerState: null,
                        next: null
                    }, Ns(t)) Rs(u, c); else if (c = Y1(t, u, c, d), c !== null) {
                        var p = ll();
                        St(c, t, d, p), Ms(c, u, d)
                    }
                }

                function _x(t, u, c) {
                    var d = d1(t), p = {lane: d, action: c, hasEagerState: !1, eagerState: null, next: null};
                    if (Ns(t)) Rs(u, p); else {
                        var x = t.alternate;
                        if (t.lanes === 0 && (x === null || x.lanes === 0) && (x = u.lastRenderedReducer, x !== null)) try {
                            var C = u.lastRenderedState, n2 = x(C, c);
                            if (p.hasEagerState = !0, p.eagerState = n2, me(n2, C)) {
                                var x2 = u.interleaved;
                                x2 === null ? (p.next = p, o1(u)) : (p.next = x2.next, x2.next = p), u.interleaved = p;
                                return
                            }
                        } catch {
                        } finally {
                        }
                        c = Y1(t, u, p, d), c !== null && (p = ll(), St(c, t, d, p), Ms(c, u, d))
                    }
                }

                function Ns(t) {
                    var u = t.alternate;
                    return t === re || u !== null && u === re
                }

                function Rs(t, u) {
                    w6 = D8 = !0;
                    var c = t.pending;
                    c === null ? u.next = u : (u.next = c.next, c.next = u), t.pending = u
                }

                function Ms(t, u, c) {
                    if (c & 4194240) {
                        var d = u.lanes;
                        d &= t.pendingLanes, c |= d, u.lanes = c, _n(t, c)
                    }
                }

                var U8 = {
                    readContext: je,
                    useCallback: $e,
                    useContext: $e,
                    useEffect: $e,
                    useImperativeHandle: $e,
                    useInsertionEffect: $e,
                    useLayoutEffect: $e,
                    useMemo: $e,
                    useReducer: $e,
                    useRef: $e,
                    useState: $e,
                    useDebugValue: $e,
                    useDeferredValue: $e,
                    useTransition: $e,
                    useMutableSource: $e,
                    useSyncExternalStore: $e,
                    useId: $e,
                    unstable_isNewReconciler: !1
                }, Px = {
                    readContext: je, useCallback: function (t, u) {
                        return a4().memoizedState = [t, u === void 0 ? null : u], t
                    }, useContext: je, useEffect: Ss, useImperativeHandle: function (t, u, c) {
                        return c = c != null ? c.concat([t]) : null, B8(4194308, 4, Cs.bind(null, u, t), c)
                    }, useLayoutEffect: function (t, u) {
                        return B8(4194308, 4, t, u)
                    }, useInsertionEffect: function (t, u) {
                        return B8(4, 2, t, u)
                    }, useMemo: function (t, u) {
                        var c = a4();
                        return u = u === void 0 ? null : u, t = t(), c.memoizedState = [t, u], t
                    }, useReducer: function (t, u, c) {
                        var d = a4();
                        return u = c !== void 0 ? c(u) : u, d.memoizedState = d.baseState = u, t = {
                            pending: null,
                            interleaved: null,
                            lanes: 0,
                            dispatch: null,
                            lastRenderedReducer: t,
                            lastRenderedState: u
                        }, d.queue = t, t = t.dispatch = Cx.bind(null, re, t), [d.memoizedState, t]
                    }, useRef: function (t) {
                        var u = a4();
                        return t = {current: t}, u.memoizedState = t
                    }, useState: Es, useDebugValue: su, useDeferredValue: function (t) {
                        return a4().memoizedState = t
                    }, useTransition: function () {
                        var t = Es(!1), u = t[0];
                        return t = vx.bind(null, t[1]), a4().memoizedState = t, [u, t]
                    }, useMutableSource: function () {
                    }, useSyncExternalStore: function (t, u, c) {
                        var d = re, p = a4();
                        if (p3) {
                            if (c === void 0) throw Error(f(407));
                            c = c()
                        } else {
                            if (c = u(), Le === null) throw Error(f(349));
                            e5 & 30 || hs(d, u, c)
                        }
                        p.memoizedState = c;
                        var x = {value: c, getSnapshot: u};
                        return p.queue = x, Ss(gs.bind(null, d, x, t), [t]), d.flags |= 2048, _6(9, ys.bind(null, d, x, c, u), void 0, null), c
                    }, useId: function () {
                        var t = a4(), u = Le.identifierPrefix;
                        if (p3) {
                            var c = i2, d = c2;
                            c = (d & ~(1 << 32 - Xn(d) - 1)).toString(32) + c, u = ":" + u + "R" + c, c = v6++, 0 < c && (u += "H" + c.toString(32)), u += ":"
                        } else c = wx++, u = ":" + u + "r" + c.toString(32) + ":";
                        return t.memoizedState = u
                    }, unstable_isNewReconciler: !1
                }, Ax = {
                    readContext: je,
                    useCallback: Ps,
                    useContext: je,
                    useEffect: au,
                    useImperativeHandle: _s,
                    useInsertionEffect: ws,
                    useLayoutEffect: vs,
                    useMemo: As,
                    useReducer: ou,
                    useRef: Ts,
                    useState: function () {
                        return ou(C6)
                    },
                    useDebugValue: su,
                    useDeferredValue: function (t) {
                        var u = Tt();
                        return ks(u, ke.memoizedState, t)
                    },
                    useTransition: function () {
                        var t = ou(C6)[0], u = Tt().memoizedState;
                        return [t, u]
                    },
                    useMutableSource: ps,
                    useSyncExternalStore: ms,
                    useId: Is,
                    unstable_isNewReconciler: !1
                }, kx = {
                    readContext: je,
                    useCallback: Ps,
                    useContext: je,
                    useEffect: au,
                    useImperativeHandle: _s,
                    useInsertionEffect: ws,
                    useLayoutEffect: vs,
                    useMemo: As,
                    useReducer: iu,
                    useRef: Ts,
                    useState: function () {
                        return iu(C6)
                    },
                    useDebugValue: su,
                    useDeferredValue: function (t) {
                        var u = Tt();
                        return ke === null ? u.memoizedState = t : ks(u, ke.memoizedState, t)
                    },
                    useTransition: function () {
                        var t = iu(C6)[0], u = Tt().memoizedState;
                        return [t, u]
                    },
                    useMutableSource: ps,
                    useSyncExternalStore: ms,
                    useId: Is,
                    unstable_isNewReconciler: !1
                };

                function J5(t, u) {
                    try {
                        var c = "", d = u;
                        do c += G5(d), d = d.return; while (d);
                        var p = c
                    } catch (x) {
                        p = `
Error generating stack: ` + x.message + `
` + x.stack
                    }
                    return {value: t, source: u, stack: p, digest: null}
                }

                function cu(t, u, c) {
                    return {value: t, source: null, stack: c ?? null, digest: u ?? null}
                }

                function fu(t, u) {
                    try {
                        console.error(u.value)
                    } catch (c) {
                        setTimeout(function () {
                            throw c
                        })
                    }
                }

                var Ix = typeof WeakMap == "function" ? WeakMap : Map;

                function Os(t, u, c) {
                    c = Pl(-1, c), c.tag = 3, c.payload = {element: null};
                    var d = u.value;
                    return c.callback = function () {
                        Q8 || (Q8 = !0, Nu = d), fu(t, u)
                    }, c
                }

                function Ds(t, u, c) {
                    c = Pl(-1, c), c.tag = 3;
                    var d = t.type.getDerivedStateFromError;
                    if (typeof d == "function") {
                        var p = u.value;
                        c.payload = function () {
                            return d(p)
                        }, c.callback = function () {
                            fu(t, u)
                        }
                    }
                    var x = t.stateNode;
                    return x !== null && typeof x.componentDidCatch == "function" && (c.callback = function () {
                        fu(t, u), typeof d != "function" && (c1 === null ? c1 = new Set([this]) : c1.add(this));
                        var C = u.stack;
                        this.componentDidCatch(u.value, {componentStack: C !== null ? C : ""})
                    }), c
                }

                function Bs(t, u, c) {
                    var d = t.pingCache;
                    if (d === null) {
                        d = t.pingCache = new Ix;
                        var p = new Set;
                        d.set(u, p)
                    } else p = d.get(u), p === void 0 && (p = new Set, d.set(u, p));
                    p.has(c) || (p.add(c), t = Gx.bind(null, t, u, c), u.then(t, t))
                }

                function Fs(t) {
                    do {
                        var u;
                        if ((u = t.tag === 13) && (u = t.memoizedState, u = u !== null ? u.dehydrated !== null : !0), u) return t;
                        t = t.return
                    } while (t !== null);
                    return null
                }

                function Us(t, u, c, d, p) {
                    return t.mode & 1 ? (t.flags |= 65536, t.lanes = p, t) : (t === u ? t.flags |= 65536 : (t.flags |= 128, c.flags |= 131072, c.flags &= -52805, c.tag === 1 && (c.alternate === null ? c.tag = 17 : (u = Pl(-1, 1), u.tag = 2, jl(c, u, 1))), c.lanes |= 1), t)
                }

                var Nx = s.ReactCurrentOwner, Al = !1;

                function hl(t, u, c, d) {
                    u.child = t === null ? fs(u, null, c, d) : j5(u, t.child, c, d)
                }

                function Ls(t, u, c, d, p) {
                    c = c.render;
                    var x = u.ref;
                    return Vt(u, p), d = ru(t, u, c, d, x, p), c = uu(), t !== null && !Al ? (u.updateQueue = t.updateQueue, u.flags &= -2053, t.lanes &= ~p, B4(t, u, p)) : (p3 && c && v3(u), u.flags |= 1, hl(t, u, d, p), u.child)
                }

                function zs(t, u, c, d, p) {
                    if (t === null) {
                        var x = c.type;
                        return typeof x == "function" && !Fu(x) && x.defaultProps === void 0 && c.compare === null && c.defaultProps === void 0 ? (u.tag = 15, u.type = x, Ws(t, u, x, d, p)) : (t = r9(c.type, null, d, u, u.mode, p), t.ref = u.ref, t.return = u, u.child = t)
                    }
                    if (x = t.child, !(t.lanes & p)) {
                        var C = x.memoizedProps;
                        if (c = c.compare, c = c !== null ? c : k4, c(C, d) && t.ref === u.ref) return B4(t, u, p)
                    }
                    return u.flags |= 1, t = m1(x, d), t.ref = u.ref, t.return = u, u.child = t
                }

                function Ws(t, u, c, d, p) {
                    if (t !== null) {
                        var x = t.memoizedProps;
                        if (k4(x, d) && t.ref === u.ref) if (Al = !1, u.pendingProps = d = x, (t.lanes & p) !== 0) t.flags & 131072 && (Al = !0); else return u.lanes = t.lanes, B4(t, u, p)
                    }
                    return du(t, u, c, d, p)
                }

                function Hs(t, u, c) {
                    var d = u.pendingProps, p = d.children, x = t !== null ? t.memoizedState : null;
                    if (d.mode === "hidden") if (!(u.mode & 1)) u.memoizedState = {
                        baseLanes: 0,
                        cachePool: null,
                        transitions: null
                    }, V3(K5, ql), ql |= c; else {
                        if (!(c & 1073741824)) return t = x !== null ? x.baseLanes | c : c, u.lanes = u.childLanes = 1073741824, u.memoizedState = {
                            baseLanes: t,
                            cachePool: null,
                            transitions: null
                        }, u.updateQueue = null, V3(K5, ql), ql |= t, null;
                        u.memoizedState = {
                            baseLanes: 0,
                            cachePool: null,
                            transitions: null
                        }, d = x !== null ? x.baseLanes : c, V3(K5, ql), ql |= d
                    } else x !== null ? (d = x.baseLanes | c, u.memoizedState = null) : d = c, V3(K5, ql), ql |= d;
                    return hl(t, u, p, c), u.child
                }

                function Vs(t, u) {
                    var c = u.ref;
                    (t === null && c !== null || t !== null && t.ref !== c) && (u.flags |= 512, u.flags |= 2097152)
                }

                function du(t, u, c, d, p) {
                    var x = Un(c) ? r3 : F2.current;
                    return x = Tn(u, x), Vt(u, p), c = ru(t, u, c, d, x, p), d = uu(), t !== null && !Al ? (u.updateQueue = t.updateQueue, u.flags &= -2053, t.lanes &= ~p, B4(t, u, p)) : (p3 && d && v3(u), u.flags |= 1, hl(t, u, c, p), u.child)
                }

                function Gs(t, u, c, d, p) {
                    if (Un(c)) {
                        var x = !0;
                        pl(u)
                    } else x = !1;
                    if (Vt(u, p), u.stateNode === null) z8(t, u), $1(u, c, d), s1(u, c, d, p), d = !0; else if (t === null) {
                        var C = u.stateNode, n2 = u.memoizedProps;
                        C.props = n2;
                        var x2 = C.context, H2 = c.contextType;
                        typeof H2 == "object" && H2 !== null ? H2 = je(H2) : (H2 = Un(c) ? r3 : F2.current, H2 = Tn(u, H2));
                        var a3 = c.getDerivedStateFromProps,
                            z3 = typeof a3 == "function" || typeof C.getSnapshotBeforeUpdate == "function";
                        z3 || typeof C.UNSAFE_componentWillReceiveProps != "function" && typeof C.componentWillReceiveProps != "function" || (n2 !== d || x2 !== H2) && n5(u, C, d, H2), Gl = !1;
                        var t3 = u.memoizedState;
                        C.state = t3, M4(u, d, C, p), x2 = u.memoizedState, n2 !== d || t3 !== x2 || W2.current || Gl ? (typeof a3 == "function" && (a1(u, c, a3, d), x2 = u.memoizedState), (n2 = Gl || Q1(u, c, n2, d, t3, x2, H2)) ? (z3 || typeof C.UNSAFE_componentWillMount != "function" && typeof C.componentWillMount != "function" || (typeof C.componentWillMount == "function" && C.componentWillMount(), typeof C.UNSAFE_componentWillMount == "function" && C.UNSAFE_componentWillMount()), typeof C.componentDidMount == "function" && (u.flags |= 4194308)) : (typeof C.componentDidMount == "function" && (u.flags |= 4194308), u.memoizedProps = d, u.memoizedState = x2), C.props = d, C.state = x2, C.context = H2, d = n2) : (typeof C.componentDidMount == "function" && (u.flags |= 4194308), d = !1)
                    } else {
                        C = u.stateNode, J1(t, u), n2 = u.memoizedProps, H2 = u.type === u.elementType ? n2 : Qe(u.type, n2), C.props = H2, z3 = u.pendingProps, t3 = C.context, x2 = c.contextType, typeof x2 == "object" && x2 !== null ? x2 = je(x2) : (x2 = Un(c) ? r3 : F2.current, x2 = Tn(u, x2));
                        var Kn = c.getDerivedStateFromProps;
                        (a3 = typeof Kn == "function" || typeof C.getSnapshotBeforeUpdate == "function") || typeof C.UNSAFE_componentWillReceiveProps != "function" && typeof C.componentWillReceiveProps != "function" || (n2 !== z3 || t3 !== x2) && n5(u, C, d, x2), Gl = !1, t3 = u.memoizedState, C.state = t3, M4(u, d, C, p);
                        var Wn = u.memoizedState;
                        n2 !== z3 || t3 !== Wn || W2.current || Gl ? (typeof Kn == "function" && (a1(u, c, Kn, d), Wn = u.memoizedState), (H2 = Gl || Q1(u, c, H2, d, t3, Wn, x2) || !1) ? (a3 || typeof C.UNSAFE_componentWillUpdate != "function" && typeof C.componentWillUpdate != "function" || (typeof C.componentWillUpdate == "function" && C.componentWillUpdate(d, Wn, x2), typeof C.UNSAFE_componentWillUpdate == "function" && C.UNSAFE_componentWillUpdate(d, Wn, x2)), typeof C.componentDidUpdate == "function" && (u.flags |= 4), typeof C.getSnapshotBeforeUpdate == "function" && (u.flags |= 1024)) : (typeof C.componentDidUpdate != "function" || n2 === t.memoizedProps && t3 === t.memoizedState || (u.flags |= 4), typeof C.getSnapshotBeforeUpdate != "function" || n2 === t.memoizedProps && t3 === t.memoizedState || (u.flags |= 1024), u.memoizedProps = d, u.memoizedState = Wn), C.props = d, C.state = Wn, C.context = x2, d = H2) : (typeof C.componentDidUpdate != "function" || n2 === t.memoizedProps && t3 === t.memoizedState || (u.flags |= 4), typeof C.getSnapshotBeforeUpdate != "function" || n2 === t.memoizedProps && t3 === t.memoizedState || (u.flags |= 1024), d = !1)
                    }
                    return pu(t, u, c, d, x, p)
                }

                function pu(t, u, c, d, p, x) {
                    Vs(t, u);
                    var C = (u.flags & 128) !== 0;
                    if (!d && !C) return p && Cl(u, c, !1), B4(t, u, x);
                    d = u.stateNode, Nx.current = u;
                    var n2 = C && typeof c.getDerivedStateFromError != "function" ? null : d.render();
                    return u.flags |= 1, t !== null && C ? (u.child = j5(u, t.child, null, x), u.child = j5(u, null, n2, x)) : hl(t, u, n2, x), u.memoizedState = d.state, p && Cl(u, c, !0), u.child
                }

                function js(t) {
                    var u = t.stateNode;
                    u.pendingContext ? Q2(t, u.pendingContext, u.pendingContext !== u.context) : u.context && Q2(t, u.context, !1), Qr(t, u.containerInfo)
                }

                function qs(t, u, c, d, p) {
                    return an(), e1(p), u.flags |= 256, hl(t, u, c, d), u.child
                }

                var mu = {dehydrated: null, treeContext: null, retryLane: 0};

                function hu(t) {
                    return {baseLanes: t, cachePool: null, transitions: null}
                }

                function Ys(t, u, c) {
                    var d = u.pendingProps, p = te.current, x = !1, C = (u.flags & 128) !== 0, n2;
                    if ((n2 = C) || (n2 = t !== null && t.memoizedState === null ? !1 : (p & 2) !== 0), n2 ? (x = !0, u.flags &= -129) : (t === null || t.memoizedState !== null) && (p |= 1), V3(te, p & 1), t === null) return Ae(u), t = u.memoizedState, t !== null && (t = t.dehydrated, t !== null) ? (u.mode & 1 ? G1(t) ? u.lanes = 8 : u.lanes = 1073741824 : u.lanes = 1, null) : (C = d.children, t = d.fallback, x ? (d = u.mode, x = u.child, C = {
                        mode: "hidden",
                        children: C
                    }, !(d & 1) && x !== null ? (x.childLanes = 0, x.pendingProps = C) : x = u9(C, d, 0, null), t = o5(t, d, c, null), x.return = u, t.return = u, x.sibling = t, u.child = x, u.child.memoizedState = hu(c), u.memoizedState = mu, t) : yu(u, C));
                    if (p = t.memoizedState, p !== null && (n2 = p.dehydrated, n2 !== null)) return Rx(t, u, C, d, n2, p, c);
                    if (x) {
                        x = d.fallback, C = u.mode, p = t.child, n2 = p.sibling;
                        var x2 = {mode: "hidden", children: d.children};
                        return !(C & 1) && u.child !== p ? (d = u.child, d.childLanes = 0, d.pendingProps = x2, u.deletions = null) : (d = m1(p, x2), d.subtreeFlags = p.subtreeFlags & 14680064), n2 !== null ? x = m1(n2, x) : (x = o5(x, C, c, null), x.flags |= 2), x.return = u, d.return = u, d.sibling = x, u.child = d, d = x, x = u.child, C = t.child.memoizedState, C = C === null ? hu(c) : {
                            baseLanes: C.baseLanes | c,
                            cachePool: null,
                            transitions: C.transitions
                        }, x.memoizedState = C, x.childLanes = t.childLanes & ~c, u.memoizedState = mu, d
                    }
                    return x = t.child, t = x.sibling, d = m1(x, {
                        mode: "visible",
                        children: d.children
                    }), !(u.mode & 1) && (d.lanes = c), d.return = u, d.sibling = null, t !== null && (c = u.deletions, c === null ? (u.deletions = [t], u.flags |= 16) : c.push(t)), u.child = d, u.memoizedState = null, d
                }

                function yu(t, u) {
                    return u = u9({mode: "visible", children: u}, t.mode, 0, null), u.return = t, t.child = u
                }

                function L8(t, u, c, d) {
                    return d !== null && e1(d), j5(u, t.child, null, c), t = yu(u, u.pendingProps.children), t.flags |= 2, u.memoizedState = null, t
                }

                function Rx(t, u, c, d, p, x, C) {
                    if (c) return u.flags & 256 ? (u.flags &= -257, d = cu(Error(f(422))), L8(t, u, C, d)) : u.memoizedState !== null ? (u.child = t.child, u.flags |= 128, null) : (x = d.fallback, p = u.mode, d = u9({
                        mode: "visible",
                        children: d.children
                    }, p, 0, null), x = o5(x, p, C, null), x.flags |= 2, d.return = u, x.return = u, d.sibling = x, u.child = d, u.mode & 1 && j5(u, t.child, null, C), u.child.memoizedState = hu(C), u.memoizedState = mu, x);
                    if (!(u.mode & 1)) return L8(t, u, C, null);
                    if (G1(p)) return d = E6(p).digest, x = Error(f(419)), d = cu(x, d, void 0), L8(t, u, C, d);
                    if (c = (C & t.childLanes) !== 0, Al || c) {
                        if (d = Le, d !== null) {
                            switch (C & -C) {
                                case 4:
                                    p = 2;
                                    break;
                                case 16:
                                    p = 8;
                                    break;
                                case 64:
                                case 128:
                                case 256:
                                case 512:
                                case 1024:
                                case 2048:
                                case 4096:
                                case 8192:
                                case 16384:
                                case 32768:
                                case 65536:
                                case 131072:
                                case 262144:
                                case 524288:
                                case 1048576:
                                case 2097152:
                                case 4194304:
                                case 8388608:
                                case 16777216:
                                case 33554432:
                                case 67108864:
                                    p = 32;
                                    break;
                                case 536870912:
                                    p = 268435456;
                                    break;
                                default:
                                    p = 0
                            }
                            p = p & (d.suspendedLanes | C) ? 0 : p, p !== 0 && p !== x.retryLane && (x.retryLane = p, ml(t, p), St(d, t, p, -1))
                        }
                        return Bu(), d = cu(Error(f(421))), L8(t, u, C, d)
                    }
                    return dt(p) ? (u.flags |= 128, u.child = t.child, u = jx.bind(null, t), j1(p, u), null) : (t = x.treeContext, Q3 && (en = S(p), q3 = u, p3 = !0, cn = null, K3 = !1, t !== null && (H[V++] = c2, H[V++] = i2, H[V++] = r2, c2 = t.id, i2 = t.overflow, r2 = u)), u = yu(u, d.children), u.flags |= 4096, u)
                }

                function Js(t, u, c) {
                    t.lanes |= u;
                    var d = t.alternate;
                    d !== null && (d.lanes |= u), u1(t.return, u, c)
                }

                function gu(t, u, c, d, p) {
                    var x = t.memoizedState;
                    x === null ? t.memoizedState = {
                        isBackwards: u,
                        rendering: null,
                        renderingStartTime: 0,
                        last: d,
                        tail: c,
                        tailMode: p
                    } : (x.isBackwards = u, x.rendering = null, x.renderingStartTime = 0, x.last = d, x.tail = c, x.tailMode = p)
                }

                function Xs(t, u, c) {
                    var d = u.pendingProps, p = d.revealOrder, x = d.tail;
                    if (hl(t, u, d.children, c), d = te.current, d & 2) d = d & 1 | 2, u.flags |= 128; else {
                        if (t !== null && t.flags & 128) n:for (t = u.child; t !== null;) {
                            if (t.tag === 13) t.memoizedState !== null && Js(t, c, u); else if (t.tag === 19) Js(t, c, u); else if (t.child !== null) {
                                t.child.return = t, t = t.child;
                                continue
                            }
                            if (t === u) break n;
                            for (; t.sibling === null;) {
                                if (t.return === null || t.return === u) break n;
                                t = t.return
                            }
                            t.sibling.return = t.return, t = t.sibling
                        }
                        d &= 1
                    }
                    if (V3(te, d), !(u.mode & 1)) u.memoizedState = null; else switch (p) {
                        case"forwards":
                            for (c = u.child, p = null; c !== null;) t = c.alternate, t !== null && M8(t) === null && (p = c), c = c.sibling;
                            c = p, c === null ? (p = u.child, u.child = null) : (p = c.sibling, c.sibling = null), gu(u, !1, p, c, x);
                            break;
                        case"backwards":
                            for (c = null, p = u.child, u.child = null; p !== null;) {
                                if (t = p.alternate, t !== null && M8(t) === null) {
                                    u.child = p;
                                    break
                                }
                                t = p.sibling, p.sibling = c, c = p, p = t
                            }
                            gu(u, !0, c, null, x);
                            break;
                        case"together":
                            gu(u, !1, null, null, void 0);
                            break;
                        default:
                            u.memoizedState = null
                    }
                    return u.child
                }

                function z8(t, u) {
                    !(u.mode & 1) && t !== null && (t.alternate = null, u.alternate = null, u.flags |= 2)
                }

                function B4(t, u, c) {
                    if (t !== null && (u.dependencies = t.dependencies), l5 |= u.lanes, !(c & u.childLanes)) return null;
                    if (t !== null && u.child !== t.child) throw Error(f(153));
                    if (u.child !== null) {
                        for (t = u.child, c = m1(t, t.pendingProps), u.child = c, c.return = u; t.sibling !== null;) t = t.sibling, c = c.sibling = m1(t, t.pendingProps), c.return = u;
                        c.sibling = null
                    }
                    return u.child
                }

                function Mx(t, u, c) {
                    switch (u.tag) {
                        case 3:
                            js(u), an();
                            break;
                        case 5:
                            ds(u);
                            break;
                        case 1:
                            Un(u.type) && pl(u);
                            break;
                        case 4:
                            Qr(u, u.stateNode.containerInfo);
                            break;
                        case 10:
                            q1(u, u.type._context, u.memoizedProps.value);
                            break;
                        case 13:
                            var d = u.memoizedState;
                            if (d !== null) return d.dehydrated !== null ? (V3(te, te.current & 1), u.flags |= 128, null) : c & u.child.childLanes ? Ys(t, u, c) : (V3(te, te.current & 1), t = B4(t, u, c), t !== null ? t.sibling : null);
                            V3(te, te.current & 1);
                            break;
                        case 19:
                            if (d = (c & u.childLanes) !== 0, t.flags & 128) {
                                if (d) return Xs(t, u, c);
                                u.flags |= 128
                            }
                            var p = u.memoizedState;
                            if (p !== null && (p.rendering = null, p.tail = null, p.lastEffect = null), V3(te, te.current), d) break;
                            return null;
                        case 22:
                        case 23:
                            return u.lanes = 0, Hs(t, u, c)
                    }
                    return B4(t, u, c)
                }

                function s4(t) {
                    t.flags |= 4
                }

                function Ks(t, u) {
                    if (t !== null && t.child === u.child) return !0;
                    if (u.flags & 16) return !1;
                    for (t = u.child; t !== null;) {
                        if (t.flags & 12854 || t.subtreeFlags & 12854) return !1;
                        t = t.sibling
                    }
                    return !0
                }

                var P6, A6, W8, H8;
                if (l3) P6 = function (t, u) {
                    for (var c = u.child; c !== null;) {
                        if (c.tag === 5 || c.tag === 6) R3(t, c.stateNode); else if (c.tag !== 4 && c.child !== null) {
                            c.child.return = c, c = c.child;
                            continue
                        }
                        if (c === u) break;
                        for (; c.sibling === null;) {
                            if (c.return === null || c.return === u) return;
                            c = c.return
                        }
                        c.sibling.return = c.return, c = c.sibling
                    }
                }, A6 = function () {
                }, W8 = function (t, u, c, d, p) {
                    if (t = t.memoizedProps, t !== d) {
                        var x = u.stateNode, C = i4(Et.current);
                        c = F3(x, c, t, d, p, C), (u.updateQueue = c) && s4(u)
                    }
                }, H8 = function (t, u, c, d) {
                    c !== d && s4(u)
                }; else if (D3) {
                    P6 = function (t, u, c, d) {
                        for (var p = u.child; p !== null;) {
                            if (p.tag === 5) {
                                var x = p.stateNode;
                                c && d && (x = on(x, p.type, p.memoizedProps, p)), R3(t, x)
                            } else if (p.tag === 6) x = p.stateNode, c && d && (x = Bn(x, p.memoizedProps, p)), R3(t, x); else if (p.tag !== 4) {
                                if (p.tag === 22 && p.memoizedState !== null) x = p.child, x !== null && (x.return = p), P6(t, p, !0, !0); else if (p.child !== null) {
                                    p.child.return = p, p = p.child;
                                    continue
                                }
                            }
                            if (p === u) break;
                            for (; p.sibling === null;) {
                                if (p.return === null || p.return === u) return;
                                p = p.return
                            }
                            p.sibling.return = p.return, p = p.sibling
                        }
                    };
                    var Zs = function (t, u, c, d) {
                        for (var p = u.child; p !== null;) {
                            if (p.tag === 5) {
                                var x = p.stateNode;
                                c && d && (x = on(x, p.type, p.memoizedProps, p)), o3(t, x)
                            } else if (p.tag === 6) x = p.stateNode, c && d && (x = Bn(x, p.memoizedProps, p)), o3(t, x); else if (p.tag !== 4) {
                                if (p.tag === 22 && p.memoizedState !== null) x = p.child, x !== null && (x.return = p), Zs(t, p, !0, !0); else if (p.child !== null) {
                                    p.child.return = p, p = p.child;
                                    continue
                                }
                            }
                            if (p === u) break;
                            for (; p.sibling === null;) {
                                if (p.return === null || p.return === u) return;
                                p = p.return
                            }
                            p.sibling.return = p.return, p = p.sibling
                        }
                    };
                    A6 = function (t, u) {
                        var c = u.stateNode;
                        if (!Ks(t, u)) {
                            t = c.containerInfo;
                            var d = G2(t);
                            Zs(d, u, !1, !1), c.pendingChildren = d, s4(u), x3(t, d)
                        }
                    }, W8 = function (t, u, c, d, p) {
                        var x = t.stateNode, C = t.memoizedProps;
                        if ((t = Ks(t, u)) && C === d) u.stateNode = x; else {
                            var n2 = u.stateNode, x2 = i4(Et.current), H2 = null;
                            C !== d && (H2 = F3(n2, c, C, d, p, x2)), t && H2 === null ? u.stateNode = x : (x = K2(x, H2, c, C, d, u, t, n2), un(x, c, d, p, x2) && s4(u), u.stateNode = x, t ? s4(u) : P6(x, u, !1, !1))
                        }
                    }, H8 = function (t, u, c, d) {
                        c !== d ? (t = i4(q5.current), c = i4(Et.current), u.stateNode = o2(d, t, c, u), s4(u)) : u.stateNode = t.stateNode
                    }
                } else A6 = function () {
                }, W8 = function () {
                }, H8 = function () {
                };

                function k6(t, u) {
                    if (!p3) switch (t.tailMode) {
                        case"hidden":
                            u = t.tail;
                            for (var c = null; u !== null;) u.alternate !== null && (c = u), u = u.sibling;
                            c === null ? t.tail = null : c.sibling = null;
                            break;
                        case"collapsed":
                            c = t.tail;
                            for (var d = null; c !== null;) c.alternate !== null && (d = c), c = c.sibling;
                            d === null ? u || t.tail === null ? t.tail = null : t.tail.sibling = null : d.sibling = null
                    }
                }

                function nl(t) {
                    var u = t.alternate !== null && t.alternate.child === t.child, c = 0, d = 0;
                    if (u) for (var p = t.child; p !== null;) c |= p.lanes | p.childLanes, d |= p.subtreeFlags & 14680064, d |= p.flags & 14680064, p.return = t, p = p.sibling; else for (p = t.child; p !== null;) c |= p.lanes | p.childLanes, d |= p.subtreeFlags, d |= p.flags, p.return = t, p = p.sibling;
                    return t.subtreeFlags |= d, t.childLanes = c, u
                }

                function Ox(t, u, c) {
                    var d = u.pendingProps;
                    switch (X3(u), u.tag) {
                        case 2:
                        case 16:
                        case 15:
                        case 0:
                        case 11:
                        case 7:
                        case 8:
                        case 12:
                        case 9:
                        case 14:
                            return nl(u), null;
                        case 1:
                            return Un(u.type) && n3(), nl(u), null;
                        case 3:
                            return c = u.stateNode, Y5(), G3(W2), G3(F2), eu(), c.pendingContext && (c.context = c.pendingContext, c.pendingContext = null), (t === null || t.child === null) && (se(u) ? s4(u) : t === null || t.memoizedState.isDehydrated && !(u.flags & 256) || (u.flags |= 1024, cn !== null && (Ou(cn), cn = null))), A6(t, u), nl(u), null;
                        case 5:
                            $r(u), c = i4(q5.current);
                            var p = u.type;
                            if (t !== null && u.stateNode != null) W8(t, u, p, d, c), t.ref !== u.ref && (u.flags |= 512, u.flags |= 2097152); else {
                                if (!d) {
                                    if (u.stateNode === null) throw Error(f(166));
                                    return nl(u), null
                                }
                                if (t = i4(Et.current), se(u)) {
                                    if (!Q3) throw Error(f(175));
                                    t = M(u.stateNode, u.type, u.memoizedProps, c, t, u, !K3), u.updateQueue = t, t !== null && s4(u)
                                } else {
                                    var x = N3(p, d, c, t, u);
                                    P6(x, u, !1, !1), u.stateNode = x, un(x, p, d, c, t) && s4(u)
                                }
                                u.ref !== null && (u.flags |= 512, u.flags |= 2097152)
                            }
                            return nl(u), null;
                        case 6:
                            if (t && u.stateNode != null) H8(t, u, t.memoizedProps, d); else {
                                if (typeof d != "string" && u.stateNode === null) throw Error(f(166));
                                if (t = i4(q5.current), c = i4(Et.current), se(u)) {
                                    if (!Q3) throw Error(f(176));
                                    if (t = u.stateNode, c = u.memoizedProps, (d = L(t, c, u, !K3)) && (p = q3, p !== null)) switch (p.tag) {
                                        case 3:
                                            k3(p.stateNode.containerInfo, t, c, (p.mode & 1) !== 0);
                                            break;
                                        case 5:
                                            tn(p.type, p.memoizedProps, p.stateNode, t, c, (p.mode & 1) !== 0)
                                    }
                                    d && s4(u)
                                } else u.stateNode = o2(d, t, c, u)
                            }
                            return nl(u), null;
                        case 13:
                            if (G3(te), d = u.memoizedState, t === null || t.memoizedState !== null && t.memoizedState.dehydrated !== null) {
                                if (p3 && en !== null && u.mode & 1 && !(u.flags & 128)) le(), an(), u.flags |= 98560, p = !1; else if (p = se(u), d !== null && d.dehydrated !== null) {
                                    if (t === null) {
                                        if (!p) throw Error(f(318));
                                        if (!Q3) throw Error(f(344));
                                        if (p = u.memoizedState, p = p !== null ? p.dehydrated : null, !p) throw Error(f(317));
                                        F(p, u)
                                    } else an(), !(u.flags & 128) && (u.memoizedState = null), u.flags |= 4;
                                    nl(u), p = !1
                                } else cn !== null && (Ou(cn), cn = null), p = !0;
                                if (!p) return u.flags & 65536 ? u : null
                            }
                            return u.flags & 128 ? (u.lanes = c, u) : (c = d !== null, c !== (t !== null && t.memoizedState !== null) && c && (u.child.flags |= 8192, u.mode & 1 && (t === null || te.current & 1 ? Ie === 0 && (Ie = 3) : Bu())), u.updateQueue !== null && (u.flags |= 4), nl(u), null);
                        case 4:
                            return Y5(), A6(t, u), t === null && Fl(u.stateNode.containerInfo), nl(u), null;
                        case 10:
                            return r1(u.type._context), nl(u), null;
                        case 17:
                            return Un(u.type) && n3(), nl(u), null;
                        case 19:
                            if (G3(te), p = u.memoizedState, p === null) return nl(u), null;
                            if (d = (u.flags & 128) !== 0, x = p.rendering, x === null) if (d) k6(p, !1); else {
                                if (Ie !== 0 || t !== null && t.flags & 128) for (t = u.child; t !== null;) {
                                    if (x = M8(t), x !== null) {
                                        for (u.flags |= 128, k6(p, !1), t = x.updateQueue, t !== null && (u.updateQueue = t, u.flags |= 4), u.subtreeFlags = 0, t = c, c = u.child; c !== null;) d = c, p = t, d.flags &= 14680066, x = d.alternate, x === null ? (d.childLanes = 0, d.lanes = p, d.child = null, d.subtreeFlags = 0, d.memoizedProps = null, d.memoizedState = null, d.updateQueue = null, d.dependencies = null, d.stateNode = null) : (d.childLanes = x.childLanes, d.lanes = x.lanes, d.child = x.child, d.subtreeFlags = 0, d.deletions = null, d.memoizedProps = x.memoizedProps, d.memoizedState = x.memoizedState, d.updateQueue = x.updateQueue, d.type = x.type, p = x.dependencies, d.dependencies = p === null ? null : {
                                            lanes: p.lanes,
                                            firstContext: p.firstContext
                                        }), c = c.sibling;
                                        return V3(te, te.current & 1 | 2), u.child
                                    }
                                    t = t.sibling
                                }
                                p.tail !== null && Pn() > Iu && (u.flags |= 128, d = !0, k6(p, !1), u.lanes = 4194304)
                            } else {
                                if (!d) if (t = M8(x), t !== null) {
                                    if (u.flags |= 128, d = !0, t = t.updateQueue, t !== null && (u.updateQueue = t, u.flags |= 4), k6(p, !0), p.tail === null && p.tailMode === "hidden" && !x.alternate && !p3) return nl(u), null
                                } else 2 * Pn() - p.renderingStartTime > Iu && c !== 1073741824 && (u.flags |= 128, d = !0, k6(p, !1), u.lanes = 4194304);
                                p.isBackwards ? (x.sibling = u.child, u.child = x) : (t = p.last, t !== null ? t.sibling = x : u.child = x, p.last = x)
                            }
                            return p.tail !== null ? (u = p.tail, p.rendering = u, p.tail = u.sibling, p.renderingStartTime = Pn(), u.sibling = null, t = te.current, V3(te, d ? t & 1 | 2 : t & 1), u) : (nl(u), null);
                        case 22:
                        case 23:
                            return Du(), c = u.memoizedState !== null, t !== null && t.memoizedState !== null !== c && (u.flags |= 8192), c && u.mode & 1 ? ql & 1073741824 && (nl(u), l3 && u.subtreeFlags & 6 && (u.flags |= 8192)) : nl(u), null;
                        case 24:
                            return null;
                        case 25:
                            return null
                    }
                    throw Error(f(156, u.tag))
                }

                function Dx(t, u) {
                    switch (X3(u), u.tag) {
                        case 1:
                            return Un(u.type) && n3(), t = u.flags, t & 65536 ? (u.flags = t & -65537 | 128, u) : null;
                        case 3:
                            return Y5(), G3(W2), G3(F2), eu(), t = u.flags, t & 65536 && !(t & 128) ? (u.flags = t & -65537 | 128, u) : null;
                        case 5:
                            return $r(u), null;
                        case 13:
                            if (G3(te), t = u.memoizedState, t !== null && t.dehydrated !== null) {
                                if (u.alternate === null) throw Error(f(340));
                                an()
                            }
                            return t = u.flags, t & 65536 ? (u.flags = t & -65537 | 128, u) : null;
                        case 19:
                            return G3(te), null;
                        case 4:
                            return Y5(), null;
                        case 10:
                            return r1(u.type._context), null;
                        case 22:
                        case 23:
                            return Du(), null;
                        case 24:
                            return null;
                        default:
                            return null
                    }
                }

                var V8 = !1, el = !1, Bx = typeof WeakSet == "function" ? WeakSet : Set, i3 = null;

                function X5(t, u) {
                    var c = t.ref;
                    if (c !== null) if (typeof c == "function") try {
                        c(null)
                    } catch (d) {
                        Qn(t, u, d)
                    } else c.current = null
                }

                function xu(t, u, c) {
                    try {
                        c()
                    } catch (d) {
                        Qn(t, u, d)
                    }
                }

                var Qs = !1;

                function Fx(t, u) {
                    for (U3(t.containerInfo), i3 = u; i3 !== null;) if (t = i3, u = t.child, (t.subtreeFlags & 1028) !== 0 && u !== null) u.return = t, i3 = u; else for (; i3 !== null;) {
                        t = i3;
                        try {
                            var c = t.alternate;
                            if (t.flags & 1024) switch (t.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    break;
                                case 1:
                                    if (c !== null) {
                                        var d = c.memoizedProps, p = c.memoizedState, x = t.stateNode,
                                            C = x.getSnapshotBeforeUpdate(t.elementType === t.type ? d : Qe(t.type, d), p);
                                        x.__reactInternalSnapshotBeforeUpdate = C
                                    }
                                    break;
                                case 3:
                                    l3 && a2(t.stateNode.containerInfo);
                                    break;
                                case 5:
                                case 6:
                                case 4:
                                case 17:
                                    break;
                                default:
                                    throw Error(f(163))
                            }
                        } catch (n2) {
                            Qn(t, t.return, n2)
                        }
                        if (u = t.sibling, u !== null) {
                            u.return = t.return, i3 = u;
                            break
                        }
                        i3 = t.return
                    }
                    return c = Qs, Qs = !1, c
                }

                function I6(t, u, c) {
                    var d = u.updateQueue;
                    if (d = d !== null ? d.lastEffect : null, d !== null) {
                        var p = d = d.next;
                        do {
                            if ((p.tag & t) === t) {
                                var x = p.destroy;
                                p.destroy = void 0, x !== void 0 && xu(u, c, x)
                            }
                            p = p.next
                        } while (p !== d)
                    }
                }

                function G8(t, u) {
                    if (u = u.updateQueue, u = u !== null ? u.lastEffect : null, u !== null) {
                        var c = u = u.next;
                        do {
                            if ((c.tag & t) === t) {
                                var d = c.create;
                                c.destroy = d()
                            }
                            c = c.next
                        } while (c !== u)
                    }
                }

                function bu(t) {
                    var u = t.ref;
                    if (u !== null) {
                        var c = t.stateNode;
                        switch (t.tag) {
                            case 5:
                                t = Z2(c);
                                break;
                            default:
                                t = c
                        }
                        typeof u == "function" ? u(t) : u.current = t
                    }
                }

                function $s(t) {
                    var u = t.alternate;
                    u !== null && (t.alternate = null, $s(u)), t.child = null, t.deletions = null, t.sibling = null, t.tag === 5 && (u = t.stateNode, u !== null && ct(u)), t.stateNode = null, t.return = null, t.dependencies = null, t.memoizedProps = null, t.memoizedState = null, t.pendingProps = null, t.stateNode = null, t.updateQueue = null
                }

                function nc(t) {
                    return t.tag === 5 || t.tag === 3 || t.tag === 4
                }

                function ec(t) {
                    n:for (; ;) {
                        for (; t.sibling === null;) {
                            if (t.return === null || nc(t.return)) return null;
                            t = t.return
                        }
                        for (t.sibling.return = t.return, t = t.sibling; t.tag !== 5 && t.tag !== 6 && t.tag !== 18;) {
                            if (t.flags & 2 || t.child === null || t.tag === 4) continue n;
                            t.child.return = t, t = t.child
                        }
                        if (!(t.flags & 2)) return t.stateNode
                    }
                }

                function Eu(t, u, c) {
                    var d = t.tag;
                    if (d === 5 || d === 6) t = t.stateNode, u ? ft(c, t, u) : de(c, t); else if (d !== 4 && (t = t.child, t !== null)) for (Eu(t, u, c), t = t.sibling; t !== null;) Eu(t, u, c), t = t.sibling
                }

                function Tu(t, u, c) {
                    var d = t.tag;
                    if (d === 5 || d === 6) t = t.stateNode, u ? Ft(c, t, u) : Zn(c, t); else if (d !== 4 && (t = t.child, t !== null)) for (Tu(t, u, c), t = t.sibling; t !== null;) Tu(t, u, c), t = t.sibling
                }

                var qe = null, Gt = !1;

                function c4(t, u, c) {
                    for (c = c.child; c !== null;) Su(t, u, c), c = c.sibling
                }

                function Su(t, u, c) {
                    if (zn && typeof zn.onCommitFiberUnmount == "function") try {
                        zn.onCommitFiberUnmount(_l, c)
                    } catch {
                    }
                    switch (c.tag) {
                        case 5:
                            el || X5(c, u);
                        case 6:
                            if (l3) {
                                var d = qe, p = Gt;
                                qe = null, c4(t, u, c), qe = d, Gt = p, qe !== null && (Gt ? _4(qe, c.stateNode) : C4(qe, c.stateNode))
                            } else c4(t, u, c);
                            break;
                        case 18:
                            l3 && qe !== null && (Gt ? $2(qe, c.stateNode) : j2(qe, c.stateNode));
                            break;
                        case 4:
                            l3 ? (d = qe, p = Gt, qe = c.stateNode.containerInfo, Gt = !0, c4(t, u, c), qe = d, Gt = p) : (D3 && (d = c.stateNode.containerInfo, p = G2(d), Cn(d, p)), c4(t, u, c));
                            break;
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                            if (!el && (d = c.updateQueue, d !== null && (d = d.lastEffect, d !== null))) {
                                p = d = d.next;
                                do {
                                    var x = p, C = x.destroy;
                                    x = x.tag, C !== void 0 && (x & 2 || x & 4) && xu(c, u, C), p = p.next
                                } while (p !== d)
                            }
                            c4(t, u, c);
                            break;
                        case 1:
                            if (!el && (X5(c, u), d = c.stateNode, typeof d.componentWillUnmount == "function")) try {
                                d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount()
                            } catch (n2) {
                                Qn(c, u, n2)
                            }
                            c4(t, u, c);
                            break;
                        case 21:
                            c4(t, u, c);
                            break;
                        case 22:
                            c.mode & 1 ? (el = (d = el) || c.memoizedState !== null, c4(t, u, c), el = d) : c4(t, u, c);
                            break;
                        default:
                            c4(t, u, c)
                    }
                }

                function lc(t) {
                    var u = t.updateQueue;
                    if (u !== null) {
                        t.updateQueue = null;
                        var c = t.stateNode;
                        c === null && (c = t.stateNode = new Bx), u.forEach(function (d) {
                            var p = qx.bind(null, t, d);
                            c.has(d) || (c.add(d), d.then(p, p))
                        })
                    }
                }

                function jt(t, u) {
                    var c = u.deletions;
                    if (c !== null) for (var d = 0; d < c.length; d++) {
                        var p = c[d];
                        try {
                            var x = t, C = u;
                            if (l3) {
                                var n2 = C;
                                n:for (; n2 !== null;) {
                                    switch (n2.tag) {
                                        case 5:
                                            qe = n2.stateNode, Gt = !1;
                                            break n;
                                        case 3:
                                            qe = n2.stateNode.containerInfo, Gt = !0;
                                            break n;
                                        case 4:
                                            qe = n2.stateNode.containerInfo, Gt = !0;
                                            break n
                                    }
                                    n2 = n2.return
                                }
                                if (qe === null) throw Error(f(160));
                                Su(x, C, p), qe = null, Gt = !1
                            } else Su(x, C, p);
                            var x2 = p.alternate;
                            x2 !== null && (x2.return = null), p.return = null
                        } catch (H2) {
                            Qn(p, u, H2)
                        }
                    }
                    if (u.subtreeFlags & 12854) for (u = u.child; u !== null;) tc(u, t), u = u.sibling
                }

                function tc(t, u) {
                    var c = t.alternate, d = t.flags;
                    switch (t.tag) {
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                            if (jt(u, t), f4(t), d & 4) {
                                try {
                                    I6(3, t, t.return), G8(3, t)
                                } catch (t3) {
                                    Qn(t, t.return, t3)
                                }
                                try {
                                    I6(5, t, t.return)
                                } catch (t3) {
                                    Qn(t, t.return, t3)
                                }
                            }
                            break;
                        case 1:
                            jt(u, t), f4(t), d & 512 && c !== null && X5(c, c.return);
                            break;
                        case 5:
                            if (jt(u, t), f4(t), d & 512 && c !== null && X5(c, c.return), l3) {
                                if (t.flags & 32) {
                                    var p = t.stateNode;
                                    try {
                                        Ut(p)
                                    } catch (t3) {
                                        Qn(t, t.return, t3)
                                    }
                                }
                                if (d & 4 && (p = t.stateNode, p != null)) {
                                    var x = t.memoizedProps;
                                    if (c = c !== null ? c.memoizedProps : x, d = t.type, u = t.updateQueue, t.updateQueue = null, u !== null) try {
                                        Xe(p, u, d, c, x, t)
                                    } catch (t3) {
                                        Qn(t, t.return, t3)
                                    }
                                }
                            }
                            break;
                        case 6:
                            if (jt(u, t), f4(t), d & 4 && l3) {
                                if (t.stateNode === null) throw Error(f(162));
                                p = t.stateNode, x = t.memoizedProps, c = c !== null ? c.memoizedProps : x;
                                try {
                                    ee(p, c, x)
                                } catch (t3) {
                                    Qn(t, t.return, t3)
                                }
                            }
                            break;
                        case 3:
                            if (jt(u, t), f4(t), d & 4) {
                                if (l3 && Q3 && c !== null && c.memoizedState.isDehydrated) try {
                                    R2(u.containerInfo)
                                } catch (t3) {
                                    Qn(t, t.return, t3)
                                }
                                if (D3) {
                                    p = u.containerInfo, x = u.pendingChildren;
                                    try {
                                        Cn(p, x)
                                    } catch (t3) {
                                        Qn(t, t.return, t3)
                                    }
                                }
                            }
                            break;
                        case 4:
                            if (jt(u, t), f4(t), d & 4 && D3) {
                                x = t.stateNode, p = x.containerInfo, x = x.pendingChildren;
                                try {
                                    Cn(p, x)
                                } catch (t3) {
                                    Qn(t, t.return, t3)
                                }
                            }
                            break;
                        case 13:
                            jt(u, t), f4(t), p = t.child, p.flags & 8192 && (x = p.memoizedState !== null, p.stateNode.isHidden = x, !x || p.alternate !== null && p.alternate.memoizedState !== null || (ku = Pn())), d & 4 && lc(t);
                            break;
                        case 22:
                            var C = c !== null && c.memoizedState !== null;
                            if (t.mode & 1 ? (el = (c = el) || C, jt(u, t), el = c) : jt(u, t), f4(t), d & 8192) {
                                if (c = t.memoizedState !== null, (t.stateNode.isHidden = c) && !C && t.mode & 1) for (i3 = t, d = t.child; d !== null;) {
                                    for (u = i3 = d; i3 !== null;) {
                                        C = i3;
                                        var n2 = C.child;
                                        switch (C.tag) {
                                            case 0:
                                            case 11:
                                            case 14:
                                            case 15:
                                                I6(4, C, C.return);
                                                break;
                                            case 1:
                                                X5(C, C.return);
                                                var x2 = C.stateNode;
                                                if (typeof x2.componentWillUnmount == "function") {
                                                    var H2 = C, a3 = C.return;
                                                    try {
                                                        var z3 = H2;
                                                        x2.props = z3.memoizedProps, x2.state = z3.memoizedState, x2.componentWillUnmount()
                                                    } catch (t3) {
                                                        Qn(H2, a3, t3)
                                                    }
                                                }
                                                break;
                                            case 5:
                                                X5(C, C.return);
                                                break;
                                            case 22:
                                                if (C.memoizedState !== null) {
                                                    oc(u);
                                                    continue
                                                }
                                        }
                                        n2 !== null ? (n2.return = C, i3 = n2) : oc(u)
                                    }
                                    d = d.sibling
                                }
                                if (l3) {
                                    n:if (d = null, l3) for (u = t; ;) {
                                        if (u.tag === 5) {
                                            if (d === null) {
                                                d = u;
                                                try {
                                                    p = u.stateNode, c ? n1(p) : N(u.stateNode, u.memoizedProps)
                                                } catch (t3) {
                                                    Qn(t, t.return, t3)
                                                }
                                            }
                                        } else if (u.tag === 6) {
                                            if (d === null) try {
                                                x = u.stateNode, c ? Ul(x) : X(x, u.memoizedProps)
                                            } catch (t3) {
                                                Qn(t, t.return, t3)
                                            }
                                        } else if ((u.tag !== 22 && u.tag !== 23 || u.memoizedState === null || u === t) && u.child !== null) {
                                            u.child.return = u, u = u.child;
                                            continue
                                        }
                                        if (u === t) break n;
                                        for (; u.sibling === null;) {
                                            if (u.return === null || u.return === t) break n;
                                            d === u && (d = null), u = u.return
                                        }
                                        d === u && (d = null), u.sibling.return = u.return, u = u.sibling
                                    }
                                }
                            }
                            break;
                        case 19:
                            jt(u, t), f4(t), d & 4 && lc(t);
                            break;
                        case 21:
                            break;
                        default:
                            jt(u, t), f4(t)
                    }
                }

                function f4(t) {
                    var u = t.flags;
                    if (u & 2) {
                        try {
                            if (l3) {
                                n:{
                                    for (var c = t.return; c !== null;) {
                                        if (nc(c)) {
                                            var d = c;
                                            break n
                                        }
                                        c = c.return
                                    }
                                    throw Error(f(160))
                                }
                                switch (d.tag) {
                                    case 5:
                                        var p = d.stateNode;
                                        d.flags & 32 && (Ut(p), d.flags &= -33);
                                        var x = ec(t);
                                        Tu(t, x, p);
                                        break;
                                    case 3:
                                    case 4:
                                        var C = d.stateNode.containerInfo, n2 = ec(t);
                                        Eu(t, n2, C);
                                        break;
                                    default:
                                        throw Error(f(161))
                                }
                            }
                        } catch (x2) {
                            Qn(t, t.return, x2)
                        }
                        t.flags &= -3
                    }
                    u & 4096 && (t.flags &= -4097)
                }

                function Ux(t, u, c) {
                    i3 = t, rc(t, u, c)
                }

                function rc(t, u, c) {
                    for (var d = (t.mode & 1) !== 0; i3 !== null;) {
                        var p = i3, x = p.child;
                        if (p.tag === 22 && d) {
                            var C = p.memoizedState !== null || V8;
                            if (!C) {
                                var n2 = p.alternate, x2 = n2 !== null && n2.memoizedState !== null || el;
                                n2 = V8;
                                var H2 = el;
                                if (V8 = C, (el = x2) && !H2) for (i3 = p; i3 !== null;) C = i3, x2 = C.child, C.tag === 22 && C.memoizedState !== null ? ic(p) : x2 !== null ? (x2.return = C, i3 = x2) : ic(p);
                                for (; x !== null;) i3 = x, rc(x, u, c), x = x.sibling;
                                i3 = p, V8 = n2, el = H2
                            }
                            uc(t, u, c)
                        } else p.subtreeFlags & 8772 && x !== null ? (x.return = p, i3 = x) : uc(t, u, c)
                    }
                }

                function uc(t) {
                    for (; i3 !== null;) {
                        var u = i3;
                        if (u.flags & 8772) {
                            var c = u.alternate;
                            try {
                                if (u.flags & 8772) switch (u.tag) {
                                    case 0:
                                    case 11:
                                    case 15:
                                        el || G8(5, u);
                                        break;
                                    case 1:
                                        var d = u.stateNode;
                                        if (u.flags & 4 && !el) if (c === null) d.componentDidMount(); else {
                                            var p = u.elementType === u.type ? c.memoizedProps : Qe(u.type, c.memoizedProps);
                                            d.componentDidUpdate(p, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate)
                                        }
                                        var x = u.updateQueue;
                                        x !== null && K1(u, x, d);
                                        break;
                                    case 3:
                                        var C = u.updateQueue;
                                        if (C !== null) {
                                            if (c = null, u.child !== null) switch (u.child.tag) {
                                                case 5:
                                                    c = Z2(u.child.stateNode);
                                                    break;
                                                case 1:
                                                    c = u.child.stateNode
                                            }
                                            K1(u, C, c)
                                        }
                                        break;
                                    case 5:
                                        var n2 = u.stateNode;
                                        c === null && u.flags & 4 && wl(n2, u.type, u.memoizedProps, u);
                                        break;
                                    case 6:
                                        break;
                                    case 4:
                                        break;
                                    case 12:
                                        break;
                                    case 13:
                                        if (Q3 && u.memoizedState === null) {
                                            var x2 = u.alternate;
                                            if (x2 !== null) {
                                                var H2 = x2.memoizedState;
                                                if (H2 !== null) {
                                                    var a3 = H2.dehydrated;
                                                    a3 !== null && w2(a3)
                                                }
                                            }
                                        }
                                        break;
                                    case 19:
                                    case 17:
                                    case 21:
                                    case 22:
                                    case 23:
                                    case 25:
                                        break;
                                    default:
                                        throw Error(f(163))
                                }
                                el || u.flags & 512 && bu(u)
                            } catch (z3) {
                                Qn(u, u.return, z3)
                            }
                        }
                        if (u === t) {
                            i3 = null;
                            break
                        }
                        if (c = u.sibling, c !== null) {
                            c.return = u.return, i3 = c;
                            break
                        }
                        i3 = u.return
                    }
                }

                function oc(t) {
                    for (; i3 !== null;) {
                        var u = i3;
                        if (u === t) {
                            i3 = null;
                            break
                        }
                        var c = u.sibling;
                        if (c !== null) {
                            c.return = u.return, i3 = c;
                            break
                        }
                        i3 = u.return
                    }
                }

                function ic(t) {
                    for (; i3 !== null;) {
                        var u = i3;
                        try {
                            switch (u.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    var c = u.return;
                                    try {
                                        G8(4, u)
                                    } catch (x2) {
                                        Qn(u, c, x2)
                                    }
                                    break;
                                case 1:
                                    var d = u.stateNode;
                                    if (typeof d.componentDidMount == "function") {
                                        var p = u.return;
                                        try {
                                            d.componentDidMount()
                                        } catch (x2) {
                                            Qn(u, p, x2)
                                        }
                                    }
                                    var x = u.return;
                                    try {
                                        bu(u)
                                    } catch (x2) {
                                        Qn(u, x, x2)
                                    }
                                    break;
                                case 5:
                                    var C = u.return;
                                    try {
                                        bu(u)
                                    } catch (x2) {
                                        Qn(u, C, x2)
                                    }
                            }
                        } catch (x2) {
                            Qn(u, u.return, x2)
                        }
                        if (u === t) {
                            i3 = null;
                            break
                        }
                        var n2 = u.sibling;
                        if (n2 !== null) {
                            n2.return = u.return, i3 = n2;
                            break
                        }
                        i3 = u.return
                    }
                }

                var j8 = 0, q8 = 1, Y8 = 2, J8 = 3, X8 = 4;
                if (typeof Symbol == "function" && Symbol.for) {
                    var N6 = Symbol.for;
                    j8 = N6("selector.component"), q8 = N6("selector.has_pseudo_class"), Y8 = N6("selector.role"), J8 = N6("selector.test_id"), X8 = N6("selector.text")
                }

                function wu(t) {
                    var u = pn(t);
                    if (u != null) {
                        if (typeof u.memoizedProps["data-testname"] != "string") throw Error(f(364));
                        return u
                    }
                    if (t = Y(t), t === null) throw Error(f(362));
                    return t.stateNode.current
                }

                function vu(t, u) {
                    switch (u.$$typeof) {
                        case j8:
                            if (t.type === u.value) return !0;
                            break;
                        case q8:
                            n:{
                                u = u.value, t = [t, 0];
                                for (var c = 0; c < t.length;) {
                                    var d = t[c++], p = t[c++], x = u[p];
                                    if (d.tag !== 5 || !N2(d)) {
                                        for (; x != null && vu(d, x);) p++, x = u[p];
                                        if (p === u.length) {
                                            u = !0;
                                            break n
                                        } else for (d = d.child; d !== null;) t.push(d, p), d = d.sibling
                                    }
                                }
                                u = !1
                            }
                            return u;
                        case Y8:
                            if (t.tag === 5 && c3(t.stateNode, u.value)) return !0;
                            break;
                        case X8:
                            if ((t.tag === 5 || t.tag === 6) && (t = d2(t), t !== null && 0 <= t.indexOf(u.value))) return !0;
                            break;
                        case J8:
                            if (t.tag === 5 && (t = t.memoizedProps["data-testname"], typeof t == "string" && t.toLowerCase() === u.value.toLowerCase())) return !0;
                            break;
                        default:
                            throw Error(f(365))
                    }
                    return !1
                }

                function Cu(t) {
                    switch (t.$$typeof) {
                        case j8:
                            return "<" + (l2(t.value) || "Unknown") + ">";
                        case q8:
                            return ":has(" + (Cu(t) || "") + ")";
                        case Y8:
                            return '[role="' + t.value + '"]';
                        case X8:
                            return '"' + t.value + '"';
                        case J8:
                            return '[data-testname="' + t.value + '"]';
                        default:
                            throw Error(f(365))
                    }
                }

                function ac(t, u) {
                    var c = [];
                    t = [t, 0];
                    for (var d = 0; d < t.length;) {
                        var p = t[d++], x = t[d++], C = u[x];
                        if (p.tag !== 5 || !N2(p)) {
                            for (; C != null && vu(p, C);) x++, C = u[x];
                            if (x === u.length) c.push(p); else for (p = p.child; p !== null;) t.push(p, x), p = p.sibling
                        }
                    }
                    return c
                }

                function _u(t, u) {
                    if (!s2) throw Error(f(363));
                    t = wu(t), t = ac(t, u), u = [], t = Array.from(t);
                    for (var c = 0; c < t.length;) {
                        var d = t[c++];
                        if (d.tag === 5) N2(d) || u.push(d.stateNode); else for (d = d.child; d !== null;) t.push(d), d = d.sibling
                    }
                    return u
                }

                var Lx = Math.ceil, K8 = s.ReactCurrentDispatcher, Pu = s.ReactCurrentOwner,
                    he = s.ReactCurrentBatchConfig, $3 = 0, Le = null, Se = null, Ye = 0, ql = 0, K5 = Jn(0), Ie = 0,
                    R6 = null, l5 = 0, Z8 = 0, Au = 0, M6 = null, kl = null, ku = 0, Iu = 1 / 0, F4 = null;

                function Z5() {
                    Iu = Pn() + 500
                }

                var Q8 = !1, Nu = null, c1 = null, $8 = !1, f1 = null, n9 = 0, O6 = 0, Ru = null, e9 = -1, l9 = 0;

                function ll() {
                    return $3 & 6 ? Pn() : e9 !== -1 ? e9 : e9 = Pn()
                }

                function d1(t) {
                    return t.mode & 1 ? $3 & 2 && Ye !== 0 ? Ye & -Ye : V5.transition !== null ? (l9 === 0 && (l9 = J2()), l9) : (t = O2, t !== 0 ? t : ie()) : 1
                }

                function St(t, u, c, d) {
                    if (50 < O6) throw O6 = 0, Ru = null, Error(f(185));
                    d3(t, c, d), (!($3 & 2) || t !== Le) && (t === Le && (!($3 & 2) && (Z8 |= c), Ie === 4 && p1(t, Ye)), Il(t, d), c === 1 && $3 === 0 && !(u.mode & 1) && (Z5(), zt && h()))
                }

                function Il(t, u) {
                    var c = t.callbackNode;
                    j(t, u);
                    var d = I(t, t === Le ? Ye : 0);
                    if (d === 0) c !== null && Sn(c), t.callbackNode = null, t.callbackPriority = 0; else if (u = d & -d, t.callbackPriority !== u) {
                        if (c != null && Sn(c), u === 1) t.tag === 0 ? _(cc.bind(null, t)) : Ze(cc.bind(null, t)), Q ? E2(function () {
                            !($3 & 6) && h()
                        }) : mn(Te, h), c = null; else {
                            switch (ae(d)) {
                                case 1:
                                    c = Te;
                                    break;
                                case 4:
                                    c = mt;
                                    break;
                                case 16:
                                    c = ht;
                                    break;
                                case 536870912:
                                    c = Pe;
                                    break;
                                default:
                                    c = ht
                            }
                            c = bc(c, sc.bind(null, t))
                        }
                        t.callbackPriority = u, t.callbackNode = c
                    }
                }

                function sc(t, u) {
                    if (e9 = -1, l9 = 0, $3 & 6) throw Error(f(327));
                    var c = t.callbackNode;
                    if (u5() && t.callbackNode !== c) return null;
                    var d = I(t, t === Le ? Ye : 0);
                    if (d === 0) return null;
                    if (d & 30 || d & t.expiredLanes || u) u = t9(t, d); else {
                        u = d;
                        var p = $3;
                        $3 |= 2;
                        var x = pc();
                        (Le !== t || Ye !== u) && (F4 = null, Z5(), t5(t, u));
                        do try {
                            Hx();
                            break
                        } catch (n2) {
                            dc(t, n2)
                        } while (1);
                        t1(), K8.current = x, $3 = p, Se !== null ? u = 0 : (Le = null, Ye = 0, u = Ie)
                    }
                    if (u !== 0) {
                        if (u === 2 && (p = _2(t), p !== 0 && (d = p, u = Mu(t, p))), u === 1) throw c = R6, t5(t, 0), p1(t, d), Il(t, Pn()), c;
                        if (u === 6) p1(t, d); else {
                            if (p = t.current.alternate, !(d & 30) && !zx(p) && (u = t9(t, d), u === 2 && (x = _2(t), x !== 0 && (d = x, u = Mu(t, x))), u === 1)) throw c = R6, t5(t, 0), p1(t, d), Il(t, Pn()), c;
                            switch (t.finishedWork = p, t.finishedLanes = d, u) {
                                case 0:
                                case 1:
                                    throw Error(f(345));
                                case 2:
                                    r5(t, kl, F4);
                                    break;
                                case 3:
                                    if (p1(t, d), (d & 130023424) === d && (u = ku + 500 - Pn(), 10 < u)) {
                                        if (I(t, 0) !== 0) break;
                                        if (p = t.suspendedLanes, (p & d) !== d) {
                                            ll(), t.pingedLanes |= t.suspendedLanes & p;
                                            break
                                        }
                                        t.timeoutHandle = P2(r5.bind(null, t, kl, F4), u);
                                        break
                                    }
                                    r5(t, kl, F4);
                                    break;
                                case 4:
                                    if (p1(t, d), (d & 4194240) === d) break;
                                    for (u = t.eventTimes, p = -1; 0 < d;) {
                                        var C = 31 - Xn(d);
                                        x = 1 << C, C = u[C], C > p && (p = C), d &= ~x
                                    }
                                    if (d = p, d = Pn() - d, d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * Lx(d / 1960)) - d, 10 < d) {
                                        t.timeoutHandle = P2(r5.bind(null, t, kl, F4), d);
                                        break
                                    }
                                    r5(t, kl, F4);
                                    break;
                                case 5:
                                    r5(t, kl, F4);
                                    break;
                                default:
                                    throw Error(f(329))
                            }
                        }
                    }
                    return Il(t, Pn()), t.callbackNode === c ? sc.bind(null, t) : null
                }

                function Mu(t, u) {
                    var c = M6;
                    return t.current.memoizedState.isDehydrated && (t5(t, u).flags |= 256), t = t9(t, u), t !== 2 && (u = kl, kl = c, u !== null && Ou(u)), t
                }

                function Ou(t) {
                    kl === null ? kl = t : kl.push.apply(kl, t)
                }

                function zx(t) {
                    for (var u = t; ;) {
                        if (u.flags & 16384) {
                            var c = u.updateQueue;
                            if (c !== null && (c = c.stores, c !== null)) for (var d = 0; d < c.length; d++) {
                                var p = c[d], x = p.getSnapshot;
                                p = p.value;
                                try {
                                    if (!me(x(), p)) return !1
                                } catch {
                                    return !1
                                }
                            }
                        }
                        if (c = u.child, u.subtreeFlags & 16384 && c !== null) c.return = u, u = c; else {
                            if (u === t) break;
                            for (; u.sibling === null;) {
                                if (u.return === null || u.return === t) return !0;
                                u = u.return
                            }
                            u.sibling.return = u.return, u = u.sibling
                        }
                    }
                    return !0
                }

                function p1(t, u) {
                    for (u &= ~Au, u &= ~Z8, t.suspendedLanes |= u, t.pingedLanes &= ~u, t = t.expirationTimes; 0 < u;) {
                        var c = 31 - Xn(u), d = 1 << c;
                        t[c] = -1, u &= ~d
                    }
                }

                function cc(t) {
                    if ($3 & 6) throw Error(f(327));
                    u5();
                    var u = I(t, 0);
                    if (!(u & 1)) return Il(t, Pn()), null;
                    var c = t9(t, u);
                    if (t.tag !== 0 && c === 2) {
                        var d = _2(t);
                        d !== 0 && (u = d, c = Mu(t, d))
                    }
                    if (c === 1) throw c = R6, t5(t, 0), p1(t, u), Il(t, Pn()), c;
                    if (c === 6) throw Error(f(345));
                    return t.finishedWork = t.current.alternate, t.finishedLanes = u, r5(t, kl, F4), Il(t, Pn()), null
                }

                function fc(t) {
                    f1 !== null && f1.tag === 0 && !($3 & 6) && u5();
                    var u = $3;
                    $3 |= 1;
                    var c = he.transition, d = O2;
                    try {
                        if (he.transition = null, O2 = 1, t) return t()
                    } finally {
                        O2 = d, he.transition = c, $3 = u, !($3 & 6) && h()
                    }
                }

                function Du() {
                    ql = K5.current, G3(K5)
                }

                function t5(t, u) {
                    t.finishedWork = null, t.finishedLanes = 0;
                    var c = t.timeoutHandle;
                    if (c !== $ && (t.timeoutHandle = $, I2(c)), Se !== null) for (c = Se.return; c !== null;) {
                        var d = c;
                        switch (X3(d), d.tag) {
                            case 1:
                                d = d.type.childContextTypes, d != null && n3();
                                break;
                            case 3:
                                Y5(), G3(W2), G3(F2), eu();
                                break;
                            case 5:
                                $r(d);
                                break;
                            case 4:
                                Y5();
                                break;
                            case 13:
                                G3(te);
                                break;
                            case 19:
                                G3(te);
                                break;
                            case 10:
                                r1(d.type._context);
                                break;
                            case 22:
                            case 23:
                                Du()
                        }
                        c = c.return
                    }
                    if (Le = t, Se = t = m1(t.current, null), Ye = ql = u, Ie = 0, R6 = null, Au = Z8 = l5 = 0, kl = M6 = null, bt !== null) {
                        for (u = 0; u < bt.length; u++) if (c = bt[u], d = c.interleaved, d !== null) {
                            c.interleaved = null;
                            var p = d.next, x = c.pending;
                            if (x !== null) {
                                var C = x.next;
                                x.next = p, d.next = C
                            }
                            c.pending = d
                        }
                        bt = null
                    }
                    return t
                }

                function dc(t, u) {
                    do {
                        var c = Se;
                        try {
                            if (t1(), O8.current = U8, D8) {
                                for (var d = re.memoizedState; d !== null;) {
                                    var p = d.queue;
                                    p !== null && (p.pending = null), d = d.next
                                }
                                D8 = !1
                            }
                            if (e5 = 0, Ue = ke = re = null, w6 = !1, v6 = 0, Pu.current = null, c === null || c.return === null) {
                                Ie = 1, R6 = u, Se = null;
                                break
                            }
                            n:{
                                var x = t, C = c.return, n2 = c, x2 = u;
                                if (u = Ye, n2.flags |= 32768, x2 !== null && typeof x2 == "object" && typeof x2.then == "function") {
                                    var H2 = x2, a3 = n2, z3 = a3.tag;
                                    if (!(a3.mode & 1) && (z3 === 0 || z3 === 11 || z3 === 15)) {
                                        var t3 = a3.alternate;
                                        t3 ? (a3.updateQueue = t3.updateQueue, a3.memoizedState = t3.memoizedState, a3.lanes = t3.lanes) : (a3.updateQueue = null, a3.memoizedState = null)
                                    }
                                    var Kn = Fs(C);
                                    if (Kn !== null) {
                                        Kn.flags &= -257, Us(Kn, C, n2, x, u), Kn.mode & 1 && Bs(x, H2, u), u = Kn, x2 = H2;
                                        var Wn = u.updateQueue;
                                        if (Wn === null) {
                                            var Nl = new Set;
                                            Nl.add(x2), u.updateQueue = Nl
                                        } else Wn.add(x2);
                                        break n
                                    } else {
                                        if (!(u & 1)) {
                                            Bs(x, H2, u), Bu();
                                            break n
                                        }
                                        x2 = Error(f(426))
                                    }
                                } else if (p3 && n2.mode & 1) {
                                    var U4 = Fs(C);
                                    if (U4 !== null) {
                                        !(U4.flags & 65536) && (U4.flags |= 256), Us(U4, C, n2, x, u), e1(J5(x2, n2));
                                        break n
                                    }
                                }
                                x = x2 = J5(x2, n2), Ie !== 4 && (Ie = 2), M6 === null ? M6 = [x] : M6.push(x), x = C;
                                do {
                                    switch (x.tag) {
                                        case 3:
                                            x.flags |= 65536, u &= -u, x.lanes |= u;
                                            var m2 = Os(x, x2, u);
                                            X1(x, m2);
                                            break n;
                                        case 1:
                                            n2 = x2;
                                            var u2 = x.type, v2 = x.stateNode;
                                            if (!(x.flags & 128) && (typeof u2.getDerivedStateFromError == "function" || v2 !== null && typeof v2.componentDidCatch == "function" && (c1 === null || !c1.has(v2)))) {
                                                x.flags |= 65536, u &= -u, x.lanes |= u;
                                                var u3 = Ds(x, n2, u);
                                                X1(x, u3);
                                                break n
                                            }
                                    }
                                    x = x.return
                                } while (x !== null)
                            }
                            hc(c)
                        } catch (A3) {
                            u = A3, Se === c && c !== null && (Se = c = c.return);
                            continue
                        }
                        break
                    } while (1)
                }

                function pc() {
                    var t = K8.current;
                    return K8.current = U8, t === null ? U8 : t
                }

                function Bu() {
                    (Ie === 0 || Ie === 3 || Ie === 2) && (Ie = 4), Le === null || !(l5 & 268435455) && !(Z8 & 268435455) || p1(Le, Ye)
                }

                function t9(t, u) {
                    var c = $3;
                    $3 |= 2;
                    var d = pc();
                    (Le !== t || Ye !== u) && (F4 = null, t5(t, u));
                    do try {
                        Wx();
                        break
                    } catch (p) {
                        dc(t, p)
                    } while (1);
                    if (t1(), $3 = c, K8.current = d, Se !== null) throw Error(f(261));
                    return Le = null, Ye = 0, Ie
                }

                function Wx() {
                    for (; Se !== null;) mc(Se)
                }

                function Hx() {
                    for (; Se !== null && !Ee();) mc(Se)
                }

                function mc(t) {
                    var u = xc(t.alternate, t, ql);
                    t.memoizedProps = t.pendingProps, u === null ? hc(t) : Se = u, Pu.current = null
                }

                function hc(t) {
                    var u = t;
                    do {
                        var c = u.alternate;
                        if (t = u.return, u.flags & 32768) {
                            if (c = Dx(c, u), c !== null) {
                                c.flags &= 32767, Se = c;
                                return
                            }
                            if (t !== null) t.flags |= 32768, t.subtreeFlags = 0, t.deletions = null; else {
                                Ie = 6, Se = null;
                                return
                            }
                        } else if (c = Ox(c, u, ql), c !== null) {
                            Se = c;
                            return
                        }
                        if (u = u.sibling, u !== null) {
                            Se = u;
                            return
                        }
                        Se = u = t
                    } while (u !== null);
                    Ie === 0 && (Ie = 5)
                }

                function r5(t, u, c) {
                    var d = O2, p = he.transition;
                    try {
                        he.transition = null, O2 = 1, Vx(t, u, c, d)
                    } finally {
                        he.transition = p, O2 = d
                    }
                    return null
                }

                function Vx(t, u, c, d) {
                    do u5(); while (f1 !== null);
                    if ($3 & 6) throw Error(f(327));
                    c = t.finishedWork;
                    var p = t.finishedLanes;
                    if (c === null) return null;
                    if (t.finishedWork = null, t.finishedLanes = 0, c === t.current) throw Error(f(177));
                    t.callbackNode = null, t.callbackPriority = 0;
                    var x = c.lanes | c.childLanes;
                    if (_e(t, x), t === Le && (Se = Le = null, Ye = 0), !(c.subtreeFlags & 2064) && !(c.flags & 2064) || $8 || ($8 = !0, bc(ht, function () {
                        return u5(), null
                    })), x = (c.flags & 15990) !== 0, c.subtreeFlags & 15990 || x) {
                        x = he.transition, he.transition = null;
                        var C = O2;
                        O2 = 1;
                        var n2 = $3;
                        $3 |= 4, Pu.current = null, Fx(t, c), tc(c, t), C3(t.containerInfo), t.current = c, Ux(c, t, p), Hl(), $3 = n2, O2 = C, he.transition = x
                    } else t.current = c;
                    if ($8 && ($8 = !1, f1 = t, n9 = p), x = t.pendingLanes, x === 0 && (c1 = null), yt(c.stateNode, d), Il(t, Pn()), u !== null) for (d = t.onRecoverableError, c = 0; c < u.length; c++) p = u[c], d(p.value, {
                        componentStack: p.stack,
                        digest: p.digest
                    });
                    if (Q8) throw Q8 = !1, t = Nu, Nu = null, t;
                    return n9 & 1 && t.tag !== 0 && u5(), x = t.pendingLanes, x & 1 ? t === Ru ? O6++ : (O6 = 0, Ru = t) : O6 = 0, h(), null
                }

                function u5() {
                    if (f1 !== null) {
                        var t = ae(n9), u = he.transition, c = O2;
                        try {
                            if (he.transition = null, O2 = 16 > t ? 16 : t, f1 === null) var d = !1; else {
                                if (t = f1, f1 = null, n9 = 0, $3 & 6) throw Error(f(331));
                                var p = $3;
                                for ($3 |= 4, i3 = t.current; i3 !== null;) {
                                    var x = i3, C = x.child;
                                    if (i3.flags & 16) {
                                        var n2 = x.deletions;
                                        if (n2 !== null) {
                                            for (var x2 = 0; x2 < n2.length; x2++) {
                                                var H2 = n2[x2];
                                                for (i3 = H2; i3 !== null;) {
                                                    var a3 = i3;
                                                    switch (a3.tag) {
                                                        case 0:
                                                        case 11:
                                                        case 15:
                                                            I6(8, a3, x)
                                                    }
                                                    var z3 = a3.child;
                                                    if (z3 !== null) z3.return = a3, i3 = z3; else for (; i3 !== null;) {
                                                        a3 = i3;
                                                        var t3 = a3.sibling, Kn = a3.return;
                                                        if ($s(a3), a3 === H2) {
                                                            i3 = null;
                                                            break
                                                        }
                                                        if (t3 !== null) {
                                                            t3.return = Kn, i3 = t3;
                                                            break
                                                        }
                                                        i3 = Kn
                                                    }
                                                }
                                            }
                                            var Wn = x.alternate;
                                            if (Wn !== null) {
                                                var Nl = Wn.child;
                                                if (Nl !== null) {
                                                    Wn.child = null;
                                                    do {
                                                        var U4 = Nl.sibling;
                                                        Nl.sibling = null, Nl = U4
                                                    } while (Nl !== null)
                                                }
                                            }
                                            i3 = x
                                        }
                                    }
                                    if (x.subtreeFlags & 2064 && C !== null) C.return = x, i3 = C; else n:for (; i3 !== null;) {
                                        if (x = i3, x.flags & 2048) switch (x.tag) {
                                            case 0:
                                            case 11:
                                            case 15:
                                                I6(9, x, x.return)
                                        }
                                        var m2 = x.sibling;
                                        if (m2 !== null) {
                                            m2.return = x.return, i3 = m2;
                                            break n
                                        }
                                        i3 = x.return
                                    }
                                }
                                var u2 = t.current;
                                for (i3 = u2; i3 !== null;) {
                                    C = i3;
                                    var v2 = C.child;
                                    if (C.subtreeFlags & 2064 && v2 !== null) v2.return = C, i3 = v2; else n:for (C = u2; i3 !== null;) {
                                        if (n2 = i3, n2.flags & 2048) try {
                                            switch (n2.tag) {
                                                case 0:
                                                case 11:
                                                case 15:
                                                    G8(9, n2)
                                            }
                                        } catch (A3) {
                                            Qn(n2, n2.return, A3)
                                        }
                                        if (n2 === C) {
                                            i3 = null;
                                            break n
                                        }
                                        var u3 = n2.sibling;
                                        if (u3 !== null) {
                                            u3.return = n2.return, i3 = u3;
                                            break n
                                        }
                                        i3 = n2.return
                                    }
                                }
                                if ($3 = p, h(), zn && typeof zn.onPostCommitFiberRoot == "function") try {
                                    zn.onPostCommitFiberRoot(_l, t)
                                } catch {
                                }
                                d = !0
                            }
                            return d
                        } finally {
                            O2 = c, he.transition = u
                        }
                    }
                    return !1
                }

                function yc(t, u, c) {
                    u = J5(c, u), u = Os(t, u, 1), t = jl(t, u, 1), u = ll(), t !== null && (d3(t, 1, u), Il(t, u))
                }

                function Qn(t, u, c) {
                    if (t.tag === 3) yc(t, t, c); else for (; u !== null;) {
                        if (u.tag === 3) {
                            yc(u, t, c);
                            break
                        } else if (u.tag === 1) {
                            var d = u.stateNode;
                            if (typeof u.type.getDerivedStateFromError == "function" || typeof d.componentDidCatch == "function" && (c1 === null || !c1.has(d))) {
                                t = J5(c, t), t = Ds(u, t, 1), u = jl(u, t, 1), t = ll(), u !== null && (d3(u, 1, t), Il(u, t));
                                break
                            }
                        }
                        u = u.return
                    }
                }

                function Gx(t, u, c) {
                    var d = t.pingCache;
                    d !== null && d.delete(u), u = ll(), t.pingedLanes |= t.suspendedLanes & c, Le === t && (Ye & c) === c && (Ie === 4 || Ie === 3 && (Ye & 130023424) === Ye && 500 > Pn() - ku ? t5(t, 0) : Au |= c), Il(t, u)
                }

                function gc(t, u) {
                    u === 0 && (t.mode & 1 ? (u = y, y <<= 1, !(y & 130023424) && (y = 4194304)) : u = 1);
                    var c = ll();
                    t = ml(t, u), t !== null && (d3(t, u, c), Il(t, c))
                }

                function jx(t) {
                    var u = t.memoizedState, c = 0;
                    u !== null && (c = u.retryLane), gc(t, c)
                }

                function qx(t, u) {
                    var c = 0;
                    switch (t.tag) {
                        case 13:
                            var d = t.stateNode, p = t.memoizedState;
                            p !== null && (c = p.retryLane);
                            break;
                        case 19:
                            d = t.stateNode;
                            break;
                        default:
                            throw Error(f(314))
                    }
                    d !== null && d.delete(u), gc(t, c)
                }

                var xc;
                xc = function (t, u, c) {
                    if (t !== null) if (t.memoizedProps !== u.pendingProps || W2.current) Al = !0; else {
                        if (!(t.lanes & c) && !(u.flags & 128)) return Al = !1, Mx(t, u, c);
                        Al = !!(t.flags & 131072)
                    } else Al = !1, p3 && u.flags & 1048576 && m3(u, W, u.index);
                    switch (u.lanes = 0, u.tag) {
                        case 2:
                            var d = u.type;
                            z8(t, u), t = u.pendingProps;
                            var p = Tn(u, F2.current);
                            Vt(u, c), p = ru(null, u, d, t, p, c);
                            var x = uu();
                            return u.flags |= 1, typeof p == "object" && p !== null && typeof p.render == "function" && p.$$typeof === void 0 ? (u.tag = 1, u.memoizedState = null, u.updateQueue = null, Un(d) ? (x = !0, pl(u)) : x = !1, u.memoizedState = p.state !== null && p.state !== void 0 ? p.state : null, i1(u), p.updater = O4, u.stateNode = p, p._reactInternals = u, s1(u, d, t, c), u = pu(null, u, d, !0, x, c)) : (u.tag = 0, p3 && x && v3(u), hl(null, u, p, c), u = u.child), u;
                        case 16:
                            d = u.elementType;
                            n:{
                                switch (z8(t, u), t = u.pendingProps, p = d._init, d = p(d._payload), u.type = d, p = u.tag = Jx(d), t = Qe(d, t), p) {
                                    case 0:
                                        u = du(null, u, d, t, c);
                                        break n;
                                    case 1:
                                        u = Gs(null, u, d, t, c);
                                        break n;
                                    case 11:
                                        u = Ls(null, u, d, t, c);
                                        break n;
                                    case 14:
                                        u = zs(null, u, d, Qe(d.type, t), c);
                                        break n
                                }
                                throw Error(f(306, d, ""))
                            }
                            return u;
                        case 0:
                            return d = u.type, p = u.pendingProps, p = u.elementType === d ? p : Qe(d, p), du(t, u, d, p, c);
                        case 1:
                            return d = u.type, p = u.pendingProps, p = u.elementType === d ? p : Qe(d, p), Gs(t, u, d, p, c);
                        case 3:
                            n:{
                                if (js(u), t === null) throw Error(f(387));
                                d = u.pendingProps, x = u.memoizedState, p = x.element, J1(t, u), M4(u, d, null, c);
                                var C = u.memoizedState;
                                if (d = C.element, Q3 && x.isDehydrated) if (x = {
                                    element: d,
                                    isDehydrated: !1,
                                    cache: C.cache,
                                    pendingSuspenseBoundaries: C.pendingSuspenseBoundaries,
                                    transitions: C.transitions
                                }, u.updateQueue.baseState = x, u.memoizedState = x, u.flags & 256) {
                                    p = J5(Error(f(423)), u), u = qs(t, u, d, c, p);
                                    break n
                                } else if (d !== p) {
                                    p = J5(Error(f(424)), u), u = qs(t, u, d, c, p);
                                    break n
                                } else for (Q3 && (en = pe(u.stateNode.containerInfo), q3 = u, p3 = !0, cn = null, K3 = !1), c = fs(u, null, d, c), u.child = c; c;) c.flags = c.flags & -3 | 4096, c = c.sibling; else {
                                    if (an(), d === p) {
                                        u = B4(t, u, c);
                                        break n
                                    }
                                    hl(t, u, d, c)
                                }
                                u = u.child
                            }
                            return u;
                        case 5:
                            return ds(u), t === null && Ae(u), d = u.type, p = u.pendingProps, x = t !== null ? t.memoizedProps : null, C = p.children, Dn(d, p) ? C = null : x !== null && Dn(d, x) && (u.flags |= 32), Vs(t, u), hl(t, u, C, c), u.child;
                        case 6:
                            return t === null && Ae(u), null;
                        case 13:
                            return Ys(t, u, c);
                        case 4:
                            return Qr(u, u.stateNode.containerInfo), d = u.pendingProps, t === null ? u.child = j5(u, null, d, c) : hl(t, u, d, c), u.child;
                        case 11:
                            return d = u.type, p = u.pendingProps, p = u.elementType === d ? p : Qe(d, p), Ls(t, u, d, p, c);
                        case 7:
                            return hl(t, u, u.pendingProps, c), u.child;
                        case 8:
                            return hl(t, u, u.pendingProps.children, c), u.child;
                        case 12:
                            return hl(t, u, u.pendingProps.children, c), u.child;
                        case 10:
                            n:{
                                if (d = u.type._context, p = u.pendingProps, x = u.memoizedProps, C = p.value, q1(u, d, C), x !== null) if (me(x.value, C)) {
                                    if (x.children === p.children && !W2.current) {
                                        u = B4(t, u, c);
                                        break n
                                    }
                                } else for (x = u.child, x !== null && (x.return = u); x !== null;) {
                                    var n2 = x.dependencies;
                                    if (n2 !== null) {
                                        C = x.child;
                                        for (var x2 = n2.firstContext; x2 !== null;) {
                                            if (x2.context === d) {
                                                if (x.tag === 1) {
                                                    x2 = Pl(-1, c & -c), x2.tag = 2;
                                                    var H2 = x.updateQueue;
                                                    if (H2 !== null) {
                                                        H2 = H2.shared;
                                                        var a3 = H2.pending;
                                                        a3 === null ? x2.next = x2 : (x2.next = a3.next, a3.next = x2), H2.pending = x2
                                                    }
                                                }
                                                x.lanes |= c, x2 = x.alternate, x2 !== null && (x2.lanes |= c), u1(x.return, c, u), n2.lanes |= c;
                                                break
                                            }
                                            x2 = x2.next
                                        }
                                    } else if (x.tag === 10) C = x.type === u.type ? null : x.child; else if (x.tag === 18) {
                                        if (C = x.return, C === null) throw Error(f(341));
                                        C.lanes |= c, n2 = C.alternate, n2 !== null && (n2.lanes |= c), u1(C, c, u), C = x.sibling
                                    } else C = x.child;
                                    if (C !== null) C.return = x; else for (C = x; C !== null;) {
                                        if (C === u) {
                                            C = null;
                                            break
                                        }
                                        if (x = C.sibling, x !== null) {
                                            x.return = C.return, C = x;
                                            break
                                        }
                                        C = C.return
                                    }
                                    x = C
                                }
                                hl(t, u, p.children, c), u = u.child
                            }
                            return u;
                        case 9:
                            return p = u.type, d = u.pendingProps.children, Vt(u, c), p = je(p), d = d(p), u.flags |= 1, hl(t, u, d, c), u.child;
                        case 14:
                            return d = u.type, p = Qe(d, u.pendingProps), p = Qe(d.type, p), zs(t, u, d, p, c);
                        case 15:
                            return Ws(t, u, u.type, u.pendingProps, c);
                        case 17:
                            return d = u.type, p = u.pendingProps, p = u.elementType === d ? p : Qe(d, p), z8(t, u), u.tag = 1, Un(d) ? (t = !0, pl(u)) : t = !1, Vt(u, c), $1(u, d, p), s1(u, d, p, c), pu(null, u, d, !0, t, c);
                        case 19:
                            return Xs(t, u, c);
                        case 22:
                            return Hs(t, u, c)
                    }
                    throw Error(f(156, u.tag))
                };

                function bc(t, u) {
                    return mn(t, u)
                }

                function Yx(t, u, c, d) {
                    this.tag = t, this.key = c, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = u, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = d, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null
                }

                function wt(t, u, c, d) {
                    return new Yx(t, u, c, d)
                }

                function Fu(t) {
                    return t = t.prototype, !(!t || !t.isReactComponent)
                }

                function Jx(t) {
                    if (typeof t == "function") return Fu(t) ? 1 : 0;
                    if (t != null) {
                        if (t = t.$$typeof, t === T) return 11;
                        if (t === G) return 14
                    }
                    return 2
                }

                function m1(t, u) {
                    var c = t.alternate;
                    return c === null ? (c = wt(t.tag, u, t.key, t.mode), c.elementType = t.elementType, c.type = t.type, c.stateNode = t.stateNode, c.alternate = t, t.alternate = c) : (c.pendingProps = u, c.type = t.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null), c.flags = t.flags & 14680064, c.childLanes = t.childLanes, c.lanes = t.lanes, c.child = t.child, c.memoizedProps = t.memoizedProps, c.memoizedState = t.memoizedState, c.updateQueue = t.updateQueue, u = t.dependencies, c.dependencies = u === null ? null : {
                        lanes: u.lanes,
                        firstContext: u.firstContext
                    }, c.sibling = t.sibling, c.index = t.index, c.ref = t.ref, c
                }

                function r9(t, u, c, d, p, x) {
                    var C = 2;
                    if (d = t, typeof t == "function") Fu(t) && (C = 1); else if (typeof t == "string") C = 5; else n:switch (t) {
                        case b:
                            return o5(c.children, p, x, u);
                        case B:
                            C = 8, p |= 8;
                            break;
                        case w:
                            return t = wt(12, c, u, p | 2), t.elementType = w, t.lanes = x, t;
                        case k:
                            return t = wt(13, c, u, p), t.elementType = k, t.lanes = x, t;
                        case R:
                            return t = wt(19, c, u, p), t.elementType = R, t.lanes = x, t;
                        case S2:
                            return u9(c, p, x, u);
                        default:
                            if (typeof t == "object" && t !== null) switch (t.$$typeof) {
                                case P:
                                    C = 10;
                                    break n;
                                case D:
                                    C = 9;
                                    break n;
                                case T:
                                    C = 11;
                                    break n;
                                case G:
                                    C = 14;
                                    break n;
                                case Z:
                                    C = 16, d = null;
                                    break n
                            }
                            throw Error(f(130, t == null ? t : typeof t, ""))
                    }
                    return u = wt(C, c, u, p), u.elementType = t, u.type = d, u.lanes = x, u
                }

                function o5(t, u, c, d) {
                    return t = wt(7, t, d, u), t.lanes = c, t
                }

                function u9(t, u, c, d) {
                    return t = wt(22, t, d, u), t.elementType = S2, t.lanes = c, t.stateNode = {isHidden: !1}, t
                }

                function Uu(t, u, c) {
                    return t = wt(6, t, null, u), t.lanes = c, t
                }

                function Lu(t, u, c) {
                    return u = wt(4, t.children !== null ? t.children : [], t.key, u), u.lanes = c, u.stateNode = {
                        containerInfo: t.containerInfo,
                        pendingChildren: null,
                        implementation: t.implementation
                    }, u
                }

                function Xx(t, u, c, d, p) {
                    this.tag = u, this.containerInfo = t, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = $, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = f3(0), this.expirationTimes = f3(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = f3(0), this.identifierPrefix = d, this.onRecoverableError = p, Q3 && (this.mutableSourceEagerHydrationData = null)
                }

                function Ec(t, u, c, d, p, x, C, n2, x2) {
                    return t = new Xx(t, u, c, n2, x2), u === 1 ? (u = 1, x === !0 && (u |= 8)) : u = 0, x = wt(3, null, null, u), t.current = x, x.stateNode = t, x.memoizedState = {
                        element: d,
                        isDehydrated: c,
                        cache: null,
                        transitions: null,
                        pendingSuspenseBoundaries: null
                    }, i1(x), t
                }

                function Tc(t) {
                    if (!t) return q2;
                    t = t._reactInternals;
                    n:{
                        if (g2(t) !== t || t.tag !== 1) throw Error(f(170));
                        var u = t;
                        do {
                            switch (u.tag) {
                                case 3:
                                    u = u.stateNode.context;
                                    break n;
                                case 1:
                                    if (Un(u.type)) {
                                        u = u.stateNode.__reactInternalMemoizedMergedChildContext;
                                        break n
                                    }
                            }
                            u = u.return
                        } while (u !== null);
                        throw Error(f(171))
                    }
                    if (t.tag === 1) {
                        var c = t.type;
                        if (Un(c)) return Ln(t, c, u)
                    }
                    return u
                }

                function Sc(t) {
                    var u = t._reactInternals;
                    if (u === void 0) throw typeof t.render == "function" ? Error(f(188)) : (t = Object.keys(t).join(","), Error(f(268, t)));
                    return t = J(u), t === null ? null : t.stateNode
                }

                function wc(t, u) {
                    if (t = t.memoizedState, t !== null && t.dehydrated !== null) {
                        var c = t.retryLane;
                        t.retryLane = c !== 0 && c < u ? c : u
                    }
                }

                function o9(t, u) {
                    wc(t, u), (t = t.alternate) && wc(t, u)
                }

                function Kx(t) {
                    return t = J(t), t === null ? null : t.stateNode
                }

                function Zx() {
                    return null
                }

                return r.attemptContinuousHydration = function (t) {
                    if (t.tag === 13) {
                        var u = ml(t, 134217728);
                        if (u !== null) {
                            var c = ll();
                            St(u, t, 134217728, c)
                        }
                        o9(t, 134217728)
                    }
                }, r.attemptDiscreteHydration = function (t) {
                    if (t.tag === 13) {
                        var u = ml(t, 1);
                        if (u !== null) {
                            var c = ll();
                            St(u, t, 1, c)
                        }
                        o9(t, 1)
                    }
                }, r.attemptHydrationAtCurrentPriority = function (t) {
                    if (t.tag === 13) {
                        var u = d1(t), c = ml(t, u);
                        if (c !== null) {
                            var d = ll();
                            St(c, t, u, d)
                        }
                        o9(t, u)
                    }
                }, r.attemptSynchronousHydration = function (t) {
                    switch (t.tag) {
                        case 3:
                            var u = t.stateNode;
                            if (u.current.memoizedState.isDehydrated) {
                                var c = E(u.pendingLanes);
                                c !== 0 && (_n(u, c | 1), Il(u, Pn()), !($3 & 6) && (Z5(), h()))
                            }
                            break;
                        case 13:
                            fc(function () {
                                var d = ml(t, 1);
                                if (d !== null) {
                                    var p = ll();
                                    St(d, t, 1, p)
                                }
                            }), o9(t, 1)
                    }
                }, r.batchedUpdates = function (t, u) {
                    var c = $3;
                    $3 |= 1;
                    try {
                        return t(u)
                    } finally {
                        $3 = c, $3 === 0 && (Z5(), zt && h())
                    }
                }, r.createComponentSelector = function (t) {
                    return {$$typeof: j8, value: t}
                }, r.createContainer = function (t, u, c, d, p, x, C) {
                    return Ec(t, u, !1, null, c, d, p, x, C)
                }, r.createHasPseudoClassSelector = function (t) {
                    return {$$typeof: q8, value: t}
                }, r.createHydrationContainer = function (t, u, c, d, p, x, C, n2, x2) {
                    return t = Ec(c, d, !0, t, p, x, C, n2, x2), t.context = Tc(null), c = t.current, d = ll(), p = d1(c), x = Pl(d, p), x.callback = u ?? null, jl(c, x, p), t.current.lanes = p, d3(t, p, d), Il(t, d), t
                }, r.createPortal = function (t, u, c) {
                    var d = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
                    return {
                        $$typeof: g,
                        key: d == null ? null : "" + d,
                        children: t,
                        containerInfo: u,
                        implementation: c
                    }
                }, r.createRoleSelector = function (t) {
                    return {$$typeof: Y8, value: t}
                }, r.createTestNameSelector = function (t) {
                    return {$$typeof: J8, value: t}
                }, r.createTextSelector = function (t) {
                    return {$$typeof: X8, value: t}
                }, r.deferredUpdates = function (t) {
                    var u = O2, c = he.transition;
                    try {
                        return he.transition = null, O2 = 16, t()
                    } finally {
                        O2 = u, he.transition = c
                    }
                }, r.discreteUpdates = function (t, u, c, d, p) {
                    var x = O2, C = he.transition;
                    try {
                        return he.transition = null, O2 = 1, t(u, c, d, p)
                    } finally {
                        O2 = x, he.transition = C, $3 === 0 && Z5()
                    }
                }, r.findAllNodes = _u, r.findBoundingRects = function (t, u) {
                    if (!s2) throw Error(f(363));
                    u = _u(t, u), t = [];
                    for (var c = 0; c < u.length; c++) t.push(K(u[c]));
                    for (u = t.length - 1; 0 < u; u--) {
                        c = t[u];
                        for (var d = c.x, p = d + c.width, x = c.y, C = x + c.height, n2 = u - 1; 0 <= n2; n2--) if (u !== n2) {
                            var x2 = t[n2], H2 = x2.x, a3 = H2 + x2.width, z3 = x2.y, t3 = z3 + x2.height;
                            if (d >= H2 && x >= z3 && p <= a3 && C <= t3) {
                                t.splice(u, 1);
                                break
                            } else if (d !== H2 || c.width !== x2.width || t3 < x || z3 > C) {
                                if (!(x !== z3 || c.height !== x2.height || a3 < d || H2 > p)) {
                                    H2 > d && (x2.width += H2 - d, x2.x = d), a3 < p && (x2.width = p - H2), t.splice(u, 1);
                                    break
                                }
                            } else {
                                z3 > x && (x2.height += z3 - x, x2.y = x), t3 < C && (x2.height = C - z3), t.splice(u, 1);
                                break
                            }
                        }
                    }
                    return t
                }, r.findHostInstance = Sc, r.findHostInstanceWithNoPortals = function (t) {
                    return t = O(t), t = t !== null ? y2(t) : null, t === null ? null : t.stateNode
                }, r.findHostInstanceWithWarning = function (t) {
                    return Sc(t)
                }, r.flushControlled = function (t) {
                    var u = $3;
                    $3 |= 1;
                    var c = he.transition, d = O2;
                    try {
                        he.transition = null, O2 = 1, t()
                    } finally {
                        O2 = d, he.transition = c, $3 = u, $3 === 0 && (Z5(), h())
                    }
                }, r.flushPassiveEffects = u5, r.flushSync = fc, r.focusWithin = function (t, u) {
                    if (!s2) throw Error(f(363));
                    for (t = wu(t), u = ac(t, u), u = Array.from(u), t = 0; t < u.length;) {
                        var c = u[t++];
                        if (!N2(c)) {
                            if (c.tag === 5 && B2(c.stateNode)) return !0;
                            for (c = c.child; c !== null;) u.push(c), c = c.sibling
                        }
                    }
                    return !1
                }, r.getCurrentUpdatePriority = function () {
                    return O2
                }, r.getFindAllNodesFailureDescription = function (t, u) {
                    if (!s2) throw Error(f(363));
                    var c = 0, d = [];
                    t = [wu(t), 0];
                    for (var p = 0; p < t.length;) {
                        var x = t[p++], C = t[p++], n2 = u[C];
                        if ((x.tag !== 5 || !N2(x)) && (vu(x, n2) && (d.push(Cu(n2)), C++, C > c && (c = C)), C < u.length)) for (x = x.child; x !== null;) t.push(x, C), x = x.sibling
                    }
                    if (c < u.length) {
                        for (t = []; c < u.length; c++) t.push(Cu(u[c]));
                        return `findAllNodes was able to match part of the selector:
  ` + (d.join(" > ") + `

No matching component was found for:
  `) + t.join(" > ")
                    }
                    return null
                }, r.getPublicRootInstance = function (t) {
                    if (t = t.current, !t.child) return null;
                    switch (t.child.tag) {
                        case 5:
                            return Z2(t.child.stateNode);
                        default:
                            return t.child.stateNode
                    }
                }, r.injectIntoDevTools = function (t) {
                    if (t = {
                        bundleType: t.bundleType,
                        version: t.version,
                        rendererPackageName: t.rendererPackageName,
                        rendererConfig: t.rendererConfig,
                        overrideHookState: null,
                        overrideHookStateDeletePath: null,
                        overrideHookStateRenamePath: null,
                        overrideProps: null,
                        overridePropsDeletePath: null,
                        overridePropsRenamePath: null,
                        setErrorHandler: null,
                        setSuspenseHandler: null,
                        scheduleUpdate: null,
                        currentDispatcherRef: s.ReactCurrentDispatcher,
                        findHostInstanceByFiber: Kx,
                        findFiberByHostInstance: t.findFiberByHostInstance || Zx,
                        findHostInstancesForRefresh: null,
                        scheduleRefresh: null,
                        scheduleRoot: null,
                        setRefreshHandler: null,
                        getCurrentFiber: null,
                        reconcilerVersion: "18.2.0"
                    }, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u") t = !1; else {
                        var u = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                        if (u.isDisabled || !u.supportsFiber) t = !0; else {
                            try {
                                _l = u.inject(t), zn = u
                            } catch {
                            }
                            t = !!u.checkDCE
                        }
                    }
                    return t
                }, r.isAlreadyRendering = function () {
                    return !1
                }, r.observeVisibleRects = function (t, u, c, d) {
                    if (!s2) throw Error(f(363));
                    t = _u(t, u);
                    var p = En(t, c, d).disconnect;
                    return {
                        disconnect: function () {
                            p()
                        }
                    }
                }, r.registerMutableSourceForHydration = function (t, u) {
                    var c = u._getVersion;
                    c = c(u._source), t.mutableSourceEagerHydrationData == null ? t.mutableSourceEagerHydrationData = [u, c] : t.mutableSourceEagerHydrationData.push(u, c)
                }, r.runWithPriority = function (t, u) {
                    var c = O2;
                    try {
                        return O2 = t, u()
                    } finally {
                        O2 = c
                    }
                }, r.shouldError = function () {
                    return null
                }, r.shouldSuspend = function () {
                    return !1
                }, r.updateContainer = function (t, u, c, d) {
                    var p = u.current, x = ll(), C = d1(p);
                    return c = Tc(c), u.context === null ? u.context = c : u.pendingContext = c, u = Pl(x, C), u.payload = {element: t}, d = d === void 0 ? null : d, d !== null && (u.callback = d), t = jl(p, u, C), t !== null && (St(t, p, C, x), R4(t, p, C)), C
                }, r
            }
        });
        var oy = Mn((ZD, uy) => {
            "use strict";
            uy.exports = ry()
        });
        var mg = Mn((pg, Pr) => {
            "use strict";
            (function (n) {
                "use strict";
                typeof Pr < "u" && Pr.exports && (Pr.exports = n), n["encoding-indexes"] = {
                    big5: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 17392, 19506, 17923, 17830, 17784, 160359, 19831, 17843, 162993, 19682, 163013, 15253, 18230, 18244, 19527, 19520, 148159, 144919, 160594, 159371, 159954, 19543, 172881, 18255, 17882, 19589, 162924, 19719, 19108, 18081, 158499, 29221, 154196, 137827, 146950, 147297, 26189, 22267, null, 32149, 22813, 166841, 15860, 38708, 162799, 23515, 138590, 23204, 13861, 171696, 23249, 23479, 23804, 26478, 34195, 170309, 29793, 29853, 14453, 138579, 145054, 155681, 16108, 153822, 15093, 31484, 40855, 147809, 166157, 143850, 133770, 143966, 17162, 33924, 40854, 37935, 18736, 34323, 22678, 38730, 37400, 31184, 31282, 26208, 27177, 34973, 29772, 31685, 26498, 31276, 21071, 36934, 13542, 29636, 155065, 29894, 40903, 22451, 18735, 21580, 16689, 145038, 22552, 31346, 162661, 35727, 18094, 159368, 16769, 155033, 31662, 140476, 40904, 140481, 140489, 140492, 40905, 34052, 144827, 16564, 40906, 17633, 175615, 25281, 28782, 40907, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 12736, 12737, 12738, 12739, 12740, 131340, 12741, 131281, 131277, 12742, 12743, 131275, 139240, 12744, 131274, 12745, 12746, 12747, 12748, 131342, 12749, 12750, 256, 193, 461, 192, 274, 201, 282, 200, 332, 211, 465, 210, null, 7870, null, 7872, 202, 257, 225, 462, 224, 593, 275, 233, 283, 232, 299, 237, 464, 236, 333, 243, 466, 242, 363, 250, 468, 249, 470, 472, 474, 476, 252, null, 7871, null, 7873, 234, 609, 9178, 9179, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 172969, 135493, null, 25866, null, null, 20029, 28381, 40270, 37343, null, null, 161589, 25745, 20250, 20264, 20392, 20822, 20852, 20892, 20964, 21153, 21160, 21307, 21326, 21457, 21464, 22242, 22768, 22788, 22791, 22834, 22836, 23398, 23454, 23455, 23706, 24198, 24635, 25993, 26622, 26628, 26725, 27982, 28860, 30005, 32420, 32428, 32442, 32455, 32463, 32479, 32518, 32567, 33402, 33487, 33647, 35270, 35774, 35810, 36710, 36711, 36718, 29713, 31996, 32205, 26950, 31433, 21031, null, null, null, null, 37260, 30904, 37214, 32956, null, 36107, 33014, 133607, null, null, 32927, 40647, 19661, 40393, 40460, 19518, 171510, 159758, 40458, 172339, 13761, null, 28314, 33342, 29977, null, 18705, 39532, 39567, 40857, 31111, 164972, 138698, 132560, 142054, 20004, 20097, 20096, 20103, 20159, 20203, 20279, 13388, 20413, 15944, 20483, 20616, 13437, 13459, 13477, 20870, 22789, 20955, 20988, 20997, 20105, 21113, 21136, 21287, 13767, 21417, 13649, 21424, 13651, 21442, 21539, 13677, 13682, 13953, 21651, 21667, 21684, 21689, 21712, 21743, 21784, 21795, 21800, 13720, 21823, 13733, 13759, 21975, 13765, 163204, 21797, null, 134210, 134421, 151851, 21904, 142534, 14828, 131905, 36422, 150968, 169189, 16467, 164030, 30586, 142392, 14900, 18389, 164189, 158194, 151018, 25821, 134524, 135092, 134357, 135412, 25741, 36478, 134806, 134155, 135012, 142505, 164438, 148691, null, 134470, 170573, 164073, 18420, 151207, 142530, 39602, 14951, 169460, 16365, 13574, 152263, 169940, 161992, 142660, 40302, 38933, null, 17369, 155813, 25780, 21731, 142668, 142282, 135287, 14843, 135279, 157402, 157462, 162208, 25834, 151634, 134211, 36456, 139681, 166732, 132913, null, 18443, 131497, 16378, 22643, 142733, null, 148936, 132348, 155799, 134988, 134550, 21881, 16571, 17338, null, 19124, 141926, 135325, 33194, 39157, 134556, 25465, 14846, 141173, 36288, 22177, 25724, 15939, null, 173569, 134665, 142031, 142537, null, 135368, 145858, 14738, 14854, 164507, 13688, 155209, 139463, 22098, 134961, 142514, 169760, 13500, 27709, 151099, null, null, 161140, 142987, 139784, 173659, 167117, 134778, 134196, 157724, 32659, 135375, 141315, 141625, 13819, 152035, 134796, 135053, 134826, 16275, 134960, 134471, 135503, 134732, null, 134827, 134057, 134472, 135360, 135485, 16377, 140950, 25650, 135085, 144372, 161337, 142286, 134526, 134527, 142417, 142421, 14872, 134808, 135367, 134958, 173618, 158544, 167122, 167321, 167114, 38314, 21708, 33476, 21945, null, 171715, 39974, 39606, 161630, 142830, 28992, 33133, 33004, 23580, 157042, 33076, 14231, 21343, 164029, 37302, 134906, 134671, 134775, 134907, 13789, 151019, 13833, 134358, 22191, 141237, 135369, 134672, 134776, 135288, 135496, 164359, 136277, 134777, 151120, 142756, 23124, 135197, 135198, 135413, 135414, 22428, 134673, 161428, 164557, 135093, 134779, 151934, 14083, 135094, 135552, 152280, 172733, 149978, 137274, 147831, 164476, 22681, 21096, 13850, 153405, 31666, 23400, 18432, 19244, 40743, 18919, 39967, 39821, 154484, 143677, 22011, 13810, 22153, 20008, 22786, 138177, 194680, 38737, 131206, 20059, 20155, 13630, 23587, 24401, 24516, 14586, 25164, 25909, 27514, 27701, 27706, 28780, 29227, 20012, 29357, 149737, 32594, 31035, 31993, 32595, 156266, 13505, null, 156491, 32770, 32896, 157202, 158033, 21341, 34916, 35265, 161970, 35744, 36125, 38021, 38264, 38271, 38376, 167439, 38886, 39029, 39118, 39134, 39267, 17e4, 40060, 40479, 40644, 27503, 63751, 20023, 131207, 38429, 25143, 38050, null, 20539, 28158, 171123, 40870, 15817, 34959, 147790, 28791, 23797, 19232, 152013, 13657, 154928, 24866, 166450, 36775, 37366, 29073, 26393, 29626, 144001, 172295, 15499, 137600, 19216, 30948, 29698, 20910, 165647, 16393, 27235, 172730, 16931, 34319, 133743, 31274, 170311, 166634, 38741, 28749, 21284, 139390, 37876, 30425, 166371, 40871, 30685, 20131, 20464, 20668, 20015, 20247, 40872, 21556, 32139, 22674, 22736, 138678, 24210, 24217, 24514, 141074, 25995, 144377, 26905, 27203, 146531, 27903, null, 29184, 148741, 29580, 16091, 150035, 23317, 29881, 35715, 154788, 153237, 31379, 31724, 31939, 32364, 33528, 34199, 40873, 34960, 40874, 36537, 40875, 36815, 34143, 39392, 37409, 40876, 167353, 136255, 16497, 17058, 23066, null, null, null, 39016, 26475, 17014, 22333, null, 34262, 149883, 33471, 160013, 19585, 159092, 23931, 158485, 159678, 40877, 40878, 23446, 40879, 26343, 32347, 28247, 31178, 15752, 17603, 143958, 141206, 17306, 17718, null, 23765, 146202, 35577, 23672, 15634, 144721, 23928, 40882, 29015, 17752, 147692, 138787, 19575, 14712, 13386, 131492, 158785, 35532, 20404, 131641, 22975, 33132, 38998, 170234, 24379, 134047, null, 139713, 166253, 16642, 18107, 168057, 16135, 40883, 172469, 16632, 14294, 18167, 158790, 16764, 165554, 160767, 17773, 14548, 152730, 17761, 17691, 19849, 19579, 19830, 17898, 16328, 150287, 13921, 17630, 17597, 16877, 23870, 23880, 23894, 15868, 14351, 23972, 23993, 14368, 14392, 24130, 24253, 24357, 24451, 14600, 14612, 14655, 14669, 24791, 24893, 23781, 14729, 25015, 25017, 25039, 14776, 25132, 25232, 25317, 25368, 14840, 22193, 14851, 25570, 25595, 25607, 25690, 14923, 25792, 23829, 22049, 40863, 14999, 25990, 15037, 26111, 26195, 15090, 26258, 15138, 26390, 15170, 26532, 26624, 15192, 26698, 26756, 15218, 15217, 15227, 26889, 26947, 29276, 26980, 27039, 27013, 15292, 27094, 15325, 27237, 27252, 27249, 27266, 15340, 27289, 15346, 27307, 27317, 27348, 27382, 27521, 27585, 27626, 27765, 27818, 15563, 27906, 27910, 27942, 28033, 15599, 28068, 28081, 28181, 28184, 28201, 28294, 166336, 28347, 28386, 28378, 40831, 28392, 28393, 28452, 28468, 15686, 147265, 28545, 28606, 15722, 15733, 29111, 23705, 15754, 28716, 15761, 28752, 28756, 28783, 28799, 28809, 131877, 17345, 13809, 134872, 147159, 22462, 159443, 28990, 153568, 13902, 27042, 166889, 23412, 31305, 153825, 169177, 31333, 31357, 154028, 31419, 31408, 31426, 31427, 29137, 156813, 16842, 31450, 31453, 31466, 16879, 21682, 154625, 31499, 31573, 31529, 152334, 154878, 31650, 31599, 33692, 154548, 158847, 31696, 33825, 31634, 31672, 154912, 15789, 154725, 33938, 31738, 31750, 31797, 154817, 31812, 31875, 149634, 31910, 26237, 148856, 31945, 31943, 31974, 31860, 31987, 31989, 31950, 32359, 17693, 159300, 32093, 159446, 29837, 32137, 32171, 28981, 32179, 32210, 147543, 155689, 32228, 15635, 32245, 137209, 32229, 164717, 32285, 155937, 155994, 32366, 32402, 17195, 37996, 32295, 32576, 32577, 32583, 31030, 156368, 39393, 32663, 156497, 32675, 136801, 131176, 17756, 145254, 17667, 164666, 32762, 156809, 32773, 32776, 32797, 32808, 32815, 172167, 158915, 32827, 32828, 32865, 141076, 18825, 157222, 146915, 157416, 26405, 32935, 166472, 33031, 33050, 22704, 141046, 27775, 156824, 151480, 25831, 136330, 33304, 137310, 27219, 150117, 150165, 17530, 33321, 133901, 158290, 146814, 20473, 136445, 34018, 33634, 158474, 149927, 144688, 137075, 146936, 33450, 26907, 194964, 16859, 34123, 33488, 33562, 134678, 137140, 14017, 143741, 144730, 33403, 33506, 33560, 147083, 159139, 158469, 158615, 144846, 15807, 33565, 21996, 33669, 17675, 159141, 33708, 33729, 33747, 13438, 159444, 27223, 34138, 13462, 159298, 143087, 33880, 154596, 33905, 15827, 17636, 27303, 33866, 146613, 31064, 33960, 158614, 159351, 159299, 34014, 33807, 33681, 17568, 33939, 34020, 154769, 16960, 154816, 17731, 34100, 23282, 159385, 17703, 34163, 17686, 26559, 34326, 165413, 165435, 34241, 159880, 34306, 136578, 159949, 194994, 17770, 34344, 13896, 137378, 21495, 160666, 34430, 34673, 172280, 34798, 142375, 34737, 34778, 34831, 22113, 34412, 26710, 17935, 34885, 34886, 161248, 146873, 161252, 34910, 34972, 18011, 34996, 34997, 25537, 35013, 30583, 161551, 35207, 35210, 35238, 35241, 35239, 35260, 166437, 35303, 162084, 162493, 35484, 30611, 37374, 35472, 162393, 31465, 162618, 147343, 18195, 162616, 29052, 35596, 35615, 152624, 152933, 35647, 35660, 35661, 35497, 150138, 35728, 35739, 35503, 136927, 17941, 34895, 35995, 163156, 163215, 195028, 14117, 163155, 36054, 163224, 163261, 36114, 36099, 137488, 36059, 28764, 36113, 150729, 16080, 36215, 36265, 163842, 135188, 149898, 15228, 164284, 160012, 31463, 36525, 36534, 36547, 37588, 36633, 36653, 164709, 164882, 36773, 37635, 172703, 133712, 36787, 18730, 166366, 165181, 146875, 24312, 143970, 36857, 172052, 165564, 165121, 140069, 14720, 159447, 36919, 165180, 162494, 36961, 165228, 165387, 37032, 165651, 37060, 165606, 37038, 37117, 37223, 15088, 37289, 37316, 31916, 166195, 138889, 37390, 27807, 37441, 37474, 153017, 37561, 166598, 146587, 166668, 153051, 134449, 37676, 37739, 166625, 166891, 28815, 23235, 166626, 166629, 18789, 37444, 166892, 166969, 166911, 37747, 37979, 36540, 38277, 38310, 37926, 38304, 28662, 17081, 140922, 165592, 135804, 146990, 18911, 27676, 38523, 38550, 16748, 38563, 159445, 25050, 38582, 30965, 166624, 38589, 21452, 18849, 158904, 131700, 156688, 168111, 168165, 150225, 137493, 144138, 38705, 34370, 38710, 18959, 17725, 17797, 150249, 28789, 23361, 38683, 38748, 168405, 38743, 23370, 168427, 38751, 37925, 20688, 143543, 143548, 38793, 38815, 38833, 38846, 38848, 38866, 38880, 152684, 38894, 29724, 169011, 38911, 38901, 168989, 162170, 19153, 38964, 38963, 38987, 39014, 15118, 160117, 15697, 132656, 147804, 153350, 39114, 39095, 39112, 39111, 19199, 159015, 136915, 21936, 39137, 39142, 39148, 37752, 39225, 150057, 19314, 170071, 170245, 39413, 39436, 39483, 39440, 39512, 153381, 14020, 168113, 170965, 39648, 39650, 170757, 39668, 19470, 39700, 39725, 165376, 20532, 39732, 158120, 14531, 143485, 39760, 39744, 171326, 23109, 137315, 39822, 148043, 39938, 39935, 39948, 171624, 40404, 171959, 172434, 172459, 172257, 172323, 172511, 40318, 40323, 172340, 40462, 26760, 40388, 139611, 172435, 172576, 137531, 172595, 40249, 172217, 172724, 40592, 40597, 40606, 40610, 19764, 40618, 40623, 148324, 40641, 15200, 14821, 15645, 20274, 14270, 166955, 40706, 40712, 19350, 37924, 159138, 40727, 40726, 40761, 22175, 22154, 40773, 39352, 168075, 38898, 33919, 40802, 40809, 31452, 40846, 29206, 19390, 149877, 149947, 29047, 150008, 148296, 150097, 29598, 166874, 137466, 31135, 166270, 167478, 37737, 37875, 166468, 37612, 37761, 37835, 166252, 148665, 29207, 16107, 30578, 31299, 28880, 148595, 148472, 29054, 137199, 28835, 137406, 144793, 16071, 137349, 152623, 137208, 14114, 136955, 137273, 14049, 137076, 137425, 155467, 14115, 136896, 22363, 150053, 136190, 135848, 136134, 136374, 34051, 145062, 34051, 33877, 149908, 160101, 146993, 152924, 147195, 159826, 17652, 145134, 170397, 159526, 26617, 14131, 15381, 15847, 22636, 137506, 26640, 16471, 145215, 147681, 147595, 147727, 158753, 21707, 22174, 157361, 22162, 135135, 134056, 134669, 37830, 166675, 37788, 20216, 20779, 14361, 148534, 20156, 132197, 131967, 20299, 20362, 153169, 23144, 131499, 132043, 14745, 131850, 132116, 13365, 20265, 131776, 167603, 131701, 35546, 131596, 20120, 20685, 20749, 20386, 20227, 150030, 147082, 20290, 20526, 20588, 20609, 20428, 20453, 20568, 20732, 20825, 20827, 20829, 20830, 28278, 144789, 147001, 147135, 28018, 137348, 147081, 20904, 20931, 132576, 17629, 132259, 132242, 132241, 36218, 166556, 132878, 21081, 21156, 133235, 21217, 37742, 18042, 29068, 148364, 134176, 149932, 135396, 27089, 134685, 29817, 16094, 29849, 29716, 29782, 29592, 19342, 150204, 147597, 21456, 13700, 29199, 147657, 21940, 131909, 21709, 134086, 22301, 37469, 38644, 37734, 22493, 22413, 22399, 13886, 22731, 23193, 166470, 136954, 137071, 136976, 23084, 22968, 37519, 23166, 23247, 23058, 153926, 137715, 137313, 148117, 14069, 27909, 29763, 23073, 155267, 23169, 166871, 132115, 37856, 29836, 135939, 28933, 18802, 37896, 166395, 37821, 14240, 23582, 23710, 24158, 24136, 137622, 137596, 146158, 24269, 23375, 137475, 137476, 14081, 137376, 14045, 136958, 14035, 33066, 166471, 138682, 144498, 166312, 24332, 24334, 137511, 137131, 23147, 137019, 23364, 34324, 161277, 34912, 24702, 141408, 140843, 24539, 16056, 140719, 140734, 168072, 159603, 25024, 131134, 131142, 140827, 24985, 24984, 24693, 142491, 142599, 149204, 168269, 25713, 149093, 142186, 14889, 142114, 144464, 170218, 142968, 25399, 173147, 25782, 25393, 25553, 149987, 142695, 25252, 142497, 25659, 25963, 26994, 15348, 143502, 144045, 149897, 144043, 21773, 144096, 137433, 169023, 26318, 144009, 143795, 15072, 16784, 152964, 166690, 152975, 136956, 152923, 152613, 30958, 143619, 137258, 143924, 13412, 143887, 143746, 148169, 26254, 159012, 26219, 19347, 26160, 161904, 138731, 26211, 144082, 144097, 26142, 153714, 14545, 145466, 145340, 15257, 145314, 144382, 29904, 15254, 26511, 149034, 26806, 26654, 15300, 27326, 14435, 145365, 148615, 27187, 27218, 27337, 27397, 137490, 25873, 26776, 27212, 15319, 27258, 27479, 147392, 146586, 37792, 37618, 166890, 166603, 37513, 163870, 166364, 37991, 28069, 28427, 149996, 28007, 147327, 15759, 28164, 147516, 23101, 28170, 22599, 27940, 30786, 28987, 148250, 148086, 28913, 29264, 29319, 29332, 149391, 149285, 20857, 150180, 132587, 29818, 147192, 144991, 150090, 149783, 155617, 16134, 16049, 150239, 166947, 147253, 24743, 16115, 29900, 29756, 37767, 29751, 17567, 159210, 17745, 30083, 16227, 150745, 150790, 16216, 30037, 30323, 173510, 15129, 29800, 166604, 149931, 149902, 15099, 15821, 150094, 16127, 149957, 149747, 37370, 22322, 37698, 166627, 137316, 20703, 152097, 152039, 30584, 143922, 30478, 30479, 30587, 149143, 145281, 14942, 149744, 29752, 29851, 16063, 150202, 150215, 16584, 150166, 156078, 37639, 152961, 30750, 30861, 30856, 30930, 29648, 31065, 161601, 153315, 16654, 31131, 33942, 31141, 27181, 147194, 31290, 31220, 16750, 136934, 16690, 37429, 31217, 134476, 149900, 131737, 146874, 137070, 13719, 21867, 13680, 13994, 131540, 134157, 31458, 23129, 141045, 154287, 154268, 23053, 131675, 30960, 23082, 154566, 31486, 16889, 31837, 31853, 16913, 154547, 155324, 155302, 31949, 150009, 137136, 31886, 31868, 31918, 27314, 32220, 32263, 32211, 32590, 156257, 155996, 162632, 32151, 155266, 17002, 158581, 133398, 26582, 131150, 144847, 22468, 156690, 156664, 149858, 32733, 31527, 133164, 154345, 154947, 31500, 155150, 39398, 34373, 39523, 27164, 144447, 14818, 150007, 157101, 39455, 157088, 33920, 160039, 158929, 17642, 33079, 17410, 32966, 33033, 33090, 157620, 39107, 158274, 33378, 33381, 158289, 33875, 159143, 34320, 160283, 23174, 16767, 137280, 23339, 137377, 23268, 137432, 34464, 195004, 146831, 34861, 160802, 23042, 34926, 20293, 34951, 35007, 35046, 35173, 35149, 153219, 35156, 161669, 161668, 166901, 166873, 166812, 166393, 16045, 33955, 18165, 18127, 14322, 35389, 35356, 169032, 24397, 37419, 148100, 26068, 28969, 28868, 137285, 40301, 35999, 36073, 163292, 22938, 30659, 23024, 17262, 14036, 36394, 36519, 150537, 36656, 36682, 17140, 27736, 28603, 140065, 18587, 28537, 28299, 137178, 39913, 14005, 149807, 37051, 37015, 21873, 18694, 37307, 37892, 166475, 16482, 166652, 37927, 166941, 166971, 34021, 35371, 38297, 38311, 38295, 38294, 167220, 29765, 16066, 149759, 150082, 148458, 16103, 143909, 38543, 167655, 167526, 167525, 16076, 149997, 150136, 147438, 29714, 29803, 16124, 38721, 168112, 26695, 18973, 168083, 153567, 38749, 37736, 166281, 166950, 166703, 156606, 37562, 23313, 35689, 18748, 29689, 147995, 38811, 38769, 39224, 134950, 24001, 166853, 150194, 38943, 169178, 37622, 169431, 37349, 17600, 166736, 150119, 166756, 39132, 166469, 16128, 37418, 18725, 33812, 39227, 39245, 162566, 15869, 39323, 19311, 39338, 39516, 166757, 153800, 27279, 39457, 23294, 39471, 170225, 19344, 170312, 39356, 19389, 19351, 37757, 22642, 135938, 22562, 149944, 136424, 30788, 141087, 146872, 26821, 15741, 37976, 14631, 24912, 141185, 141675, 24839, 40015, 40019, 40059, 39989, 39952, 39807, 39887, 171565, 39839, 172533, 172286, 40225, 19630, 147716, 40472, 19632, 40204, 172468, 172269, 172275, 170287, 40357, 33981, 159250, 159711, 158594, 34300, 17715, 159140, 159364, 159216, 33824, 34286, 159232, 145367, 155748, 31202, 144796, 144960, 18733, 149982, 15714, 37851, 37566, 37704, 131775, 30905, 37495, 37965, 20452, 13376, 36964, 152925, 30781, 30804, 30902, 30795, 137047, 143817, 149825, 13978, 20338, 28634, 28633, 28702, 28702, 21524, 147893, 22459, 22771, 22410, 40214, 22487, 28980, 13487, 147884, 29163, 158784, 151447, 23336, 137141, 166473, 24844, 23246, 23051, 17084, 148616, 14124, 19323, 166396, 37819, 37816, 137430, 134941, 33906, 158912, 136211, 148218, 142374, 148417, 22932, 146871, 157505, 32168, 155995, 155812, 149945, 149899, 166394, 37605, 29666, 16105, 29876, 166755, 137375, 16097, 150195, 27352, 29683, 29691, 16086, 150078, 150164, 137177, 150118, 132007, 136228, 149989, 29768, 149782, 28837, 149878, 37508, 29670, 37727, 132350, 37681, 166606, 166422, 37766, 166887, 153045, 18741, 166530, 29035, 149827, 134399, 22180, 132634, 134123, 134328, 21762, 31172, 137210, 32254, 136898, 150096, 137298, 17710, 37889, 14090, 166592, 149933, 22960, 137407, 137347, 160900, 23201, 14050, 146779, 14e3, 37471, 23161, 166529, 137314, 37748, 15565, 133812, 19094, 14730, 20724, 15721, 15692, 136092, 29045, 17147, 164376, 28175, 168164, 17643, 27991, 163407, 28775, 27823, 15574, 147437, 146989, 28162, 28428, 15727, 132085, 30033, 14012, 13512, 18048, 16090, 18545, 22980, 37486, 18750, 36673, 166940, 158656, 22546, 22472, 14038, 136274, 28926, 148322, 150129, 143331, 135856, 140221, 26809, 26983, 136088, 144613, 162804, 145119, 166531, 145366, 144378, 150687, 27162, 145069, 158903, 33854, 17631, 17614, 159014, 159057, 158850, 159710, 28439, 160009, 33597, 137018, 33773, 158848, 159827, 137179, 22921, 23170, 137139, 23137, 23153, 137477, 147964, 14125, 23023, 137020, 14023, 29070, 37776, 26266, 148133, 23150, 23083, 148115, 27179, 147193, 161590, 148571, 148170, 28957, 148057, 166369, 20400, 159016, 23746, 148686, 163405, 148413, 27148, 148054, 135940, 28838, 28979, 148457, 15781, 27871, 194597, 150095, 32357, 23019, 23855, 15859, 24412, 150109, 137183, 32164, 33830, 21637, 146170, 144128, 131604, 22398, 133333, 132633, 16357, 139166, 172726, 28675, 168283, 23920, 29583, 31955, 166489, 168992, 20424, 32743, 29389, 29456, 162548, 29496, 29497, 153334, 29505, 29512, 16041, 162584, 36972, 29173, 149746, 29665, 33270, 16074, 30476, 16081, 27810, 22269, 29721, 29726, 29727, 16098, 16112, 16116, 16122, 29907, 16142, 16211, 30018, 30061, 30066, 30093, 16252, 30152, 30172, 16320, 30285, 16343, 30324, 16348, 30330, 151388, 29064, 22051, 35200, 22633, 16413, 30531, 16441, 26465, 16453, 13787, 30616, 16490, 16495, 23646, 30654, 30667, 22770, 30744, 28857, 30748, 16552, 30777, 30791, 30801, 30822, 33864, 152885, 31027, 26627, 31026, 16643, 16649, 31121, 31129, 36795, 31238, 36796, 16743, 31377, 16818, 31420, 33401, 16836, 31439, 31451, 16847, 20001, 31586, 31596, 31611, 31762, 31771, 16992, 17018, 31867, 31900, 17036, 31928, 17044, 31981, 36755, 28864, 134351, 32207, 32212, 32208, 32253, 32686, 32692, 29343, 17303, 32800, 32805, 31545, 32814, 32817, 32852, 15820, 22452, 28832, 32951, 33001, 17389, 33036, 29482, 33038, 33042, 30048, 33044, 17409, 15161, 33110, 33113, 33114, 17427, 22586, 33148, 33156, 17445, 33171, 17453, 33189, 22511, 33217, 33252, 33364, 17551, 33446, 33398, 33482, 33496, 33535, 17584, 33623, 38505, 27018, 33797, 28917, 33892, 24803, 33928, 17668, 33982, 34017, 34040, 34064, 34104, 34130, 17723, 34159, 34160, 34272, 17783, 34418, 34450, 34482, 34543, 38469, 34699, 17926, 17943, 34990, 35071, 35108, 35143, 35217, 162151, 35369, 35384, 35476, 35508, 35921, 36052, 36082, 36124, 18328, 22623, 36291, 18413, 20206, 36410, 21976, 22356, 36465, 22005, 36528, 18487, 36558, 36578, 36580, 36589, 36594, 36791, 36801, 36810, 36812, 36915, 39364, 18605, 39136, 37395, 18718, 37416, 37464, 37483, 37553, 37550, 37567, 37603, 37611, 37619, 37620, 37629, 37699, 37764, 37805, 18757, 18769, 40639, 37911, 21249, 37917, 37933, 37950, 18794, 37972, 38009, 38189, 38306, 18855, 38388, 38451, 18917, 26528, 18980, 38720, 18997, 38834, 38850, 22100, 19172, 24808, 39097, 19225, 39153, 22596, 39182, 39193, 20916, 39196, 39223, 39234, 39261, 39266, 19312, 39365, 19357, 39484, 39695, 31363, 39785, 39809, 39901, 39921, 39924, 19565, 39968, 14191, 138178, 40265, 39994, 40702, 22096, 40339, 40381, 40384, 40444, 38134, 36790, 40571, 40620, 40625, 40637, 40646, 38108, 40674, 40689, 40696, 31432, 40772, 131220, 131767, 132e3, 26906, 38083, 22956, 132311, 22592, 38081, 14265, 132565, 132629, 132726, 136890, 22359, 29043, 133826, 133837, 134079, 21610, 194619, 134091, 21662, 134139, 134203, 134227, 134245, 134268, 24807, 134285, 22138, 134325, 134365, 134381, 134511, 134578, 134600, 26965, 39983, 34725, 134660, 134670, 134871, 135056, 134957, 134771, 23584, 135100, 24075, 135260, 135247, 135286, 26398, 135291, 135304, 135318, 13895, 135359, 135379, 135471, 135483, 21348, 33965, 135907, 136053, 135990, 35713, 136567, 136729, 137155, 137159, 20088, 28859, 137261, 137578, 137773, 137797, 138282, 138352, 138412, 138952, 25283, 138965, 139029, 29080, 26709, 139333, 27113, 14024, 139900, 140247, 140282, 141098, 141425, 141647, 33533, 141671, 141715, 142037, 35237, 142056, 36768, 142094, 38840, 142143, 38983, 39613, 142412, null, 142472, 142519, 154600, 142600, 142610, 142775, 142741, 142914, 143220, 143308, 143411, 143462, 144159, 144350, 24497, 26184, 26303, 162425, 144743, 144883, 29185, 149946, 30679, 144922, 145174, 32391, 131910, 22709, 26382, 26904, 146087, 161367, 155618, 146961, 147129, 161278, 139418, 18640, 19128, 147737, 166554, 148206, 148237, 147515, 148276, 148374, 150085, 132554, 20946, 132625, 22943, 138920, 15294, 146687, 148484, 148694, 22408, 149108, 14747, 149295, 165352, 170441, 14178, 139715, 35678, 166734, 39382, 149522, 149755, 150037, 29193, 150208, 134264, 22885, 151205, 151430, 132985, 36570, 151596, 21135, 22335, 29041, 152217, 152601, 147274, 150183, 21948, 152646, 152686, 158546, 37332, 13427, 152895, 161330, 152926, 18200, 152930, 152934, 153543, 149823, 153693, 20582, 13563, 144332, 24798, 153859, 18300, 166216, 154286, 154505, 154630, 138640, 22433, 29009, 28598, 155906, 162834, 36950, 156082, 151450, 35682, 156674, 156746, 23899, 158711, 36662, 156804, 137500, 35562, 150006, 156808, 147439, 156946, 19392, 157119, 157365, 141083, 37989, 153569, 24981, 23079, 194765, 20411, 22201, 148769, 157436, 20074, 149812, 38486, 28047, 158909, 13848, 35191, 157593, 157806, 156689, 157790, 29151, 157895, 31554, 168128, 133649, 157990, 37124, 158009, 31301, 40432, 158202, 39462, 158253, 13919, 156777, 131105, 31107, 158260, 158555, 23852, 144665, 33743, 158621, 18128, 158884, 30011, 34917, 159150, 22710, 14108, 140685, 159819, 160205, 15444, 160384, 160389, 37505, 139642, 160395, 37680, 160486, 149968, 27705, 38047, 160848, 134904, 34855, 35061, 141606, 164979, 137137, 28344, 150058, 137248, 14756, 14009, 23568, 31203, 17727, 26294, 171181, 170148, 35139, 161740, 161880, 22230, 16607, 136714, 14753, 145199, 164072, 136133, 29101, 33638, 162269, 168360, 23143, 19639, 159919, 166315, 162301, 162314, 162571, 163174, 147834, 31555, 31102, 163849, 28597, 172767, 27139, 164632, 21410, 159239, 37823, 26678, 38749, 164207, 163875, 158133, 136173, 143919, 163912, 23941, 166960, 163971, 22293, 38947, 166217, 23979, 149896, 26046, 27093, 21458, 150181, 147329, 15377, 26422, 163984, 164084, 164142, 139169, 164175, 164233, 164271, 164378, 164614, 164655, 164746, 13770, 164968, 165546, 18682, 25574, 166230, 30728, 37461, 166328, 17394, 166375, 17375, 166376, 166726, 166868, 23032, 166921, 36619, 167877, 168172, 31569, 168208, 168252, 15863, 168286, 150218, 36816, 29327, 22155, 169191, 169449, 169392, 169400, 169778, 170193, 170313, 170346, 170435, 170536, 170766, 171354, 171419, 32415, 171768, 171811, 19620, 38215, 172691, 29090, 172799, 19857, 36882, 173515, 19868, 134300, 36798, 21953, 36794, 140464, 36793, 150163, 17673, 32383, 28502, 27313, 20202, 13540, 166700, 161949, 14138, 36480, 137205, 163876, 166764, 166809, 162366, 157359, 15851, 161365, 146615, 153141, 153942, 20122, 155265, 156248, 22207, 134765, 36366, 23405, 147080, 150686, 25566, 25296, 137206, 137339, 25904, 22061, 154698, 21530, 152337, 15814, 171416, 19581, 22050, 22046, 32585, 155352, 22901, 146752, 34672, 19996, 135146, 134473, 145082, 33047, 40286, 36120, 30267, 40005, 30286, 30649, 37701, 21554, 33096, 33527, 22053, 33074, 33816, 32957, 21994, 31074, 22083, 21526, 134813, 13774, 22021, 22001, 26353, 164578, 13869, 30004, 22e3, 21946, 21655, 21874, 134209, 134294, 24272, 151880, 134774, 142434, 134818, 40619, 32090, 21982, 135285, 25245, 38765, 21652, 36045, 29174, 37238, 25596, 25529, 25598, 21865, 142147, 40050, 143027, 20890, 13535, 134567, 20903, 21581, 21790, 21779, 30310, 36397, 157834, 30129, 32950, 34820, 34694, 35015, 33206, 33820, 135361, 17644, 29444, 149254, 23440, 33547, 157843, 22139, 141044, 163119, 147875, 163187, 159440, 160438, 37232, 135641, 37384, 146684, 173737, 134828, 134905, 29286, 138402, 18254, 151490, 163833, 135147, 16634, 40029, 25887, 142752, 18675, 149472, 171388, 135148, 134666, 24674, 161187, 135149, null, 155720, 135559, 29091, 32398, 40272, 19994, 19972, 13687, 23309, 27826, 21351, 13996, 14812, 21373, 13989, 149016, 22682, 150382, 33325, 21579, 22442, 154261, 133497, null, 14930, 140389, 29556, 171692, 19721, 39917, 146686, 171824, 19547, 151465, 169374, 171998, 33884, 146870, 160434, 157619, 145184, 25390, 32037, 147191, 146988, 14890, 36872, 21196, 15988, 13946, 17897, 132238, 30272, 23280, 134838, 30842, 163630, 22695, 16575, 22140, 39819, 23924, 30292, 173108, 40581, 19681, 30201, 14331, 24857, 143578, 148466, null, 22109, 135849, 22439, 149859, 171526, 21044, 159918, 13741, 27722, 40316, 31830, 39737, 22494, 137068, 23635, 25811, 169168, 156469, 160100, 34477, 134440, 159010, 150242, 134513, null, 20990, 139023, 23950, 38659, 138705, 40577, 36940, 31519, 39682, 23761, 31651, 25192, 25397, 39679, 31695, 39722, 31870, 39726, 31810, 31878, 39957, 31740, 39689, 40727, 39963, 149822, 40794, 21875, 23491, 20477, 40600, 20466, 21088, 15878, 21201, 22375, 20566, 22967, 24082, 38856, 40363, 36700, 21609, 38836, 39232, 38842, 21292, 24880, 26924, 21466, 39946, 40194, 19515, 38465, 27008, 20646, 30022, 137069, 39386, 21107, null, 37209, 38529, 37212, null, 37201, 167575, 25471, 159011, 27338, 22033, 37262, 30074, 25221, 132092, 29519, 31856, 154657, 146685, null, 149785, 30422, 39837, 20010, 134356, 33726, 34882, null, 23626, 27072, 20717, 22394, 21023, 24053, 20174, 27697, 131570, 20281, 21660, 21722, 21146, 36226, 13822, 24332, 13811, null, 27474, 37244, 40869, 39831, 38958, 39092, 39610, 40616, 40580, 29050, 31508, null, 27642, 34840, 32632, null, 22048, 173642, 36471, 40787, null, 36308, 36431, 40476, 36353, 25218, 164733, 36392, 36469, 31443, 150135, 31294, 30936, 27882, 35431, 30215, 166490, 40742, 27854, 34774, 30147, 172722, 30803, 194624, 36108, 29410, 29553, 35629, 29442, 29937, 36075, 150203, 34351, 24506, 34976, 17591, null, 137275, 159237, null, 35454, 140571, null, 24829, 30311, 39639, 40260, 37742, 39823, 34805, null, 34831, 36087, 29484, 38689, 39856, 13782, 29362, 19463, 31825, 39242, 155993, 24921, 19460, 40598, 24957, null, 22367, 24943, 25254, 25145, 25294, 14940, 25058, 21418, 144373, 25444, 26626, 13778, 23895, 166850, 36826, 167481, null, 20697, 138566, 30982, 21298, 38456, 134971, 16485, null, 30718, null, 31938, 155418, 31962, 31277, 32870, 32867, 32077, 29957, 29938, 35220, 33306, 26380, 32866, 160902, 32859, 29936, 33027, 30500, 35209, 157644, 30035, 159441, 34729, 34766, 33224, 34700, 35401, 36013, 35651, 30507, 29944, 34010, 13877, 27058, 36262, null, 35241, 29800, 28089, 34753, 147473, 29927, 15835, 29046, 24740, 24988, 15569, 29026, 24695, null, 32625, 166701, 29264, 24809, 19326, 21024, 15384, 146631, 155351, 161366, 152881, 137540, 135934, 170243, 159196, 159917, 23745, 156077, 166415, 145015, 131310, 157766, 151310, 17762, 23327, 156492, 40784, 40614, 156267, 12288, 65292, 12289, 12290, 65294, 8231, 65307, 65306, 65311, 65281, 65072, 8230, 8229, 65104, 65105, 65106, 183, 65108, 65109, 65110, 65111, 65372, 8211, 65073, 8212, 65075, 9588, 65076, 65103, 65288, 65289, 65077, 65078, 65371, 65373, 65079, 65080, 12308, 12309, 65081, 65082, 12304, 12305, 65083, 65084, 12298, 12299, 65085, 65086, 12296, 12297, 65087, 65088, 12300, 12301, 65089, 65090, 12302, 12303, 65091, 65092, 65113, 65114, 65115, 65116, 65117, 65118, 8216, 8217, 8220, 8221, 12317, 12318, 8245, 8242, 65283, 65286, 65290, 8251, 167, 12291, 9675, 9679, 9651, 9650, 9678, 9734, 9733, 9671, 9670, 9633, 9632, 9661, 9660, 12963, 8453, 175, 65507, 65343, 717, 65097, 65098, 65101, 65102, 65099, 65100, 65119, 65120, 65121, 65291, 65293, 215, 247, 177, 8730, 65308, 65310, 65309, 8806, 8807, 8800, 8734, 8786, 8801, 65122, 65123, 65124, 65125, 65126, 65374, 8745, 8746, 8869, 8736, 8735, 8895, 13266, 13265, 8747, 8750, 8757, 8756, 9792, 9794, 8853, 8857, 8593, 8595, 8592, 8594, 8598, 8599, 8601, 8600, 8741, 8739, 65295, 65340, 8725, 65128, 65284, 65509, 12306, 65504, 65505, 65285, 65312, 8451, 8457, 65129, 65130, 65131, 13269, 13212, 13213, 13214, 13262, 13217, 13198, 13199, 13252, 176, 20825, 20827, 20830, 20829, 20833, 20835, 21991, 29929, 31950, 9601, 9602, 9603, 9604, 9605, 9606, 9607, 9608, 9615, 9614, 9613, 9612, 9611, 9610, 9609, 9532, 9524, 9516, 9508, 9500, 9620, 9472, 9474, 9621, 9484, 9488, 9492, 9496, 9581, 9582, 9584, 9583, 9552, 9566, 9578, 9569, 9698, 9699, 9701, 9700, 9585, 9586, 9587, 65296, 65297, 65298, 65299, 65300, 65301, 65302, 65303, 65304, 65305, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 12321, 12322, 12323, 12324, 12325, 12326, 12327, 12328, 12329, 21313, 21316, 21317, 65313, 65314, 65315, 65316, 65317, 65318, 65319, 65320, 65321, 65322, 65323, 65324, 65325, 65326, 65327, 65328, 65329, 65330, 65331, 65332, 65333, 65334, 65335, 65336, 65337, 65338, 65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361, 65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 967, 968, 969, 12549, 12550, 12551, 12552, 12553, 12554, 12555, 12556, 12557, 12558, 12559, 12560, 12561, 12562, 12563, 12564, 12565, 12566, 12567, 12568, 12569, 12570, 12571, 12572, 12573, 12574, 12575, 12576, 12577, 12578, 12579, 12580, 12581, 12582, 12583, 12584, 12585, 729, 713, 714, 711, 715, 9216, 9217, 9218, 9219, 9220, 9221, 9222, 9223, 9224, 9225, 9226, 9227, 9228, 9229, 9230, 9231, 9232, 9233, 9234, 9235, 9236, 9237, 9238, 9239, 9240, 9241, 9242, 9243, 9244, 9245, 9246, 9247, 9249, 8364, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 19968, 20057, 19969, 19971, 20035, 20061, 20102, 20108, 20154, 20799, 20837, 20843, 20960, 20992, 20993, 21147, 21269, 21313, 21340, 21448, 19977, 19979, 19976, 19978, 20011, 20024, 20961, 20037, 20040, 20063, 20062, 20110, 20129, 20800, 20995, 21242, 21315, 21449, 21475, 22303, 22763, 22805, 22823, 22899, 23376, 23377, 23379, 23544, 23567, 23586, 23608, 23665, 24029, 24037, 24049, 24050, 24051, 24062, 24178, 24318, 24331, 24339, 25165, 19985, 19984, 19981, 20013, 20016, 20025, 20043, 23609, 20104, 20113, 20117, 20114, 20116, 20130, 20161, 20160, 20163, 20166, 20167, 20173, 20170, 20171, 20164, 20803, 20801, 20839, 20845, 20846, 20844, 20887, 20982, 20998, 20999, 21e3, 21243, 21246, 21247, 21270, 21305, 21320, 21319, 21317, 21342, 21380, 21451, 21450, 21453, 22764, 22825, 22827, 22826, 22829, 23380, 23569, 23588, 23610, 23663, 24052, 24187, 24319, 24340, 24341, 24515, 25096, 25142, 25163, 25166, 25903, 25991, 26007, 26020, 26041, 26085, 26352, 26376, 26408, 27424, 27490, 27513, 27595, 27604, 27611, 27663, 27700, 28779, 29226, 29238, 29243, 29255, 29273, 29275, 29356, 29579, 19993, 19990, 19989, 19988, 19992, 20027, 20045, 20047, 20046, 20197, 20184, 20180, 20181, 20182, 20183, 20195, 20196, 20185, 20190, 20805, 20804, 20873, 20874, 20908, 20985, 20986, 20984, 21002, 21152, 21151, 21253, 21254, 21271, 21277, 20191, 21322, 21321, 21345, 21344, 21359, 21358, 21435, 21487, 21476, 21491, 21484, 21486, 21481, 21480, 21500, 21496, 21493, 21483, 21478, 21482, 21490, 21489, 21488, 21477, 21485, 21499, 22235, 22234, 22806, 22830, 22833, 22900, 22902, 23381, 23427, 23612, 24040, 24039, 24038, 24066, 24067, 24179, 24188, 24321, 24344, 24343, 24517, 25098, 25171, 25172, 25170, 25169, 26021, 26086, 26414, 26412, 26410, 26411, 26413, 27491, 27597, 27665, 27664, 27704, 27713, 27712, 27710, 29359, 29572, 29577, 29916, 29926, 29976, 29983, 29992, 29993, 3e4, 30001, 30002, 30003, 30091, 30333, 30382, 30399, 30446, 30683, 30690, 30707, 31034, 31166, 31348, 31435, 19998, 19999, 20050, 20051, 20073, 20121, 20132, 20134, 20133, 20223, 20233, 20249, 20234, 20245, 20237, 20240, 20241, 20239, 20210, 20214, 20219, 20208, 20211, 20221, 20225, 20235, 20809, 20807, 20806, 20808, 20840, 20849, 20877, 20912, 21015, 21009, 21010, 21006, 21014, 21155, 21256, 21281, 21280, 21360, 21361, 21513, 21519, 21516, 21514, 21520, 21505, 21515, 21508, 21521, 21517, 21512, 21507, 21518, 21510, 21522, 22240, 22238, 22237, 22323, 22320, 22312, 22317, 22316, 22319, 22313, 22809, 22810, 22839, 22840, 22916, 22904, 22915, 22909, 22905, 22914, 22913, 23383, 23384, 23431, 23432, 23429, 23433, 23546, 23574, 23673, 24030, 24070, 24182, 24180, 24335, 24347, 24537, 24534, 25102, 25100, 25101, 25104, 25187, 25179, 25176, 25910, 26089, 26088, 26092, 26093, 26354, 26355, 26377, 26429, 26420, 26417, 26421, 27425, 27492, 27515, 27670, 27741, 27735, 27737, 27743, 27744, 27728, 27733, 27745, 27739, 27725, 27726, 28784, 29279, 29277, 30334, 31481, 31859, 31992, 32566, 32650, 32701, 32769, 32771, 32780, 32786, 32819, 32895, 32905, 32907, 32908, 33251, 33258, 33267, 33276, 33292, 33307, 33311, 33390, 33394, 33406, 34411, 34880, 34892, 34915, 35199, 38433, 20018, 20136, 20301, 20303, 20295, 20311, 20318, 20276, 20315, 20309, 20272, 20304, 20305, 20285, 20282, 20280, 20291, 20308, 20284, 20294, 20323, 20316, 20320, 20271, 20302, 20278, 20313, 20317, 20296, 20314, 20812, 20811, 20813, 20853, 20918, 20919, 21029, 21028, 21033, 21034, 21032, 21163, 21161, 21162, 21164, 21283, 21363, 21365, 21533, 21549, 21534, 21566, 21542, 21582, 21543, 21574, 21571, 21555, 21576, 21570, 21531, 21545, 21578, 21561, 21563, 21560, 21550, 21557, 21558, 21536, 21564, 21568, 21553, 21547, 21535, 21548, 22250, 22256, 22244, 22251, 22346, 22353, 22336, 22349, 22343, 22350, 22334, 22352, 22351, 22331, 22767, 22846, 22941, 22930, 22952, 22942, 22947, 22937, 22934, 22925, 22948, 22931, 22922, 22949, 23389, 23388, 23386, 23387, 23436, 23435, 23439, 23596, 23616, 23617, 23615, 23614, 23696, 23697, 23700, 23692, 24043, 24076, 24207, 24199, 24202, 24311, 24324, 24351, 24420, 24418, 24439, 24441, 24536, 24524, 24535, 24525, 24561, 24555, 24568, 24554, 25106, 25105, 25220, 25239, 25238, 25216, 25206, 25225, 25197, 25226, 25212, 25214, 25209, 25203, 25234, 25199, 25240, 25198, 25237, 25235, 25233, 25222, 25913, 25915, 25912, 26097, 26356, 26463, 26446, 26447, 26448, 26449, 26460, 26454, 26462, 26441, 26438, 26464, 26451, 26455, 27493, 27599, 27714, 27742, 27801, 27777, 27784, 27785, 27781, 27803, 27754, 27770, 27792, 27760, 27788, 27752, 27798, 27794, 27773, 27779, 27762, 27774, 27764, 27782, 27766, 27789, 27796, 27800, 27778, 28790, 28796, 28797, 28792, 29282, 29281, 29280, 29380, 29378, 29590, 29996, 29995, 30007, 30008, 30338, 30447, 30691, 31169, 31168, 31167, 31350, 31995, 32597, 32918, 32915, 32925, 32920, 32923, 32922, 32946, 33391, 33426, 33419, 33421, 35211, 35282, 35328, 35895, 35910, 35925, 35997, 36196, 36208, 36275, 36523, 36554, 36763, 36784, 36802, 36806, 36805, 36804, 24033, 37009, 37026, 37034, 37030, 37027, 37193, 37318, 37324, 38450, 38446, 38449, 38442, 38444, 20006, 20054, 20083, 20107, 20123, 20126, 20139, 20140, 20335, 20381, 20365, 20339, 20351, 20332, 20379, 20363, 20358, 20355, 20336, 20341, 20360, 20329, 20347, 20374, 20350, 20367, 20369, 20346, 20820, 20818, 20821, 20841, 20855, 20854, 20856, 20925, 20989, 21051, 21048, 21047, 21050, 21040, 21038, 21046, 21057, 21182, 21179, 21330, 21332, 21331, 21329, 21350, 21367, 21368, 21369, 21462, 21460, 21463, 21619, 21621, 21654, 21624, 21653, 21632, 21627, 21623, 21636, 21650, 21638, 21628, 21648, 21617, 21622, 21644, 21658, 21602, 21608, 21643, 21629, 21646, 22266, 22403, 22391, 22378, 22377, 22369, 22374, 22372, 22396, 22812, 22857, 22855, 22856, 22852, 22868, 22974, 22971, 22996, 22969, 22958, 22993, 22982, 22992, 22989, 22987, 22995, 22986, 22959, 22963, 22994, 22981, 23391, 23396, 23395, 23447, 23450, 23448, 23452, 23449, 23451, 23578, 23624, 23621, 23622, 23735, 23713, 23736, 23721, 23723, 23729, 23731, 24088, 24090, 24086, 24085, 24091, 24081, 24184, 24218, 24215, 24220, 24213, 24214, 24310, 24358, 24359, 24361, 24448, 24449, 24447, 24444, 24541, 24544, 24573, 24565, 24575, 24591, 24596, 24623, 24629, 24598, 24618, 24597, 24609, 24615, 24617, 24619, 24603, 25110, 25109, 25151, 25150, 25152, 25215, 25289, 25292, 25284, 25279, 25282, 25273, 25298, 25307, 25259, 25299, 25300, 25291, 25288, 25256, 25277, 25276, 25296, 25305, 25287, 25293, 25269, 25306, 25265, 25304, 25302, 25303, 25286, 25260, 25294, 25918, 26023, 26044, 26106, 26132, 26131, 26124, 26118, 26114, 26126, 26112, 26127, 26133, 26122, 26119, 26381, 26379, 26477, 26507, 26517, 26481, 26524, 26483, 26487, 26503, 26525, 26519, 26479, 26480, 26495, 26505, 26494, 26512, 26485, 26522, 26515, 26492, 26474, 26482, 27427, 27494, 27495, 27519, 27667, 27675, 27875, 27880, 27891, 27825, 27852, 27877, 27827, 27837, 27838, 27836, 27874, 27819, 27861, 27859, 27832, 27844, 27833, 27841, 27822, 27863, 27845, 27889, 27839, 27835, 27873, 27867, 27850, 27820, 27887, 27868, 27862, 27872, 28821, 28814, 28818, 28810, 28825, 29228, 29229, 29240, 29256, 29287, 29289, 29376, 29390, 29401, 29399, 29392, 29609, 29608, 29599, 29611, 29605, 30013, 30109, 30105, 30106, 30340, 30402, 30450, 30452, 30693, 30717, 31038, 31040, 31041, 31177, 31176, 31354, 31353, 31482, 31998, 32596, 32652, 32651, 32773, 32954, 32933, 32930, 32945, 32929, 32939, 32937, 32948, 32938, 32943, 33253, 33278, 33293, 33459, 33437, 33433, 33453, 33469, 33439, 33465, 33457, 33452, 33445, 33455, 33464, 33443, 33456, 33470, 33463, 34382, 34417, 21021, 34920, 36555, 36814, 36820, 36817, 37045, 37048, 37041, 37046, 37319, 37329, 38263, 38272, 38428, 38464, 38463, 38459, 38468, 38466, 38585, 38632, 38738, 38750, 20127, 20141, 20142, 20449, 20405, 20399, 20415, 20448, 20433, 20431, 20445, 20419, 20406, 20440, 20447, 20426, 20439, 20398, 20432, 20420, 20418, 20442, 20430, 20446, 20407, 20823, 20882, 20881, 20896, 21070, 21059, 21066, 21069, 21068, 21067, 21063, 21191, 21193, 21187, 21185, 21261, 21335, 21371, 21402, 21467, 21676, 21696, 21672, 21710, 21705, 21688, 21670, 21683, 21703, 21698, 21693, 21674, 21697, 21700, 21704, 21679, 21675, 21681, 21691, 21673, 21671, 21695, 22271, 22402, 22411, 22432, 22435, 22434, 22478, 22446, 22419, 22869, 22865, 22863, 22862, 22864, 23004, 23e3, 23039, 23011, 23016, 23043, 23013, 23018, 23002, 23014, 23041, 23035, 23401, 23459, 23462, 23460, 23458, 23461, 23553, 23630, 23631, 23629, 23627, 23769, 23762, 24055, 24093, 24101, 24095, 24189, 24224, 24230, 24314, 24328, 24365, 24421, 24456, 24453, 24458, 24459, 24455, 24460, 24457, 24594, 24605, 24608, 24613, 24590, 24616, 24653, 24688, 24680, 24674, 24646, 24643, 24684, 24683, 24682, 24676, 25153, 25308, 25366, 25353, 25340, 25325, 25345, 25326, 25341, 25351, 25329, 25335, 25327, 25324, 25342, 25332, 25361, 25346, 25919, 25925, 26027, 26045, 26082, 26149, 26157, 26144, 26151, 26159, 26143, 26152, 26161, 26148, 26359, 26623, 26579, 26609, 26580, 26576, 26604, 26550, 26543, 26613, 26601, 26607, 26564, 26577, 26548, 26586, 26597, 26552, 26575, 26590, 26611, 26544, 26585, 26594, 26589, 26578, 27498, 27523, 27526, 27573, 27602, 27607, 27679, 27849, 27915, 27954, 27946, 27969, 27941, 27916, 27953, 27934, 27927, 27963, 27965, 27966, 27958, 27931, 27893, 27961, 27943, 27960, 27945, 27950, 27957, 27918, 27947, 28843, 28858, 28851, 28844, 28847, 28845, 28856, 28846, 28836, 29232, 29298, 29295, 29300, 29417, 29408, 29409, 29623, 29642, 29627, 29618, 29645, 29632, 29619, 29978, 29997, 30031, 30028, 30030, 30027, 30123, 30116, 30117, 30114, 30115, 30328, 30342, 30343, 30344, 30408, 30406, 30403, 30405, 30465, 30457, 30456, 30473, 30475, 30462, 30460, 30471, 30684, 30722, 30740, 30732, 30733, 31046, 31049, 31048, 31047, 31161, 31162, 31185, 31186, 31179, 31359, 31361, 31487, 31485, 31869, 32002, 32005, 32e3, 32009, 32007, 32004, 32006, 32568, 32654, 32703, 32772, 32784, 32781, 32785, 32822, 32982, 32997, 32986, 32963, 32964, 32972, 32993, 32987, 32974, 32990, 32996, 32989, 33268, 33314, 33511, 33539, 33541, 33507, 33499, 33510, 33540, 33509, 33538, 33545, 33490, 33495, 33521, 33537, 33500, 33492, 33489, 33502, 33491, 33503, 33519, 33542, 34384, 34425, 34427, 34426, 34893, 34923, 35201, 35284, 35336, 35330, 35331, 35998, 36e3, 36212, 36211, 36276, 36557, 36556, 36848, 36838, 36834, 36842, 36837, 36845, 36843, 36836, 36840, 37066, 37070, 37057, 37059, 37195, 37194, 37325, 38274, 38480, 38475, 38476, 38477, 38754, 38761, 38859, 38893, 38899, 38913, 39080, 39131, 39135, 39318, 39321, 20056, 20147, 20492, 20493, 20515, 20463, 20518, 20517, 20472, 20521, 20502, 20486, 20540, 20511, 20506, 20498, 20497, 20474, 20480, 20500, 20520, 20465, 20513, 20491, 20505, 20504, 20467, 20462, 20525, 20522, 20478, 20523, 20489, 20860, 20900, 20901, 20898, 20941, 20940, 20934, 20939, 21078, 21084, 21076, 21083, 21085, 21290, 21375, 21407, 21405, 21471, 21736, 21776, 21761, 21815, 21756, 21733, 21746, 21766, 21754, 21780, 21737, 21741, 21729, 21769, 21742, 21738, 21734, 21799, 21767, 21757, 21775, 22275, 22276, 22466, 22484, 22475, 22467, 22537, 22799, 22871, 22872, 22874, 23057, 23064, 23068, 23071, 23067, 23059, 23020, 23072, 23075, 23081, 23077, 23052, 23049, 23403, 23640, 23472, 23475, 23478, 23476, 23470, 23477, 23481, 23480, 23556, 23633, 23637, 23632, 23789, 23805, 23803, 23786, 23784, 23792, 23798, 23809, 23796, 24046, 24109, 24107, 24235, 24237, 24231, 24369, 24466, 24465, 24464, 24665, 24675, 24677, 24656, 24661, 24685, 24681, 24687, 24708, 24735, 24730, 24717, 24724, 24716, 24709, 24726, 25159, 25331, 25352, 25343, 25422, 25406, 25391, 25429, 25410, 25414, 25423, 25417, 25402, 25424, 25405, 25386, 25387, 25384, 25421, 25420, 25928, 25929, 26009, 26049, 26053, 26178, 26185, 26191, 26179, 26194, 26188, 26181, 26177, 26360, 26388, 26389, 26391, 26657, 26680, 26696, 26694, 26707, 26681, 26690, 26708, 26665, 26803, 26647, 26700, 26705, 26685, 26612, 26704, 26688, 26684, 26691, 26666, 26693, 26643, 26648, 26689, 27530, 27529, 27575, 27683, 27687, 27688, 27686, 27684, 27888, 28010, 28053, 28040, 28039, 28006, 28024, 28023, 27993, 28051, 28012, 28041, 28014, 27994, 28020, 28009, 28044, 28042, 28025, 28037, 28005, 28052, 28874, 28888, 28900, 28889, 28872, 28879, 29241, 29305, 29436, 29433, 29437, 29432, 29431, 29574, 29677, 29705, 29678, 29664, 29674, 29662, 30036, 30045, 30044, 30042, 30041, 30142, 30149, 30151, 30130, 30131, 30141, 30140, 30137, 30146, 30136, 30347, 30384, 30410, 30413, 30414, 30505, 30495, 30496, 30504, 30697, 30768, 30759, 30776, 30749, 30772, 30775, 30757, 30765, 30752, 30751, 30770, 31061, 31056, 31072, 31071, 31062, 31070, 31069, 31063, 31066, 31204, 31203, 31207, 31199, 31206, 31209, 31192, 31364, 31368, 31449, 31494, 31505, 31881, 32033, 32023, 32011, 32010, 32032, 32034, 32020, 32016, 32021, 32026, 32028, 32013, 32025, 32027, 32570, 32607, 32660, 32709, 32705, 32774, 32792, 32789, 32793, 32791, 32829, 32831, 33009, 33026, 33008, 33029, 33005, 33012, 33030, 33016, 33011, 33032, 33021, 33034, 33020, 33007, 33261, 33260, 33280, 33296, 33322, 33323, 33320, 33324, 33467, 33579, 33618, 33620, 33610, 33592, 33616, 33609, 33589, 33588, 33615, 33586, 33593, 33590, 33559, 33600, 33585, 33576, 33603, 34388, 34442, 34474, 34451, 34468, 34473, 34444, 34467, 34460, 34928, 34935, 34945, 34946, 34941, 34937, 35352, 35344, 35342, 35340, 35349, 35338, 35351, 35347, 35350, 35343, 35345, 35912, 35962, 35961, 36001, 36002, 36215, 36524, 36562, 36564, 36559, 36785, 36865, 36870, 36855, 36864, 36858, 36852, 36867, 36861, 36869, 36856, 37013, 37089, 37085, 37090, 37202, 37197, 37196, 37336, 37341, 37335, 37340, 37337, 38275, 38498, 38499, 38497, 38491, 38493, 38500, 38488, 38494, 38587, 39138, 39340, 39592, 39640, 39717, 39730, 39740, 20094, 20602, 20605, 20572, 20551, 20547, 20556, 20570, 20553, 20581, 20598, 20558, 20565, 20597, 20596, 20599, 20559, 20495, 20591, 20589, 20828, 20885, 20976, 21098, 21103, 21202, 21209, 21208, 21205, 21264, 21263, 21273, 21311, 21312, 21310, 21443, 26364, 21830, 21866, 21862, 21828, 21854, 21857, 21827, 21834, 21809, 21846, 21839, 21845, 21807, 21860, 21816, 21806, 21852, 21804, 21859, 21811, 21825, 21847, 22280, 22283, 22281, 22495, 22533, 22538, 22534, 22496, 22500, 22522, 22530, 22581, 22519, 22521, 22816, 22882, 23094, 23105, 23113, 23142, 23146, 23104, 23100, 23138, 23130, 23110, 23114, 23408, 23495, 23493, 23492, 23490, 23487, 23494, 23561, 23560, 23559, 23648, 23644, 23645, 23815, 23814, 23822, 23835, 23830, 23842, 23825, 23849, 23828, 23833, 23844, 23847, 23831, 24034, 24120, 24118, 24115, 24119, 24247, 24248, 24246, 24245, 24254, 24373, 24375, 24407, 24428, 24425, 24427, 24471, 24473, 24478, 24472, 24481, 24480, 24476, 24703, 24739, 24713, 24736, 24744, 24779, 24756, 24806, 24765, 24773, 24763, 24757, 24796, 24764, 24792, 24789, 24774, 24799, 24760, 24794, 24775, 25114, 25115, 25160, 25504, 25511, 25458, 25494, 25506, 25509, 25463, 25447, 25496, 25514, 25457, 25513, 25481, 25475, 25499, 25451, 25512, 25476, 25480, 25497, 25505, 25516, 25490, 25487, 25472, 25467, 25449, 25448, 25466, 25949, 25942, 25937, 25945, 25943, 21855, 25935, 25944, 25941, 25940, 26012, 26011, 26028, 26063, 26059, 26060, 26062, 26205, 26202, 26212, 26216, 26214, 26206, 26361, 21207, 26395, 26753, 26799, 26786, 26771, 26805, 26751, 26742, 26801, 26791, 26775, 26800, 26755, 26820, 26797, 26758, 26757, 26772, 26781, 26792, 26783, 26785, 26754, 27442, 27578, 27627, 27628, 27691, 28046, 28092, 28147, 28121, 28082, 28129, 28108, 28132, 28155, 28154, 28165, 28103, 28107, 28079, 28113, 28078, 28126, 28153, 28088, 28151, 28149, 28101, 28114, 28186, 28085, 28122, 28139, 28120, 28138, 28145, 28142, 28136, 28102, 28100, 28074, 28140, 28095, 28134, 28921, 28937, 28938, 28925, 28911, 29245, 29309, 29313, 29468, 29467, 29462, 29459, 29465, 29575, 29701, 29706, 29699, 29702, 29694, 29709, 29920, 29942, 29943, 29980, 29986, 30053, 30054, 30050, 30064, 30095, 30164, 30165, 30133, 30154, 30157, 30350, 30420, 30418, 30427, 30519, 30526, 30524, 30518, 30520, 30522, 30827, 30787, 30798, 31077, 31080, 31085, 31227, 31378, 31381, 31520, 31528, 31515, 31532, 31526, 31513, 31518, 31534, 31890, 31895, 31893, 32070, 32067, 32113, 32046, 32057, 32060, 32064, 32048, 32051, 32068, 32047, 32066, 32050, 32049, 32573, 32670, 32666, 32716, 32718, 32722, 32796, 32842, 32838, 33071, 33046, 33059, 33067, 33065, 33072, 33060, 33282, 33333, 33335, 33334, 33337, 33678, 33694, 33688, 33656, 33698, 33686, 33725, 33707, 33682, 33674, 33683, 33673, 33696, 33655, 33659, 33660, 33670, 33703, 34389, 24426, 34503, 34496, 34486, 34500, 34485, 34502, 34507, 34481, 34479, 34505, 34899, 34974, 34952, 34987, 34962, 34966, 34957, 34955, 35219, 35215, 35370, 35357, 35363, 35365, 35377, 35373, 35359, 35355, 35362, 35913, 35930, 36009, 36012, 36011, 36008, 36010, 36007, 36199, 36198, 36286, 36282, 36571, 36575, 36889, 36877, 36890, 36887, 36899, 36895, 36893, 36880, 36885, 36894, 36896, 36879, 36898, 36886, 36891, 36884, 37096, 37101, 37117, 37207, 37326, 37365, 37350, 37347, 37351, 37357, 37353, 38281, 38506, 38517, 38515, 38520, 38512, 38516, 38518, 38519, 38508, 38592, 38634, 38633, 31456, 31455, 38914, 38915, 39770, 40165, 40565, 40575, 40613, 40635, 20642, 20621, 20613, 20633, 20625, 20608, 20630, 20632, 20634, 26368, 20977, 21106, 21108, 21109, 21097, 21214, 21213, 21211, 21338, 21413, 21883, 21888, 21927, 21884, 21898, 21917, 21912, 21890, 21916, 21930, 21908, 21895, 21899, 21891, 21939, 21934, 21919, 21822, 21938, 21914, 21947, 21932, 21937, 21886, 21897, 21931, 21913, 22285, 22575, 22570, 22580, 22564, 22576, 22577, 22561, 22557, 22560, 22777, 22778, 22880, 23159, 23194, 23167, 23186, 23195, 23207, 23411, 23409, 23506, 23500, 23507, 23504, 23562, 23563, 23601, 23884, 23888, 23860, 23879, 24061, 24133, 24125, 24128, 24131, 24190, 24266, 24257, 24258, 24260, 24380, 24429, 24489, 24490, 24488, 24785, 24801, 24754, 24758, 24800, 24860, 24867, 24826, 24853, 24816, 24827, 24820, 24936, 24817, 24846, 24822, 24841, 24832, 24850, 25119, 25161, 25507, 25484, 25551, 25536, 25577, 25545, 25542, 25549, 25554, 25571, 25552, 25569, 25558, 25581, 25582, 25462, 25588, 25578, 25563, 25682, 25562, 25593, 25950, 25958, 25954, 25955, 26001, 26e3, 26031, 26222, 26224, 26228, 26230, 26223, 26257, 26234, 26238, 26231, 26366, 26367, 26399, 26397, 26874, 26837, 26848, 26840, 26839, 26885, 26847, 26869, 26862, 26855, 26873, 26834, 26866, 26851, 26827, 26829, 26893, 26898, 26894, 26825, 26842, 26990, 26875, 27454, 27450, 27453, 27544, 27542, 27580, 27631, 27694, 27695, 27692, 28207, 28216, 28244, 28193, 28210, 28263, 28234, 28192, 28197, 28195, 28187, 28251, 28248, 28196, 28246, 28270, 28205, 28198, 28271, 28212, 28237, 28218, 28204, 28227, 28189, 28222, 28363, 28297, 28185, 28238, 28259, 28228, 28274, 28265, 28255, 28953, 28954, 28966, 28976, 28961, 28982, 29038, 28956, 29260, 29316, 29312, 29494, 29477, 29492, 29481, 29754, 29738, 29747, 29730, 29733, 29749, 29750, 29748, 29743, 29723, 29734, 29736, 29989, 29990, 30059, 30058, 30178, 30171, 30179, 30169, 30168, 30174, 30176, 30331, 30332, 30358, 30355, 30388, 30428, 30543, 30701, 30813, 30828, 30831, 31245, 31240, 31243, 31237, 31232, 31384, 31383, 31382, 31461, 31459, 31561, 31574, 31558, 31568, 31570, 31572, 31565, 31563, 31567, 31569, 31903, 31909, 32094, 32080, 32104, 32085, 32043, 32110, 32114, 32097, 32102, 32098, 32112, 32115, 21892, 32724, 32725, 32779, 32850, 32901, 33109, 33108, 33099, 33105, 33102, 33081, 33094, 33086, 33100, 33107, 33140, 33298, 33308, 33769, 33795, 33784, 33805, 33760, 33733, 33803, 33729, 33775, 33777, 33780, 33879, 33802, 33776, 33804, 33740, 33789, 33778, 33738, 33848, 33806, 33796, 33756, 33799, 33748, 33759, 34395, 34527, 34521, 34541, 34516, 34523, 34532, 34512, 34526, 34903, 35009, 35010, 34993, 35203, 35222, 35387, 35424, 35413, 35422, 35388, 35393, 35412, 35419, 35408, 35398, 35380, 35386, 35382, 35414, 35937, 35970, 36015, 36028, 36019, 36029, 36033, 36027, 36032, 36020, 36023, 36022, 36031, 36024, 36234, 36229, 36225, 36302, 36317, 36299, 36314, 36305, 36300, 36315, 36294, 36603, 36600, 36604, 36764, 36910, 36917, 36913, 36920, 36914, 36918, 37122, 37109, 37129, 37118, 37219, 37221, 37327, 37396, 37397, 37411, 37385, 37406, 37389, 37392, 37383, 37393, 38292, 38287, 38283, 38289, 38291, 38290, 38286, 38538, 38542, 38539, 38525, 38533, 38534, 38541, 38514, 38532, 38593, 38597, 38596, 38598, 38599, 38639, 38642, 38860, 38917, 38918, 38920, 39143, 39146, 39151, 39145, 39154, 39149, 39342, 39341, 40643, 40653, 40657, 20098, 20653, 20661, 20658, 20659, 20677, 20670, 20652, 20663, 20667, 20655, 20679, 21119, 21111, 21117, 21215, 21222, 21220, 21218, 21219, 21295, 21983, 21992, 21971, 21990, 21966, 21980, 21959, 21969, 21987, 21988, 21999, 21978, 21985, 21957, 21958, 21989, 21961, 22290, 22291, 22622, 22609, 22616, 22615, 22618, 22612, 22635, 22604, 22637, 22602, 22626, 22610, 22603, 22887, 23233, 23241, 23244, 23230, 23229, 23228, 23219, 23234, 23218, 23913, 23919, 24140, 24185, 24265, 24264, 24338, 24409, 24492, 24494, 24858, 24847, 24904, 24863, 24819, 24859, 24825, 24833, 24840, 24910, 24908, 24900, 24909, 24894, 24884, 24871, 24845, 24838, 24887, 25121, 25122, 25619, 25662, 25630, 25642, 25645, 25661, 25644, 25615, 25628, 25620, 25613, 25654, 25622, 25623, 25606, 25964, 26015, 26032, 26263, 26249, 26247, 26248, 26262, 26244, 26264, 26253, 26371, 27028, 26989, 26970, 26999, 26976, 26964, 26997, 26928, 27010, 26954, 26984, 26987, 26974, 26963, 27001, 27014, 26973, 26979, 26971, 27463, 27506, 27584, 27583, 27603, 27645, 28322, 28335, 28371, 28342, 28354, 28304, 28317, 28359, 28357, 28325, 28312, 28348, 28346, 28331, 28369, 28310, 28316, 28356, 28372, 28330, 28327, 28340, 29006, 29017, 29033, 29028, 29001, 29031, 29020, 29036, 29030, 29004, 29029, 29022, 28998, 29032, 29014, 29242, 29266, 29495, 29509, 29503, 29502, 29807, 29786, 29781, 29791, 29790, 29761, 29759, 29785, 29787, 29788, 30070, 30072, 30208, 30192, 30209, 30194, 30193, 30202, 30207, 30196, 30195, 30430, 30431, 30555, 30571, 30566, 30558, 30563, 30585, 30570, 30572, 30556, 30565, 30568, 30562, 30702, 30862, 30896, 30871, 30872, 30860, 30857, 30844, 30865, 30867, 30847, 31098, 31103, 31105, 33836, 31165, 31260, 31258, 31264, 31252, 31263, 31262, 31391, 31392, 31607, 31680, 31584, 31598, 31591, 31921, 31923, 31925, 32147, 32121, 32145, 32129, 32143, 32091, 32622, 32617, 32618, 32626, 32681, 32680, 32676, 32854, 32856, 32902, 32900, 33137, 33136, 33144, 33125, 33134, 33139, 33131, 33145, 33146, 33126, 33285, 33351, 33922, 33911, 33853, 33841, 33909, 33894, 33899, 33865, 33900, 33883, 33852, 33845, 33889, 33891, 33897, 33901, 33862, 34398, 34396, 34399, 34553, 34579, 34568, 34567, 34560, 34558, 34555, 34562, 34563, 34566, 34570, 34905, 35039, 35028, 35033, 35036, 35032, 35037, 35041, 35018, 35029, 35026, 35228, 35299, 35435, 35442, 35443, 35430, 35433, 35440, 35463, 35452, 35427, 35488, 35441, 35461, 35437, 35426, 35438, 35436, 35449, 35451, 35390, 35432, 35938, 35978, 35977, 36042, 36039, 36040, 36036, 36018, 36035, 36034, 36037, 36321, 36319, 36328, 36335, 36339, 36346, 36330, 36324, 36326, 36530, 36611, 36617, 36606, 36618, 36767, 36786, 36939, 36938, 36947, 36930, 36948, 36924, 36949, 36944, 36935, 36943, 36942, 36941, 36945, 36926, 36929, 37138, 37143, 37228, 37226, 37225, 37321, 37431, 37463, 37432, 37437, 37440, 37438, 37467, 37451, 37476, 37457, 37428, 37449, 37453, 37445, 37433, 37439, 37466, 38296, 38552, 38548, 38549, 38605, 38603, 38601, 38602, 38647, 38651, 38649, 38646, 38742, 38772, 38774, 38928, 38929, 38931, 38922, 38930, 38924, 39164, 39156, 39165, 39166, 39347, 39345, 39348, 39649, 40169, 40578, 40718, 40723, 40736, 20711, 20718, 20709, 20694, 20717, 20698, 20693, 20687, 20689, 20721, 20686, 20713, 20834, 20979, 21123, 21122, 21297, 21421, 22014, 22016, 22043, 22039, 22013, 22036, 22022, 22025, 22029, 22030, 22007, 22038, 22047, 22024, 22032, 22006, 22296, 22294, 22645, 22654, 22659, 22675, 22666, 22649, 22661, 22653, 22781, 22821, 22818, 22820, 22890, 22889, 23265, 23270, 23273, 23255, 23254, 23256, 23267, 23413, 23518, 23527, 23521, 23525, 23526, 23528, 23522, 23524, 23519, 23565, 23650, 23940, 23943, 24155, 24163, 24149, 24151, 24148, 24275, 24278, 24330, 24390, 24432, 24505, 24903, 24895, 24907, 24951, 24930, 24931, 24927, 24922, 24920, 24949, 25130, 25735, 25688, 25684, 25764, 25720, 25695, 25722, 25681, 25703, 25652, 25709, 25723, 25970, 26017, 26071, 26070, 26274, 26280, 26269, 27036, 27048, 27029, 27073, 27054, 27091, 27083, 27035, 27063, 27067, 27051, 27060, 27088, 27085, 27053, 27084, 27046, 27075, 27043, 27465, 27468, 27699, 28467, 28436, 28414, 28435, 28404, 28457, 28478, 28448, 28460, 28431, 28418, 28450, 28415, 28399, 28422, 28465, 28472, 28466, 28451, 28437, 28459, 28463, 28552, 28458, 28396, 28417, 28402, 28364, 28407, 29076, 29081, 29053, 29066, 29060, 29074, 29246, 29330, 29334, 29508, 29520, 29796, 29795, 29802, 29808, 29805, 29956, 30097, 30247, 30221, 30219, 30217, 30227, 30433, 30435, 30596, 30589, 30591, 30561, 30913, 30879, 30887, 30899, 30889, 30883, 31118, 31119, 31117, 31278, 31281, 31402, 31401, 31469, 31471, 31649, 31637, 31627, 31605, 31639, 31645, 31636, 31631, 31672, 31623, 31620, 31929, 31933, 31934, 32187, 32176, 32156, 32189, 32190, 32160, 32202, 32180, 32178, 32177, 32186, 32162, 32191, 32181, 32184, 32173, 32210, 32199, 32172, 32624, 32736, 32737, 32735, 32862, 32858, 32903, 33104, 33152, 33167, 33160, 33162, 33151, 33154, 33255, 33274, 33287, 33300, 33310, 33355, 33993, 33983, 33990, 33988, 33945, 33950, 33970, 33948, 33995, 33976, 33984, 34003, 33936, 33980, 34001, 33994, 34623, 34588, 34619, 34594, 34597, 34612, 34584, 34645, 34615, 34601, 35059, 35074, 35060, 35065, 35064, 35069, 35048, 35098, 35055, 35494, 35468, 35486, 35491, 35469, 35489, 35475, 35492, 35498, 35493, 35496, 35480, 35473, 35482, 35495, 35946, 35981, 35980, 36051, 36049, 36050, 36203, 36249, 36245, 36348, 36628, 36626, 36629, 36627, 36771, 36960, 36952, 36956, 36963, 36953, 36958, 36962, 36957, 36955, 37145, 37144, 37150, 37237, 37240, 37239, 37236, 37496, 37504, 37509, 37528, 37526, 37499, 37523, 37532, 37544, 37500, 37521, 38305, 38312, 38313, 38307, 38309, 38308, 38553, 38556, 38555, 38604, 38610, 38656, 38780, 38789, 38902, 38935, 38936, 39087, 39089, 39171, 39173, 39180, 39177, 39361, 39599, 39600, 39654, 39745, 39746, 40180, 40182, 40179, 40636, 40763, 40778, 20740, 20736, 20731, 20725, 20729, 20738, 20744, 20745, 20741, 20956, 21127, 21128, 21129, 21133, 21130, 21232, 21426, 22062, 22075, 22073, 22066, 22079, 22068, 22057, 22099, 22094, 22103, 22132, 22070, 22063, 22064, 22656, 22687, 22686, 22707, 22684, 22702, 22697, 22694, 22893, 23305, 23291, 23307, 23285, 23308, 23304, 23534, 23532, 23529, 23531, 23652, 23653, 23965, 23956, 24162, 24159, 24161, 24290, 24282, 24287, 24285, 24291, 24288, 24392, 24433, 24503, 24501, 24950, 24935, 24942, 24925, 24917, 24962, 24956, 24944, 24939, 24958, 24999, 24976, 25003, 24974, 25004, 24986, 24996, 24980, 25006, 25134, 25705, 25711, 25721, 25758, 25778, 25736, 25744, 25776, 25765, 25747, 25749, 25769, 25746, 25774, 25773, 25771, 25754, 25772, 25753, 25762, 25779, 25973, 25975, 25976, 26286, 26283, 26292, 26289, 27171, 27167, 27112, 27137, 27166, 27161, 27133, 27169, 27155, 27146, 27123, 27138, 27141, 27117, 27153, 27472, 27470, 27556, 27589, 27590, 28479, 28540, 28548, 28497, 28518, 28500, 28550, 28525, 28507, 28536, 28526, 28558, 28538, 28528, 28516, 28567, 28504, 28373, 28527, 28512, 28511, 29087, 29100, 29105, 29096, 29270, 29339, 29518, 29527, 29801, 29835, 29827, 29822, 29824, 30079, 30240, 30249, 30239, 30244, 30246, 30241, 30242, 30362, 30394, 30436, 30606, 30599, 30604, 30609, 30603, 30923, 30917, 30906, 30922, 30910, 30933, 30908, 30928, 31295, 31292, 31296, 31293, 31287, 31291, 31407, 31406, 31661, 31665, 31684, 31668, 31686, 31687, 31681, 31648, 31692, 31946, 32224, 32244, 32239, 32251, 32216, 32236, 32221, 32232, 32227, 32218, 32222, 32233, 32158, 32217, 32242, 32249, 32629, 32631, 32687, 32745, 32806, 33179, 33180, 33181, 33184, 33178, 33176, 34071, 34109, 34074, 34030, 34092, 34093, 34067, 34065, 34083, 34081, 34068, 34028, 34085, 34047, 34054, 34690, 34676, 34678, 34656, 34662, 34680, 34664, 34649, 34647, 34636, 34643, 34907, 34909, 35088, 35079, 35090, 35091, 35093, 35082, 35516, 35538, 35527, 35524, 35477, 35531, 35576, 35506, 35529, 35522, 35519, 35504, 35542, 35533, 35510, 35513, 35547, 35916, 35918, 35948, 36064, 36062, 36070, 36068, 36076, 36077, 36066, 36067, 36060, 36074, 36065, 36205, 36255, 36259, 36395, 36368, 36381, 36386, 36367, 36393, 36383, 36385, 36382, 36538, 36637, 36635, 36639, 36649, 36646, 36650, 36636, 36638, 36645, 36969, 36974, 36968, 36973, 36983, 37168, 37165, 37159, 37169, 37255, 37257, 37259, 37251, 37573, 37563, 37559, 37610, 37548, 37604, 37569, 37555, 37564, 37586, 37575, 37616, 37554, 38317, 38321, 38660, 38662, 38663, 38665, 38752, 38797, 38795, 38799, 38945, 38955, 38940, 39091, 39178, 39187, 39186, 39192, 39389, 39376, 39391, 39387, 39377, 39381, 39378, 39385, 39607, 39662, 39663, 39719, 39749, 39748, 39799, 39791, 40198, 40201, 40195, 40617, 40638, 40654, 22696, 40786, 20754, 20760, 20756, 20752, 20757, 20864, 20906, 20957, 21137, 21139, 21235, 22105, 22123, 22137, 22121, 22116, 22136, 22122, 22120, 22117, 22129, 22127, 22124, 22114, 22134, 22721, 22718, 22727, 22725, 22894, 23325, 23348, 23416, 23536, 23566, 24394, 25010, 24977, 25001, 24970, 25037, 25014, 25022, 25034, 25032, 25136, 25797, 25793, 25803, 25787, 25788, 25818, 25796, 25799, 25794, 25805, 25791, 25810, 25812, 25790, 25972, 26310, 26313, 26297, 26308, 26311, 26296, 27197, 27192, 27194, 27225, 27243, 27224, 27193, 27204, 27234, 27233, 27211, 27207, 27189, 27231, 27208, 27481, 27511, 27653, 28610, 28593, 28577, 28611, 28580, 28609, 28583, 28595, 28608, 28601, 28598, 28582, 28576, 28596, 29118, 29129, 29136, 29138, 29128, 29141, 29113, 29134, 29145, 29148, 29123, 29124, 29544, 29852, 29859, 29848, 29855, 29854, 29922, 29964, 29965, 30260, 30264, 30266, 30439, 30437, 30624, 30622, 30623, 30629, 30952, 30938, 30956, 30951, 31142, 31309, 31310, 31302, 31308, 31307, 31418, 31705, 31761, 31689, 31716, 31707, 31713, 31721, 31718, 31957, 31958, 32266, 32273, 32264, 32283, 32291, 32286, 32285, 32265, 32272, 32633, 32690, 32752, 32753, 32750, 32808, 33203, 33193, 33192, 33275, 33288, 33368, 33369, 34122, 34137, 34120, 34152, 34153, 34115, 34121, 34157, 34154, 34142, 34691, 34719, 34718, 34722, 34701, 34913, 35114, 35122, 35109, 35115, 35105, 35242, 35238, 35558, 35578, 35563, 35569, 35584, 35548, 35559, 35566, 35582, 35585, 35586, 35575, 35565, 35571, 35574, 35580, 35947, 35949, 35987, 36084, 36420, 36401, 36404, 36418, 36409, 36405, 36667, 36655, 36664, 36659, 36776, 36774, 36981, 36980, 36984, 36978, 36988, 36986, 37172, 37266, 37664, 37686, 37624, 37683, 37679, 37666, 37628, 37675, 37636, 37658, 37648, 37670, 37665, 37653, 37678, 37657, 38331, 38567, 38568, 38570, 38613, 38670, 38673, 38678, 38669, 38675, 38671, 38747, 38748, 38758, 38808, 38960, 38968, 38971, 38967, 38957, 38969, 38948, 39184, 39208, 39198, 39195, 39201, 39194, 39405, 39394, 39409, 39608, 39612, 39675, 39661, 39720, 39825, 40213, 40227, 40230, 40232, 40210, 40219, 40664, 40660, 40845, 40860, 20778, 20767, 20769, 20786, 21237, 22158, 22144, 22160, 22149, 22151, 22159, 22741, 22739, 22737, 22734, 23344, 23338, 23332, 23418, 23607, 23656, 23996, 23994, 23997, 23992, 24171, 24396, 24509, 25033, 25026, 25031, 25062, 25035, 25138, 25140, 25806, 25802, 25816, 25824, 25840, 25830, 25836, 25841, 25826, 25837, 25986, 25987, 26329, 26326, 27264, 27284, 27268, 27298, 27292, 27355, 27299, 27262, 27287, 27280, 27296, 27484, 27566, 27610, 27656, 28632, 28657, 28639, 28640, 28635, 28644, 28651, 28655, 28544, 28652, 28641, 28649, 28629, 28654, 28656, 29159, 29151, 29166, 29158, 29157, 29165, 29164, 29172, 29152, 29237, 29254, 29552, 29554, 29865, 29872, 29862, 29864, 30278, 30274, 30284, 30442, 30643, 30634, 30640, 30636, 30631, 30637, 30703, 30967, 30970, 30964, 30959, 30977, 31143, 31146, 31319, 31423, 31751, 31757, 31742, 31735, 31756, 31712, 31968, 31964, 31966, 31970, 31967, 31961, 31965, 32302, 32318, 32326, 32311, 32306, 32323, 32299, 32317, 32305, 32325, 32321, 32308, 32313, 32328, 32309, 32319, 32303, 32580, 32755, 32764, 32881, 32882, 32880, 32879, 32883, 33222, 33219, 33210, 33218, 33216, 33215, 33213, 33225, 33214, 33256, 33289, 33393, 34218, 34180, 34174, 34204, 34193, 34196, 34223, 34203, 34183, 34216, 34186, 34407, 34752, 34769, 34739, 34770, 34758, 34731, 34747, 34746, 34760, 34763, 35131, 35126, 35140, 35128, 35133, 35244, 35598, 35607, 35609, 35611, 35594, 35616, 35613, 35588, 35600, 35905, 35903, 35955, 36090, 36093, 36092, 36088, 36091, 36264, 36425, 36427, 36424, 36426, 36676, 36670, 36674, 36677, 36671, 36991, 36989, 36996, 36993, 36994, 36992, 37177, 37283, 37278, 37276, 37709, 37762, 37672, 37749, 37706, 37733, 37707, 37656, 37758, 37740, 37723, 37744, 37722, 37716, 38346, 38347, 38348, 38344, 38342, 38577, 38584, 38614, 38684, 38686, 38816, 38867, 38982, 39094, 39221, 39425, 39423, 39854, 39851, 39850, 39853, 40251, 40255, 40587, 40655, 40670, 40668, 40669, 40667, 40766, 40779, 21474, 22165, 22190, 22745, 22744, 23352, 24413, 25059, 25139, 25844, 25842, 25854, 25862, 25850, 25851, 25847, 26039, 26332, 26406, 27315, 27308, 27331, 27323, 27320, 27330, 27310, 27311, 27487, 27512, 27567, 28681, 28683, 28670, 28678, 28666, 28689, 28687, 29179, 29180, 29182, 29176, 29559, 29557, 29863, 29887, 29973, 30294, 30296, 30290, 30653, 30655, 30651, 30652, 30990, 31150, 31329, 31330, 31328, 31428, 31429, 31787, 31783, 31786, 31774, 31779, 31777, 31975, 32340, 32341, 32350, 32346, 32353, 32338, 32345, 32584, 32761, 32763, 32887, 32886, 33229, 33231, 33290, 34255, 34217, 34253, 34256, 34249, 34224, 34234, 34233, 34214, 34799, 34796, 34802, 34784, 35206, 35250, 35316, 35624, 35641, 35628, 35627, 35920, 36101, 36441, 36451, 36454, 36452, 36447, 36437, 36544, 36681, 36685, 36999, 36995, 37e3, 37291, 37292, 37328, 37780, 37770, 37782, 37794, 37811, 37806, 37804, 37808, 37784, 37786, 37783, 38356, 38358, 38352, 38357, 38626, 38620, 38617, 38619, 38622, 38692, 38819, 38822, 38829, 38905, 38989, 38991, 38988, 38990, 38995, 39098, 39230, 39231, 39229, 39214, 39333, 39438, 39617, 39683, 39686, 39759, 39758, 39757, 39882, 39881, 39933, 39880, 39872, 40273, 40285, 40288, 40672, 40725, 40748, 20787, 22181, 22750, 22751, 22754, 23541, 40848, 24300, 25074, 25079, 25078, 25077, 25856, 25871, 26336, 26333, 27365, 27357, 27354, 27347, 28699, 28703, 28712, 28698, 28701, 28693, 28696, 29190, 29197, 29272, 29346, 29560, 29562, 29885, 29898, 29923, 30087, 30086, 30303, 30305, 30663, 31001, 31153, 31339, 31337, 31806, 31807, 31800, 31805, 31799, 31808, 32363, 32365, 32377, 32361, 32362, 32645, 32371, 32694, 32697, 32696, 33240, 34281, 34269, 34282, 34261, 34276, 34277, 34295, 34811, 34821, 34829, 34809, 34814, 35168, 35167, 35158, 35166, 35649, 35676, 35672, 35657, 35674, 35662, 35663, 35654, 35673, 36104, 36106, 36476, 36466, 36487, 36470, 36460, 36474, 36468, 36692, 36686, 36781, 37002, 37003, 37297, 37294, 37857, 37841, 37855, 37827, 37832, 37852, 37853, 37846, 37858, 37837, 37848, 37860, 37847, 37864, 38364, 38580, 38627, 38698, 38695, 38753, 38876, 38907, 39006, 39e3, 39003, 39100, 39237, 39241, 39446, 39449, 39693, 39912, 39911, 39894, 39899, 40329, 40289, 40306, 40298, 40300, 40594, 40599, 40595, 40628, 21240, 22184, 22199, 22198, 22196, 22204, 22756, 23360, 23363, 23421, 23542, 24009, 25080, 25082, 25880, 25876, 25881, 26342, 26407, 27372, 28734, 28720, 28722, 29200, 29563, 29903, 30306, 30309, 31014, 31018, 31020, 31019, 31431, 31478, 31820, 31811, 31821, 31983, 31984, 36782, 32381, 32380, 32386, 32588, 32768, 33242, 33382, 34299, 34297, 34321, 34298, 34310, 34315, 34311, 34314, 34836, 34837, 35172, 35258, 35320, 35696, 35692, 35686, 35695, 35679, 35691, 36111, 36109, 36489, 36481, 36485, 36482, 37300, 37323, 37912, 37891, 37885, 38369, 38704, 39108, 39250, 39249, 39336, 39467, 39472, 39479, 39477, 39955, 39949, 40569, 40629, 40680, 40751, 40799, 40803, 40801, 20791, 20792, 22209, 22208, 22210, 22804, 23660, 24013, 25084, 25086, 25885, 25884, 26005, 26345, 27387, 27396, 27386, 27570, 28748, 29211, 29351, 29910, 29908, 30313, 30675, 31824, 32399, 32396, 32700, 34327, 34349, 34330, 34851, 34850, 34849, 34847, 35178, 35180, 35261, 35700, 35703, 35709, 36115, 36490, 36493, 36491, 36703, 36783, 37306, 37934, 37939, 37941, 37946, 37944, 37938, 37931, 38370, 38712, 38713, 38706, 38911, 39015, 39013, 39255, 39493, 39491, 39488, 39486, 39631, 39764, 39761, 39981, 39973, 40367, 40372, 40386, 40376, 40605, 40687, 40729, 40796, 40806, 40807, 20796, 20795, 22216, 22218, 22217, 23423, 24020, 24018, 24398, 25087, 25892, 27402, 27489, 28753, 28760, 29568, 29924, 30090, 30318, 30316, 31155, 31840, 31839, 32894, 32893, 33247, 35186, 35183, 35324, 35712, 36118, 36119, 36497, 36499, 36705, 37192, 37956, 37969, 37970, 38717, 38718, 38851, 38849, 39019, 39253, 39509, 39501, 39634, 39706, 40009, 39985, 39998, 39995, 40403, 40407, 40756, 40812, 40810, 40852, 22220, 24022, 25088, 25891, 25899, 25898, 26348, 27408, 29914, 31434, 31844, 31843, 31845, 32403, 32406, 32404, 33250, 34360, 34367, 34865, 35722, 37008, 37007, 37987, 37984, 37988, 38760, 39023, 39260, 39514, 39515, 39511, 39635, 39636, 39633, 40020, 40023, 40022, 40421, 40607, 40692, 22225, 22761, 25900, 28766, 30321, 30322, 30679, 32592, 32648, 34870, 34873, 34914, 35731, 35730, 35734, 33399, 36123, 37312, 37994, 38722, 38728, 38724, 38854, 39024, 39519, 39714, 39768, 40031, 40441, 40442, 40572, 40573, 40711, 40823, 40818, 24307, 27414, 28771, 31852, 31854, 34875, 35264, 36513, 37313, 38002, 38e3, 39025, 39262, 39638, 39715, 40652, 28772, 30682, 35738, 38007, 38857, 39522, 39525, 32412, 35740, 36522, 37317, 38013, 38014, 38012, 40055, 40056, 40695, 35924, 38015, 40474, 29224, 39530, 39729, 40475, 40478, 31858, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 20022, 20031, 20101, 20128, 20866, 20886, 20907, 21241, 21304, 21353, 21430, 22794, 23424, 24027, 12083, 24191, 24308, 24400, 24417, 25908, 26080, 30098, 30326, 36789, 38582, 168, 710, 12541, 12542, 12445, 12446, 12291, 20189, 12293, 12294, 12295, 12540, 65339, 65341, 10045, 12353, 12354, 12355, 12356, 12357, 12358, 12359, 12360, 12361, 12362, 12363, 12364, 12365, 12366, 12367, 12368, 12369, 12370, 12371, 12372, 12373, 12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382, 12383, 12384, 12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392, 12393, 12394, 12395, 12396, 12397, 12398, 12399, 12400, 12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412, 12413, 12414, 12415, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431, 12432, 12433, 12434, 12435, 12449, 12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461, 12462, 12463, 12464, 12465, 12466, 12467, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 12475, 12476, 12477, 12478, 12479, 12480, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489, 12490, 12491, 12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499, 12500, 12501, 12502, 12503, 12504, 12505, 12506, 12507, 12508, 12509, 12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519, 12520, 12521, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531, 12532, 12533, 12534, 1040, 1041, 1042, 1043, 1044, 1045, 1025, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1105, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 8679, 8632, 8633, 12751, 131276, 20058, 131210, 20994, 17553, 40880, 20872, 40881, 161287, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 65506, 65508, 65287, 65282, 12849, 8470, 8481, 12443, 12444, 11904, 11908, 11910, 11911, 11912, 11914, 11916, 11917, 11925, 11932, 11933, 11941, 11943, 11946, 11948, 11950, 11958, 11964, 11966, 11974, 11978, 11980, 11981, 11983, 11990, 11991, 11998, 12003, null, null, null, 643, 592, 603, 596, 629, 339, 248, 331, 650, 618, 20034, 20060, 20981, 21274, 21378, 19975, 19980, 20039, 20109, 22231, 64012, 23662, 24435, 19983, 20871, 19982, 20014, 20115, 20162, 20169, 20168, 20888, 21244, 21356, 21433, 22304, 22787, 22828, 23568, 24063, 26081, 27571, 27596, 27668, 29247, 20017, 20028, 20200, 20188, 20201, 20193, 20189, 20186, 21004, 21276, 21324, 22306, 22307, 22807, 22831, 23425, 23428, 23570, 23611, 23668, 23667, 24068, 24192, 24194, 24521, 25097, 25168, 27669, 27702, 27715, 27711, 27707, 29358, 29360, 29578, 31160, 32906, 38430, 20238, 20248, 20268, 20213, 20244, 20209, 20224, 20215, 20232, 20253, 20226, 20229, 20258, 20243, 20228, 20212, 20242, 20913, 21011, 21001, 21008, 21158, 21282, 21279, 21325, 21386, 21511, 22241, 22239, 22318, 22314, 22324, 22844, 22912, 22908, 22917, 22907, 22910, 22903, 22911, 23382, 23573, 23589, 23676, 23674, 23675, 23678, 24031, 24181, 24196, 24322, 24346, 24436, 24533, 24532, 24527, 25180, 25182, 25188, 25185, 25190, 25186, 25177, 25184, 25178, 25189, 26095, 26094, 26430, 26425, 26424, 26427, 26426, 26431, 26428, 26419, 27672, 27718, 27730, 27740, 27727, 27722, 27732, 27723, 27724, 28785, 29278, 29364, 29365, 29582, 29994, 30335, 31349, 32593, 33400, 33404, 33408, 33405, 33407, 34381, 35198, 37017, 37015, 37016, 37019, 37012, 38434, 38436, 38432, 38435, 20310, 20283, 20322, 20297, 20307, 20324, 20286, 20327, 20306, 20319, 20289, 20312, 20269, 20275, 20287, 20321, 20879, 20921, 21020, 21022, 21025, 21165, 21166, 21257, 21347, 21362, 21390, 21391, 21552, 21559, 21546, 21588, 21573, 21529, 21532, 21541, 21528, 21565, 21583, 21569, 21544, 21540, 21575, 22254, 22247, 22245, 22337, 22341, 22348, 22345, 22347, 22354, 22790, 22848, 22950, 22936, 22944, 22935, 22926, 22946, 22928, 22927, 22951, 22945, 23438, 23442, 23592, 23594, 23693, 23695, 23688, 23691, 23689, 23698, 23690, 23686, 23699, 23701, 24032, 24074, 24078, 24203, 24201, 24204, 24200, 24205, 24325, 24349, 24440, 24438, 24530, 24529, 24528, 24557, 24552, 24558, 24563, 24545, 24548, 24547, 24570, 24559, 24567, 24571, 24576, 24564, 25146, 25219, 25228, 25230, 25231, 25236, 25223, 25201, 25211, 25210, 25200, 25217, 25224, 25207, 25213, 25202, 25204, 25911, 26096, 26100, 26099, 26098, 26101, 26437, 26439, 26457, 26453, 26444, 26440, 26461, 26445, 26458, 26443, 27600, 27673, 27674, 27768, 27751, 27755, 27780, 27787, 27791, 27761, 27759, 27753, 27802, 27757, 27783, 27797, 27804, 27750, 27763, 27749, 27771, 27790, 28788, 28794, 29283, 29375, 29373, 29379, 29382, 29377, 29370, 29381, 29589, 29591, 29587, 29588, 29586, 30010, 30009, 30100, 30101, 30337, 31037, 32820, 32917, 32921, 32912, 32914, 32924, 33424, 33423, 33413, 33422, 33425, 33427, 33418, 33411, 33412, 35960, 36809, 36799, 37023, 37025, 37029, 37022, 37031, 37024, 38448, 38440, 38447, 38445, 20019, 20376, 20348, 20357, 20349, 20352, 20359, 20342, 20340, 20361, 20356, 20343, 20300, 20375, 20330, 20378, 20345, 20353, 20344, 20368, 20380, 20372, 20382, 20370, 20354, 20373, 20331, 20334, 20894, 20924, 20926, 21045, 21042, 21043, 21062, 21041, 21180, 21258, 21259, 21308, 21394, 21396, 21639, 21631, 21633, 21649, 21634, 21640, 21611, 21626, 21630, 21605, 21612, 21620, 21606, 21645, 21615, 21601, 21600, 21656, 21603, 21607, 21604, 22263, 22265, 22383, 22386, 22381, 22379, 22385, 22384, 22390, 22400, 22389, 22395, 22387, 22388, 22370, 22376, 22397, 22796, 22853, 22965, 22970, 22991, 22990, 22962, 22988, 22977, 22966, 22972, 22979, 22998, 22961, 22973, 22976, 22984, 22964, 22983, 23394, 23397, 23443, 23445, 23620, 23623, 23726, 23716, 23712, 23733, 23727, 23720, 23724, 23711, 23715, 23725, 23714, 23722, 23719, 23709, 23717, 23734, 23728, 23718, 24087, 24084, 24089, 24360, 24354, 24355, 24356, 24404, 24450, 24446, 24445, 24542, 24549, 24621, 24614, 24601, 24626, 24587, 24628, 24586, 24599, 24627, 24602, 24606, 24620, 24610, 24589, 24592, 24622, 24595, 24593, 24588, 24585, 24604, 25108, 25149, 25261, 25268, 25297, 25278, 25258, 25270, 25290, 25262, 25267, 25263, 25275, 25257, 25264, 25272, 25917, 26024, 26043, 26121, 26108, 26116, 26130, 26120, 26107, 26115, 26123, 26125, 26117, 26109, 26129, 26128, 26358, 26378, 26501, 26476, 26510, 26514, 26486, 26491, 26520, 26502, 26500, 26484, 26509, 26508, 26490, 26527, 26513, 26521, 26499, 26493, 26497, 26488, 26489, 26516, 27429, 27520, 27518, 27614, 27677, 27795, 27884, 27883, 27886, 27865, 27830, 27860, 27821, 27879, 27831, 27856, 27842, 27834, 27843, 27846, 27885, 27890, 27858, 27869, 27828, 27786, 27805, 27776, 27870, 27840, 27952, 27853, 27847, 27824, 27897, 27855, 27881, 27857, 28820, 28824, 28805, 28819, 28806, 28804, 28817, 28822, 28802, 28826, 28803, 29290, 29398, 29387, 29400, 29385, 29404, 29394, 29396, 29402, 29388, 29393, 29604, 29601, 29613, 29606, 29602, 29600, 29612, 29597, 29917, 29928, 30015, 30016, 30014, 30092, 30104, 30383, 30451, 30449, 30448, 30453, 30712, 30716, 30713, 30715, 30714, 30711, 31042, 31039, 31173, 31352, 31355, 31483, 31861, 31997, 32821, 32911, 32942, 32931, 32952, 32949, 32941, 33312, 33440, 33472, 33451, 33434, 33432, 33435, 33461, 33447, 33454, 33468, 33438, 33466, 33460, 33448, 33441, 33449, 33474, 33444, 33475, 33462, 33442, 34416, 34415, 34413, 34414, 35926, 36818, 36811, 36819, 36813, 36822, 36821, 36823, 37042, 37044, 37039, 37043, 37040, 38457, 38461, 38460, 38458, 38467, 20429, 20421, 20435, 20402, 20425, 20427, 20417, 20436, 20444, 20441, 20411, 20403, 20443, 20423, 20438, 20410, 20416, 20409, 20460, 21060, 21065, 21184, 21186, 21309, 21372, 21399, 21398, 21401, 21400, 21690, 21665, 21677, 21669, 21711, 21699, 33549, 21687, 21678, 21718, 21686, 21701, 21702, 21664, 21616, 21692, 21666, 21694, 21618, 21726, 21680, 22453, 22430, 22431, 22436, 22412, 22423, 22429, 22427, 22420, 22424, 22415, 22425, 22437, 22426, 22421, 22772, 22797, 22867, 23009, 23006, 23022, 23040, 23025, 23005, 23034, 23037, 23036, 23030, 23012, 23026, 23031, 23003, 23017, 23027, 23029, 23008, 23038, 23028, 23021, 23464, 23628, 23760, 23768, 23756, 23767, 23755, 23771, 23774, 23770, 23753, 23751, 23754, 23766, 23763, 23764, 23759, 23752, 23750, 23758, 23775, 23800, 24057, 24097, 24098, 24099, 24096, 24100, 24240, 24228, 24226, 24219, 24227, 24229, 24327, 24366, 24406, 24454, 24631, 24633, 24660, 24690, 24670, 24645, 24659, 24647, 24649, 24667, 24652, 24640, 24642, 24671, 24612, 24644, 24664, 24678, 24686, 25154, 25155, 25295, 25357, 25355, 25333, 25358, 25347, 25323, 25337, 25359, 25356, 25336, 25334, 25344, 25363, 25364, 25338, 25365, 25339, 25328, 25921, 25923, 26026, 26047, 26166, 26145, 26162, 26165, 26140, 26150, 26146, 26163, 26155, 26170, 26141, 26164, 26169, 26158, 26383, 26384, 26561, 26610, 26568, 26554, 26588, 26555, 26616, 26584, 26560, 26551, 26565, 26603, 26596, 26591, 26549, 26573, 26547, 26615, 26614, 26606, 26595, 26562, 26553, 26574, 26599, 26608, 26546, 26620, 26566, 26605, 26572, 26542, 26598, 26587, 26618, 26569, 26570, 26563, 26602, 26571, 27432, 27522, 27524, 27574, 27606, 27608, 27616, 27680, 27681, 27944, 27956, 27949, 27935, 27964, 27967, 27922, 27914, 27866, 27955, 27908, 27929, 27962, 27930, 27921, 27904, 27933, 27970, 27905, 27928, 27959, 27907, 27919, 27968, 27911, 27936, 27948, 27912, 27938, 27913, 27920, 28855, 28831, 28862, 28849, 28848, 28833, 28852, 28853, 28841, 29249, 29257, 29258, 29292, 29296, 29299, 29294, 29386, 29412, 29416, 29419, 29407, 29418, 29414, 29411, 29573, 29644, 29634, 29640, 29637, 29625, 29622, 29621, 29620, 29675, 29631, 29639, 29630, 29635, 29638, 29624, 29643, 29932, 29934, 29998, 30023, 30024, 30119, 30122, 30329, 30404, 30472, 30467, 30468, 30469, 30474, 30455, 30459, 30458, 30695, 30696, 30726, 30737, 30738, 30725, 30736, 30735, 30734, 30729, 30723, 30739, 31050, 31052, 31051, 31045, 31044, 31189, 31181, 31183, 31190, 31182, 31360, 31358, 31441, 31488, 31489, 31866, 31864, 31865, 31871, 31872, 31873, 32003, 32008, 32001, 32600, 32657, 32653, 32702, 32775, 32782, 32783, 32788, 32823, 32984, 32967, 32992, 32977, 32968, 32962, 32976, 32965, 32995, 32985, 32988, 32970, 32981, 32969, 32975, 32983, 32998, 32973, 33279, 33313, 33428, 33497, 33534, 33529, 33543, 33512, 33536, 33493, 33594, 33515, 33494, 33524, 33516, 33505, 33522, 33525, 33548, 33531, 33526, 33520, 33514, 33508, 33504, 33530, 33523, 33517, 34423, 34420, 34428, 34419, 34881, 34894, 34919, 34922, 34921, 35283, 35332, 35335, 36210, 36835, 36833, 36846, 36832, 37105, 37053, 37055, 37077, 37061, 37054, 37063, 37067, 37064, 37332, 37331, 38484, 38479, 38481, 38483, 38474, 38478, 20510, 20485, 20487, 20499, 20514, 20528, 20507, 20469, 20468, 20531, 20535, 20524, 20470, 20471, 20503, 20508, 20512, 20519, 20533, 20527, 20529, 20494, 20826, 20884, 20883, 20938, 20932, 20933, 20936, 20942, 21089, 21082, 21074, 21086, 21087, 21077, 21090, 21197, 21262, 21406, 21798, 21730, 21783, 21778, 21735, 21747, 21732, 21786, 21759, 21764, 21768, 21739, 21777, 21765, 21745, 21770, 21755, 21751, 21752, 21728, 21774, 21763, 21771, 22273, 22274, 22476, 22578, 22485, 22482, 22458, 22470, 22461, 22460, 22456, 22454, 22463, 22471, 22480, 22457, 22465, 22798, 22858, 23065, 23062, 23085, 23086, 23061, 23055, 23063, 23050, 23070, 23091, 23404, 23463, 23469, 23468, 23555, 23638, 23636, 23788, 23807, 23790, 23793, 23799, 23808, 23801, 24105, 24104, 24232, 24238, 24234, 24236, 24371, 24368, 24423, 24669, 24666, 24679, 24641, 24738, 24712, 24704, 24722, 24705, 24733, 24707, 24725, 24731, 24727, 24711, 24732, 24718, 25113, 25158, 25330, 25360, 25430, 25388, 25412, 25413, 25398, 25411, 25572, 25401, 25419, 25418, 25404, 25385, 25409, 25396, 25432, 25428, 25433, 25389, 25415, 25395, 25434, 25425, 25400, 25431, 25408, 25416, 25930, 25926, 26054, 26051, 26052, 26050, 26186, 26207, 26183, 26193, 26386, 26387, 26655, 26650, 26697, 26674, 26675, 26683, 26699, 26703, 26646, 26673, 26652, 26677, 26667, 26669, 26671, 26702, 26692, 26676, 26653, 26642, 26644, 26662, 26664, 26670, 26701, 26682, 26661, 26656, 27436, 27439, 27437, 27441, 27444, 27501, 32898, 27528, 27622, 27620, 27624, 27619, 27618, 27623, 27685, 28026, 28003, 28004, 28022, 27917, 28001, 28050, 27992, 28002, 28013, 28015, 28049, 28045, 28143, 28031, 28038, 27998, 28007, 28e3, 28055, 28016, 28028, 27999, 28034, 28056, 27951, 28008, 28043, 28030, 28032, 28036, 27926, 28035, 28027, 28029, 28021, 28048, 28892, 28883, 28881, 28893, 28875, 32569, 28898, 28887, 28882, 28894, 28896, 28884, 28877, 28869, 28870, 28871, 28890, 28878, 28897, 29250, 29304, 29303, 29302, 29440, 29434, 29428, 29438, 29430, 29427, 29435, 29441, 29651, 29657, 29669, 29654, 29628, 29671, 29667, 29673, 29660, 29650, 29659, 29652, 29661, 29658, 29655, 29656, 29672, 29918, 29919, 29940, 29941, 29985, 30043, 30047, 30128, 30145, 30139, 30148, 30144, 30143, 30134, 30138, 30346, 30409, 30493, 30491, 30480, 30483, 30482, 30499, 30481, 30485, 30489, 30490, 30498, 30503, 30755, 30764, 30754, 30773, 30767, 30760, 30766, 30763, 30753, 30761, 30771, 30762, 30769, 31060, 31067, 31055, 31068, 31059, 31058, 31057, 31211, 31212, 31200, 31214, 31213, 31210, 31196, 31198, 31197, 31366, 31369, 31365, 31371, 31372, 31370, 31367, 31448, 31504, 31492, 31507, 31493, 31503, 31496, 31498, 31502, 31497, 31506, 31876, 31889, 31882, 31884, 31880, 31885, 31877, 32030, 32029, 32017, 32014, 32024, 32022, 32019, 32031, 32018, 32015, 32012, 32604, 32609, 32606, 32608, 32605, 32603, 32662, 32658, 32707, 32706, 32704, 32790, 32830, 32825, 33018, 33010, 33017, 33013, 33025, 33019, 33024, 33281, 33327, 33317, 33587, 33581, 33604, 33561, 33617, 33573, 33622, 33599, 33601, 33574, 33564, 33570, 33602, 33614, 33563, 33578, 33544, 33596, 33613, 33558, 33572, 33568, 33591, 33583, 33577, 33607, 33605, 33612, 33619, 33566, 33580, 33611, 33575, 33608, 34387, 34386, 34466, 34472, 34454, 34445, 34449, 34462, 34439, 34455, 34438, 34443, 34458, 34437, 34469, 34457, 34465, 34471, 34453, 34456, 34446, 34461, 34448, 34452, 34883, 34884, 34925, 34933, 34934, 34930, 34944, 34929, 34943, 34927, 34947, 34942, 34932, 34940, 35346, 35911, 35927, 35963, 36004, 36003, 36214, 36216, 36277, 36279, 36278, 36561, 36563, 36862, 36853, 36866, 36863, 36859, 36868, 36860, 36854, 37078, 37088, 37081, 37082, 37091, 37087, 37093, 37080, 37083, 37079, 37084, 37092, 37200, 37198, 37199, 37333, 37346, 37338, 38492, 38495, 38588, 39139, 39647, 39727, 20095, 20592, 20586, 20577, 20574, 20576, 20563, 20555, 20573, 20594, 20552, 20557, 20545, 20571, 20554, 20578, 20501, 20549, 20575, 20585, 20587, 20579, 20580, 20550, 20544, 20590, 20595, 20567, 20561, 20944, 21099, 21101, 21100, 21102, 21206, 21203, 21293, 21404, 21877, 21878, 21820, 21837, 21840, 21812, 21802, 21841, 21858, 21814, 21813, 21808, 21842, 21829, 21772, 21810, 21861, 21838, 21817, 21832, 21805, 21819, 21824, 21835, 22282, 22279, 22523, 22548, 22498, 22518, 22492, 22516, 22528, 22509, 22525, 22536, 22520, 22539, 22515, 22479, 22535, 22510, 22499, 22514, 22501, 22508, 22497, 22542, 22524, 22544, 22503, 22529, 22540, 22513, 22505, 22512, 22541, 22532, 22876, 23136, 23128, 23125, 23143, 23134, 23096, 23093, 23149, 23120, 23135, 23141, 23148, 23123, 23140, 23127, 23107, 23133, 23122, 23108, 23131, 23112, 23182, 23102, 23117, 23097, 23116, 23152, 23145, 23111, 23121, 23126, 23106, 23132, 23410, 23406, 23489, 23488, 23641, 23838, 23819, 23837, 23834, 23840, 23820, 23848, 23821, 23846, 23845, 23823, 23856, 23826, 23843, 23839, 23854, 24126, 24116, 24241, 24244, 24249, 24242, 24243, 24374, 24376, 24475, 24470, 24479, 24714, 24720, 24710, 24766, 24752, 24762, 24787, 24788, 24783, 24804, 24793, 24797, 24776, 24753, 24795, 24759, 24778, 24767, 24771, 24781, 24768, 25394, 25445, 25482, 25474, 25469, 25533, 25502, 25517, 25501, 25495, 25515, 25486, 25455, 25479, 25488, 25454, 25519, 25461, 25500, 25453, 25518, 25468, 25508, 25403, 25503, 25464, 25477, 25473, 25489, 25485, 25456, 25939, 26061, 26213, 26209, 26203, 26201, 26204, 26210, 26392, 26745, 26759, 26768, 26780, 26733, 26734, 26798, 26795, 26966, 26735, 26787, 26796, 26793, 26741, 26740, 26802, 26767, 26743, 26770, 26748, 26731, 26738, 26794, 26752, 26737, 26750, 26779, 26774, 26763, 26784, 26761, 26788, 26744, 26747, 26769, 26764, 26762, 26749, 27446, 27443, 27447, 27448, 27537, 27535, 27533, 27534, 27532, 27690, 28096, 28075, 28084, 28083, 28276, 28076, 28137, 28130, 28087, 28150, 28116, 28160, 28104, 28128, 28127, 28118, 28094, 28133, 28124, 28125, 28123, 28148, 28106, 28093, 28141, 28144, 28090, 28117, 28098, 28111, 28105, 28112, 28146, 28115, 28157, 28119, 28109, 28131, 28091, 28922, 28941, 28919, 28951, 28916, 28940, 28912, 28932, 28915, 28944, 28924, 28927, 28934, 28947, 28928, 28920, 28918, 28939, 28930, 28942, 29310, 29307, 29308, 29311, 29469, 29463, 29447, 29457, 29464, 29450, 29448, 29439, 29455, 29470, 29576, 29686, 29688, 29685, 29700, 29697, 29693, 29703, 29696, 29690, 29692, 29695, 29708, 29707, 29684, 29704, 30052, 30051, 30158, 30162, 30159, 30155, 30156, 30161, 30160, 30351, 30345, 30419, 30521, 30511, 30509, 30513, 30514, 30516, 30515, 30525, 30501, 30523, 30517, 30792, 30802, 30793, 30797, 30794, 30796, 30758, 30789, 30800, 31076, 31079, 31081, 31082, 31075, 31083, 31073, 31163, 31226, 31224, 31222, 31223, 31375, 31380, 31376, 31541, 31559, 31540, 31525, 31536, 31522, 31524, 31539, 31512, 31530, 31517, 31537, 31531, 31533, 31535, 31538, 31544, 31514, 31523, 31892, 31896, 31894, 31907, 32053, 32061, 32056, 32054, 32058, 32069, 32044, 32041, 32065, 32071, 32062, 32063, 32074, 32059, 32040, 32611, 32661, 32668, 32669, 32667, 32714, 32715, 32717, 32720, 32721, 32711, 32719, 32713, 32799, 32798, 32795, 32839, 32835, 32840, 33048, 33061, 33049, 33051, 33069, 33055, 33068, 33054, 33057, 33045, 33063, 33053, 33058, 33297, 33336, 33331, 33338, 33332, 33330, 33396, 33680, 33699, 33704, 33677, 33658, 33651, 33700, 33652, 33679, 33665, 33685, 33689, 33653, 33684, 33705, 33661, 33667, 33676, 33693, 33691, 33706, 33675, 33662, 33701, 33711, 33672, 33687, 33712, 33663, 33702, 33671, 33710, 33654, 33690, 34393, 34390, 34495, 34487, 34498, 34497, 34501, 34490, 34480, 34504, 34489, 34483, 34488, 34508, 34484, 34491, 34492, 34499, 34493, 34494, 34898, 34953, 34965, 34984, 34978, 34986, 34970, 34961, 34977, 34975, 34968, 34983, 34969, 34971, 34967, 34980, 34988, 34956, 34963, 34958, 35202, 35286, 35289, 35285, 35376, 35367, 35372, 35358, 35897, 35899, 35932, 35933, 35965, 36005, 36221, 36219, 36217, 36284, 36290, 36281, 36287, 36289, 36568, 36574, 36573, 36572, 36567, 36576, 36577, 36900, 36875, 36881, 36892, 36876, 36897, 37103, 37098, 37104, 37108, 37106, 37107, 37076, 37099, 37100, 37097, 37206, 37208, 37210, 37203, 37205, 37356, 37364, 37361, 37363, 37368, 37348, 37369, 37354, 37355, 37367, 37352, 37358, 38266, 38278, 38280, 38524, 38509, 38507, 38513, 38511, 38591, 38762, 38916, 39141, 39319, 20635, 20629, 20628, 20638, 20619, 20643, 20611, 20620, 20622, 20637, 20584, 20636, 20626, 20610, 20615, 20831, 20948, 21266, 21265, 21412, 21415, 21905, 21928, 21925, 21933, 21879, 22085, 21922, 21907, 21896, 21903, 21941, 21889, 21923, 21906, 21924, 21885, 21900, 21926, 21887, 21909, 21921, 21902, 22284, 22569, 22583, 22553, 22558, 22567, 22563, 22568, 22517, 22600, 22565, 22556, 22555, 22579, 22591, 22582, 22574, 22585, 22584, 22573, 22572, 22587, 22881, 23215, 23188, 23199, 23162, 23202, 23198, 23160, 23206, 23164, 23205, 23212, 23189, 23214, 23095, 23172, 23178, 23191, 23171, 23179, 23209, 23163, 23165, 23180, 23196, 23183, 23187, 23197, 23530, 23501, 23499, 23508, 23505, 23498, 23502, 23564, 23600, 23863, 23875, 23915, 23873, 23883, 23871, 23861, 23889, 23886, 23893, 23859, 23866, 23890, 23869, 23857, 23897, 23874, 23865, 23881, 23864, 23868, 23858, 23862, 23872, 23877, 24132, 24129, 24408, 24486, 24485, 24491, 24777, 24761, 24780, 24802, 24782, 24772, 24852, 24818, 24842, 24854, 24837, 24821, 24851, 24824, 24828, 24830, 24769, 24835, 24856, 24861, 24848, 24831, 24836, 24843, 25162, 25492, 25521, 25520, 25550, 25573, 25576, 25583, 25539, 25757, 25587, 25546, 25568, 25590, 25557, 25586, 25589, 25697, 25567, 25534, 25565, 25564, 25540, 25560, 25555, 25538, 25543, 25548, 25547, 25544, 25584, 25559, 25561, 25906, 25959, 25962, 25956, 25948, 25960, 25957, 25996, 26013, 26014, 26030, 26064, 26066, 26236, 26220, 26235, 26240, 26225, 26233, 26218, 26226, 26369, 26892, 26835, 26884, 26844, 26922, 26860, 26858, 26865, 26895, 26838, 26871, 26859, 26852, 26870, 26899, 26896, 26867, 26849, 26887, 26828, 26888, 26992, 26804, 26897, 26863, 26822, 26900, 26872, 26832, 26877, 26876, 26856, 26891, 26890, 26903, 26830, 26824, 26845, 26846, 26854, 26868, 26833, 26886, 26836, 26857, 26901, 26917, 26823, 27449, 27451, 27455, 27452, 27540, 27543, 27545, 27541, 27581, 27632, 27634, 27635, 27696, 28156, 28230, 28231, 28191, 28233, 28296, 28220, 28221, 28229, 28258, 28203, 28223, 28225, 28253, 28275, 28188, 28211, 28235, 28224, 28241, 28219, 28163, 28206, 28254, 28264, 28252, 28257, 28209, 28200, 28256, 28273, 28267, 28217, 28194, 28208, 28243, 28261, 28199, 28280, 28260, 28279, 28245, 28281, 28242, 28262, 28213, 28214, 28250, 28960, 28958, 28975, 28923, 28974, 28977, 28963, 28965, 28962, 28978, 28959, 28968, 28986, 28955, 29259, 29274, 29320, 29321, 29318, 29317, 29323, 29458, 29451, 29488, 29474, 29489, 29491, 29479, 29490, 29485, 29478, 29475, 29493, 29452, 29742, 29740, 29744, 29739, 29718, 29722, 29729, 29741, 29745, 29732, 29731, 29725, 29737, 29728, 29746, 29947, 29999, 30063, 30060, 30183, 30170, 30177, 30182, 30173, 30175, 30180, 30167, 30357, 30354, 30426, 30534, 30535, 30532, 30541, 30533, 30538, 30542, 30539, 30540, 30686, 30700, 30816, 30820, 30821, 30812, 30829, 30833, 30826, 30830, 30832, 30825, 30824, 30814, 30818, 31092, 31091, 31090, 31088, 31234, 31242, 31235, 31244, 31236, 31385, 31462, 31460, 31562, 31547, 31556, 31560, 31564, 31566, 31552, 31576, 31557, 31906, 31902, 31912, 31905, 32088, 32111, 32099, 32083, 32086, 32103, 32106, 32079, 32109, 32092, 32107, 32082, 32084, 32105, 32081, 32095, 32078, 32574, 32575, 32613, 32614, 32674, 32672, 32673, 32727, 32849, 32847, 32848, 33022, 32980, 33091, 33098, 33106, 33103, 33095, 33085, 33101, 33082, 33254, 33262, 33271, 33272, 33273, 33284, 33340, 33341, 33343, 33397, 33595, 33743, 33785, 33827, 33728, 33768, 33810, 33767, 33764, 33788, 33782, 33808, 33734, 33736, 33771, 33763, 33727, 33793, 33757, 33765, 33752, 33791, 33761, 33739, 33742, 33750, 33781, 33737, 33801, 33807, 33758, 33809, 33798, 33730, 33779, 33749, 33786, 33735, 33745, 33770, 33811, 33731, 33772, 33774, 33732, 33787, 33751, 33762, 33819, 33755, 33790, 34520, 34530, 34534, 34515, 34531, 34522, 34538, 34525, 34539, 34524, 34540, 34537, 34519, 34536, 34513, 34888, 34902, 34901, 35002, 35031, 35001, 35e3, 35008, 35006, 34998, 35004, 34999, 35005, 34994, 35073, 35017, 35221, 35224, 35223, 35293, 35290, 35291, 35406, 35405, 35385, 35417, 35392, 35415, 35416, 35396, 35397, 35410, 35400, 35409, 35402, 35404, 35407, 35935, 35969, 35968, 36026, 36030, 36016, 36025, 36021, 36228, 36224, 36233, 36312, 36307, 36301, 36295, 36310, 36316, 36303, 36309, 36313, 36296, 36311, 36293, 36591, 36599, 36602, 36601, 36582, 36590, 36581, 36597, 36583, 36584, 36598, 36587, 36593, 36588, 36596, 36585, 36909, 36916, 36911, 37126, 37164, 37124, 37119, 37116, 37128, 37113, 37115, 37121, 37120, 37127, 37125, 37123, 37217, 37220, 37215, 37218, 37216, 37377, 37386, 37413, 37379, 37402, 37414, 37391, 37388, 37376, 37394, 37375, 37373, 37382, 37380, 37415, 37378, 37404, 37412, 37401, 37399, 37381, 37398, 38267, 38285, 38284, 38288, 38535, 38526, 38536, 38537, 38531, 38528, 38594, 38600, 38595, 38641, 38640, 38764, 38768, 38766, 38919, 39081, 39147, 40166, 40697, 20099, 20100, 20150, 20669, 20671, 20678, 20654, 20676, 20682, 20660, 20680, 20674, 20656, 20673, 20666, 20657, 20683, 20681, 20662, 20664, 20951, 21114, 21112, 21115, 21116, 21955, 21979, 21964, 21968, 21963, 21962, 21981, 21952, 21972, 21956, 21993, 21951, 21970, 21901, 21967, 21973, 21986, 21974, 21960, 22002, 21965, 21977, 21954, 22292, 22611, 22632, 22628, 22607, 22605, 22601, 22639, 22613, 22606, 22621, 22617, 22629, 22619, 22589, 22627, 22641, 22780, 23239, 23236, 23243, 23226, 23224, 23217, 23221, 23216, 23231, 23240, 23227, 23238, 23223, 23232, 23242, 23220, 23222, 23245, 23225, 23184, 23510, 23512, 23513, 23583, 23603, 23921, 23907, 23882, 23909, 23922, 23916, 23902, 23912, 23911, 23906, 24048, 24143, 24142, 24138, 24141, 24139, 24261, 24268, 24262, 24267, 24263, 24384, 24495, 24493, 24823, 24905, 24906, 24875, 24901, 24886, 24882, 24878, 24902, 24879, 24911, 24873, 24896, 25120, 37224, 25123, 25125, 25124, 25541, 25585, 25579, 25616, 25618, 25609, 25632, 25636, 25651, 25667, 25631, 25621, 25624, 25657, 25655, 25634, 25635, 25612, 25638, 25648, 25640, 25665, 25653, 25647, 25610, 25626, 25664, 25637, 25639, 25611, 25575, 25627, 25646, 25633, 25614, 25967, 26002, 26067, 26246, 26252, 26261, 26256, 26251, 26250, 26265, 26260, 26232, 26400, 26982, 26975, 26936, 26958, 26978, 26993, 26943, 26949, 26986, 26937, 26946, 26967, 26969, 27002, 26952, 26953, 26933, 26988, 26931, 26941, 26981, 26864, 27e3, 26932, 26985, 26944, 26991, 26948, 26998, 26968, 26945, 26996, 26956, 26939, 26955, 26935, 26972, 26959, 26961, 26930, 26962, 26927, 27003, 26940, 27462, 27461, 27459, 27458, 27464, 27457, 27547, 64013, 27643, 27644, 27641, 27639, 27640, 28315, 28374, 28360, 28303, 28352, 28319, 28307, 28308, 28320, 28337, 28345, 28358, 28370, 28349, 28353, 28318, 28361, 28343, 28336, 28365, 28326, 28367, 28338, 28350, 28355, 28380, 28376, 28313, 28306, 28302, 28301, 28324, 28321, 28351, 28339, 28368, 28362, 28311, 28334, 28323, 28999, 29012, 29010, 29027, 29024, 28993, 29021, 29026, 29042, 29048, 29034, 29025, 28994, 29016, 28995, 29003, 29040, 29023, 29008, 29011, 28996, 29005, 29018, 29263, 29325, 29324, 29329, 29328, 29326, 29500, 29506, 29499, 29498, 29504, 29514, 29513, 29764, 29770, 29771, 29778, 29777, 29783, 29760, 29775, 29776, 29774, 29762, 29766, 29773, 29780, 29921, 29951, 29950, 29949, 29981, 30073, 30071, 27011, 30191, 30223, 30211, 30199, 30206, 30204, 30201, 30200, 30224, 30203, 30198, 30189, 30197, 30205, 30361, 30389, 30429, 30549, 30559, 30560, 30546, 30550, 30554, 30569, 30567, 30548, 30553, 30573, 30688, 30855, 30874, 30868, 30863, 30852, 30869, 30853, 30854, 30881, 30851, 30841, 30873, 30848, 30870, 30843, 31100, 31106, 31101, 31097, 31249, 31256, 31257, 31250, 31255, 31253, 31266, 31251, 31259, 31248, 31395, 31394, 31390, 31467, 31590, 31588, 31597, 31604, 31593, 31602, 31589, 31603, 31601, 31600, 31585, 31608, 31606, 31587, 31922, 31924, 31919, 32136, 32134, 32128, 32141, 32127, 32133, 32122, 32142, 32123, 32131, 32124, 32140, 32148, 32132, 32125, 32146, 32621, 32619, 32615, 32616, 32620, 32678, 32677, 32679, 32731, 32732, 32801, 33124, 33120, 33143, 33116, 33129, 33115, 33122, 33138, 26401, 33118, 33142, 33127, 33135, 33092, 33121, 33309, 33353, 33348, 33344, 33346, 33349, 34033, 33855, 33878, 33910, 33913, 33935, 33933, 33893, 33873, 33856, 33926, 33895, 33840, 33869, 33917, 33882, 33881, 33908, 33907, 33885, 34055, 33886, 33847, 33850, 33844, 33914, 33859, 33912, 33842, 33861, 33833, 33753, 33867, 33839, 33858, 33837, 33887, 33904, 33849, 33870, 33868, 33874, 33903, 33989, 33934, 33851, 33863, 33846, 33843, 33896, 33918, 33860, 33835, 33888, 33876, 33902, 33872, 34571, 34564, 34551, 34572, 34554, 34518, 34549, 34637, 34552, 34574, 34569, 34561, 34550, 34573, 34565, 35030, 35019, 35021, 35022, 35038, 35035, 35034, 35020, 35024, 35205, 35227, 35295, 35301, 35300, 35297, 35296, 35298, 35292, 35302, 35446, 35462, 35455, 35425, 35391, 35447, 35458, 35460, 35445, 35459, 35457, 35444, 35450, 35900, 35915, 35914, 35941, 35940, 35942, 35974, 35972, 35973, 36044, 36200, 36201, 36241, 36236, 36238, 36239, 36237, 36243, 36244, 36240, 36242, 36336, 36320, 36332, 36337, 36334, 36304, 36329, 36323, 36322, 36327, 36338, 36331, 36340, 36614, 36607, 36609, 36608, 36613, 36615, 36616, 36610, 36619, 36946, 36927, 36932, 36937, 36925, 37136, 37133, 37135, 37137, 37142, 37140, 37131, 37134, 37230, 37231, 37448, 37458, 37424, 37434, 37478, 37427, 37477, 37470, 37507, 37422, 37450, 37446, 37485, 37484, 37455, 37472, 37479, 37487, 37430, 37473, 37488, 37425, 37460, 37475, 37456, 37490, 37454, 37459, 37452, 37462, 37426, 38303, 38300, 38302, 38299, 38546, 38547, 38545, 38551, 38606, 38650, 38653, 38648, 38645, 38771, 38775, 38776, 38770, 38927, 38925, 38926, 39084, 39158, 39161, 39343, 39346, 39344, 39349, 39597, 39595, 39771, 40170, 40173, 40167, 40576, 40701, 20710, 20692, 20695, 20712, 20723, 20699, 20714, 20701, 20708, 20691, 20716, 20720, 20719, 20707, 20704, 20952, 21120, 21121, 21225, 21227, 21296, 21420, 22055, 22037, 22028, 22034, 22012, 22031, 22044, 22017, 22035, 22018, 22010, 22045, 22020, 22015, 22009, 22665, 22652, 22672, 22680, 22662, 22657, 22655, 22644, 22667, 22650, 22663, 22673, 22670, 22646, 22658, 22664, 22651, 22676, 22671, 22782, 22891, 23260, 23278, 23269, 23253, 23274, 23258, 23277, 23275, 23283, 23266, 23264, 23259, 23276, 23262, 23261, 23257, 23272, 23263, 23415, 23520, 23523, 23651, 23938, 23936, 23933, 23942, 23930, 23937, 23927, 23946, 23945, 23944, 23934, 23932, 23949, 23929, 23935, 24152, 24153, 24147, 24280, 24273, 24279, 24270, 24284, 24277, 24281, 24274, 24276, 24388, 24387, 24431, 24502, 24876, 24872, 24897, 24926, 24945, 24947, 24914, 24915, 24946, 24940, 24960, 24948, 24916, 24954, 24923, 24933, 24891, 24938, 24929, 24918, 25129, 25127, 25131, 25643, 25677, 25691, 25693, 25716, 25718, 25714, 25715, 25725, 25717, 25702, 25766, 25678, 25730, 25694, 25692, 25675, 25683, 25696, 25680, 25727, 25663, 25708, 25707, 25689, 25701, 25719, 25971, 26016, 26273, 26272, 26271, 26373, 26372, 26402, 27057, 27062, 27081, 27040, 27086, 27030, 27056, 27052, 27068, 27025, 27033, 27022, 27047, 27021, 27049, 27070, 27055, 27071, 27076, 27069, 27044, 27092, 27065, 27082, 27034, 27087, 27059, 27027, 27050, 27041, 27038, 27097, 27031, 27024, 27074, 27061, 27045, 27078, 27466, 27469, 27467, 27550, 27551, 27552, 27587, 27588, 27646, 28366, 28405, 28401, 28419, 28453, 28408, 28471, 28411, 28462, 28425, 28494, 28441, 28442, 28455, 28440, 28475, 28434, 28397, 28426, 28470, 28531, 28409, 28398, 28461, 28480, 28464, 28476, 28469, 28395, 28423, 28430, 28483, 28421, 28413, 28406, 28473, 28444, 28412, 28474, 28447, 28429, 28446, 28424, 28449, 29063, 29072, 29065, 29056, 29061, 29058, 29071, 29051, 29062, 29057, 29079, 29252, 29267, 29335, 29333, 29331, 29507, 29517, 29521, 29516, 29794, 29811, 29809, 29813, 29810, 29799, 29806, 29952, 29954, 29955, 30077, 30096, 30230, 30216, 30220, 30229, 30225, 30218, 30228, 30392, 30593, 30588, 30597, 30594, 30574, 30592, 30575, 30590, 30595, 30898, 30890, 30900, 30893, 30888, 30846, 30891, 30878, 30885, 30880, 30892, 30882, 30884, 31128, 31114, 31115, 31126, 31125, 31124, 31123, 31127, 31112, 31122, 31120, 31275, 31306, 31280, 31279, 31272, 31270, 31400, 31403, 31404, 31470, 31624, 31644, 31626, 31633, 31632, 31638, 31629, 31628, 31643, 31630, 31621, 31640, 21124, 31641, 31652, 31618, 31931, 31935, 31932, 31930, 32167, 32183, 32194, 32163, 32170, 32193, 32192, 32197, 32157, 32206, 32196, 32198, 32203, 32204, 32175, 32185, 32150, 32188, 32159, 32166, 32174, 32169, 32161, 32201, 32627, 32738, 32739, 32741, 32734, 32804, 32861, 32860, 33161, 33158, 33155, 33159, 33165, 33164, 33163, 33301, 33943, 33956, 33953, 33951, 33978, 33998, 33986, 33964, 33966, 33963, 33977, 33972, 33985, 33997, 33962, 33946, 33969, 34e3, 33949, 33959, 33979, 33954, 33940, 33991, 33996, 33947, 33961, 33967, 33960, 34006, 33944, 33974, 33999, 33952, 34007, 34004, 34002, 34011, 33968, 33937, 34401, 34611, 34595, 34600, 34667, 34624, 34606, 34590, 34593, 34585, 34587, 34627, 34604, 34625, 34622, 34630, 34592, 34610, 34602, 34605, 34620, 34578, 34618, 34609, 34613, 34626, 34598, 34599, 34616, 34596, 34586, 34608, 34577, 35063, 35047, 35057, 35058, 35066, 35070, 35054, 35068, 35062, 35067, 35056, 35052, 35051, 35229, 35233, 35231, 35230, 35305, 35307, 35304, 35499, 35481, 35467, 35474, 35471, 35478, 35901, 35944, 35945, 36053, 36047, 36055, 36246, 36361, 36354, 36351, 36365, 36349, 36362, 36355, 36359, 36358, 36357, 36350, 36352, 36356, 36624, 36625, 36622, 36621, 37155, 37148, 37152, 37154, 37151, 37149, 37146, 37156, 37153, 37147, 37242, 37234, 37241, 37235, 37541, 37540, 37494, 37531, 37498, 37536, 37524, 37546, 37517, 37542, 37530, 37547, 37497, 37527, 37503, 37539, 37614, 37518, 37506, 37525, 37538, 37501, 37512, 37537, 37514, 37510, 37516, 37529, 37543, 37502, 37511, 37545, 37533, 37515, 37421, 38558, 38561, 38655, 38744, 38781, 38778, 38782, 38787, 38784, 38786, 38779, 38788, 38785, 38783, 38862, 38861, 38934, 39085, 39086, 39170, 39168, 39175, 39325, 39324, 39363, 39353, 39355, 39354, 39362, 39357, 39367, 39601, 39651, 39655, 39742, 39743, 39776, 39777, 39775, 40177, 40178, 40181, 40615, 20735, 20739, 20784, 20728, 20742, 20743, 20726, 20734, 20747, 20748, 20733, 20746, 21131, 21132, 21233, 21231, 22088, 22082, 22092, 22069, 22081, 22090, 22089, 22086, 22104, 22106, 22080, 22067, 22077, 22060, 22078, 22072, 22058, 22074, 22298, 22699, 22685, 22705, 22688, 22691, 22703, 22700, 22693, 22689, 22783, 23295, 23284, 23293, 23287, 23286, 23299, 23288, 23298, 23289, 23297, 23303, 23301, 23311, 23655, 23961, 23959, 23967, 23954, 23970, 23955, 23957, 23968, 23964, 23969, 23962, 23966, 24169, 24157, 24160, 24156, 32243, 24283, 24286, 24289, 24393, 24498, 24971, 24963, 24953, 25009, 25008, 24994, 24969, 24987, 24979, 25007, 25005, 24991, 24978, 25002, 24993, 24973, 24934, 25011, 25133, 25710, 25712, 25750, 25760, 25733, 25751, 25756, 25743, 25739, 25738, 25740, 25763, 25759, 25704, 25777, 25752, 25974, 25978, 25977, 25979, 26034, 26035, 26293, 26288, 26281, 26290, 26295, 26282, 26287, 27136, 27142, 27159, 27109, 27128, 27157, 27121, 27108, 27168, 27135, 27116, 27106, 27163, 27165, 27134, 27175, 27122, 27118, 27156, 27127, 27111, 27200, 27144, 27110, 27131, 27149, 27132, 27115, 27145, 27140, 27160, 27173, 27151, 27126, 27174, 27143, 27124, 27158, 27473, 27557, 27555, 27554, 27558, 27649, 27648, 27647, 27650, 28481, 28454, 28542, 28551, 28614, 28562, 28557, 28553, 28556, 28514, 28495, 28549, 28506, 28566, 28534, 28524, 28546, 28501, 28530, 28498, 28496, 28503, 28564, 28563, 28509, 28416, 28513, 28523, 28541, 28519, 28560, 28499, 28555, 28521, 28543, 28565, 28515, 28535, 28522, 28539, 29106, 29103, 29083, 29104, 29088, 29082, 29097, 29109, 29085, 29093, 29086, 29092, 29089, 29098, 29084, 29095, 29107, 29336, 29338, 29528, 29522, 29534, 29535, 29536, 29533, 29531, 29537, 29530, 29529, 29538, 29831, 29833, 29834, 29830, 29825, 29821, 29829, 29832, 29820, 29817, 29960, 29959, 30078, 30245, 30238, 30233, 30237, 30236, 30243, 30234, 30248, 30235, 30364, 30365, 30366, 30363, 30605, 30607, 30601, 30600, 30925, 30907, 30927, 30924, 30929, 30926, 30932, 30920, 30915, 30916, 30921, 31130, 31137, 31136, 31132, 31138, 31131, 27510, 31289, 31410, 31412, 31411, 31671, 31691, 31678, 31660, 31694, 31663, 31673, 31690, 31669, 31941, 31944, 31948, 31947, 32247, 32219, 32234, 32231, 32215, 32225, 32259, 32250, 32230, 32246, 32241, 32240, 32238, 32223, 32630, 32684, 32688, 32685, 32749, 32747, 32746, 32748, 32742, 32744, 32868, 32871, 33187, 33183, 33182, 33173, 33186, 33177, 33175, 33302, 33359, 33363, 33362, 33360, 33358, 33361, 34084, 34107, 34063, 34048, 34089, 34062, 34057, 34061, 34079, 34058, 34087, 34076, 34043, 34091, 34042, 34056, 34060, 34036, 34090, 34034, 34069, 34039, 34027, 34035, 34044, 34066, 34026, 34025, 34070, 34046, 34088, 34077, 34094, 34050, 34045, 34078, 34038, 34097, 34086, 34023, 34024, 34032, 34031, 34041, 34072, 34080, 34096, 34059, 34073, 34095, 34402, 34646, 34659, 34660, 34679, 34785, 34675, 34648, 34644, 34651, 34642, 34657, 34650, 34641, 34654, 34669, 34666, 34640, 34638, 34655, 34653, 34671, 34668, 34682, 34670, 34652, 34661, 34639, 34683, 34677, 34658, 34663, 34665, 34906, 35077, 35084, 35092, 35083, 35095, 35096, 35097, 35078, 35094, 35089, 35086, 35081, 35234, 35236, 35235, 35309, 35312, 35308, 35535, 35526, 35512, 35539, 35537, 35540, 35541, 35515, 35543, 35518, 35520, 35525, 35544, 35523, 35514, 35517, 35545, 35902, 35917, 35983, 36069, 36063, 36057, 36072, 36058, 36061, 36071, 36256, 36252, 36257, 36251, 36384, 36387, 36389, 36388, 36398, 36373, 36379, 36374, 36369, 36377, 36390, 36391, 36372, 36370, 36376, 36371, 36380, 36375, 36378, 36652, 36644, 36632, 36634, 36640, 36643, 36630, 36631, 36979, 36976, 36975, 36967, 36971, 37167, 37163, 37161, 37162, 37170, 37158, 37166, 37253, 37254, 37258, 37249, 37250, 37252, 37248, 37584, 37571, 37572, 37568, 37593, 37558, 37583, 37617, 37599, 37592, 37609, 37591, 37597, 37580, 37615, 37570, 37608, 37578, 37576, 37582, 37606, 37581, 37589, 37577, 37600, 37598, 37607, 37585, 37587, 37557, 37601, 37574, 37556, 38268, 38316, 38315, 38318, 38320, 38564, 38562, 38611, 38661, 38664, 38658, 38746, 38794, 38798, 38792, 38864, 38863, 38942, 38941, 38950, 38953, 38952, 38944, 38939, 38951, 39090, 39176, 39162, 39185, 39188, 39190, 39191, 39189, 39388, 39373, 39375, 39379, 39380, 39374, 39369, 39382, 39384, 39371, 39383, 39372, 39603, 39660, 39659, 39667, 39666, 39665, 39750, 39747, 39783, 39796, 39793, 39782, 39798, 39797, 39792, 39784, 39780, 39788, 40188, 40186, 40189, 40191, 40183, 40199, 40192, 40185, 40187, 40200, 40197, 40196, 40579, 40659, 40719, 40720, 20764, 20755, 20759, 20762, 20753, 20958, 21300, 21473, 22128, 22112, 22126, 22131, 22118, 22115, 22125, 22130, 22110, 22135, 22300, 22299, 22728, 22717, 22729, 22719, 22714, 22722, 22716, 22726, 23319, 23321, 23323, 23329, 23316, 23315, 23312, 23318, 23336, 23322, 23328, 23326, 23535, 23980, 23985, 23977, 23975, 23989, 23984, 23982, 23978, 23976, 23986, 23981, 23983, 23988, 24167, 24168, 24166, 24175, 24297, 24295, 24294, 24296, 24293, 24395, 24508, 24989, 25e3, 24982, 25029, 25012, 25030, 25025, 25036, 25018, 25023, 25016, 24972, 25815, 25814, 25808, 25807, 25801, 25789, 25737, 25795, 25819, 25843, 25817, 25907, 25983, 25980, 26018, 26312, 26302, 26304, 26314, 26315, 26319, 26301, 26299, 26298, 26316, 26403, 27188, 27238, 27209, 27239, 27186, 27240, 27198, 27229, 27245, 27254, 27227, 27217, 27176, 27226, 27195, 27199, 27201, 27242, 27236, 27216, 27215, 27220, 27247, 27241, 27232, 27196, 27230, 27222, 27221, 27213, 27214, 27206, 27477, 27476, 27478, 27559, 27562, 27563, 27592, 27591, 27652, 27651, 27654, 28589, 28619, 28579, 28615, 28604, 28622, 28616, 28510, 28612, 28605, 28574, 28618, 28584, 28676, 28581, 28590, 28602, 28588, 28586, 28623, 28607, 28600, 28578, 28617, 28587, 28621, 28591, 28594, 28592, 29125, 29122, 29119, 29112, 29142, 29120, 29121, 29131, 29140, 29130, 29127, 29135, 29117, 29144, 29116, 29126, 29146, 29147, 29341, 29342, 29545, 29542, 29543, 29548, 29541, 29547, 29546, 29823, 29850, 29856, 29844, 29842, 29845, 29857, 29963, 30080, 30255, 30253, 30257, 30269, 30259, 30268, 30261, 30258, 30256, 30395, 30438, 30618, 30621, 30625, 30620, 30619, 30626, 30627, 30613, 30617, 30615, 30941, 30953, 30949, 30954, 30942, 30947, 30939, 30945, 30946, 30957, 30943, 30944, 31140, 31300, 31304, 31303, 31414, 31416, 31413, 31409, 31415, 31710, 31715, 31719, 31709, 31701, 31717, 31706, 31720, 31737, 31700, 31722, 31714, 31708, 31723, 31704, 31711, 31954, 31956, 31959, 31952, 31953, 32274, 32289, 32279, 32268, 32287, 32288, 32275, 32270, 32284, 32277, 32282, 32290, 32267, 32271, 32278, 32269, 32276, 32293, 32292, 32579, 32635, 32636, 32634, 32689, 32751, 32810, 32809, 32876, 33201, 33190, 33198, 33209, 33205, 33195, 33200, 33196, 33204, 33202, 33207, 33191, 33266, 33365, 33366, 33367, 34134, 34117, 34155, 34125, 34131, 34145, 34136, 34112, 34118, 34148, 34113, 34146, 34116, 34129, 34119, 34147, 34110, 34139, 34161, 34126, 34158, 34165, 34133, 34151, 34144, 34188, 34150, 34141, 34132, 34149, 34156, 34403, 34405, 34404, 34715, 34703, 34711, 34707, 34706, 34696, 34689, 34710, 34712, 34681, 34695, 34723, 34693, 34704, 34705, 34717, 34692, 34708, 34716, 34714, 34697, 35102, 35110, 35120, 35117, 35118, 35111, 35121, 35106, 35113, 35107, 35119, 35116, 35103, 35313, 35552, 35554, 35570, 35572, 35573, 35549, 35604, 35556, 35551, 35568, 35528, 35550, 35553, 35560, 35583, 35567, 35579, 35985, 35986, 35984, 36085, 36078, 36081, 36080, 36083, 36204, 36206, 36261, 36263, 36403, 36414, 36408, 36416, 36421, 36406, 36412, 36413, 36417, 36400, 36415, 36541, 36662, 36654, 36661, 36658, 36665, 36663, 36660, 36982, 36985, 36987, 36998, 37114, 37171, 37173, 37174, 37267, 37264, 37265, 37261, 37263, 37671, 37662, 37640, 37663, 37638, 37647, 37754, 37688, 37692, 37659, 37667, 37650, 37633, 37702, 37677, 37646, 37645, 37579, 37661, 37626, 37669, 37651, 37625, 37623, 37684, 37634, 37668, 37631, 37673, 37689, 37685, 37674, 37652, 37644, 37643, 37630, 37641, 37632, 37627, 37654, 38332, 38349, 38334, 38329, 38330, 38326, 38335, 38325, 38333, 38569, 38612, 38667, 38674, 38672, 38809, 38807, 38804, 38896, 38904, 38965, 38959, 38962, 39204, 39199, 39207, 39209, 39326, 39406, 39404, 39397, 39396, 39408, 39395, 39402, 39401, 39399, 39609, 39615, 39604, 39611, 39670, 39674, 39673, 39671, 39731, 39808, 39813, 39815, 39804, 39806, 39803, 39810, 39827, 39826, 39824, 39802, 39829, 39805, 39816, 40229, 40215, 40224, 40222, 40212, 40233, 40221, 40216, 40226, 40208, 40217, 40223, 40584, 40582, 40583, 40622, 40621, 40661, 40662, 40698, 40722, 40765, 20774, 20773, 20770, 20772, 20768, 20777, 21236, 22163, 22156, 22157, 22150, 22148, 22147, 22142, 22146, 22143, 22145, 22742, 22740, 22735, 22738, 23341, 23333, 23346, 23331, 23340, 23335, 23334, 23343, 23342, 23419, 23537, 23538, 23991, 24172, 24170, 24510, 24507, 25027, 25013, 25020, 25063, 25056, 25061, 25060, 25064, 25054, 25839, 25833, 25827, 25835, 25828, 25832, 25985, 25984, 26038, 26074, 26322, 27277, 27286, 27265, 27301, 27273, 27295, 27291, 27297, 27294, 27271, 27283, 27278, 27285, 27267, 27304, 27300, 27281, 27263, 27302, 27290, 27269, 27276, 27282, 27483, 27565, 27657, 28620, 28585, 28660, 28628, 28643, 28636, 28653, 28647, 28646, 28638, 28658, 28637, 28642, 28648, 29153, 29169, 29160, 29170, 29156, 29168, 29154, 29555, 29550, 29551, 29847, 29874, 29867, 29840, 29866, 29869, 29873, 29861, 29871, 29968, 29969, 29970, 29967, 30084, 30275, 30280, 30281, 30279, 30372, 30441, 30645, 30635, 30642, 30647, 30646, 30644, 30641, 30632, 30704, 30963, 30973, 30978, 30971, 30972, 30962, 30981, 30969, 30974, 30980, 31147, 31144, 31324, 31323, 31318, 31320, 31316, 31322, 31422, 31424, 31425, 31749, 31759, 31730, 31744, 31743, 31739, 31758, 31732, 31755, 31731, 31746, 31753, 31747, 31745, 31736, 31741, 31750, 31728, 31729, 31760, 31754, 31976, 32301, 32316, 32322, 32307, 38984, 32312, 32298, 32329, 32320, 32327, 32297, 32332, 32304, 32315, 32310, 32324, 32314, 32581, 32639, 32638, 32637, 32756, 32754, 32812, 33211, 33220, 33228, 33226, 33221, 33223, 33212, 33257, 33371, 33370, 33372, 34179, 34176, 34191, 34215, 34197, 34208, 34187, 34211, 34171, 34212, 34202, 34206, 34167, 34172, 34185, 34209, 34170, 34168, 34135, 34190, 34198, 34182, 34189, 34201, 34205, 34177, 34210, 34178, 34184, 34181, 34169, 34166, 34200, 34192, 34207, 34408, 34750, 34730, 34733, 34757, 34736, 34732, 34745, 34741, 34748, 34734, 34761, 34755, 34754, 34764, 34743, 34735, 34756, 34762, 34740, 34742, 34751, 34744, 34749, 34782, 34738, 35125, 35123, 35132, 35134, 35137, 35154, 35127, 35138, 35245, 35247, 35246, 35314, 35315, 35614, 35608, 35606, 35601, 35589, 35595, 35618, 35599, 35602, 35605, 35591, 35597, 35592, 35590, 35612, 35603, 35610, 35919, 35952, 35954, 35953, 35951, 35989, 35988, 36089, 36207, 36430, 36429, 36435, 36432, 36428, 36423, 36675, 36672, 36997, 36990, 37176, 37274, 37282, 37275, 37273, 37279, 37281, 37277, 37280, 37793, 37763, 37807, 37732, 37718, 37703, 37756, 37720, 37724, 37750, 37705, 37712, 37713, 37728, 37741, 37775, 37708, 37738, 37753, 37719, 37717, 37714, 37711, 37745, 37751, 37755, 37729, 37726, 37731, 37735, 37760, 37710, 37721, 38343, 38336, 38345, 38339, 38341, 38327, 38574, 38576, 38572, 38688, 38687, 38680, 38685, 38681, 38810, 38817, 38812, 38814, 38813, 38869, 38868, 38897, 38977, 38980, 38986, 38985, 38981, 38979, 39205, 39211, 39212, 39210, 39219, 39218, 39215, 39213, 39217, 39216, 39320, 39331, 39329, 39426, 39418, 39412, 39415, 39417, 39416, 39414, 39419, 39421, 39422, 39420, 39427, 39614, 39678, 39677, 39681, 39676, 39752, 39834, 39848, 39838, 39835, 39846, 39841, 39845, 39844, 39814, 39842, 39840, 39855, 40243, 40257, 40295, 40246, 40238, 40239, 40241, 40248, 40240, 40261, 40258, 40259, 40254, 40247, 40256, 40253, 32757, 40237, 40586, 40585, 40589, 40624, 40648, 40666, 40699, 40703, 40740, 40739, 40738, 40788, 40864, 20785, 20781, 20782, 22168, 22172, 22167, 22170, 22173, 22169, 22896, 23356, 23657, 23658, 24e3, 24173, 24174, 25048, 25055, 25069, 25070, 25073, 25066, 25072, 25067, 25046, 25065, 25855, 25860, 25853, 25848, 25857, 25859, 25852, 26004, 26075, 26330, 26331, 26328, 27333, 27321, 27325, 27361, 27334, 27322, 27318, 27319, 27335, 27316, 27309, 27486, 27593, 27659, 28679, 28684, 28685, 28673, 28677, 28692, 28686, 28671, 28672, 28667, 28710, 28668, 28663, 28682, 29185, 29183, 29177, 29187, 29181, 29558, 29880, 29888, 29877, 29889, 29886, 29878, 29883, 29890, 29972, 29971, 30300, 30308, 30297, 30288, 30291, 30295, 30298, 30374, 30397, 30444, 30658, 30650, 30975, 30988, 30995, 30996, 30985, 30992, 30994, 30993, 31149, 31148, 31327, 31772, 31785, 31769, 31776, 31775, 31789, 31773, 31782, 31784, 31778, 31781, 31792, 32348, 32336, 32342, 32355, 32344, 32354, 32351, 32337, 32352, 32343, 32339, 32693, 32691, 32759, 32760, 32885, 33233, 33234, 33232, 33375, 33374, 34228, 34246, 34240, 34243, 34242, 34227, 34229, 34237, 34247, 34244, 34239, 34251, 34254, 34248, 34245, 34225, 34230, 34258, 34340, 34232, 34231, 34238, 34409, 34791, 34790, 34786, 34779, 34795, 34794, 34789, 34783, 34803, 34788, 34772, 34780, 34771, 34797, 34776, 34787, 34724, 34775, 34777, 34817, 34804, 34792, 34781, 35155, 35147, 35151, 35148, 35142, 35152, 35153, 35145, 35626, 35623, 35619, 35635, 35632, 35637, 35655, 35631, 35644, 35646, 35633, 35621, 35639, 35622, 35638, 35630, 35620, 35643, 35645, 35642, 35906, 35957, 35993, 35992, 35991, 36094, 36100, 36098, 36096, 36444, 36450, 36448, 36439, 36438, 36446, 36453, 36455, 36443, 36442, 36449, 36445, 36457, 36436, 36678, 36679, 36680, 36683, 37160, 37178, 37179, 37182, 37288, 37285, 37287, 37295, 37290, 37813, 37772, 37778, 37815, 37787, 37789, 37769, 37799, 37774, 37802, 37790, 37798, 37781, 37768, 37785, 37791, 37773, 37809, 37777, 37810, 37796, 37800, 37812, 37795, 37797, 38354, 38355, 38353, 38579, 38615, 38618, 24002, 38623, 38616, 38621, 38691, 38690, 38693, 38828, 38830, 38824, 38827, 38820, 38826, 38818, 38821, 38871, 38873, 38870, 38872, 38906, 38992, 38993, 38994, 39096, 39233, 39228, 39226, 39439, 39435, 39433, 39437, 39428, 39441, 39434, 39429, 39431, 39430, 39616, 39644, 39688, 39684, 39685, 39721, 39733, 39754, 39756, 39755, 39879, 39878, 39875, 39871, 39873, 39861, 39864, 39891, 39862, 39876, 39865, 39869, 40284, 40275, 40271, 40266, 40283, 40267, 40281, 40278, 40268, 40279, 40274, 40276, 40287, 40280, 40282, 40590, 40588, 40671, 40705, 40704, 40726, 40741, 40747, 40746, 40745, 40744, 40780, 40789, 20788, 20789, 21142, 21239, 21428, 22187, 22189, 22182, 22183, 22186, 22188, 22746, 22749, 22747, 22802, 23357, 23358, 23359, 24003, 24176, 24511, 25083, 25863, 25872, 25869, 25865, 25868, 25870, 25988, 26078, 26077, 26334, 27367, 27360, 27340, 27345, 27353, 27339, 27359, 27356, 27344, 27371, 27343, 27341, 27358, 27488, 27568, 27660, 28697, 28711, 28704, 28694, 28715, 28705, 28706, 28707, 28713, 28695, 28708, 28700, 28714, 29196, 29194, 29191, 29186, 29189, 29349, 29350, 29348, 29347, 29345, 29899, 29893, 29879, 29891, 29974, 30304, 30665, 30666, 30660, 30705, 31005, 31003, 31009, 31004, 30999, 31006, 31152, 31335, 31336, 31795, 31804, 31801, 31788, 31803, 31980, 31978, 32374, 32373, 32376, 32368, 32375, 32367, 32378, 32370, 32372, 32360, 32587, 32586, 32643, 32646, 32695, 32765, 32766, 32888, 33239, 33237, 33380, 33377, 33379, 34283, 34289, 34285, 34265, 34273, 34280, 34266, 34263, 34284, 34290, 34296, 34264, 34271, 34275, 34268, 34257, 34288, 34278, 34287, 34270, 34274, 34816, 34810, 34819, 34806, 34807, 34825, 34828, 34827, 34822, 34812, 34824, 34815, 34826, 34818, 35170, 35162, 35163, 35159, 35169, 35164, 35160, 35165, 35161, 35208, 35255, 35254, 35318, 35664, 35656, 35658, 35648, 35667, 35670, 35668, 35659, 35669, 35665, 35650, 35666, 35671, 35907, 35959, 35958, 35994, 36102, 36103, 36105, 36268, 36266, 36269, 36267, 36461, 36472, 36467, 36458, 36463, 36475, 36546, 36690, 36689, 36687, 36688, 36691, 36788, 37184, 37183, 37296, 37293, 37854, 37831, 37839, 37826, 37850, 37840, 37881, 37868, 37836, 37849, 37801, 37862, 37834, 37844, 37870, 37859, 37845, 37828, 37838, 37824, 37842, 37863, 38269, 38362, 38363, 38625, 38697, 38699, 38700, 38696, 38694, 38835, 38839, 38838, 38877, 38878, 38879, 39004, 39001, 39005, 38999, 39103, 39101, 39099, 39102, 39240, 39239, 39235, 39334, 39335, 39450, 39445, 39461, 39453, 39460, 39451, 39458, 39456, 39463, 39459, 39454, 39452, 39444, 39618, 39691, 39690, 39694, 39692, 39735, 39914, 39915, 39904, 39902, 39908, 39910, 39906, 39920, 39892, 39895, 39916, 39900, 39897, 39909, 39893, 39905, 39898, 40311, 40321, 40330, 40324, 40328, 40305, 40320, 40312, 40326, 40331, 40332, 40317, 40299, 40308, 40309, 40304, 40297, 40325, 40307, 40315, 40322, 40303, 40313, 40319, 40327, 40296, 40596, 40593, 40640, 40700, 40749, 40768, 40769, 40781, 40790, 40791, 40792, 21303, 22194, 22197, 22195, 22755, 23365, 24006, 24007, 24302, 24303, 24512, 24513, 25081, 25879, 25878, 25877, 25875, 26079, 26344, 26339, 26340, 27379, 27376, 27370, 27368, 27385, 27377, 27374, 27375, 28732, 28725, 28719, 28727, 28724, 28721, 28738, 28728, 28735, 28730, 28729, 28736, 28731, 28723, 28737, 29203, 29204, 29352, 29565, 29564, 29882, 30379, 30378, 30398, 30445, 30668, 30670, 30671, 30669, 30706, 31013, 31011, 31015, 31016, 31012, 31017, 31154, 31342, 31340, 31341, 31479, 31817, 31816, 31818, 31815, 31813, 31982, 32379, 32382, 32385, 32384, 32698, 32767, 32889, 33243, 33241, 33291, 33384, 33385, 34338, 34303, 34305, 34302, 34331, 34304, 34294, 34308, 34313, 34309, 34316, 34301, 34841, 34832, 34833, 34839, 34835, 34838, 35171, 35174, 35257, 35319, 35680, 35690, 35677, 35688, 35683, 35685, 35687, 35693, 36270, 36486, 36488, 36484, 36697, 36694, 36695, 36693, 36696, 36698, 37005, 37187, 37185, 37303, 37301, 37298, 37299, 37899, 37907, 37883, 37920, 37903, 37908, 37886, 37909, 37904, 37928, 37913, 37901, 37877, 37888, 37879, 37895, 37902, 37910, 37906, 37882, 37897, 37880, 37898, 37887, 37884, 37900, 37878, 37905, 37894, 38366, 38368, 38367, 38702, 38703, 38841, 38843, 38909, 38910, 39008, 39010, 39011, 39007, 39105, 39106, 39248, 39246, 39257, 39244, 39243, 39251, 39474, 39476, 39473, 39468, 39466, 39478, 39465, 39470, 39480, 39469, 39623, 39626, 39622, 39696, 39698, 39697, 39947, 39944, 39927, 39941, 39954, 39928, 4e4, 39943, 39950, 39942, 39959, 39956, 39945, 40351, 40345, 40356, 40349, 40338, 40344, 40336, 40347, 40352, 40340, 40348, 40362, 40343, 40353, 40346, 40354, 40360, 40350, 40355, 40383, 40361, 40342, 40358, 40359, 40601, 40603, 40602, 40677, 40676, 40679, 40678, 40752, 40750, 40795, 40800, 40798, 40797, 40793, 40849, 20794, 20793, 21144, 21143, 22211, 22205, 22206, 23368, 23367, 24011, 24015, 24305, 25085, 25883, 27394, 27388, 27395, 27384, 27392, 28739, 28740, 28746, 28744, 28745, 28741, 28742, 29213, 29210, 29209, 29566, 29975, 30314, 30672, 31021, 31025, 31023, 31828, 31827, 31986, 32394, 32391, 32392, 32395, 32390, 32397, 32589, 32699, 32816, 33245, 34328, 34346, 34342, 34335, 34339, 34332, 34329, 34343, 34350, 34337, 34336, 34345, 34334, 34341, 34857, 34845, 34843, 34848, 34852, 34844, 34859, 34890, 35181, 35177, 35182, 35179, 35322, 35705, 35704, 35653, 35706, 35707, 36112, 36116, 36271, 36494, 36492, 36702, 36699, 36701, 37190, 37188, 37189, 37305, 37951, 37947, 37942, 37929, 37949, 37948, 37936, 37945, 37930, 37943, 37932, 37952, 37937, 38373, 38372, 38371, 38709, 38714, 38847, 38881, 39012, 39113, 39110, 39104, 39256, 39254, 39481, 39485, 39494, 39492, 39490, 39489, 39482, 39487, 39629, 39701, 39703, 39704, 39702, 39738, 39762, 39979, 39965, 39964, 39980, 39971, 39976, 39977, 39972, 39969, 40375, 40374, 40380, 40385, 40391, 40394, 40399, 40382, 40389, 40387, 40379, 40373, 40398, 40377, 40378, 40364, 40392, 40369, 40365, 40396, 40371, 40397, 40370, 40570, 40604, 40683, 40686, 40685, 40731, 40728, 40730, 40753, 40782, 40805, 40804, 40850, 20153, 22214, 22213, 22219, 22897, 23371, 23372, 24021, 24017, 24306, 25889, 25888, 25894, 25890, 27403, 27400, 27401, 27661, 28757, 28758, 28759, 28754, 29214, 29215, 29353, 29567, 29912, 29909, 29913, 29911, 30317, 30381, 31029, 31156, 31344, 31345, 31831, 31836, 31833, 31835, 31834, 31988, 31985, 32401, 32591, 32647, 33246, 33387, 34356, 34357, 34355, 34348, 34354, 34358, 34860, 34856, 34854, 34858, 34853, 35185, 35263, 35262, 35323, 35710, 35716, 35714, 35718, 35717, 35711, 36117, 36501, 36500, 36506, 36498, 36496, 36502, 36503, 36704, 36706, 37191, 37964, 37968, 37962, 37963, 37967, 37959, 37957, 37960, 37961, 37958, 38719, 38883, 39018, 39017, 39115, 39252, 39259, 39502, 39507, 39508, 39500, 39503, 39496, 39498, 39497, 39506, 39504, 39632, 39705, 39723, 39739, 39766, 39765, 40006, 40008, 39999, 40004, 39993, 39987, 40001, 39996, 39991, 39988, 39986, 39997, 39990, 40411, 40402, 40414, 40410, 40395, 40400, 40412, 40401, 40415, 40425, 40409, 40408, 40406, 40437, 40405, 40413, 40630, 40688, 40757, 40755, 40754, 40770, 40811, 40853, 40866, 20797, 21145, 22760, 22759, 22898, 23373, 24024, 34863, 24399, 25089, 25091, 25092, 25897, 25893, 26006, 26347, 27409, 27410, 27407, 27594, 28763, 28762, 29218, 29570, 29569, 29571, 30320, 30676, 31847, 31846, 32405, 33388, 34362, 34368, 34361, 34364, 34353, 34363, 34366, 34864, 34866, 34862, 34867, 35190, 35188, 35187, 35326, 35724, 35726, 35723, 35720, 35909, 36121, 36504, 36708, 36707, 37308, 37986, 37973, 37981, 37975, 37982, 38852, 38853, 38912, 39510, 39513, 39710, 39711, 39712, 40018, 40024, 40016, 40010, 40013, 40011, 40021, 40025, 40012, 40014, 40443, 40439, 40431, 40419, 40427, 40440, 40420, 40438, 40417, 40430, 40422, 40434, 40432, 40418, 40428, 40436, 40435, 40424, 40429, 40642, 40656, 40690, 40691, 40710, 40732, 40760, 40759, 40758, 40771, 40783, 40817, 40816, 40814, 40815, 22227, 22221, 23374, 23661, 25901, 26349, 26350, 27411, 28767, 28769, 28765, 28768, 29219, 29915, 29925, 30677, 31032, 31159, 31158, 31850, 32407, 32649, 33389, 34371, 34872, 34871, 34869, 34891, 35732, 35733, 36510, 36511, 36512, 36509, 37310, 37309, 37314, 37995, 37992, 37993, 38629, 38726, 38723, 38727, 38855, 38885, 39518, 39637, 39769, 40035, 40039, 40038, 40034, 40030, 40032, 40450, 40446, 40455, 40451, 40454, 40453, 40448, 40449, 40457, 40447, 40445, 40452, 40608, 40734, 40774, 40820, 40821, 40822, 22228, 25902, 26040, 27416, 27417, 27415, 27418, 28770, 29222, 29354, 30680, 30681, 31033, 31849, 31851, 31990, 32410, 32408, 32411, 32409, 33248, 33249, 34374, 34375, 34376, 35193, 35194, 35196, 35195, 35327, 35736, 35737, 36517, 36516, 36515, 37998, 37997, 37999, 38001, 38003, 38729, 39026, 39263, 40040, 40046, 40045, 40459, 40461, 40464, 40463, 40466, 40465, 40609, 40693, 40713, 40775, 40824, 40827, 40826, 40825, 22302, 28774, 31855, 34876, 36274, 36518, 37315, 38004, 38008, 38006, 38005, 39520, 40052, 40051, 40049, 40053, 40468, 40467, 40694, 40714, 40868, 28776, 28773, 31991, 34410, 34878, 34877, 34879, 35742, 35996, 36521, 36553, 38731, 39027, 39028, 39116, 39265, 39339, 39524, 39526, 39527, 39716, 40469, 40471, 40776, 25095, 27422, 29223, 34380, 36520, 38018, 38016, 38017, 39529, 39528, 39726, 40473, 29225, 34379, 35743, 38019, 40057, 40631, 30325, 39531, 40058, 40477, 28777, 28778, 40612, 40830, 40777, 40856, 30849, 37561, 35023, 22715, 24658, 31911, 23290, 9556, 9574, 9559, 9568, 9580, 9571, 9562, 9577, 9565, 9554, 9572, 9557, 9566, 9578, 9569, 9560, 9575, 9563, 9555, 9573, 9558, 9567, 9579, 9570, 9561, 9576, 9564, 9553, 9552, 9581, 9582, 9584, 9583, 65517, 132423, 37595, 132575, 147397, 34124, 17077, 29679, 20917, 13897, 149826, 166372, 37700, 137691, 33518, 146632, 30780, 26436, 25311, 149811, 166314, 131744, 158643, 135941, 20395, 140525, 20488, 159017, 162436, 144896, 150193, 140563, 20521, 131966, 24484, 131968, 131911, 28379, 132127, 20605, 20737, 13434, 20750, 39020, 14147, 33814, 149924, 132231, 20832, 144308, 20842, 134143, 139516, 131813, 140592, 132494, 143923, 137603, 23426, 34685, 132531, 146585, 20914, 20920, 40244, 20937, 20943, 20945, 15580, 20947, 150182, 20915, 20962, 21314, 20973, 33741, 26942, 145197, 24443, 21003, 21030, 21052, 21173, 21079, 21140, 21177, 21189, 31765, 34114, 21216, 34317, 158483, 21253, 166622, 21833, 28377, 147328, 133460, 147436, 21299, 21316, 134114, 27851, 136998, 26651, 29653, 24650, 16042, 14540, 136936, 29149, 17570, 21357, 21364, 165547, 21374, 21375, 136598, 136723, 30694, 21395, 166555, 21408, 21419, 21422, 29607, 153458, 16217, 29596, 21441, 21445, 27721, 20041, 22526, 21465, 15019, 134031, 21472, 147435, 142755, 21494, 134263, 21523, 28793, 21803, 26199, 27995, 21613, 158547, 134516, 21853, 21647, 21668, 18342, 136973, 134877, 15796, 134477, 166332, 140952, 21831, 19693, 21551, 29719, 21894, 21929, 22021, 137431, 147514, 17746, 148533, 26291, 135348, 22071, 26317, 144010, 26276, 26285, 22093, 22095, 30961, 22257, 38791, 21502, 22272, 22255, 22253, 166758, 13859, 135759, 22342, 147877, 27758, 28811, 22338, 14001, 158846, 22502, 136214, 22531, 136276, 148323, 22566, 150517, 22620, 22698, 13665, 22752, 22748, 135740, 22779, 23551, 22339, 172368, 148088, 37843, 13729, 22815, 26790, 14019, 28249, 136766, 23076, 21843, 136850, 34053, 22985, 134478, 158849, 159018, 137180, 23001, 137211, 137138, 159142, 28017, 137256, 136917, 23033, 159301, 23211, 23139, 14054, 149929, 23159, 14088, 23190, 29797, 23251, 159649, 140628, 15749, 137489, 14130, 136888, 24195, 21200, 23414, 25992, 23420, 162318, 16388, 18525, 131588, 23509, 24928, 137780, 154060, 132517, 23539, 23453, 19728, 23557, 138052, 23571, 29646, 23572, 138405, 158504, 23625, 18653, 23685, 23785, 23791, 23947, 138745, 138807, 23824, 23832, 23878, 138916, 23738, 24023, 33532, 14381, 149761, 139337, 139635, 33415, 14390, 15298, 24110, 27274, 24181, 24186, 148668, 134355, 21414, 20151, 24272, 21416, 137073, 24073, 24308, 164994, 24313, 24315, 14496, 24316, 26686, 37915, 24333, 131521, 194708, 15070, 18606, 135994, 24378, 157832, 140240, 24408, 140401, 24419, 38845, 159342, 24434, 37696, 166454, 24487, 23990, 15711, 152144, 139114, 159992, 140904, 37334, 131742, 166441, 24625, 26245, 137335, 14691, 15815, 13881, 22416, 141236, 31089, 15936, 24734, 24740, 24755, 149890, 149903, 162387, 29860, 20705, 23200, 24932, 33828, 24898, 194726, 159442, 24961, 20980, 132694, 24967, 23466, 147383, 141407, 25043, 166813, 170333, 25040, 14642, 141696, 141505, 24611, 24924, 25886, 25483, 131352, 25285, 137072, 25301, 142861, 25452, 149983, 14871, 25656, 25592, 136078, 137212, 25744, 28554, 142902, 38932, 147596, 153373, 25825, 25829, 38011, 14950, 25658, 14935, 25933, 28438, 150056, 150051, 25989, 25965, 25951, 143486, 26037, 149824, 19255, 26065, 16600, 137257, 26080, 26083, 24543, 144384, 26136, 143863, 143864, 26180, 143780, 143781, 26187, 134773, 26215, 152038, 26227, 26228, 138813, 143921, 165364, 143816, 152339, 30661, 141559, 39332, 26370, 148380, 150049, 15147, 27130, 145346, 26462, 26471, 26466, 147917, 168173, 26583, 17641, 26658, 28240, 37436, 26625, 144358, 159136, 26717, 144495, 27105, 27147, 166623, 26995, 26819, 144845, 26881, 26880, 15666, 14849, 144956, 15232, 26540, 26977, 166474, 17148, 26934, 27032, 15265, 132041, 33635, 20624, 27129, 144985, 139562, 27205, 145155, 27293, 15347, 26545, 27336, 168348, 15373, 27421, 133411, 24798, 27445, 27508, 141261, 28341, 146139, 132021, 137560, 14144, 21537, 146266, 27617, 147196, 27612, 27703, 140427, 149745, 158545, 27738, 33318, 27769, 146876, 17605, 146877, 147876, 149772, 149760, 146633, 14053, 15595, 134450, 39811, 143865, 140433, 32655, 26679, 159013, 159137, 159211, 28054, 27996, 28284, 28420, 149887, 147589, 159346, 34099, 159604, 20935, 27804, 28189, 33838, 166689, 28207, 146991, 29779, 147330, 31180, 28239, 23185, 143435, 28664, 14093, 28573, 146992, 28410, 136343, 147517, 17749, 37872, 28484, 28508, 15694, 28532, 168304, 15675, 28575, 147780, 28627, 147601, 147797, 147513, 147440, 147380, 147775, 20959, 147798, 147799, 147776, 156125, 28747, 28798, 28839, 28801, 28876, 28885, 28886, 28895, 16644, 15848, 29108, 29078, 148087, 28971, 28997, 23176, 29002, 29038, 23708, 148325, 29007, 37730, 148161, 28972, 148570, 150055, 150050, 29114, 166888, 28861, 29198, 37954, 29205, 22801, 37955, 29220, 37697, 153093, 29230, 29248, 149876, 26813, 29269, 29271, 15957, 143428, 26637, 28477, 29314, 29482, 29483, 149539, 165931, 18669, 165892, 29480, 29486, 29647, 29610, 134202, 158254, 29641, 29769, 147938, 136935, 150052, 26147, 14021, 149943, 149901, 150011, 29687, 29717, 26883, 150054, 29753, 132547, 16087, 29788, 141485, 29792, 167602, 29767, 29668, 29814, 33721, 29804, 14128, 29812, 37873, 27180, 29826, 18771, 150156, 147807, 150137, 166799, 23366, 166915, 137374, 29896, 137608, 29966, 29929, 29982, 167641, 137803, 23511, 167596, 37765, 30029, 30026, 30055, 30062, 151426, 16132, 150803, 30094, 29789, 30110, 30132, 30210, 30252, 30289, 30287, 30319, 30326, 156661, 30352, 33263, 14328, 157969, 157966, 30369, 30373, 30391, 30412, 159647, 33890, 151709, 151933, 138780, 30494, 30502, 30528, 25775, 152096, 30552, 144044, 30639, 166244, 166248, 136897, 30708, 30729, 136054, 150034, 26826, 30895, 30919, 30931, 38565, 31022, 153056, 30935, 31028, 30897, 161292, 36792, 34948, 166699, 155779, 140828, 31110, 35072, 26882, 31104, 153687, 31133, 162617, 31036, 31145, 28202, 160038, 16040, 31174, 168205, 31188],
                    "euc-kr": [44034, 44035, 44037, 44038, 44043, 44044, 44045, 44046, 44047, 44056, 44062, 44063, 44065, 44066, 44067, 44069, 44070, 44071, 44072, 44073, 44074, 44075, 44078, 44082, 44083, 44084, null, null, null, null, null, null, 44085, 44086, 44087, 44090, 44091, 44093, 44094, 44095, 44097, 44098, 44099, 44100, 44101, 44102, 44103, 44104, 44105, 44106, 44108, 44110, 44111, 44112, 44113, 44114, 44115, 44117, null, null, null, null, null, null, 44118, 44119, 44121, 44122, 44123, 44125, 44126, 44127, 44128, 44129, 44130, 44131, 44132, 44133, 44134, 44135, 44136, 44137, 44138, 44139, 44140, 44141, 44142, 44143, 44146, 44147, 44149, 44150, 44153, 44155, 44156, 44157, 44158, 44159, 44162, 44167, 44168, 44173, 44174, 44175, 44177, 44178, 44179, 44181, 44182, 44183, 44184, 44185, 44186, 44187, 44190, 44194, 44195, 44196, 44197, 44198, 44199, 44203, 44205, 44206, 44209, 44210, 44211, 44212, 44213, 44214, 44215, 44218, 44222, 44223, 44224, 44226, 44227, 44229, 44230, 44231, 44233, 44234, 44235, 44237, 44238, 44239, 44240, 44241, 44242, 44243, 44244, 44246, 44248, 44249, 44250, 44251, 44252, 44253, 44254, 44255, 44258, 44259, 44261, 44262, 44265, 44267, 44269, 44270, 44274, 44276, 44279, 44280, 44281, 44282, 44283, 44286, 44287, 44289, 44290, 44291, 44293, 44295, 44296, 44297, 44298, 44299, 44302, 44304, 44306, 44307, 44308, 44309, 44310, 44311, 44313, 44314, 44315, 44317, 44318, 44319, 44321, 44322, 44323, 44324, 44325, 44326, 44327, 44328, 44330, 44331, 44334, 44335, 44336, 44337, 44338, 44339, null, null, null, null, null, null, 44342, 44343, 44345, 44346, 44347, 44349, 44350, 44351, 44352, 44353, 44354, 44355, 44358, 44360, 44362, 44363, 44364, 44365, 44366, 44367, 44369, 44370, 44371, 44373, 44374, 44375, null, null, null, null, null, null, 44377, 44378, 44379, 44380, 44381, 44382, 44383, 44384, 44386, 44388, 44389, 44390, 44391, 44392, 44393, 44394, 44395, 44398, 44399, 44401, 44402, 44407, 44408, 44409, 44410, 44414, 44416, 44419, 44420, 44421, 44422, 44423, 44426, 44427, 44429, 44430, 44431, 44433, 44434, 44435, 44436, 44437, 44438, 44439, 44440, 44441, 44442, 44443, 44446, 44447, 44448, 44449, 44450, 44451, 44453, 44454, 44455, 44456, 44457, 44458, 44459, 44460, 44461, 44462, 44463, 44464, 44465, 44466, 44467, 44468, 44469, 44470, 44472, 44473, 44474, 44475, 44476, 44477, 44478, 44479, 44482, 44483, 44485, 44486, 44487, 44489, 44490, 44491, 44492, 44493, 44494, 44495, 44498, 44500, 44501, 44502, 44503, 44504, 44505, 44506, 44507, 44509, 44510, 44511, 44513, 44514, 44515, 44517, 44518, 44519, 44520, 44521, 44522, 44523, 44524, 44525, 44526, 44527, 44528, 44529, 44530, 44531, 44532, 44533, 44534, 44535, 44538, 44539, 44541, 44542, 44546, 44547, 44548, 44549, 44550, 44551, 44554, 44556, 44558, 44559, 44560, 44561, 44562, 44563, 44565, 44566, 44567, 44568, 44569, 44570, 44571, 44572, null, null, null, null, null, null, 44573, 44574, 44575, 44576, 44577, 44578, 44579, 44580, 44581, 44582, 44583, 44584, 44585, 44586, 44587, 44588, 44589, 44590, 44591, 44594, 44595, 44597, 44598, 44601, 44603, 44604, null, null, null, null, null, null, 44605, 44606, 44607, 44610, 44612, 44615, 44616, 44617, 44619, 44623, 44625, 44626, 44627, 44629, 44631, 44632, 44633, 44634, 44635, 44638, 44642, 44643, 44644, 44646, 44647, 44650, 44651, 44653, 44654, 44655, 44657, 44658, 44659, 44660, 44661, 44662, 44663, 44666, 44670, 44671, 44672, 44673, 44674, 44675, 44678, 44679, 44680, 44681, 44682, 44683, 44685, 44686, 44687, 44688, 44689, 44690, 44691, 44692, 44693, 44694, 44695, 44696, 44697, 44698, 44699, 44700, 44701, 44702, 44703, 44704, 44705, 44706, 44707, 44708, 44709, 44710, 44711, 44712, 44713, 44714, 44715, 44716, 44717, 44718, 44719, 44720, 44721, 44722, 44723, 44724, 44725, 44726, 44727, 44728, 44729, 44730, 44731, 44735, 44737, 44738, 44739, 44741, 44742, 44743, 44744, 44745, 44746, 44747, 44750, 44754, 44755, 44756, 44757, 44758, 44759, 44762, 44763, 44765, 44766, 44767, 44768, 44769, 44770, 44771, 44772, 44773, 44774, 44775, 44777, 44778, 44780, 44782, 44783, 44784, 44785, 44786, 44787, 44789, 44790, 44791, 44793, 44794, 44795, 44797, 44798, 44799, 44800, 44801, 44802, 44803, 44804, 44805, null, null, null, null, null, null, 44806, 44809, 44810, 44811, 44812, 44814, 44815, 44817, 44818, 44819, 44820, 44821, 44822, 44823, 44824, 44825, 44826, 44827, 44828, 44829, 44830, 44831, 44832, 44833, 44834, 44835, null, null, null, null, null, null, 44836, 44837, 44838, 44839, 44840, 44841, 44842, 44843, 44846, 44847, 44849, 44851, 44853, 44854, 44855, 44856, 44857, 44858, 44859, 44862, 44864, 44868, 44869, 44870, 44871, 44874, 44875, 44876, 44877, 44878, 44879, 44881, 44882, 44883, 44884, 44885, 44886, 44887, 44888, 44889, 44890, 44891, 44894, 44895, 44896, 44897, 44898, 44899, 44902, 44903, 44904, 44905, 44906, 44907, 44908, 44909, 44910, 44911, 44912, 44913, 44914, 44915, 44916, 44917, 44918, 44919, 44920, 44922, 44923, 44924, 44925, 44926, 44927, 44929, 44930, 44931, 44933, 44934, 44935, 44937, 44938, 44939, 44940, 44941, 44942, 44943, 44946, 44947, 44948, 44950, 44951, 44952, 44953, 44954, 44955, 44957, 44958, 44959, 44960, 44961, 44962, 44963, 44964, 44965, 44966, 44967, 44968, 44969, 44970, 44971, 44972, 44973, 44974, 44975, 44976, 44977, 44978, 44979, 44980, 44981, 44982, 44983, 44986, 44987, 44989, 44990, 44991, 44993, 44994, 44995, 44996, 44997, 44998, 45002, 45004, 45007, 45008, 45009, 45010, 45011, 45013, 45014, 45015, 45016, 45017, 45018, 45019, 45021, 45022, 45023, 45024, 45025, null, null, null, null, null, null, 45026, 45027, 45028, 45029, 45030, 45031, 45034, 45035, 45036, 45037, 45038, 45039, 45042, 45043, 45045, 45046, 45047, 45049, 45050, 45051, 45052, 45053, 45054, 45055, 45058, 45059, null, null, null, null, null, null, 45061, 45062, 45063, 45064, 45065, 45066, 45067, 45069, 45070, 45071, 45073, 45074, 45075, 45077, 45078, 45079, 45080, 45081, 45082, 45083, 45086, 45087, 45088, 45089, 45090, 45091, 45092, 45093, 45094, 45095, 45097, 45098, 45099, 45100, 45101, 45102, 45103, 45104, 45105, 45106, 45107, 45108, 45109, 45110, 45111, 45112, 45113, 45114, 45115, 45116, 45117, 45118, 45119, 45120, 45121, 45122, 45123, 45126, 45127, 45129, 45131, 45133, 45135, 45136, 45137, 45138, 45142, 45144, 45146, 45147, 45148, 45150, 45151, 45152, 45153, 45154, 45155, 45156, 45157, 45158, 45159, 45160, 45161, 45162, 45163, 45164, 45165, 45166, 45167, 45168, 45169, 45170, 45171, 45172, 45173, 45174, 45175, 45176, 45177, 45178, 45179, 45182, 45183, 45185, 45186, 45187, 45189, 45190, 45191, 45192, 45193, 45194, 45195, 45198, 45200, 45202, 45203, 45204, 45205, 45206, 45207, 45211, 45213, 45214, 45219, 45220, 45221, 45222, 45223, 45226, 45232, 45234, 45238, 45239, 45241, 45242, 45243, 45245, 45246, 45247, 45248, 45249, 45250, 45251, 45254, 45258, 45259, 45260, 45261, 45262, 45263, 45266, null, null, null, null, null, null, 45267, 45269, 45270, 45271, 45273, 45274, 45275, 45276, 45277, 45278, 45279, 45281, 45282, 45283, 45284, 45286, 45287, 45288, 45289, 45290, 45291, 45292, 45293, 45294, 45295, 45296, null, null, null, null, null, null, 45297, 45298, 45299, 45300, 45301, 45302, 45303, 45304, 45305, 45306, 45307, 45308, 45309, 45310, 45311, 45312, 45313, 45314, 45315, 45316, 45317, 45318, 45319, 45322, 45325, 45326, 45327, 45329, 45332, 45333, 45334, 45335, 45338, 45342, 45343, 45344, 45345, 45346, 45350, 45351, 45353, 45354, 45355, 45357, 45358, 45359, 45360, 45361, 45362, 45363, 45366, 45370, 45371, 45372, 45373, 45374, 45375, 45378, 45379, 45381, 45382, 45383, 45385, 45386, 45387, 45388, 45389, 45390, 45391, 45394, 45395, 45398, 45399, 45401, 45402, 45403, 45405, 45406, 45407, 45409, 45410, 45411, 45412, 45413, 45414, 45415, 45416, 45417, 45418, 45419, 45420, 45421, 45422, 45423, 45424, 45425, 45426, 45427, 45428, 45429, 45430, 45431, 45434, 45435, 45437, 45438, 45439, 45441, 45443, 45444, 45445, 45446, 45447, 45450, 45452, 45454, 45455, 45456, 45457, 45461, 45462, 45463, 45465, 45466, 45467, 45469, 45470, 45471, 45472, 45473, 45474, 45475, 45476, 45477, 45478, 45479, 45481, 45482, 45483, 45484, 45485, 45486, 45487, 45488, 45489, 45490, 45491, 45492, 45493, 45494, 45495, 45496, null, null, null, null, null, null, 45497, 45498, 45499, 45500, 45501, 45502, 45503, 45504, 45505, 45506, 45507, 45508, 45509, 45510, 45511, 45512, 45513, 45514, 45515, 45517, 45518, 45519, 45521, 45522, 45523, 45525, null, null, null, null, null, null, 45526, 45527, 45528, 45529, 45530, 45531, 45534, 45536, 45537, 45538, 45539, 45540, 45541, 45542, 45543, 45546, 45547, 45549, 45550, 45551, 45553, 45554, 45555, 45556, 45557, 45558, 45559, 45560, 45562, 45564, 45566, 45567, 45568, 45569, 45570, 45571, 45574, 45575, 45577, 45578, 45581, 45582, 45583, 45584, 45585, 45586, 45587, 45590, 45592, 45594, 45595, 45596, 45597, 45598, 45599, 45601, 45602, 45603, 45604, 45605, 45606, 45607, 45608, 45609, 45610, 45611, 45612, 45613, 45614, 45615, 45616, 45617, 45618, 45619, 45621, 45622, 45623, 45624, 45625, 45626, 45627, 45629, 45630, 45631, 45632, 45633, 45634, 45635, 45636, 45637, 45638, 45639, 45640, 45641, 45642, 45643, 45644, 45645, 45646, 45647, 45648, 45649, 45650, 45651, 45652, 45653, 45654, 45655, 45657, 45658, 45659, 45661, 45662, 45663, 45665, 45666, 45667, 45668, 45669, 45670, 45671, 45674, 45675, 45676, 45677, 45678, 45679, 45680, 45681, 45682, 45683, 45686, 45687, 45688, 45689, 45690, 45691, 45693, 45694, 45695, 45696, 45697, 45698, 45699, 45702, 45703, 45704, 45706, 45707, 45708, 45709, 45710, null, null, null, null, null, null, 45711, 45714, 45715, 45717, 45718, 45719, 45723, 45724, 45725, 45726, 45727, 45730, 45732, 45735, 45736, 45737, 45739, 45741, 45742, 45743, 45745, 45746, 45747, 45749, 45750, 45751, null, null, null, null, null, null, 45752, 45753, 45754, 45755, 45756, 45757, 45758, 45759, 45760, 45761, 45762, 45763, 45764, 45765, 45766, 45767, 45770, 45771, 45773, 45774, 45775, 45777, 45779, 45780, 45781, 45782, 45783, 45786, 45788, 45790, 45791, 45792, 45793, 45795, 45799, 45801, 45802, 45808, 45809, 45810, 45814, 45820, 45821, 45822, 45826, 45827, 45829, 45830, 45831, 45833, 45834, 45835, 45836, 45837, 45838, 45839, 45842, 45846, 45847, 45848, 45849, 45850, 45851, 45853, 45854, 45855, 45856, 45857, 45858, 45859, 45860, 45861, 45862, 45863, 45864, 45865, 45866, 45867, 45868, 45869, 45870, 45871, 45872, 45873, 45874, 45875, 45876, 45877, 45878, 45879, 45880, 45881, 45882, 45883, 45884, 45885, 45886, 45887, 45888, 45889, 45890, 45891, 45892, 45893, 45894, 45895, 45896, 45897, 45898, 45899, 45900, 45901, 45902, 45903, 45904, 45905, 45906, 45907, 45911, 45913, 45914, 45917, 45920, 45921, 45922, 45923, 45926, 45928, 45930, 45932, 45933, 45935, 45938, 45939, 45941, 45942, 45943, 45945, 45946, 45947, 45948, 45949, 45950, 45951, 45954, 45958, 45959, 45960, 45961, 45962, 45963, 45965, null, null, null, null, null, null, 45966, 45967, 45969, 45970, 45971, 45973, 45974, 45975, 45976, 45977, 45978, 45979, 45980, 45981, 45982, 45983, 45986, 45987, 45988, 45989, 45990, 45991, 45993, 45994, 45995, 45997, null, null, null, null, null, null, 45998, 45999, 46e3, 46001, 46002, 46003, 46004, 46005, 46006, 46007, 46008, 46009, 46010, 46011, 46012, 46013, 46014, 46015, 46016, 46017, 46018, 46019, 46022, 46023, 46025, 46026, 46029, 46031, 46033, 46034, 46035, 46038, 46040, 46042, 46044, 46046, 46047, 46049, 46050, 46051, 46053, 46054, 46055, 46057, 46058, 46059, 46060, 46061, 46062, 46063, 46064, 46065, 46066, 46067, 46068, 46069, 46070, 46071, 46072, 46073, 46074, 46075, 46077, 46078, 46079, 46080, 46081, 46082, 46083, 46084, 46085, 46086, 46087, 46088, 46089, 46090, 46091, 46092, 46093, 46094, 46095, 46097, 46098, 46099, 46100, 46101, 46102, 46103, 46105, 46106, 46107, 46109, 46110, 46111, 46113, 46114, 46115, 46116, 46117, 46118, 46119, 46122, 46124, 46125, 46126, 46127, 46128, 46129, 46130, 46131, 46133, 46134, 46135, 46136, 46137, 46138, 46139, 46140, 46141, 46142, 46143, 46144, 46145, 46146, 46147, 46148, 46149, 46150, 46151, 46152, 46153, 46154, 46155, 46156, 46157, 46158, 46159, 46162, 46163, 46165, 46166, 46167, 46169, 46170, 46171, 46172, 46173, 46174, 46175, 46178, 46180, 46182, null, null, null, null, null, null, 46183, 46184, 46185, 46186, 46187, 46189, 46190, 46191, 46192, 46193, 46194, 46195, 46196, 46197, 46198, 46199, 46200, 46201, 46202, 46203, 46204, 46205, 46206, 46207, 46209, 46210, null, null, null, null, null, null, 46211, 46212, 46213, 46214, 46215, 46217, 46218, 46219, 46220, 46221, 46222, 46223, 46224, 46225, 46226, 46227, 46228, 46229, 46230, 46231, 46232, 46233, 46234, 46235, 46236, 46238, 46239, 46240, 46241, 46242, 46243, 46245, 46246, 46247, 46249, 46250, 46251, 46253, 46254, 46255, 46256, 46257, 46258, 46259, 46260, 46262, 46264, 46266, 46267, 46268, 46269, 46270, 46271, 46273, 46274, 46275, 46277, 46278, 46279, 46281, 46282, 46283, 46284, 46285, 46286, 46287, 46289, 46290, 46291, 46292, 46294, 46295, 46296, 46297, 46298, 46299, 46302, 46303, 46305, 46306, 46309, 46311, 46312, 46313, 46314, 46315, 46318, 46320, 46322, 46323, 46324, 46325, 46326, 46327, 46329, 46330, 46331, 46332, 46333, 46334, 46335, 46336, 46337, 46338, 46339, 46340, 46341, 46342, 46343, 46344, 46345, 46346, 46347, 46348, 46349, 46350, 46351, 46352, 46353, 46354, 46355, 46358, 46359, 46361, 46362, 46365, 46366, 46367, 46368, 46369, 46370, 46371, 46374, 46379, 46380, 46381, 46382, 46383, 46386, 46387, 46389, 46390, 46391, 46393, 46394, 46395, 46396, 46397, 46398, 46399, 46402, 46406, null, null, null, null, null, null, 46407, 46408, 46409, 46410, 46414, 46415, 46417, 46418, 46419, 46421, 46422, 46423, 46424, 46425, 46426, 46427, 46430, 46434, 46435, 46436, 46437, 46438, 46439, 46440, 46441, 46442, null, null, null, null, null, null, 46443, 46444, 46445, 46446, 46447, 46448, 46449, 46450, 46451, 46452, 46453, 46454, 46455, 46456, 46457, 46458, 46459, 46460, 46461, 46462, 46463, 46464, 46465, 46466, 46467, 46468, 46469, 46470, 46471, 46472, 46473, 46474, 46475, 46476, 46477, 46478, 46479, 46480, 46481, 46482, 46483, 46484, 46485, 46486, 46487, 46488, 46489, 46490, 46491, 46492, 46493, 46494, 46495, 46498, 46499, 46501, 46502, 46503, 46505, 46508, 46509, 46510, 46511, 46514, 46518, 46519, 46520, 46521, 46522, 46526, 46527, 46529, 46530, 46531, 46533, 46534, 46535, 46536, 46537, 46538, 46539, 46542, 46546, 46547, 46548, 46549, 46550, 46551, 46553, 46554, 46555, 46556, 46557, 46558, 46559, 46560, 46561, 46562, 46563, 46564, 46565, 46566, 46567, 46568, 46569, 46570, 46571, 46573, 46574, 46575, 46576, 46577, 46578, 46579, 46580, 46581, 46582, 46583, 46584, 46585, 46586, 46587, 46588, 46589, 46590, 46591, 46592, 46593, 46594, 46595, 46596, 46597, 46598, 46599, 46600, 46601, 46602, 46603, 46604, 46605, 46606, 46607, 46610, 46611, 46613, 46614, 46615, 46617, 46618, 46619, 46620, 46621, null, null, null, null, null, null, 46622, 46623, 46624, 46625, 46626, 46627, 46628, 46630, 46631, 46632, 46633, 46634, 46635, 46637, 46638, 46639, 46640, 46641, 46642, 46643, 46645, 46646, 46647, 46648, 46649, 46650, null, null, null, null, null, null, 46651, 46652, 46653, 46654, 46655, 46656, 46657, 46658, 46659, 46660, 46661, 46662, 46663, 46665, 46666, 46667, 46668, 46669, 46670, 46671, 46672, 46673, 46674, 46675, 46676, 46677, 46678, 46679, 46680, 46681, 46682, 46683, 46684, 46685, 46686, 46687, 46688, 46689, 46690, 46691, 46693, 46694, 46695, 46697, 46698, 46699, 46700, 46701, 46702, 46703, 46704, 46705, 46706, 46707, 46708, 46709, 46710, 46711, 46712, 46713, 46714, 46715, 46716, 46717, 46718, 46719, 46720, 46721, 46722, 46723, 46724, 46725, 46726, 46727, 46728, 46729, 46730, 46731, 46732, 46733, 46734, 46735, 46736, 46737, 46738, 46739, 46740, 46741, 46742, 46743, 46744, 46745, 46746, 46747, 46750, 46751, 46753, 46754, 46755, 46757, 46758, 46759, 46760, 46761, 46762, 46765, 46766, 46767, 46768, 46770, 46771, 46772, 46773, 46774, 46775, 46776, 46777, 46778, 46779, 46780, 46781, 46782, 46783, 46784, 46785, 46786, 46787, 46788, 46789, 46790, 46791, 46792, 46793, 46794, 46795, 46796, 46797, 46798, 46799, 46800, 46801, 46802, 46803, 46805, 46806, 46807, 46808, 46809, 46810, 46811, 46812, 46813, null, null, null, null, null, null, 46814, 46815, 46816, 46817, 46818, 46819, 46820, 46821, 46822, 46823, 46824, 46825, 46826, 46827, 46828, 46829, 46830, 46831, 46833, 46834, 46835, 46837, 46838, 46839, 46841, 46842, null, null, null, null, null, null, 46843, 46844, 46845, 46846, 46847, 46850, 46851, 46852, 46854, 46855, 46856, 46857, 46858, 46859, 46860, 46861, 46862, 46863, 46864, 46865, 46866, 46867, 46868, 46869, 46870, 46871, 46872, 46873, 46874, 46875, 46876, 46877, 46878, 46879, 46880, 46881, 46882, 46883, 46884, 46885, 46886, 46887, 46890, 46891, 46893, 46894, 46897, 46898, 46899, 46900, 46901, 46902, 46903, 46906, 46908, 46909, 46910, 46911, 46912, 46913, 46914, 46915, 46917, 46918, 46919, 46921, 46922, 46923, 46925, 46926, 46927, 46928, 46929, 46930, 46931, 46934, 46935, 46936, 46937, 46938, 46939, 46940, 46941, 46942, 46943, 46945, 46946, 46947, 46949, 46950, 46951, 46953, 46954, 46955, 46956, 46957, 46958, 46959, 46962, 46964, 46966, 46967, 46968, 46969, 46970, 46971, 46974, 46975, 46977, 46978, 46979, 46981, 46982, 46983, 46984, 46985, 46986, 46987, 46990, 46995, 46996, 46997, 47002, 47003, 47005, 47006, 47007, 47009, 47010, 47011, 47012, 47013, 47014, 47015, 47018, 47022, 47023, 47024, 47025, 47026, 47027, 47030, 47031, 47033, 47034, 47035, 47036, 47037, 47038, 47039, 47040, 47041, null, null, null, null, null, null, 47042, 47043, 47044, 47045, 47046, 47048, 47050, 47051, 47052, 47053, 47054, 47055, 47056, 47057, 47058, 47059, 47060, 47061, 47062, 47063, 47064, 47065, 47066, 47067, 47068, 47069, null, null, null, null, null, null, 47070, 47071, 47072, 47073, 47074, 47075, 47076, 47077, 47078, 47079, 47080, 47081, 47082, 47083, 47086, 47087, 47089, 47090, 47091, 47093, 47094, 47095, 47096, 47097, 47098, 47099, 47102, 47106, 47107, 47108, 47109, 47110, 47114, 47115, 47117, 47118, 47119, 47121, 47122, 47123, 47124, 47125, 47126, 47127, 47130, 47132, 47134, 47135, 47136, 47137, 47138, 47139, 47142, 47143, 47145, 47146, 47147, 47149, 47150, 47151, 47152, 47153, 47154, 47155, 47158, 47162, 47163, 47164, 47165, 47166, 47167, 47169, 47170, 47171, 47173, 47174, 47175, 47176, 47177, 47178, 47179, 47180, 47181, 47182, 47183, 47184, 47186, 47188, 47189, 47190, 47191, 47192, 47193, 47194, 47195, 47198, 47199, 47201, 47202, 47203, 47205, 47206, 47207, 47208, 47209, 47210, 47211, 47214, 47216, 47218, 47219, 47220, 47221, 47222, 47223, 47225, 47226, 47227, 47229, 47230, 47231, 47232, 47233, 47234, 47235, 47236, 47237, 47238, 47239, 47240, 47241, 47242, 47243, 47244, 47246, 47247, 47248, 47249, 47250, 47251, 47252, 47253, 47254, 47255, 47256, 47257, 47258, 47259, 47260, 47261, 47262, 47263, null, null, null, null, null, null, 47264, 47265, 47266, 47267, 47268, 47269, 47270, 47271, 47273, 47274, 47275, 47276, 47277, 47278, 47279, 47281, 47282, 47283, 47285, 47286, 47287, 47289, 47290, 47291, 47292, 47293, null, null, null, null, null, null, 47294, 47295, 47298, 47300, 47302, 47303, 47304, 47305, 47306, 47307, 47309, 47310, 47311, 47313, 47314, 47315, 47317, 47318, 47319, 47320, 47321, 47322, 47323, 47324, 47326, 47328, 47330, 47331, 47332, 47333, 47334, 47335, 47338, 47339, 47341, 47342, 47343, 47345, 47346, 47347, 47348, 47349, 47350, 47351, 47354, 47356, 47358, 47359, 47360, 47361, 47362, 47363, 47365, 47366, 47367, 47368, 47369, 47370, 47371, 47372, 47373, 47374, 47375, 47376, 47377, 47378, 47379, 47380, 47381, 47382, 47383, 47385, 47386, 47387, 47388, 47389, 47390, 47391, 47393, 47394, 47395, 47396, 47397, 47398, 47399, 47400, 47401, 47402, 47403, 47404, 47405, 47406, 47407, 47408, 47409, 47410, 47411, 47412, 47413, 47414, 47415, 47416, 47417, 47418, 47419, 47422, 47423, 47425, 47426, 47427, 47429, 47430, 47431, 47432, 47433, 47434, 47435, 47437, 47438, 47440, 47442, 47443, 47444, 47445, 47446, 47447, 47450, 47451, 47453, 47454, 47455, 47457, 47458, 47459, 47460, 47461, 47462, 47463, 47466, 47468, 47470, 47471, 47472, 47473, 47474, 47475, 47478, 47479, 47481, 47482, 47483, 47485, null, null, null, null, null, null, 47486, 47487, 47488, 47489, 47490, 47491, 47494, 47496, 47499, 47500, 47503, 47504, 47505, 47506, 47507, 47508, 47509, 47510, 47511, 47512, 47513, 47514, 47515, 47516, 47517, 47518, null, null, null, null, null, null, 47519, 47520, 47521, 47522, 47523, 47524, 47525, 47526, 47527, 47528, 47529, 47530, 47531, 47534, 47535, 47537, 47538, 47539, 47541, 47542, 47543, 47544, 47545, 47546, 47547, 47550, 47552, 47554, 47555, 47556, 47557, 47558, 47559, 47562, 47563, 47565, 47571, 47572, 47573, 47574, 47575, 47578, 47580, 47583, 47584, 47586, 47590, 47591, 47593, 47594, 47595, 47597, 47598, 47599, 47600, 47601, 47602, 47603, 47606, 47611, 47612, 47613, 47614, 47615, 47618, 47619, 47620, 47621, 47622, 47623, 47625, 47626, 47627, 47628, 47629, 47630, 47631, 47632, 47633, 47634, 47635, 47636, 47638, 47639, 47640, 47641, 47642, 47643, 47644, 47645, 47646, 47647, 47648, 47649, 47650, 47651, 47652, 47653, 47654, 47655, 47656, 47657, 47658, 47659, 47660, 47661, 47662, 47663, 47664, 47665, 47666, 47667, 47668, 47669, 47670, 47671, 47674, 47675, 47677, 47678, 47679, 47681, 47683, 47684, 47685, 47686, 47687, 47690, 47692, 47695, 47696, 47697, 47698, 47702, 47703, 47705, 47706, 47707, 47709, 47710, 47711, 47712, 47713, 47714, 47715, 47718, 47722, 47723, 47724, 47725, 47726, 47727, null, null, null, null, null, null, 47730, 47731, 47733, 47734, 47735, 47737, 47738, 47739, 47740, 47741, 47742, 47743, 47744, 47745, 47746, 47750, 47752, 47753, 47754, 47755, 47757, 47758, 47759, 47760, 47761, 47762, null, null, null, null, null, null, 47763, 47764, 47765, 47766, 47767, 47768, 47769, 47770, 47771, 47772, 47773, 47774, 47775, 47776, 47777, 47778, 47779, 47780, 47781, 47782, 47783, 47786, 47789, 47790, 47791, 47793, 47795, 47796, 47797, 47798, 47799, 47802, 47804, 47806, 47807, 47808, 47809, 47810, 47811, 47813, 47814, 47815, 47817, 47818, 47819, 47820, 47821, 47822, 47823, 47824, 47825, 47826, 47827, 47828, 47829, 47830, 47831, 47834, 47835, 47836, 47837, 47838, 47839, 47840, 47841, 47842, 47843, 47844, 47845, 47846, 47847, 47848, 47849, 47850, 47851, 47852, 47853, 47854, 47855, 47856, 47857, 47858, 47859, 47860, 47861, 47862, 47863, 47864, 47865, 47866, 47867, 47869, 47870, 47871, 47873, 47874, 47875, 47877, 47878, 47879, 47880, 47881, 47882, 47883, 47884, 47886, 47888, 47890, 47891, 47892, 47893, 47894, 47895, 47897, 47898, 47899, 47901, 47902, 47903, 47905, 47906, 47907, 47908, 47909, 47910, 47911, 47912, 47914, 47916, 47917, 47918, 47919, 47920, 47921, 47922, 47923, 47927, 47929, 47930, 47935, 47936, 47937, 47938, 47939, 47942, 47944, 47946, 47947, 47948, 47950, 47953, 47954, null, null, null, null, null, null, 47955, 47957, 47958, 47959, 47961, 47962, 47963, 47964, 47965, 47966, 47967, 47968, 47970, 47972, 47973, 47974, 47975, 47976, 47977, 47978, 47979, 47981, 47982, 47983, 47984, 47985, null, null, null, null, null, null, 47986, 47987, 47988, 47989, 47990, 47991, 47992, 47993, 47994, 47995, 47996, 47997, 47998, 47999, 48e3, 48001, 48002, 48003, 48004, 48005, 48006, 48007, 48009, 48010, 48011, 48013, 48014, 48015, 48017, 48018, 48019, 48020, 48021, 48022, 48023, 48024, 48025, 48026, 48027, 48028, 48029, 48030, 48031, 48032, 48033, 48034, 48035, 48037, 48038, 48039, 48041, 48042, 48043, 48045, 48046, 48047, 48048, 48049, 48050, 48051, 48053, 48054, 48056, 48057, 48058, 48059, 48060, 48061, 48062, 48063, 48065, 48066, 48067, 48069, 48070, 48071, 48073, 48074, 48075, 48076, 48077, 48078, 48079, 48081, 48082, 48084, 48085, 48086, 48087, 48088, 48089, 48090, 48091, 48092, 48093, 48094, 48095, 48096, 48097, 48098, 48099, 48100, 48101, 48102, 48103, 48104, 48105, 48106, 48107, 48108, 48109, 48110, 48111, 48112, 48113, 48114, 48115, 48116, 48117, 48118, 48119, 48122, 48123, 48125, 48126, 48129, 48131, 48132, 48133, 48134, 48135, 48138, 48142, 48144, 48146, 48147, 48153, 48154, 48160, 48161, 48162, 48163, 48166, 48168, 48170, 48171, 48172, 48174, 48175, 48178, 48179, 48181, null, null, null, null, null, null, 48182, 48183, 48185, 48186, 48187, 48188, 48189, 48190, 48191, 48194, 48198, 48199, 48200, 48202, 48203, 48206, 48207, 48209, 48210, 48211, 48212, 48213, 48214, 48215, 48216, 48217, null, null, null, null, null, null, 48218, 48219, 48220, 48222, 48223, 48224, 48225, 48226, 48227, 48228, 48229, 48230, 48231, 48232, 48233, 48234, 48235, 48236, 48237, 48238, 48239, 48240, 48241, 48242, 48243, 48244, 48245, 48246, 48247, 48248, 48249, 48250, 48251, 48252, 48253, 48254, 48255, 48256, 48257, 48258, 48259, 48262, 48263, 48265, 48266, 48269, 48271, 48272, 48273, 48274, 48275, 48278, 48280, 48283, 48284, 48285, 48286, 48287, 48290, 48291, 48293, 48294, 48297, 48298, 48299, 48300, 48301, 48302, 48303, 48306, 48310, 48311, 48312, 48313, 48314, 48315, 48318, 48319, 48321, 48322, 48323, 48325, 48326, 48327, 48328, 48329, 48330, 48331, 48332, 48334, 48338, 48339, 48340, 48342, 48343, 48345, 48346, 48347, 48349, 48350, 48351, 48352, 48353, 48354, 48355, 48356, 48357, 48358, 48359, 48360, 48361, 48362, 48363, 48364, 48365, 48366, 48367, 48368, 48369, 48370, 48371, 48375, 48377, 48378, 48379, 48381, 48382, 48383, 48384, 48385, 48386, 48387, 48390, 48392, 48394, 48395, 48396, 48397, 48398, 48399, 48401, 48402, 48403, 48405, 48406, 48407, 48408, 48409, 48410, 48411, 48412, 48413, null, null, null, null, null, null, 48414, 48415, 48416, 48417, 48418, 48419, 48421, 48422, 48423, 48424, 48425, 48426, 48427, 48429, 48430, 48431, 48432, 48433, 48434, 48435, 48436, 48437, 48438, 48439, 48440, 48441, null, null, null, null, null, null, 48442, 48443, 48444, 48445, 48446, 48447, 48449, 48450, 48451, 48452, 48453, 48454, 48455, 48458, 48459, 48461, 48462, 48463, 48465, 48466, 48467, 48468, 48469, 48470, 48471, 48474, 48475, 48476, 48477, 48478, 48479, 48480, 48481, 48482, 48483, 48485, 48486, 48487, 48489, 48490, 48491, 48492, 48493, 48494, 48495, 48496, 48497, 48498, 48499, 48500, 48501, 48502, 48503, 48504, 48505, 48506, 48507, 48508, 48509, 48510, 48511, 48514, 48515, 48517, 48518, 48523, 48524, 48525, 48526, 48527, 48530, 48532, 48534, 48535, 48536, 48539, 48541, 48542, 48543, 48544, 48545, 48546, 48547, 48549, 48550, 48551, 48552, 48553, 48554, 48555, 48556, 48557, 48558, 48559, 48561, 48562, 48563, 48564, 48565, 48566, 48567, 48569, 48570, 48571, 48572, 48573, 48574, 48575, 48576, 48577, 48578, 48579, 48580, 48581, 48582, 48583, 48584, 48585, 48586, 48587, 48588, 48589, 48590, 48591, 48592, 48593, 48594, 48595, 48598, 48599, 48601, 48602, 48603, 48605, 48606, 48607, 48608, 48609, 48610, 48611, 48612, 48613, 48614, 48615, 48616, 48618, 48619, 48620, 48621, 48622, 48623, 48625, null, null, null, null, null, null, 48626, 48627, 48629, 48630, 48631, 48633, 48634, 48635, 48636, 48637, 48638, 48639, 48641, 48642, 48644, 48646, 48647, 48648, 48649, 48650, 48651, 48654, 48655, 48657, 48658, 48659, null, null, null, null, null, null, 48661, 48662, 48663, 48664, 48665, 48666, 48667, 48670, 48672, 48673, 48674, 48675, 48676, 48677, 48678, 48679, 48680, 48681, 48682, 48683, 48684, 48685, 48686, 48687, 48688, 48689, 48690, 48691, 48692, 48693, 48694, 48695, 48696, 48697, 48698, 48699, 48700, 48701, 48702, 48703, 48704, 48705, 48706, 48707, 48710, 48711, 48713, 48714, 48715, 48717, 48719, 48720, 48721, 48722, 48723, 48726, 48728, 48732, 48733, 48734, 48735, 48738, 48739, 48741, 48742, 48743, 48745, 48747, 48748, 48749, 48750, 48751, 48754, 48758, 48759, 48760, 48761, 48762, 48766, 48767, 48769, 48770, 48771, 48773, 48774, 48775, 48776, 48777, 48778, 48779, 48782, 48786, 48787, 48788, 48789, 48790, 48791, 48794, 48795, 48796, 48797, 48798, 48799, 48800, 48801, 48802, 48803, 48804, 48805, 48806, 48807, 48809, 48810, 48811, 48812, 48813, 48814, 48815, 48816, 48817, 48818, 48819, 48820, 48821, 48822, 48823, 48824, 48825, 48826, 48827, 48828, 48829, 48830, 48831, 48832, 48833, 48834, 48835, 48836, 48837, 48838, 48839, 48840, 48841, 48842, 48843, 48844, 48845, 48846, 48847, 48850, 48851, null, null, null, null, null, null, 48853, 48854, 48857, 48858, 48859, 48860, 48861, 48862, 48863, 48865, 48866, 48870, 48871, 48872, 48873, 48874, 48875, 48877, 48878, 48879, 48880, 48881, 48882, 48883, 48884, 48885, null, null, null, null, null, null, 48886, 48887, 48888, 48889, 48890, 48891, 48892, 48893, 48894, 48895, 48896, 48898, 48899, 48900, 48901, 48902, 48903, 48906, 48907, 48908, 48909, 48910, 48911, 48912, 48913, 48914, 48915, 48916, 48917, 48918, 48919, 48922, 48926, 48927, 48928, 48929, 48930, 48931, 48932, 48933, 48934, 48935, 48936, 48937, 48938, 48939, 48940, 48941, 48942, 48943, 48944, 48945, 48946, 48947, 48948, 48949, 48950, 48951, 48952, 48953, 48954, 48955, 48956, 48957, 48958, 48959, 48962, 48963, 48965, 48966, 48967, 48969, 48970, 48971, 48972, 48973, 48974, 48975, 48978, 48979, 48980, 48982, 48983, 48984, 48985, 48986, 48987, 48988, 48989, 48990, 48991, 48992, 48993, 48994, 48995, 48996, 48997, 48998, 48999, 49e3, 49001, 49002, 49003, 49004, 49005, 49006, 49007, 49008, 49009, 49010, 49011, 49012, 49013, 49014, 49015, 49016, 49017, 49018, 49019, 49020, 49021, 49022, 49023, 49024, 49025, 49026, 49027, 49028, 49029, 49030, 49031, 49032, 49033, 49034, 49035, 49036, 49037, 49038, 49039, 49040, 49041, 49042, 49043, 49045, 49046, 49047, 49048, 49049, 49050, 49051, 49052, 49053, null, null, null, null, null, null, 49054, 49055, 49056, 49057, 49058, 49059, 49060, 49061, 49062, 49063, 49064, 49065, 49066, 49067, 49068, 49069, 49070, 49071, 49073, 49074, 49075, 49076, 49077, 49078, 49079, 49080, null, null, null, null, null, null, 49081, 49082, 49083, 49084, 49085, 49086, 49087, 49088, 49089, 49090, 49091, 49092, 49094, 49095, 49096, 49097, 49098, 49099, 49102, 49103, 49105, 49106, 49107, 49109, 49110, 49111, 49112, 49113, 49114, 49115, 49117, 49118, 49120, 49122, 49123, 49124, 49125, 49126, 49127, 49128, 49129, 49130, 49131, 49132, 49133, 49134, 49135, 49136, 49137, 49138, 49139, 49140, 49141, 49142, 49143, 49144, 49145, 49146, 49147, 49148, 49149, 49150, 49151, 49152, 49153, 49154, 49155, 49156, 49157, 49158, 49159, 49160, 49161, 49162, 49163, 49164, 49165, 49166, 49167, 49168, 49169, 49170, 49171, 49172, 49173, 49174, 49175, 49176, 49177, 49178, 49179, 49180, 49181, 49182, 49183, 49184, 49185, 49186, 49187, 49188, 49189, 49190, 49191, 49192, 49193, 49194, 49195, 49196, 49197, 49198, 49199, 49200, 49201, 49202, 49203, 49204, 49205, 49206, 49207, 49208, 49209, 49210, 49211, 49213, 49214, 49215, 49216, 49217, 49218, 49219, 49220, 49221, 49222, 49223, 49224, 49225, 49226, 49227, 49228, 49229, 49230, 49231, 49232, 49234, 49235, 49236, 49237, 49238, 49239, 49241, 49242, 49243, null, null, null, null, null, null, 49245, 49246, 49247, 49249, 49250, 49251, 49252, 49253, 49254, 49255, 49258, 49259, 49260, 49261, 49262, 49263, 49264, 49265, 49266, 49267, 49268, 49269, 49270, 49271, 49272, 49273, null, null, null, null, null, null, 49274, 49275, 49276, 49277, 49278, 49279, 49280, 49281, 49282, 49283, 49284, 49285, 49286, 49287, 49288, 49289, 49290, 49291, 49292, 49293, 49294, 49295, 49298, 49299, 49301, 49302, 49303, 49305, 49306, 49307, 49308, 49309, 49310, 49311, 49314, 49316, 49318, 49319, 49320, 49321, 49322, 49323, 49326, 49329, 49330, 49335, 49336, 49337, 49338, 49339, 49342, 49346, 49347, 49348, 49350, 49351, 49354, 49355, 49357, 49358, 49359, 49361, 49362, 49363, 49364, 49365, 49366, 49367, 49370, 49374, 49375, 49376, 49377, 49378, 49379, 49382, 49383, 49385, 49386, 49387, 49389, 49390, 49391, 49392, 49393, 49394, 49395, 49398, 49400, 49402, 49403, 49404, 49405, 49406, 49407, 49409, 49410, 49411, 49413, 49414, 49415, 49417, 49418, 49419, 49420, 49421, 49422, 49423, 49425, 49426, 49427, 49428, 49430, 49431, 49432, 49433, 49434, 49435, 49441, 49442, 49445, 49448, 49449, 49450, 49451, 49454, 49458, 49459, 49460, 49461, 49463, 49466, 49467, 49469, 49470, 49471, 49473, 49474, 49475, 49476, 49477, 49478, 49479, 49482, 49486, 49487, 49488, 49489, 49490, 49491, 49494, 49495, null, null, null, null, null, null, 49497, 49498, 49499, 49501, 49502, 49503, 49504, 49505, 49506, 49507, 49510, 49514, 49515, 49516, 49517, 49518, 49519, 49521, 49522, 49523, 49525, 49526, 49527, 49529, 49530, 49531, null, null, null, null, null, null, 49532, 49533, 49534, 49535, 49536, 49537, 49538, 49539, 49540, 49542, 49543, 49544, 49545, 49546, 49547, 49551, 49553, 49554, 49555, 49557, 49559, 49560, 49561, 49562, 49563, 49566, 49568, 49570, 49571, 49572, 49574, 49575, 49578, 49579, 49581, 49582, 49583, 49585, 49586, 49587, 49588, 49589, 49590, 49591, 49592, 49593, 49594, 49595, 49596, 49598, 49599, 49600, 49601, 49602, 49603, 49605, 49606, 49607, 49609, 49610, 49611, 49613, 49614, 49615, 49616, 49617, 49618, 49619, 49621, 49622, 49625, 49626, 49627, 49628, 49629, 49630, 49631, 49633, 49634, 49635, 49637, 49638, 49639, 49641, 49642, 49643, 49644, 49645, 49646, 49647, 49650, 49652, 49653, 49654, 49655, 49656, 49657, 49658, 49659, 49662, 49663, 49665, 49666, 49667, 49669, 49670, 49671, 49672, 49673, 49674, 49675, 49678, 49680, 49682, 49683, 49684, 49685, 49686, 49687, 49690, 49691, 49693, 49694, 49697, 49698, 49699, 49700, 49701, 49702, 49703, 49706, 49708, 49710, 49712, 49715, 49717, 49718, 49719, 49720, 49721, 49722, 49723, 49724, 49725, 49726, 49727, 49728, 49729, 49730, 49731, 49732, 49733, null, null, null, null, null, null, 49734, 49735, 49737, 49738, 49739, 49740, 49741, 49742, 49743, 49746, 49747, 49749, 49750, 49751, 49753, 49754, 49755, 49756, 49757, 49758, 49759, 49761, 49762, 49763, 49764, 49766, null, null, null, null, null, null, 49767, 49768, 49769, 49770, 49771, 49774, 49775, 49777, 49778, 49779, 49781, 49782, 49783, 49784, 49785, 49786, 49787, 49790, 49792, 49794, 49795, 49796, 49797, 49798, 49799, 49802, 49803, 49804, 49805, 49806, 49807, 49809, 49810, 49811, 49812, 49813, 49814, 49815, 49817, 49818, 49820, 49822, 49823, 49824, 49825, 49826, 49827, 49830, 49831, 49833, 49834, 49835, 49838, 49839, 49840, 49841, 49842, 49843, 49846, 49848, 49850, 49851, 49852, 49853, 49854, 49855, 49856, 49857, 49858, 49859, 49860, 49861, 49862, 49863, 49864, 49865, 49866, 49867, 49868, 49869, 49870, 49871, 49872, 49873, 49874, 49875, 49876, 49877, 49878, 49879, 49880, 49881, 49882, 49883, 49886, 49887, 49889, 49890, 49893, 49894, 49895, 49896, 49897, 49898, 49902, 49904, 49906, 49907, 49908, 49909, 49911, 49914, 49917, 49918, 49919, 49921, 49922, 49923, 49924, 49925, 49926, 49927, 49930, 49931, 49934, 49935, 49936, 49937, 49938, 49942, 49943, 49945, 49946, 49947, 49949, 49950, 49951, 49952, 49953, 49954, 49955, 49958, 49959, 49962, 49963, 49964, 49965, 49966, 49967, 49968, 49969, 49970, null, null, null, null, null, null, 49971, 49972, 49973, 49974, 49975, 49976, 49977, 49978, 49979, 49980, 49981, 49982, 49983, 49984, 49985, 49986, 49987, 49988, 49990, 49991, 49992, 49993, 49994, 49995, 49996, 49997, null, null, null, null, null, null, 49998, 49999, 5e4, 50001, 50002, 50003, 50004, 50005, 50006, 50007, 50008, 50009, 50010, 50011, 50012, 50013, 50014, 50015, 50016, 50017, 50018, 50019, 50020, 50021, 50022, 50023, 50026, 50027, 50029, 50030, 50031, 50033, 50035, 50036, 50037, 50038, 50039, 50042, 50043, 50046, 50047, 50048, 50049, 50050, 50051, 50053, 50054, 50055, 50057, 50058, 50059, 50061, 50062, 50063, 50064, 50065, 50066, 50067, 50068, 50069, 50070, 50071, 50072, 50073, 50074, 50075, 50076, 50077, 50078, 50079, 50080, 50081, 50082, 50083, 50084, 50085, 50086, 50087, 50088, 50089, 50090, 50091, 50092, 50093, 50094, 50095, 50096, 50097, 50098, 50099, 50100, 50101, 50102, 50103, 50104, 50105, 50106, 50107, 50108, 50109, 50110, 50111, 50113, 50114, 50115, 50116, 50117, 50118, 50119, 50120, 50121, 50122, 50123, 50124, 50125, 50126, 50127, 50128, 50129, 50130, 50131, 50132, 50133, 50134, 50135, 50138, 50139, 50141, 50142, 50145, 50147, 50148, 50149, 50150, 50151, 50154, 50155, 50156, 50158, 50159, 50160, 50161, 50162, 50163, 50166, 50167, 50169, 50170, 50171, 50172, 50173, 50174, null, null, null, null, null, null, 50175, 50176, 50177, 50178, 50179, 50180, 50181, 50182, 50183, 50185, 50186, 50187, 50188, 50189, 50190, 50191, 50193, 50194, 50195, 50196, 50197, 50198, 50199, 50200, 50201, 50202, null, null, null, null, null, null, 50203, 50204, 50205, 50206, 50207, 50208, 50209, 50210, 50211, 50213, 50214, 50215, 50216, 50217, 50218, 50219, 50221, 50222, 50223, 50225, 50226, 50227, 50229, 50230, 50231, 50232, 50233, 50234, 50235, 50238, 50239, 50240, 50241, 50242, 50243, 50244, 50245, 50246, 50247, 50249, 50250, 50251, 50252, 50253, 50254, 50255, 50256, 50257, 50258, 50259, 50260, 50261, 50262, 50263, 50264, 50265, 50266, 50267, 50268, 50269, 50270, 50271, 50272, 50273, 50274, 50275, 50278, 50279, 50281, 50282, 50283, 50285, 50286, 50287, 50288, 50289, 50290, 50291, 50294, 50295, 50296, 50298, 50299, 50300, 50301, 50302, 50303, 50305, 50306, 50307, 50308, 50309, 50310, 50311, 50312, 50313, 50314, 50315, 50316, 50317, 50318, 50319, 50320, 50321, 50322, 50323, 50325, 50326, 50327, 50328, 50329, 50330, 50331, 50333, 50334, 50335, 50336, 50337, 50338, 50339, 50340, 50341, 50342, 50343, 50344, 50345, 50346, 50347, 50348, 50349, 50350, 50351, 50352, 50353, 50354, 50355, 50356, 50357, 50358, 50359, 50361, 50362, 50363, 50365, 50366, 50367, 50368, 50369, 50370, 50371, 50372, 50373, null, null, null, null, null, null, 50374, 50375, 50376, 50377, 50378, 50379, 50380, 50381, 50382, 50383, 50384, 50385, 50386, 50387, 50388, 50389, 50390, 50391, 50392, 50393, 50394, 50395, 50396, 50397, 50398, 50399, null, null, null, null, null, null, 50400, 50401, 50402, 50403, 50404, 50405, 50406, 50407, 50408, 50410, 50411, 50412, 50413, 50414, 50415, 50418, 50419, 50421, 50422, 50423, 50425, 50427, 50428, 50429, 50430, 50434, 50435, 50436, 50437, 50438, 50439, 50440, 50441, 50442, 50443, 50445, 50446, 50447, 50449, 50450, 50451, 50453, 50454, 50455, 50456, 50457, 50458, 50459, 50461, 50462, 50463, 50464, 50465, 50466, 50467, 50468, 50469, 50470, 50471, 50474, 50475, 50477, 50478, 50479, 50481, 50482, 50483, 50484, 50485, 50486, 50487, 50490, 50492, 50494, 50495, 50496, 50497, 50498, 50499, 50502, 50503, 50507, 50511, 50512, 50513, 50514, 50518, 50522, 50523, 50524, 50527, 50530, 50531, 50533, 50534, 50535, 50537, 50538, 50539, 50540, 50541, 50542, 50543, 50546, 50550, 50551, 50552, 50553, 50554, 50555, 50558, 50559, 50561, 50562, 50563, 50565, 50566, 50568, 50569, 50570, 50571, 50574, 50576, 50578, 50579, 50580, 50582, 50585, 50586, 50587, 50589, 50590, 50591, 50593, 50594, 50595, 50596, 50597, 50598, 50599, 50600, 50602, 50603, 50604, 50605, 50606, 50607, 50608, 50609, 50610, 50611, 50614, null, null, null, null, null, null, 50615, 50618, 50623, 50624, 50625, 50626, 50627, 50635, 50637, 50639, 50642, 50643, 50645, 50646, 50647, 50649, 50650, 50651, 50652, 50653, 50654, 50655, 50658, 50660, 50662, 50663, null, null, null, null, null, null, 50664, 50665, 50666, 50667, 50671, 50673, 50674, 50675, 50677, 50680, 50681, 50682, 50683, 50690, 50691, 50692, 50697, 50698, 50699, 50701, 50702, 50703, 50705, 50706, 50707, 50708, 50709, 50710, 50711, 50714, 50717, 50718, 50719, 50720, 50721, 50722, 50723, 50726, 50727, 50729, 50730, 50731, 50735, 50737, 50738, 50742, 50744, 50746, 50748, 50749, 50750, 50751, 50754, 50755, 50757, 50758, 50759, 50761, 50762, 50763, 50764, 50765, 50766, 50767, 50770, 50774, 50775, 50776, 50777, 50778, 50779, 50782, 50783, 50785, 50786, 50787, 50788, 50789, 50790, 50791, 50792, 50793, 50794, 50795, 50797, 50798, 50800, 50802, 50803, 50804, 50805, 50806, 50807, 50810, 50811, 50813, 50814, 50815, 50817, 50818, 50819, 50820, 50821, 50822, 50823, 50826, 50828, 50830, 50831, 50832, 50833, 50834, 50835, 50838, 50839, 50841, 50842, 50843, 50845, 50846, 50847, 50848, 50849, 50850, 50851, 50854, 50856, 50858, 50859, 50860, 50861, 50862, 50863, 50866, 50867, 50869, 50870, 50871, 50875, 50876, 50877, 50878, 50879, 50882, 50884, 50886, 50887, 50888, 50889, 50890, 50891, 50894, null, null, null, null, null, null, 50895, 50897, 50898, 50899, 50901, 50902, 50903, 50904, 50905, 50906, 50907, 50910, 50911, 50914, 50915, 50916, 50917, 50918, 50919, 50922, 50923, 50925, 50926, 50927, 50929, 50930, null, null, null, null, null, null, 50931, 50932, 50933, 50934, 50935, 50938, 50939, 50940, 50942, 50943, 50944, 50945, 50946, 50947, 50950, 50951, 50953, 50954, 50955, 50957, 50958, 50959, 50960, 50961, 50962, 50963, 50966, 50968, 50970, 50971, 50972, 50973, 50974, 50975, 50978, 50979, 50981, 50982, 50983, 50985, 50986, 50987, 50988, 50989, 50990, 50991, 50994, 50996, 50998, 51e3, 51001, 51002, 51003, 51006, 51007, 51009, 51010, 51011, 51013, 51014, 51015, 51016, 51017, 51019, 51022, 51024, 51033, 51034, 51035, 51037, 51038, 51039, 51041, 51042, 51043, 51044, 51045, 51046, 51047, 51049, 51050, 51052, 51053, 51054, 51055, 51056, 51057, 51058, 51059, 51062, 51063, 51065, 51066, 51067, 51071, 51072, 51073, 51074, 51078, 51083, 51084, 51085, 51087, 51090, 51091, 51093, 51097, 51099, 51100, 51101, 51102, 51103, 51106, 51111, 51112, 51113, 51114, 51115, 51118, 51119, 51121, 51122, 51123, 51125, 51126, 51127, 51128, 51129, 51130, 51131, 51134, 51138, 51139, 51140, 51141, 51142, 51143, 51146, 51147, 51149, 51151, 51153, 51154, 51155, 51156, 51157, 51158, 51159, 51161, 51162, 51163, 51164, null, null, null, null, null, null, 51166, 51167, 51168, 51169, 51170, 51171, 51173, 51174, 51175, 51177, 51178, 51179, 51181, 51182, 51183, 51184, 51185, 51186, 51187, 51188, 51189, 51190, 51191, 51192, 51193, 51194, null, null, null, null, null, null, 51195, 51196, 51197, 51198, 51199, 51202, 51203, 51205, 51206, 51207, 51209, 51211, 51212, 51213, 51214, 51215, 51218, 51220, 51223, 51224, 51225, 51226, 51227, 51230, 51231, 51233, 51234, 51235, 51237, 51238, 51239, 51240, 51241, 51242, 51243, 51246, 51248, 51250, 51251, 51252, 51253, 51254, 51255, 51257, 51258, 51259, 51261, 51262, 51263, 51265, 51266, 51267, 51268, 51269, 51270, 51271, 51274, 51275, 51278, 51279, 51280, 51281, 51282, 51283, 51285, 51286, 51287, 51288, 51289, 51290, 51291, 51292, 51293, 51294, 51295, 51296, 51297, 51298, 51299, 51300, 51301, 51302, 51303, 51304, 51305, 51306, 51307, 51308, 51309, 51310, 51311, 51314, 51315, 51317, 51318, 51319, 51321, 51323, 51324, 51325, 51326, 51327, 51330, 51332, 51336, 51337, 51338, 51342, 51343, 51344, 51345, 51346, 51347, 51349, 51350, 51351, 51352, 51353, 51354, 51355, 51356, 51358, 51360, 51362, 51363, 51364, 51365, 51366, 51367, 51369, 51370, 51371, 51372, 51373, 51374, 51375, 51376, 51377, 51378, 51379, 51380, 51381, 51382, 51383, 51384, 51385, 51386, 51387, 51390, 51391, 51392, 51393, null, null, null, null, null, null, 51394, 51395, 51397, 51398, 51399, 51401, 51402, 51403, 51405, 51406, 51407, 51408, 51409, 51410, 51411, 51414, 51416, 51418, 51419, 51420, 51421, 51422, 51423, 51426, 51427, 51429, null, null, null, null, null, null, 51430, 51431, 51432, 51433, 51434, 51435, 51436, 51437, 51438, 51439, 51440, 51441, 51442, 51443, 51444, 51446, 51447, 51448, 51449, 51450, 51451, 51454, 51455, 51457, 51458, 51459, 51463, 51464, 51465, 51466, 51467, 51470, 12288, 12289, 12290, 183, 8229, 8230, 168, 12291, 173, 8213, 8741, 65340, 8764, 8216, 8217, 8220, 8221, 12308, 12309, 12296, 12297, 12298, 12299, 12300, 12301, 12302, 12303, 12304, 12305, 177, 215, 247, 8800, 8804, 8805, 8734, 8756, 176, 8242, 8243, 8451, 8491, 65504, 65505, 65509, 9794, 9792, 8736, 8869, 8978, 8706, 8711, 8801, 8786, 167, 8251, 9734, 9733, 9675, 9679, 9678, 9671, 9670, 9633, 9632, 9651, 9650, 9661, 9660, 8594, 8592, 8593, 8595, 8596, 12307, 8810, 8811, 8730, 8765, 8733, 8757, 8747, 8748, 8712, 8715, 8838, 8839, 8834, 8835, 8746, 8745, 8743, 8744, 65506, 51472, 51474, 51475, 51476, 51477, 51478, 51479, 51481, 51482, 51483, 51484, 51485, 51486, 51487, 51488, 51489, 51490, 51491, 51492, 51493, 51494, 51495, 51496, 51497, 51498, 51499, null, null, null, null, null, null, 51501, 51502, 51503, 51504, 51505, 51506, 51507, 51509, 51510, 51511, 51512, 51513, 51514, 51515, 51516, 51517, 51518, 51519, 51520, 51521, 51522, 51523, 51524, 51525, 51526, 51527, null, null, null, null, null, null, 51528, 51529, 51530, 51531, 51532, 51533, 51534, 51535, 51538, 51539, 51541, 51542, 51543, 51545, 51546, 51547, 51548, 51549, 51550, 51551, 51554, 51556, 51557, 51558, 51559, 51560, 51561, 51562, 51563, 51565, 51566, 51567, 8658, 8660, 8704, 8707, 180, 65374, 711, 728, 733, 730, 729, 184, 731, 161, 191, 720, 8750, 8721, 8719, 164, 8457, 8240, 9665, 9664, 9655, 9654, 9828, 9824, 9825, 9829, 9831, 9827, 8857, 9672, 9635, 9680, 9681, 9618, 9636, 9637, 9640, 9639, 9638, 9641, 9832, 9743, 9742, 9756, 9758, 182, 8224, 8225, 8597, 8599, 8601, 8598, 8600, 9837, 9833, 9834, 9836, 12927, 12828, 8470, 13255, 8482, 13250, 13272, 8481, 8364, 174, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 51569, 51570, 51571, 51573, 51574, 51575, 51576, 51577, 51578, 51579, 51581, 51582, 51583, 51584, 51585, 51586, 51587, 51588, 51589, 51590, 51591, 51594, 51595, 51597, 51598, 51599, null, null, null, null, null, null, 51601, 51602, 51603, 51604, 51605, 51606, 51607, 51610, 51612, 51614, 51615, 51616, 51617, 51618, 51619, 51620, 51621, 51622, 51623, 51624, 51625, 51626, 51627, 51628, 51629, 51630, null, null, null, null, null, null, 51631, 51632, 51633, 51634, 51635, 51636, 51637, 51638, 51639, 51640, 51641, 51642, 51643, 51644, 51645, 51646, 51647, 51650, 51651, 51653, 51654, 51657, 51659, 51660, 51661, 51662, 51663, 51666, 51668, 51671, 51672, 51675, 65281, 65282, 65283, 65284, 65285, 65286, 65287, 65288, 65289, 65290, 65291, 65292, 65293, 65294, 65295, 65296, 65297, 65298, 65299, 65300, 65301, 65302, 65303, 65304, 65305, 65306, 65307, 65308, 65309, 65310, 65311, 65312, 65313, 65314, 65315, 65316, 65317, 65318, 65319, 65320, 65321, 65322, 65323, 65324, 65325, 65326, 65327, 65328, 65329, 65330, 65331, 65332, 65333, 65334, 65335, 65336, 65337, 65338, 65339, 65510, 65341, 65342, 65343, 65344, 65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361, 65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370, 65371, 65372, 65373, 65507, 51678, 51679, 51681, 51683, 51685, 51686, 51688, 51689, 51690, 51691, 51694, 51698, 51699, 51700, 51701, 51702, 51703, 51706, 51707, 51709, 51710, 51711, 51713, 51714, 51715, 51716, null, null, null, null, null, null, 51717, 51718, 51719, 51722, 51726, 51727, 51728, 51729, 51730, 51731, 51733, 51734, 51735, 51737, 51738, 51739, 51740, 51741, 51742, 51743, 51744, 51745, 51746, 51747, 51748, 51749, null, null, null, null, null, null, 51750, 51751, 51752, 51754, 51755, 51756, 51757, 51758, 51759, 51760, 51761, 51762, 51763, 51764, 51765, 51766, 51767, 51768, 51769, 51770, 51771, 51772, 51773, 51774, 51775, 51776, 51777, 51778, 51779, 51780, 51781, 51782, 12593, 12594, 12595, 12596, 12597, 12598, 12599, 12600, 12601, 12602, 12603, 12604, 12605, 12606, 12607, 12608, 12609, 12610, 12611, 12612, 12613, 12614, 12615, 12616, 12617, 12618, 12619, 12620, 12621, 12622, 12623, 12624, 12625, 12626, 12627, 12628, 12629, 12630, 12631, 12632, 12633, 12634, 12635, 12636, 12637, 12638, 12639, 12640, 12641, 12642, 12643, 12644, 12645, 12646, 12647, 12648, 12649, 12650, 12651, 12652, 12653, 12654, 12655, 12656, 12657, 12658, 12659, 12660, 12661, 12662, 12663, 12664, 12665, 12666, 12667, 12668, 12669, 12670, 12671, 12672, 12673, 12674, 12675, 12676, 12677, 12678, 12679, 12680, 12681, 12682, 12683, 12684, 12685, 12686, 51783, 51784, 51785, 51786, 51787, 51790, 51791, 51793, 51794, 51795, 51797, 51798, 51799, 51800, 51801, 51802, 51803, 51806, 51810, 51811, 51812, 51813, 51814, 51815, 51817, 51818, null, null, null, null, null, null, 51819, 51820, 51821, 51822, 51823, 51824, 51825, 51826, 51827, 51828, 51829, 51830, 51831, 51832, 51833, 51834, 51835, 51836, 51838, 51839, 51840, 51841, 51842, 51843, 51845, 51846, null, null, null, null, null, null, 51847, 51848, 51849, 51850, 51851, 51852, 51853, 51854, 51855, 51856, 51857, 51858, 51859, 51860, 51861, 51862, 51863, 51865, 51866, 51867, 51868, 51869, 51870, 51871, 51872, 51873, 51874, 51875, 51876, 51877, 51878, 51879, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, null, null, null, null, null, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, null, null, null, null, null, null, null, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, null, null, null, null, null, null, null, null, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 967, 968, 969, null, null, null, null, null, null, 51880, 51881, 51882, 51883, 51884, 51885, 51886, 51887, 51888, 51889, 51890, 51891, 51892, 51893, 51894, 51895, 51896, 51897, 51898, 51899, 51902, 51903, 51905, 51906, 51907, 51909, null, null, null, null, null, null, 51910, 51911, 51912, 51913, 51914, 51915, 51918, 51920, 51922, 51924, 51925, 51926, 51927, 51930, 51931, 51932, 51933, 51934, 51935, 51937, 51938, 51939, 51940, 51941, 51942, 51943, null, null, null, null, null, null, 51944, 51945, 51946, 51947, 51949, 51950, 51951, 51952, 51953, 51954, 51955, 51957, 51958, 51959, 51960, 51961, 51962, 51963, 51964, 51965, 51966, 51967, 51968, 51969, 51970, 51971, 51972, 51973, 51974, 51975, 51977, 51978, 9472, 9474, 9484, 9488, 9496, 9492, 9500, 9516, 9508, 9524, 9532, 9473, 9475, 9487, 9491, 9499, 9495, 9507, 9523, 9515, 9531, 9547, 9504, 9519, 9512, 9527, 9535, 9501, 9520, 9509, 9528, 9538, 9490, 9489, 9498, 9497, 9494, 9493, 9486, 9485, 9502, 9503, 9505, 9506, 9510, 9511, 9513, 9514, 9517, 9518, 9521, 9522, 9525, 9526, 9529, 9530, 9533, 9534, 9536, 9537, 9539, 9540, 9541, 9542, 9543, 9544, 9545, 9546, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 51979, 51980, 51981, 51982, 51983, 51985, 51986, 51987, 51989, 51990, 51991, 51993, 51994, 51995, 51996, 51997, 51998, 51999, 52002, 52003, 52004, 52005, 52006, 52007, 52008, 52009, null, null, null, null, null, null, 52010, 52011, 52012, 52013, 52014, 52015, 52016, 52017, 52018, 52019, 52020, 52021, 52022, 52023, 52024, 52025, 52026, 52027, 52028, 52029, 52030, 52031, 52032, 52034, 52035, 52036, null, null, null, null, null, null, 52037, 52038, 52039, 52042, 52043, 52045, 52046, 52047, 52049, 52050, 52051, 52052, 52053, 52054, 52055, 52058, 52059, 52060, 52062, 52063, 52064, 52065, 52066, 52067, 52069, 52070, 52071, 52072, 52073, 52074, 52075, 52076, 13205, 13206, 13207, 8467, 13208, 13252, 13219, 13220, 13221, 13222, 13209, 13210, 13211, 13212, 13213, 13214, 13215, 13216, 13217, 13218, 13258, 13197, 13198, 13199, 13263, 13192, 13193, 13256, 13223, 13224, 13232, 13233, 13234, 13235, 13236, 13237, 13238, 13239, 13240, 13241, 13184, 13185, 13186, 13187, 13188, 13242, 13243, 13244, 13245, 13246, 13247, 13200, 13201, 13202, 13203, 13204, 8486, 13248, 13249, 13194, 13195, 13196, 13270, 13253, 13229, 13230, 13231, 13275, 13225, 13226, 13227, 13228, 13277, 13264, 13267, 13251, 13257, 13276, 13254, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 52077, 52078, 52079, 52080, 52081, 52082, 52083, 52084, 52085, 52086, 52087, 52090, 52091, 52092, 52093, 52094, 52095, 52096, 52097, 52098, 52099, 52100, 52101, 52102, 52103, 52104, null, null, null, null, null, null, 52105, 52106, 52107, 52108, 52109, 52110, 52111, 52112, 52113, 52114, 52115, 52116, 52117, 52118, 52119, 52120, 52121, 52122, 52123, 52125, 52126, 52127, 52128, 52129, 52130, 52131, null, null, null, null, null, null, 52132, 52133, 52134, 52135, 52136, 52137, 52138, 52139, 52140, 52141, 52142, 52143, 52144, 52145, 52146, 52147, 52148, 52149, 52150, 52151, 52153, 52154, 52155, 52156, 52157, 52158, 52159, 52160, 52161, 52162, 52163, 52164, 198, 208, 170, 294, null, 306, null, 319, 321, 216, 338, 186, 222, 358, 330, null, 12896, 12897, 12898, 12899, 12900, 12901, 12902, 12903, 12904, 12905, 12906, 12907, 12908, 12909, 12910, 12911, 12912, 12913, 12914, 12915, 12916, 12917, 12918, 12919, 12920, 12921, 12922, 12923, 9424, 9425, 9426, 9427, 9428, 9429, 9430, 9431, 9432, 9433, 9434, 9435, 9436, 9437, 9438, 9439, 9440, 9441, 9442, 9443, 9444, 9445, 9446, 9447, 9448, 9449, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 9322, 9323, 9324, 9325, 9326, 189, 8531, 8532, 188, 190, 8539, 8540, 8541, 8542, 52165, 52166, 52167, 52168, 52169, 52170, 52171, 52172, 52173, 52174, 52175, 52176, 52177, 52178, 52179, 52181, 52182, 52183, 52184, 52185, 52186, 52187, 52188, 52189, 52190, 52191, null, null, null, null, null, null, 52192, 52193, 52194, 52195, 52197, 52198, 52200, 52202, 52203, 52204, 52205, 52206, 52207, 52208, 52209, 52210, 52211, 52212, 52213, 52214, 52215, 52216, 52217, 52218, 52219, 52220, null, null, null, null, null, null, 52221, 52222, 52223, 52224, 52225, 52226, 52227, 52228, 52229, 52230, 52231, 52232, 52233, 52234, 52235, 52238, 52239, 52241, 52242, 52243, 52245, 52246, 52247, 52248, 52249, 52250, 52251, 52254, 52255, 52256, 52259, 52260, 230, 273, 240, 295, 305, 307, 312, 320, 322, 248, 339, 223, 254, 359, 331, 329, 12800, 12801, 12802, 12803, 12804, 12805, 12806, 12807, 12808, 12809, 12810, 12811, 12812, 12813, 12814, 12815, 12816, 12817, 12818, 12819, 12820, 12821, 12822, 12823, 12824, 12825, 12826, 12827, 9372, 9373, 9374, 9375, 9376, 9377, 9378, 9379, 9380, 9381, 9382, 9383, 9384, 9385, 9386, 9387, 9388, 9389, 9390, 9391, 9392, 9393, 9394, 9395, 9396, 9397, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 9342, 9343, 9344, 9345, 9346, 185, 178, 179, 8308, 8319, 8321, 8322, 8323, 8324, 52261, 52262, 52266, 52267, 52269, 52271, 52273, 52274, 52275, 52276, 52277, 52278, 52279, 52282, 52287, 52288, 52289, 52290, 52291, 52294, 52295, 52297, 52298, 52299, 52301, 52302, null, null, null, null, null, null, 52303, 52304, 52305, 52306, 52307, 52310, 52314, 52315, 52316, 52317, 52318, 52319, 52321, 52322, 52323, 52325, 52327, 52329, 52330, 52331, 52332, 52333, 52334, 52335, 52337, 52338, null, null, null, null, null, null, 52339, 52340, 52342, 52343, 52344, 52345, 52346, 52347, 52348, 52349, 52350, 52351, 52352, 52353, 52354, 52355, 52356, 52357, 52358, 52359, 52360, 52361, 52362, 52363, 52364, 52365, 52366, 52367, 52368, 52369, 52370, 52371, 12353, 12354, 12355, 12356, 12357, 12358, 12359, 12360, 12361, 12362, 12363, 12364, 12365, 12366, 12367, 12368, 12369, 12370, 12371, 12372, 12373, 12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382, 12383, 12384, 12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392, 12393, 12394, 12395, 12396, 12397, 12398, 12399, 12400, 12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412, 12413, 12414, 12415, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431, 12432, 12433, 12434, 12435, null, null, null, null, null, null, null, null, null, null, null, 52372, 52373, 52374, 52375, 52378, 52379, 52381, 52382, 52383, 52385, 52386, 52387, 52388, 52389, 52390, 52391, 52394, 52398, 52399, 52400, 52401, 52402, 52403, 52406, 52407, 52409, null, null, null, null, null, null, 52410, 52411, 52413, 52414, 52415, 52416, 52417, 52418, 52419, 52422, 52424, 52426, 52427, 52428, 52429, 52430, 52431, 52433, 52434, 52435, 52437, 52438, 52439, 52440, 52441, 52442, null, null, null, null, null, null, 52443, 52444, 52445, 52446, 52447, 52448, 52449, 52450, 52451, 52453, 52454, 52455, 52456, 52457, 52458, 52459, 52461, 52462, 52463, 52465, 52466, 52467, 52468, 52469, 52470, 52471, 52472, 52473, 52474, 52475, 52476, 52477, 12449, 12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461, 12462, 12463, 12464, 12465, 12466, 12467, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 12475, 12476, 12477, 12478, 12479, 12480, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489, 12490, 12491, 12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499, 12500, 12501, 12502, 12503, 12504, 12505, 12506, 12507, 12508, 12509, 12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519, 12520, 12521, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531, 12532, 12533, 12534, null, null, null, null, null, null, null, null, 52478, 52479, 52480, 52482, 52483, 52484, 52485, 52486, 52487, 52490, 52491, 52493, 52494, 52495, 52497, 52498, 52499, 52500, 52501, 52502, 52503, 52506, 52508, 52510, 52511, 52512, null, null, null, null, null, null, 52513, 52514, 52515, 52517, 52518, 52519, 52521, 52522, 52523, 52525, 52526, 52527, 52528, 52529, 52530, 52531, 52532, 52533, 52534, 52535, 52536, 52538, 52539, 52540, 52541, 52542, null, null, null, null, null, null, 52543, 52544, 52545, 52546, 52547, 52548, 52549, 52550, 52551, 52552, 52553, 52554, 52555, 52556, 52557, 52558, 52559, 52560, 52561, 52562, 52563, 52564, 52565, 52566, 52567, 52568, 52569, 52570, 52571, 52573, 52574, 52575, 1040, 1041, 1042, 1043, 1044, 1045, 1025, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1072, 1073, 1074, 1075, 1076, 1077, 1105, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, null, null, null, null, null, null, null, null, null, null, null, null, null, 52577, 52578, 52579, 52581, 52582, 52583, 52584, 52585, 52586, 52587, 52590, 52592, 52594, 52595, 52596, 52597, 52598, 52599, 52601, 52602, 52603, 52604, 52605, 52606, 52607, 52608, null, null, null, null, null, null, 52609, 52610, 52611, 52612, 52613, 52614, 52615, 52617, 52618, 52619, 52620, 52621, 52622, 52623, 52624, 52625, 52626, 52627, 52630, 52631, 52633, 52634, 52635, 52637, 52638, 52639, null, null, null, null, null, null, 52640, 52641, 52642, 52643, 52646, 52648, 52650, 52651, 52652, 52653, 52654, 52655, 52657, 52658, 52659, 52660, 52661, 52662, 52663, 52664, 52665, 52666, 52667, 52668, 52669, 52670, 52671, 52672, 52673, 52674, 52675, 52677, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 52678, 52679, 52680, 52681, 52682, 52683, 52685, 52686, 52687, 52689, 52690, 52691, 52692, 52693, 52694, 52695, 52696, 52697, 52698, 52699, 52700, 52701, 52702, 52703, 52704, 52705, null, null, null, null, null, null, 52706, 52707, 52708, 52709, 52710, 52711, 52713, 52714, 52715, 52717, 52718, 52719, 52721, 52722, 52723, 52724, 52725, 52726, 52727, 52730, 52732, 52734, 52735, 52736, 52737, 52738, null, null, null, null, null, null, 52739, 52741, 52742, 52743, 52745, 52746, 52747, 52749, 52750, 52751, 52752, 52753, 52754, 52755, 52757, 52758, 52759, 52760, 52762, 52763, 52764, 52765, 52766, 52767, 52770, 52771, 52773, 52774, 52775, 52777, 52778, 52779, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 52780, 52781, 52782, 52783, 52786, 52788, 52790, 52791, 52792, 52793, 52794, 52795, 52796, 52797, 52798, 52799, 52800, 52801, 52802, 52803, 52804, 52805, 52806, 52807, 52808, 52809, null, null, null, null, null, null, 52810, 52811, 52812, 52813, 52814, 52815, 52816, 52817, 52818, 52819, 52820, 52821, 52822, 52823, 52826, 52827, 52829, 52830, 52834, 52835, 52836, 52837, 52838, 52839, 52842, 52844, null, null, null, null, null, null, 52846, 52847, 52848, 52849, 52850, 52851, 52854, 52855, 52857, 52858, 52859, 52861, 52862, 52863, 52864, 52865, 52866, 52867, 52870, 52872, 52874, 52875, 52876, 52877, 52878, 52879, 52882, 52883, 52885, 52886, 52887, 52889, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 52890, 52891, 52892, 52893, 52894, 52895, 52898, 52902, 52903, 52904, 52905, 52906, 52907, 52910, 52911, 52912, 52913, 52914, 52915, 52916, 52917, 52918, 52919, 52920, 52921, 52922, null, null, null, null, null, null, 52923, 52924, 52925, 52926, 52927, 52928, 52930, 52931, 52932, 52933, 52934, 52935, 52936, 52937, 52938, 52939, 52940, 52941, 52942, 52943, 52944, 52945, 52946, 52947, 52948, 52949, null, null, null, null, null, null, 52950, 52951, 52952, 52953, 52954, 52955, 52956, 52957, 52958, 52959, 52960, 52961, 52962, 52963, 52966, 52967, 52969, 52970, 52973, 52974, 52975, 52976, 52977, 52978, 52979, 52982, 52986, 52987, 52988, 52989, 52990, 52991, 44032, 44033, 44036, 44039, 44040, 44041, 44042, 44048, 44049, 44050, 44051, 44052, 44053, 44054, 44055, 44057, 44058, 44059, 44060, 44061, 44064, 44068, 44076, 44077, 44079, 44080, 44081, 44088, 44089, 44092, 44096, 44107, 44109, 44116, 44120, 44124, 44144, 44145, 44148, 44151, 44152, 44154, 44160, 44161, 44163, 44164, 44165, 44166, 44169, 44170, 44171, 44172, 44176, 44180, 44188, 44189, 44191, 44192, 44193, 44200, 44201, 44202, 44204, 44207, 44208, 44216, 44217, 44219, 44220, 44221, 44225, 44228, 44232, 44236, 44245, 44247, 44256, 44257, 44260, 44263, 44264, 44266, 44268, 44271, 44272, 44273, 44275, 44277, 44278, 44284, 44285, 44288, 44292, 44294, 52994, 52995, 52997, 52998, 52999, 53001, 53002, 53003, 53004, 53005, 53006, 53007, 53010, 53012, 53014, 53015, 53016, 53017, 53018, 53019, 53021, 53022, 53023, 53025, 53026, 53027, null, null, null, null, null, null, 53029, 53030, 53031, 53032, 53033, 53034, 53035, 53038, 53042, 53043, 53044, 53045, 53046, 53047, 53049, 53050, 53051, 53052, 53053, 53054, 53055, 53056, 53057, 53058, 53059, 53060, null, null, null, null, null, null, 53061, 53062, 53063, 53064, 53065, 53066, 53067, 53068, 53069, 53070, 53071, 53072, 53073, 53074, 53075, 53078, 53079, 53081, 53082, 53083, 53085, 53086, 53087, 53088, 53089, 53090, 53091, 53094, 53096, 53098, 53099, 53100, 44300, 44301, 44303, 44305, 44312, 44316, 44320, 44329, 44332, 44333, 44340, 44341, 44344, 44348, 44356, 44357, 44359, 44361, 44368, 44372, 44376, 44385, 44387, 44396, 44397, 44400, 44403, 44404, 44405, 44406, 44411, 44412, 44413, 44415, 44417, 44418, 44424, 44425, 44428, 44432, 44444, 44445, 44452, 44471, 44480, 44481, 44484, 44488, 44496, 44497, 44499, 44508, 44512, 44516, 44536, 44537, 44540, 44543, 44544, 44545, 44552, 44553, 44555, 44557, 44564, 44592, 44593, 44596, 44599, 44600, 44602, 44608, 44609, 44611, 44613, 44614, 44618, 44620, 44621, 44622, 44624, 44628, 44630, 44636, 44637, 44639, 44640, 44641, 44645, 44648, 44649, 44652, 44656, 44664, 53101, 53102, 53103, 53106, 53107, 53109, 53110, 53111, 53113, 53114, 53115, 53116, 53117, 53118, 53119, 53121, 53122, 53123, 53124, 53126, 53127, 53128, 53129, 53130, 53131, 53133, null, null, null, null, null, null, 53134, 53135, 53136, 53137, 53138, 53139, 53140, 53141, 53142, 53143, 53144, 53145, 53146, 53147, 53148, 53149, 53150, 53151, 53152, 53154, 53155, 53156, 53157, 53158, 53159, 53161, null, null, null, null, null, null, 53162, 53163, 53164, 53165, 53166, 53167, 53169, 53170, 53171, 53172, 53173, 53174, 53175, 53176, 53177, 53178, 53179, 53180, 53181, 53182, 53183, 53184, 53185, 53186, 53187, 53189, 53190, 53191, 53192, 53193, 53194, 53195, 44665, 44667, 44668, 44669, 44676, 44677, 44684, 44732, 44733, 44734, 44736, 44740, 44748, 44749, 44751, 44752, 44753, 44760, 44761, 44764, 44776, 44779, 44781, 44788, 44792, 44796, 44807, 44808, 44813, 44816, 44844, 44845, 44848, 44850, 44852, 44860, 44861, 44863, 44865, 44866, 44867, 44872, 44873, 44880, 44892, 44893, 44900, 44901, 44921, 44928, 44932, 44936, 44944, 44945, 44949, 44956, 44984, 44985, 44988, 44992, 44999, 45e3, 45001, 45003, 45005, 45006, 45012, 45020, 45032, 45033, 45040, 45041, 45044, 45048, 45056, 45057, 45060, 45068, 45072, 45076, 45084, 45085, 45096, 45124, 45125, 45128, 45130, 45132, 45134, 45139, 45140, 45141, 45143, 45145, 53196, 53197, 53198, 53199, 53200, 53201, 53202, 53203, 53204, 53205, 53206, 53207, 53208, 53209, 53210, 53211, 53212, 53213, 53214, 53215, 53218, 53219, 53221, 53222, 53223, 53225, null, null, null, null, null, null, 53226, 53227, 53228, 53229, 53230, 53231, 53234, 53236, 53238, 53239, 53240, 53241, 53242, 53243, 53245, 53246, 53247, 53249, 53250, 53251, 53253, 53254, 53255, 53256, 53257, 53258, null, null, null, null, null, null, 53259, 53260, 53261, 53262, 53263, 53264, 53266, 53267, 53268, 53269, 53270, 53271, 53273, 53274, 53275, 53276, 53277, 53278, 53279, 53280, 53281, 53282, 53283, 53284, 53285, 53286, 53287, 53288, 53289, 53290, 53291, 53292, 45149, 45180, 45181, 45184, 45188, 45196, 45197, 45199, 45201, 45208, 45209, 45210, 45212, 45215, 45216, 45217, 45218, 45224, 45225, 45227, 45228, 45229, 45230, 45231, 45233, 45235, 45236, 45237, 45240, 45244, 45252, 45253, 45255, 45256, 45257, 45264, 45265, 45268, 45272, 45280, 45285, 45320, 45321, 45323, 45324, 45328, 45330, 45331, 45336, 45337, 45339, 45340, 45341, 45347, 45348, 45349, 45352, 45356, 45364, 45365, 45367, 45368, 45369, 45376, 45377, 45380, 45384, 45392, 45393, 45396, 45397, 45400, 45404, 45408, 45432, 45433, 45436, 45440, 45442, 45448, 45449, 45451, 45453, 45458, 45459, 45460, 45464, 45468, 45480, 45516, 45520, 45524, 45532, 45533, 53294, 53295, 53296, 53297, 53298, 53299, 53302, 53303, 53305, 53306, 53307, 53309, 53310, 53311, 53312, 53313, 53314, 53315, 53318, 53320, 53322, 53323, 53324, 53325, 53326, 53327, null, null, null, null, null, null, 53329, 53330, 53331, 53333, 53334, 53335, 53337, 53338, 53339, 53340, 53341, 53342, 53343, 53345, 53346, 53347, 53348, 53349, 53350, 53351, 53352, 53353, 53354, 53355, 53358, 53359, null, null, null, null, null, null, 53361, 53362, 53363, 53365, 53366, 53367, 53368, 53369, 53370, 53371, 53374, 53375, 53376, 53378, 53379, 53380, 53381, 53382, 53383, 53384, 53385, 53386, 53387, 53388, 53389, 53390, 53391, 53392, 53393, 53394, 53395, 53396, 45535, 45544, 45545, 45548, 45552, 45561, 45563, 45565, 45572, 45573, 45576, 45579, 45580, 45588, 45589, 45591, 45593, 45600, 45620, 45628, 45656, 45660, 45664, 45672, 45673, 45684, 45685, 45692, 45700, 45701, 45705, 45712, 45713, 45716, 45720, 45721, 45722, 45728, 45729, 45731, 45733, 45734, 45738, 45740, 45744, 45748, 45768, 45769, 45772, 45776, 45778, 45784, 45785, 45787, 45789, 45794, 45796, 45797, 45798, 45800, 45803, 45804, 45805, 45806, 45807, 45811, 45812, 45813, 45815, 45816, 45817, 45818, 45819, 45823, 45824, 45825, 45828, 45832, 45840, 45841, 45843, 45844, 45845, 45852, 45908, 45909, 45910, 45912, 45915, 45916, 45918, 45919, 45924, 45925, 53397, 53398, 53399, 53400, 53401, 53402, 53403, 53404, 53405, 53406, 53407, 53408, 53409, 53410, 53411, 53414, 53415, 53417, 53418, 53419, 53421, 53422, 53423, 53424, 53425, 53426, null, null, null, null, null, null, 53427, 53430, 53432, 53434, 53435, 53436, 53437, 53438, 53439, 53442, 53443, 53445, 53446, 53447, 53450, 53451, 53452, 53453, 53454, 53455, 53458, 53462, 53463, 53464, 53465, 53466, null, null, null, null, null, null, 53467, 53470, 53471, 53473, 53474, 53475, 53477, 53478, 53479, 53480, 53481, 53482, 53483, 53486, 53490, 53491, 53492, 53493, 53494, 53495, 53497, 53498, 53499, 53500, 53501, 53502, 53503, 53504, 53505, 53506, 53507, 53508, 45927, 45929, 45931, 45934, 45936, 45937, 45940, 45944, 45952, 45953, 45955, 45956, 45957, 45964, 45968, 45972, 45984, 45985, 45992, 45996, 46020, 46021, 46024, 46027, 46028, 46030, 46032, 46036, 46037, 46039, 46041, 46043, 46045, 46048, 46052, 46056, 46076, 46096, 46104, 46108, 46112, 46120, 46121, 46123, 46132, 46160, 46161, 46164, 46168, 46176, 46177, 46179, 46181, 46188, 46208, 46216, 46237, 46244, 46248, 46252, 46261, 46263, 46265, 46272, 46276, 46280, 46288, 46293, 46300, 46301, 46304, 46307, 46308, 46310, 46316, 46317, 46319, 46321, 46328, 46356, 46357, 46360, 46363, 46364, 46372, 46373, 46375, 46376, 46377, 46378, 46384, 46385, 46388, 46392, 53509, 53510, 53511, 53512, 53513, 53514, 53515, 53516, 53518, 53519, 53520, 53521, 53522, 53523, 53524, 53525, 53526, 53527, 53528, 53529, 53530, 53531, 53532, 53533, 53534, 53535, null, null, null, null, null, null, 53536, 53537, 53538, 53539, 53540, 53541, 53542, 53543, 53544, 53545, 53546, 53547, 53548, 53549, 53550, 53551, 53554, 53555, 53557, 53558, 53559, 53561, 53563, 53564, 53565, 53566, null, null, null, null, null, null, 53567, 53570, 53574, 53575, 53576, 53577, 53578, 53579, 53582, 53583, 53585, 53586, 53587, 53589, 53590, 53591, 53592, 53593, 53594, 53595, 53598, 53600, 53602, 53603, 53604, 53605, 53606, 53607, 53609, 53610, 53611, 53613, 46400, 46401, 46403, 46404, 46405, 46411, 46412, 46413, 46416, 46420, 46428, 46429, 46431, 46432, 46433, 46496, 46497, 46500, 46504, 46506, 46507, 46512, 46513, 46515, 46516, 46517, 46523, 46524, 46525, 46528, 46532, 46540, 46541, 46543, 46544, 46545, 46552, 46572, 46608, 46609, 46612, 46616, 46629, 46636, 46644, 46664, 46692, 46696, 46748, 46749, 46752, 46756, 46763, 46764, 46769, 46804, 46832, 46836, 46840, 46848, 46849, 46853, 46888, 46889, 46892, 46895, 46896, 46904, 46905, 46907, 46916, 46920, 46924, 46932, 46933, 46944, 46948, 46952, 46960, 46961, 46963, 46965, 46972, 46973, 46976, 46980, 46988, 46989, 46991, 46992, 46993, 46994, 46998, 46999, 53614, 53615, 53616, 53617, 53618, 53619, 53620, 53621, 53622, 53623, 53624, 53625, 53626, 53627, 53629, 53630, 53631, 53632, 53633, 53634, 53635, 53637, 53638, 53639, 53641, 53642, null, null, null, null, null, null, 53643, 53644, 53645, 53646, 53647, 53648, 53649, 53650, 53651, 53652, 53653, 53654, 53655, 53656, 53657, 53658, 53659, 53660, 53661, 53662, 53663, 53666, 53667, 53669, 53670, 53671, null, null, null, null, null, null, 53673, 53674, 53675, 53676, 53677, 53678, 53679, 53682, 53684, 53686, 53687, 53688, 53689, 53691, 53693, 53694, 53695, 53697, 53698, 53699, 53700, 53701, 53702, 53703, 53704, 53705, 53706, 53707, 53708, 53709, 53710, 53711, 47e3, 47001, 47004, 47008, 47016, 47017, 47019, 47020, 47021, 47028, 47029, 47032, 47047, 47049, 47084, 47085, 47088, 47092, 47100, 47101, 47103, 47104, 47105, 47111, 47112, 47113, 47116, 47120, 47128, 47129, 47131, 47133, 47140, 47141, 47144, 47148, 47156, 47157, 47159, 47160, 47161, 47168, 47172, 47185, 47187, 47196, 47197, 47200, 47204, 47212, 47213, 47215, 47217, 47224, 47228, 47245, 47272, 47280, 47284, 47288, 47296, 47297, 47299, 47301, 47308, 47312, 47316, 47325, 47327, 47329, 47336, 47337, 47340, 47344, 47352, 47353, 47355, 47357, 47364, 47384, 47392, 47420, 47421, 47424, 47428, 47436, 47439, 47441, 47448, 47449, 47452, 47456, 47464, 47465, 53712, 53713, 53714, 53715, 53716, 53717, 53718, 53719, 53721, 53722, 53723, 53724, 53725, 53726, 53727, 53728, 53729, 53730, 53731, 53732, 53733, 53734, 53735, 53736, 53737, 53738, null, null, null, null, null, null, 53739, 53740, 53741, 53742, 53743, 53744, 53745, 53746, 53747, 53749, 53750, 53751, 53753, 53754, 53755, 53756, 53757, 53758, 53759, 53760, 53761, 53762, 53763, 53764, 53765, 53766, null, null, null, null, null, null, 53768, 53770, 53771, 53772, 53773, 53774, 53775, 53777, 53778, 53779, 53780, 53781, 53782, 53783, 53784, 53785, 53786, 53787, 53788, 53789, 53790, 53791, 53792, 53793, 53794, 53795, 53796, 53797, 53798, 53799, 53800, 53801, 47467, 47469, 47476, 47477, 47480, 47484, 47492, 47493, 47495, 47497, 47498, 47501, 47502, 47532, 47533, 47536, 47540, 47548, 47549, 47551, 47553, 47560, 47561, 47564, 47566, 47567, 47568, 47569, 47570, 47576, 47577, 47579, 47581, 47582, 47585, 47587, 47588, 47589, 47592, 47596, 47604, 47605, 47607, 47608, 47609, 47610, 47616, 47617, 47624, 47637, 47672, 47673, 47676, 47680, 47682, 47688, 47689, 47691, 47693, 47694, 47699, 47700, 47701, 47704, 47708, 47716, 47717, 47719, 47720, 47721, 47728, 47729, 47732, 47736, 47747, 47748, 47749, 47751, 47756, 47784, 47785, 47787, 47788, 47792, 47794, 47800, 47801, 47803, 47805, 47812, 47816, 47832, 47833, 47868, 53802, 53803, 53806, 53807, 53809, 53810, 53811, 53813, 53814, 53815, 53816, 53817, 53818, 53819, 53822, 53824, 53826, 53827, 53828, 53829, 53830, 53831, 53833, 53834, 53835, 53836, null, null, null, null, null, null, 53837, 53838, 53839, 53840, 53841, 53842, 53843, 53844, 53845, 53846, 53847, 53848, 53849, 53850, 53851, 53853, 53854, 53855, 53856, 53857, 53858, 53859, 53861, 53862, 53863, 53864, null, null, null, null, null, null, 53865, 53866, 53867, 53868, 53869, 53870, 53871, 53872, 53873, 53874, 53875, 53876, 53877, 53878, 53879, 53880, 53881, 53882, 53883, 53884, 53885, 53886, 53887, 53890, 53891, 53893, 53894, 53895, 53897, 53898, 53899, 53900, 47872, 47876, 47885, 47887, 47889, 47896, 47900, 47904, 47913, 47915, 47924, 47925, 47926, 47928, 47931, 47932, 47933, 47934, 47940, 47941, 47943, 47945, 47949, 47951, 47952, 47956, 47960, 47969, 47971, 47980, 48008, 48012, 48016, 48036, 48040, 48044, 48052, 48055, 48064, 48068, 48072, 48080, 48083, 48120, 48121, 48124, 48127, 48128, 48130, 48136, 48137, 48139, 48140, 48141, 48143, 48145, 48148, 48149, 48150, 48151, 48152, 48155, 48156, 48157, 48158, 48159, 48164, 48165, 48167, 48169, 48173, 48176, 48177, 48180, 48184, 48192, 48193, 48195, 48196, 48197, 48201, 48204, 48205, 48208, 48221, 48260, 48261, 48264, 48267, 48268, 48270, 48276, 48277, 48279, 53901, 53902, 53903, 53906, 53907, 53908, 53910, 53911, 53912, 53913, 53914, 53915, 53917, 53918, 53919, 53921, 53922, 53923, 53925, 53926, 53927, 53928, 53929, 53930, 53931, 53933, null, null, null, null, null, null, 53934, 53935, 53936, 53938, 53939, 53940, 53941, 53942, 53943, 53946, 53947, 53949, 53950, 53953, 53955, 53956, 53957, 53958, 53959, 53962, 53964, 53965, 53966, 53967, 53968, 53969, null, null, null, null, null, null, 53970, 53971, 53973, 53974, 53975, 53977, 53978, 53979, 53981, 53982, 53983, 53984, 53985, 53986, 53987, 53990, 53991, 53992, 53993, 53994, 53995, 53996, 53997, 53998, 53999, 54002, 54003, 54005, 54006, 54007, 54009, 54010, 48281, 48282, 48288, 48289, 48292, 48295, 48296, 48304, 48305, 48307, 48308, 48309, 48316, 48317, 48320, 48324, 48333, 48335, 48336, 48337, 48341, 48344, 48348, 48372, 48373, 48374, 48376, 48380, 48388, 48389, 48391, 48393, 48400, 48404, 48420, 48428, 48448, 48456, 48457, 48460, 48464, 48472, 48473, 48484, 48488, 48512, 48513, 48516, 48519, 48520, 48521, 48522, 48528, 48529, 48531, 48533, 48537, 48538, 48540, 48548, 48560, 48568, 48596, 48597, 48600, 48604, 48617, 48624, 48628, 48632, 48640, 48643, 48645, 48652, 48653, 48656, 48660, 48668, 48669, 48671, 48708, 48709, 48712, 48716, 48718, 48724, 48725, 48727, 48729, 48730, 48731, 48736, 48737, 48740, 54011, 54012, 54013, 54014, 54015, 54018, 54020, 54022, 54023, 54024, 54025, 54026, 54027, 54031, 54033, 54034, 54035, 54037, 54039, 54040, 54041, 54042, 54043, 54046, 54050, 54051, null, null, null, null, null, null, 54052, 54054, 54055, 54058, 54059, 54061, 54062, 54063, 54065, 54066, 54067, 54068, 54069, 54070, 54071, 54074, 54078, 54079, 54080, 54081, 54082, 54083, 54086, 54087, 54088, 54089, null, null, null, null, null, null, 54090, 54091, 54092, 54093, 54094, 54095, 54096, 54097, 54098, 54099, 54100, 54101, 54102, 54103, 54104, 54105, 54106, 54107, 54108, 54109, 54110, 54111, 54112, 54113, 54114, 54115, 54116, 54117, 54118, 54119, 54120, 54121, 48744, 48746, 48752, 48753, 48755, 48756, 48757, 48763, 48764, 48765, 48768, 48772, 48780, 48781, 48783, 48784, 48785, 48792, 48793, 48808, 48848, 48849, 48852, 48855, 48856, 48864, 48867, 48868, 48869, 48876, 48897, 48904, 48905, 48920, 48921, 48923, 48924, 48925, 48960, 48961, 48964, 48968, 48976, 48977, 48981, 49044, 49072, 49093, 49100, 49101, 49104, 49108, 49116, 49119, 49121, 49212, 49233, 49240, 49244, 49248, 49256, 49257, 49296, 49297, 49300, 49304, 49312, 49313, 49315, 49317, 49324, 49325, 49327, 49328, 49331, 49332, 49333, 49334, 49340, 49341, 49343, 49344, 49345, 49349, 49352, 49353, 49356, 49360, 49368, 49369, 49371, 49372, 49373, 49380, 54122, 54123, 54124, 54125, 54126, 54127, 54128, 54129, 54130, 54131, 54132, 54133, 54134, 54135, 54136, 54137, 54138, 54139, 54142, 54143, 54145, 54146, 54147, 54149, 54150, 54151, null, null, null, null, null, null, 54152, 54153, 54154, 54155, 54158, 54162, 54163, 54164, 54165, 54166, 54167, 54170, 54171, 54173, 54174, 54175, 54177, 54178, 54179, 54180, 54181, 54182, 54183, 54186, 54188, 54190, null, null, null, null, null, null, 54191, 54192, 54193, 54194, 54195, 54197, 54198, 54199, 54201, 54202, 54203, 54205, 54206, 54207, 54208, 54209, 54210, 54211, 54214, 54215, 54218, 54219, 54220, 54221, 54222, 54223, 54225, 54226, 54227, 54228, 54229, 54230, 49381, 49384, 49388, 49396, 49397, 49399, 49401, 49408, 49412, 49416, 49424, 49429, 49436, 49437, 49438, 49439, 49440, 49443, 49444, 49446, 49447, 49452, 49453, 49455, 49456, 49457, 49462, 49464, 49465, 49468, 49472, 49480, 49481, 49483, 49484, 49485, 49492, 49493, 49496, 49500, 49508, 49509, 49511, 49512, 49513, 49520, 49524, 49528, 49541, 49548, 49549, 49550, 49552, 49556, 49558, 49564, 49565, 49567, 49569, 49573, 49576, 49577, 49580, 49584, 49597, 49604, 49608, 49612, 49620, 49623, 49624, 49632, 49636, 49640, 49648, 49649, 49651, 49660, 49661, 49664, 49668, 49676, 49677, 49679, 49681, 49688, 49689, 49692, 49695, 49696, 49704, 49705, 49707, 49709, 54231, 54233, 54234, 54235, 54236, 54237, 54238, 54239, 54240, 54242, 54244, 54245, 54246, 54247, 54248, 54249, 54250, 54251, 54254, 54255, 54257, 54258, 54259, 54261, 54262, 54263, null, null, null, null, null, null, 54264, 54265, 54266, 54267, 54270, 54272, 54274, 54275, 54276, 54277, 54278, 54279, 54281, 54282, 54283, 54284, 54285, 54286, 54287, 54288, 54289, 54290, 54291, 54292, 54293, 54294, null, null, null, null, null, null, 54295, 54296, 54297, 54298, 54299, 54300, 54302, 54303, 54304, 54305, 54306, 54307, 54308, 54309, 54310, 54311, 54312, 54313, 54314, 54315, 54316, 54317, 54318, 54319, 54320, 54321, 54322, 54323, 54324, 54325, 54326, 54327, 49711, 49713, 49714, 49716, 49736, 49744, 49745, 49748, 49752, 49760, 49765, 49772, 49773, 49776, 49780, 49788, 49789, 49791, 49793, 49800, 49801, 49808, 49816, 49819, 49821, 49828, 49829, 49832, 49836, 49837, 49844, 49845, 49847, 49849, 49884, 49885, 49888, 49891, 49892, 49899, 49900, 49901, 49903, 49905, 49910, 49912, 49913, 49915, 49916, 49920, 49928, 49929, 49932, 49933, 49939, 49940, 49941, 49944, 49948, 49956, 49957, 49960, 49961, 49989, 50024, 50025, 50028, 50032, 50034, 50040, 50041, 50044, 50045, 50052, 50056, 50060, 50112, 50136, 50137, 50140, 50143, 50144, 50146, 50152, 50153, 50157, 50164, 50165, 50168, 50184, 50192, 50212, 50220, 50224, 54328, 54329, 54330, 54331, 54332, 54333, 54334, 54335, 54337, 54338, 54339, 54341, 54342, 54343, 54344, 54345, 54346, 54347, 54348, 54349, 54350, 54351, 54352, 54353, 54354, 54355, null, null, null, null, null, null, 54356, 54357, 54358, 54359, 54360, 54361, 54362, 54363, 54365, 54366, 54367, 54369, 54370, 54371, 54373, 54374, 54375, 54376, 54377, 54378, 54379, 54380, 54382, 54384, 54385, 54386, null, null, null, null, null, null, 54387, 54388, 54389, 54390, 54391, 54394, 54395, 54397, 54398, 54401, 54403, 54404, 54405, 54406, 54407, 54410, 54412, 54414, 54415, 54416, 54417, 54418, 54419, 54421, 54422, 54423, 54424, 54425, 54426, 54427, 54428, 54429, 50228, 50236, 50237, 50248, 50276, 50277, 50280, 50284, 50292, 50293, 50297, 50304, 50324, 50332, 50360, 50364, 50409, 50416, 50417, 50420, 50424, 50426, 50431, 50432, 50433, 50444, 50448, 50452, 50460, 50472, 50473, 50476, 50480, 50488, 50489, 50491, 50493, 50500, 50501, 50504, 50505, 50506, 50508, 50509, 50510, 50515, 50516, 50517, 50519, 50520, 50521, 50525, 50526, 50528, 50529, 50532, 50536, 50544, 50545, 50547, 50548, 50549, 50556, 50557, 50560, 50564, 50567, 50572, 50573, 50575, 50577, 50581, 50583, 50584, 50588, 50592, 50601, 50612, 50613, 50616, 50617, 50619, 50620, 50621, 50622, 50628, 50629, 50630, 50631, 50632, 50633, 50634, 50636, 50638, 54430, 54431, 54432, 54433, 54434, 54435, 54436, 54437, 54438, 54439, 54440, 54442, 54443, 54444, 54445, 54446, 54447, 54448, 54449, 54450, 54451, 54452, 54453, 54454, 54455, 54456, null, null, null, null, null, null, 54457, 54458, 54459, 54460, 54461, 54462, 54463, 54464, 54465, 54466, 54467, 54468, 54469, 54470, 54471, 54472, 54473, 54474, 54475, 54477, 54478, 54479, 54481, 54482, 54483, 54485, null, null, null, null, null, null, 54486, 54487, 54488, 54489, 54490, 54491, 54493, 54494, 54496, 54497, 54498, 54499, 54500, 54501, 54502, 54503, 54505, 54506, 54507, 54509, 54510, 54511, 54513, 54514, 54515, 54516, 54517, 54518, 54519, 54521, 54522, 54524, 50640, 50641, 50644, 50648, 50656, 50657, 50659, 50661, 50668, 50669, 50670, 50672, 50676, 50678, 50679, 50684, 50685, 50686, 50687, 50688, 50689, 50693, 50694, 50695, 50696, 50700, 50704, 50712, 50713, 50715, 50716, 50724, 50725, 50728, 50732, 50733, 50734, 50736, 50739, 50740, 50741, 50743, 50745, 50747, 50752, 50753, 50756, 50760, 50768, 50769, 50771, 50772, 50773, 50780, 50781, 50784, 50796, 50799, 50801, 50808, 50809, 50812, 50816, 50824, 50825, 50827, 50829, 50836, 50837, 50840, 50844, 50852, 50853, 50855, 50857, 50864, 50865, 50868, 50872, 50873, 50874, 50880, 50881, 50883, 50885, 50892, 50893, 50896, 50900, 50908, 50909, 50912, 50913, 50920, 54526, 54527, 54528, 54529, 54530, 54531, 54533, 54534, 54535, 54537, 54538, 54539, 54541, 54542, 54543, 54544, 54545, 54546, 54547, 54550, 54552, 54553, 54554, 54555, 54556, 54557, null, null, null, null, null, null, 54558, 54559, 54560, 54561, 54562, 54563, 54564, 54565, 54566, 54567, 54568, 54569, 54570, 54571, 54572, 54573, 54574, 54575, 54576, 54577, 54578, 54579, 54580, 54581, 54582, 54583, null, null, null, null, null, null, 54584, 54585, 54586, 54587, 54590, 54591, 54593, 54594, 54595, 54597, 54598, 54599, 54600, 54601, 54602, 54603, 54606, 54608, 54610, 54611, 54612, 54613, 54614, 54615, 54618, 54619, 54621, 54622, 54623, 54625, 54626, 54627, 50921, 50924, 50928, 50936, 50937, 50941, 50948, 50949, 50952, 50956, 50964, 50965, 50967, 50969, 50976, 50977, 50980, 50984, 50992, 50993, 50995, 50997, 50999, 51004, 51005, 51008, 51012, 51018, 51020, 51021, 51023, 51025, 51026, 51027, 51028, 51029, 51030, 51031, 51032, 51036, 51040, 51048, 51051, 51060, 51061, 51064, 51068, 51069, 51070, 51075, 51076, 51077, 51079, 51080, 51081, 51082, 51086, 51088, 51089, 51092, 51094, 51095, 51096, 51098, 51104, 51105, 51107, 51108, 51109, 51110, 51116, 51117, 51120, 51124, 51132, 51133, 51135, 51136, 51137, 51144, 51145, 51148, 51150, 51152, 51160, 51165, 51172, 51176, 51180, 51200, 51201, 51204, 51208, 51210, 54628, 54630, 54631, 54634, 54636, 54638, 54639, 54640, 54641, 54642, 54643, 54646, 54647, 54649, 54650, 54651, 54653, 54654, 54655, 54656, 54657, 54658, 54659, 54662, 54666, 54667, null, null, null, null, null, null, 54668, 54669, 54670, 54671, 54673, 54674, 54675, 54676, 54677, 54678, 54679, 54680, 54681, 54682, 54683, 54684, 54685, 54686, 54687, 54688, 54689, 54690, 54691, 54692, 54694, 54695, null, null, null, null, null, null, 54696, 54697, 54698, 54699, 54700, 54701, 54702, 54703, 54704, 54705, 54706, 54707, 54708, 54709, 54710, 54711, 54712, 54713, 54714, 54715, 54716, 54717, 54718, 54719, 54720, 54721, 54722, 54723, 54724, 54725, 54726, 54727, 51216, 51217, 51219, 51221, 51222, 51228, 51229, 51232, 51236, 51244, 51245, 51247, 51249, 51256, 51260, 51264, 51272, 51273, 51276, 51277, 51284, 51312, 51313, 51316, 51320, 51322, 51328, 51329, 51331, 51333, 51334, 51335, 51339, 51340, 51341, 51348, 51357, 51359, 51361, 51368, 51388, 51389, 51396, 51400, 51404, 51412, 51413, 51415, 51417, 51424, 51425, 51428, 51445, 51452, 51453, 51456, 51460, 51461, 51462, 51468, 51469, 51471, 51473, 51480, 51500, 51508, 51536, 51537, 51540, 51544, 51552, 51553, 51555, 51564, 51568, 51572, 51580, 51592, 51593, 51596, 51600, 51608, 51609, 51611, 51613, 51648, 51649, 51652, 51655, 51656, 51658, 51664, 51665, 51667, 54730, 54731, 54733, 54734, 54735, 54737, 54739, 54740, 54741, 54742, 54743, 54746, 54748, 54750, 54751, 54752, 54753, 54754, 54755, 54758, 54759, 54761, 54762, 54763, 54765, 54766, null, null, null, null, null, null, 54767, 54768, 54769, 54770, 54771, 54774, 54776, 54778, 54779, 54780, 54781, 54782, 54783, 54786, 54787, 54789, 54790, 54791, 54793, 54794, 54795, 54796, 54797, 54798, 54799, 54802, null, null, null, null, null, null, 54806, 54807, 54808, 54809, 54810, 54811, 54813, 54814, 54815, 54817, 54818, 54819, 54821, 54822, 54823, 54824, 54825, 54826, 54827, 54828, 54830, 54831, 54832, 54833, 54834, 54835, 54836, 54837, 54838, 54839, 54842, 54843, 51669, 51670, 51673, 51674, 51676, 51677, 51680, 51682, 51684, 51687, 51692, 51693, 51695, 51696, 51697, 51704, 51705, 51708, 51712, 51720, 51721, 51723, 51724, 51725, 51732, 51736, 51753, 51788, 51789, 51792, 51796, 51804, 51805, 51807, 51808, 51809, 51816, 51837, 51844, 51864, 51900, 51901, 51904, 51908, 51916, 51917, 51919, 51921, 51923, 51928, 51929, 51936, 51948, 51956, 51976, 51984, 51988, 51992, 52e3, 52001, 52033, 52040, 52041, 52044, 52048, 52056, 52057, 52061, 52068, 52088, 52089, 52124, 52152, 52180, 52196, 52199, 52201, 52236, 52237, 52240, 52244, 52252, 52253, 52257, 52258, 52263, 52264, 52265, 52268, 52270, 52272, 52280, 52281, 52283, 54845, 54846, 54847, 54849, 54850, 54851, 54852, 54854, 54855, 54858, 54860, 54862, 54863, 54864, 54866, 54867, 54870, 54871, 54873, 54874, 54875, 54877, 54878, 54879, 54880, 54881, null, null, null, null, null, null, 54882, 54883, 54884, 54885, 54886, 54888, 54890, 54891, 54892, 54893, 54894, 54895, 54898, 54899, 54901, 54902, 54903, 54904, 54905, 54906, 54907, 54908, 54909, 54910, 54911, 54912, null, null, null, null, null, null, 54913, 54914, 54916, 54918, 54919, 54920, 54921, 54922, 54923, 54926, 54927, 54929, 54930, 54931, 54933, 54934, 54935, 54936, 54937, 54938, 54939, 54940, 54942, 54944, 54946, 54947, 54948, 54949, 54950, 54951, 54953, 54954, 52284, 52285, 52286, 52292, 52293, 52296, 52300, 52308, 52309, 52311, 52312, 52313, 52320, 52324, 52326, 52328, 52336, 52341, 52376, 52377, 52380, 52384, 52392, 52393, 52395, 52396, 52397, 52404, 52405, 52408, 52412, 52420, 52421, 52423, 52425, 52432, 52436, 52452, 52460, 52464, 52481, 52488, 52489, 52492, 52496, 52504, 52505, 52507, 52509, 52516, 52520, 52524, 52537, 52572, 52576, 52580, 52588, 52589, 52591, 52593, 52600, 52616, 52628, 52629, 52632, 52636, 52644, 52645, 52647, 52649, 52656, 52676, 52684, 52688, 52712, 52716, 52720, 52728, 52729, 52731, 52733, 52740, 52744, 52748, 52756, 52761, 52768, 52769, 52772, 52776, 52784, 52785, 52787, 52789, 54955, 54957, 54958, 54959, 54961, 54962, 54963, 54964, 54965, 54966, 54967, 54968, 54970, 54972, 54973, 54974, 54975, 54976, 54977, 54978, 54979, 54982, 54983, 54985, 54986, 54987, null, null, null, null, null, null, 54989, 54990, 54991, 54992, 54994, 54995, 54997, 54998, 55e3, 55002, 55003, 55004, 55005, 55006, 55007, 55009, 55010, 55011, 55013, 55014, 55015, 55017, 55018, 55019, 55020, 55021, null, null, null, null, null, null, 55022, 55023, 55025, 55026, 55027, 55028, 55030, 55031, 55032, 55033, 55034, 55035, 55038, 55039, 55041, 55042, 55043, 55045, 55046, 55047, 55048, 55049, 55050, 55051, 55052, 55053, 55054, 55055, 55056, 55058, 55059, 55060, 52824, 52825, 52828, 52831, 52832, 52833, 52840, 52841, 52843, 52845, 52852, 52853, 52856, 52860, 52868, 52869, 52871, 52873, 52880, 52881, 52884, 52888, 52896, 52897, 52899, 52900, 52901, 52908, 52909, 52929, 52964, 52965, 52968, 52971, 52972, 52980, 52981, 52983, 52984, 52985, 52992, 52993, 52996, 53e3, 53008, 53009, 53011, 53013, 53020, 53024, 53028, 53036, 53037, 53039, 53040, 53041, 53048, 53076, 53077, 53080, 53084, 53092, 53093, 53095, 53097, 53104, 53105, 53108, 53112, 53120, 53125, 53132, 53153, 53160, 53168, 53188, 53216, 53217, 53220, 53224, 53232, 53233, 53235, 53237, 53244, 53248, 53252, 53265, 53272, 53293, 53300, 53301, 53304, 53308, 55061, 55062, 55063, 55066, 55067, 55069, 55070, 55071, 55073, 55074, 55075, 55076, 55077, 55078, 55079, 55082, 55084, 55086, 55087, 55088, 55089, 55090, 55091, 55094, 55095, 55097, null, null, null, null, null, null, 55098, 55099, 55101, 55102, 55103, 55104, 55105, 55106, 55107, 55109, 55110, 55112, 55114, 55115, 55116, 55117, 55118, 55119, 55122, 55123, 55125, 55130, 55131, 55132, 55133, 55134, null, null, null, null, null, null, 55135, 55138, 55140, 55142, 55143, 55144, 55146, 55147, 55149, 55150, 55151, 55153, 55154, 55155, 55157, 55158, 55159, 55160, 55161, 55162, 55163, 55166, 55167, 55168, 55170, 55171, 55172, 55173, 55174, 55175, 55178, 55179, 53316, 53317, 53319, 53321, 53328, 53332, 53336, 53344, 53356, 53357, 53360, 53364, 53372, 53373, 53377, 53412, 53413, 53416, 53420, 53428, 53429, 53431, 53433, 53440, 53441, 53444, 53448, 53449, 53456, 53457, 53459, 53460, 53461, 53468, 53469, 53472, 53476, 53484, 53485, 53487, 53488, 53489, 53496, 53517, 53552, 53553, 53556, 53560, 53562, 53568, 53569, 53571, 53572, 53573, 53580, 53581, 53584, 53588, 53596, 53597, 53599, 53601, 53608, 53612, 53628, 53636, 53640, 53664, 53665, 53668, 53672, 53680, 53681, 53683, 53685, 53690, 53692, 53696, 53720, 53748, 53752, 53767, 53769, 53776, 53804, 53805, 53808, 53812, 53820, 53821, 53823, 53825, 53832, 53852, 55181, 55182, 55183, 55185, 55186, 55187, 55188, 55189, 55190, 55191, 55194, 55196, 55198, 55199, 55200, 55201, 55202, 55203, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 53860, 53888, 53889, 53892, 53896, 53904, 53905, 53909, 53916, 53920, 53924, 53932, 53937, 53944, 53945, 53948, 53951, 53952, 53954, 53960, 53961, 53963, 53972, 53976, 53980, 53988, 53989, 54e3, 54001, 54004, 54008, 54016, 54017, 54019, 54021, 54028, 54029, 54030, 54032, 54036, 54038, 54044, 54045, 54047, 54048, 54049, 54053, 54056, 54057, 54060, 54064, 54072, 54073, 54075, 54076, 54077, 54084, 54085, 54140, 54141, 54144, 54148, 54156, 54157, 54159, 54160, 54161, 54168, 54169, 54172, 54176, 54184, 54185, 54187, 54189, 54196, 54200, 54204, 54212, 54213, 54216, 54217, 54224, 54232, 54241, 54243, 54252, 54253, 54256, 54260, 54268, 54269, 54271, 54273, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 54280, 54301, 54336, 54340, 54364, 54368, 54372, 54381, 54383, 54392, 54393, 54396, 54399, 54400, 54402, 54408, 54409, 54411, 54413, 54420, 54441, 54476, 54480, 54484, 54492, 54495, 54504, 54508, 54512, 54520, 54523, 54525, 54532, 54536, 54540, 54548, 54549, 54551, 54588, 54589, 54592, 54596, 54604, 54605, 54607, 54609, 54616, 54617, 54620, 54624, 54629, 54632, 54633, 54635, 54637, 54644, 54645, 54648, 54652, 54660, 54661, 54663, 54664, 54665, 54672, 54693, 54728, 54729, 54732, 54736, 54738, 54744, 54745, 54747, 54749, 54756, 54757, 54760, 54764, 54772, 54773, 54775, 54777, 54784, 54785, 54788, 54792, 54800, 54801, 54803, 54804, 54805, 54812, 54816, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 54820, 54829, 54840, 54841, 54844, 54848, 54853, 54856, 54857, 54859, 54861, 54865, 54868, 54869, 54872, 54876, 54887, 54889, 54896, 54897, 54900, 54915, 54917, 54924, 54925, 54928, 54932, 54941, 54943, 54945, 54952, 54956, 54960, 54969, 54971, 54980, 54981, 54984, 54988, 54993, 54996, 54999, 55001, 55008, 55012, 55016, 55024, 55029, 55036, 55037, 55040, 55044, 55057, 55064, 55065, 55068, 55072, 55080, 55081, 55083, 55085, 55092, 55093, 55096, 55100, 55108, 55111, 55113, 55120, 55121, 55124, 55126, 55127, 55128, 55129, 55136, 55137, 55139, 55141, 55145, 55148, 55152, 55156, 55164, 55165, 55169, 55176, 55177, 55180, 55184, 55192, 55193, 55195, 55197, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 20285, 20339, 20551, 20729, 21152, 21487, 21621, 21733, 22025, 23233, 23478, 26247, 26550, 26551, 26607, 27468, 29634, 30146, 31292, 33499, 33540, 34903, 34952, 35382, 36040, 36303, 36603, 36838, 39381, 21051, 21364, 21508, 24682, 24932, 27580, 29647, 33050, 35258, 35282, 38307, 20355, 21002, 22718, 22904, 23014, 24178, 24185, 25031, 25536, 26438, 26604, 26751, 28567, 30286, 30475, 30965, 31240, 31487, 31777, 32925, 33390, 33393, 35563, 38291, 20075, 21917, 26359, 28212, 30883, 31469, 33883, 35088, 34638, 38824, 21208, 22350, 22570, 23884, 24863, 25022, 25121, 25954, 26577, 27204, 28187, 29976, 30131, 30435, 30640, 32058, 37039, 37969, 37970, 40853, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 21283, 23724, 30002, 32987, 37440, 38296, 21083, 22536, 23004, 23713, 23831, 24247, 24378, 24394, 24951, 27743, 30074, 30086, 31968, 32115, 32177, 32652, 33108, 33313, 34193, 35137, 35611, 37628, 38477, 40007, 20171, 20215, 20491, 20977, 22607, 24887, 24894, 24936, 25913, 27114, 28433, 30117, 30342, 30422, 31623, 33445, 33995, 63744, 37799, 38283, 21888, 23458, 22353, 63745, 31923, 32697, 37301, 20520, 21435, 23621, 24040, 25298, 25454, 25818, 25831, 28192, 28844, 31067, 36317, 36382, 63746, 36989, 37445, 37624, 20094, 20214, 20581, 24062, 24314, 24838, 26967, 33137, 34388, 36423, 37749, 39467, 20062, 20625, 26480, 26688, 20745, 21133, 21138, 27298, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 30652, 37392, 40660, 21163, 24623, 36850, 20552, 25001, 25581, 25802, 26684, 27268, 28608, 33160, 35233, 38548, 22533, 29309, 29356, 29956, 32121, 32365, 32937, 35211, 35700, 36963, 40273, 25225, 27770, 28500, 32080, 32570, 35363, 20860, 24906, 31645, 35609, 37463, 37772, 20140, 20435, 20510, 20670, 20742, 21185, 21197, 21375, 22384, 22659, 24218, 24465, 24950, 25004, 25806, 25964, 26223, 26299, 26356, 26775, 28039, 28805, 28913, 29855, 29861, 29898, 30169, 30828, 30956, 31455, 31478, 32069, 32147, 32789, 32831, 33051, 33686, 35686, 36629, 36885, 37857, 38915, 38968, 39514, 39912, 20418, 21843, 22586, 22865, 23395, 23622, 24760, 25106, 26690, 26800, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 26856, 28330, 30028, 30328, 30926, 31293, 31995, 32363, 32380, 35336, 35489, 35903, 38542, 40388, 21476, 21481, 21578, 21617, 22266, 22993, 23396, 23611, 24235, 25335, 25911, 25925, 25970, 26272, 26543, 27073, 27837, 30204, 30352, 30590, 31295, 32660, 32771, 32929, 33167, 33510, 33533, 33776, 34241, 34865, 34996, 35493, 63747, 36764, 37678, 38599, 39015, 39640, 40723, 21741, 26011, 26354, 26767, 31296, 35895, 40288, 22256, 22372, 23825, 26118, 26801, 26829, 28414, 29736, 34974, 39908, 27752, 63748, 39592, 20379, 20844, 20849, 21151, 23380, 24037, 24656, 24685, 25329, 25511, 25915, 29657, 31354, 34467, 36002, 38799, 20018, 23521, 25096, 26524, 29916, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 31185, 33747, 35463, 35506, 36328, 36942, 37707, 38982, 24275, 27112, 34303, 37101, 63749, 20896, 23448, 23532, 24931, 26874, 27454, 28748, 29743, 29912, 31649, 32592, 33733, 35264, 36011, 38364, 39208, 21038, 24669, 25324, 36866, 20362, 20809, 21281, 22745, 24291, 26336, 27960, 28826, 29378, 29654, 31568, 33009, 37979, 21350, 25499, 32619, 20054, 20608, 22602, 22750, 24618, 24871, 25296, 27088, 39745, 23439, 32024, 32945, 36703, 20132, 20689, 21676, 21932, 23308, 23968, 24039, 25898, 25934, 26657, 27211, 29409, 30350, 30703, 32094, 32761, 33184, 34126, 34527, 36611, 36686, 37066, 39171, 39509, 39851, 19992, 20037, 20061, 20167, 20465, 20855, 21246, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 21312, 21475, 21477, 21646, 22036, 22389, 22434, 23495, 23943, 24272, 25084, 25304, 25937, 26552, 26601, 27083, 27472, 27590, 27628, 27714, 28317, 28792, 29399, 29590, 29699, 30655, 30697, 31350, 32127, 32777, 33276, 33285, 33290, 33503, 34914, 35635, 36092, 36544, 36881, 37041, 37476, 37558, 39378, 39493, 40169, 40407, 40860, 22283, 23616, 33738, 38816, 38827, 40628, 21531, 31384, 32676, 35033, 36557, 37089, 22528, 23624, 25496, 31391, 23470, 24339, 31353, 31406, 33422, 36524, 20518, 21048, 21240, 21367, 22280, 25331, 25458, 27402, 28099, 30519, 21413, 29527, 34152, 36470, 38357, 26426, 27331, 28528, 35437, 36556, 39243, 63750, 26231, 27512, 36020, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 39740, 63751, 21483, 22317, 22862, 25542, 27131, 29674, 30789, 31418, 31429, 31998, 33909, 35215, 36211, 36917, 38312, 21243, 22343, 30023, 31584, 33740, 37406, 63752, 27224, 20811, 21067, 21127, 25119, 26840, 26997, 38553, 20677, 21156, 21220, 25027, 26020, 26681, 27135, 29822, 31563, 33465, 33771, 35250, 35641, 36817, 39241, 63753, 20170, 22935, 25810, 26129, 27278, 29748, 31105, 31165, 33449, 34942, 34943, 35167, 63754, 37670, 20235, 21450, 24613, 25201, 27762, 32026, 32102, 20120, 20834, 30684, 32943, 20225, 20238, 20854, 20864, 21980, 22120, 22331, 22522, 22524, 22804, 22855, 22931, 23492, 23696, 23822, 24049, 24190, 24524, 25216, 26071, 26083, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 26398, 26399, 26462, 26827, 26820, 27231, 27450, 27683, 27773, 27778, 28103, 29592, 29734, 29738, 29826, 29859, 30072, 30079, 30849, 30959, 31041, 31047, 31048, 31098, 31637, 32e3, 32186, 32648, 32774, 32813, 32908, 35352, 35663, 35912, 36215, 37665, 37668, 39138, 39249, 39438, 39439, 39525, 40594, 32202, 20342, 21513, 25326, 26708, 37329, 21931, 20794, 63755, 63756, 23068, 25062, 63757, 25295, 25343, 63758, 63759, 63760, 63761, 63762, 63763, 37027, 63764, 63765, 63766, 63767, 63768, 35582, 63769, 63770, 63771, 63772, 26262, 63773, 29014, 63774, 63775, 38627, 63776, 25423, 25466, 21335, 63777, 26511, 26976, 28275, 63778, 30007, 63779, 63780, 63781, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 32013, 63782, 63783, 34930, 22218, 23064, 63784, 63785, 63786, 63787, 63788, 20035, 63789, 20839, 22856, 26608, 32784, 63790, 22899, 24180, 25754, 31178, 24565, 24684, 25288, 25467, 23527, 23511, 21162, 63791, 22900, 24361, 24594, 63792, 63793, 63794, 29785, 63795, 63796, 63797, 63798, 63799, 63800, 39377, 63801, 63802, 63803, 63804, 63805, 63806, 63807, 63808, 63809, 63810, 63811, 28611, 63812, 63813, 33215, 36786, 24817, 63814, 63815, 33126, 63816, 63817, 23615, 63818, 63819, 63820, 63821, 63822, 63823, 63824, 63825, 23273, 35365, 26491, 32016, 63826, 63827, 63828, 63829, 63830, 63831, 33021, 63832, 63833, 23612, 27877, 21311, 28346, 22810, 33590, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 20025, 20150, 20294, 21934, 22296, 22727, 24406, 26039, 26086, 27264, 27573, 28237, 30701, 31471, 31774, 32222, 34507, 34962, 37170, 37723, 25787, 28606, 29562, 30136, 36948, 21846, 22349, 25018, 25812, 26311, 28129, 28251, 28525, 28601, 30192, 32835, 33213, 34113, 35203, 35527, 35674, 37663, 27795, 30035, 31572, 36367, 36957, 21776, 22530, 22616, 24162, 25095, 25758, 26848, 30070, 31958, 34739, 40680, 20195, 22408, 22382, 22823, 23565, 23729, 24118, 24453, 25140, 25825, 29619, 33274, 34955, 36024, 38538, 40667, 23429, 24503, 24755, 20498, 20992, 21040, 22294, 22581, 22615, 23566, 23648, 23798, 23947, 24230, 24466, 24764, 25361, 25481, 25623, 26691, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 26873, 27330, 28120, 28193, 28372, 28644, 29182, 30428, 30585, 31153, 31291, 33796, 35241, 36077, 36339, 36424, 36867, 36884, 36947, 37117, 37709, 38518, 38876, 27602, 28678, 29272, 29346, 29544, 30563, 31167, 31716, 32411, 35712, 22697, 24775, 25958, 26109, 26302, 27788, 28958, 29129, 35930, 38931, 20077, 31361, 20189, 20908, 20941, 21205, 21516, 24999, 26481, 26704, 26847, 27934, 28540, 30140, 30643, 31461, 33012, 33891, 37509, 20828, 26007, 26460, 26515, 30168, 31431, 33651, 63834, 35910, 36887, 38957, 23663, 33216, 33434, 36929, 36975, 37389, 24471, 23965, 27225, 29128, 30331, 31561, 34276, 35588, 37159, 39472, 21895, 25078, 63835, 30313, 32645, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 34367, 34746, 35064, 37007, 63836, 27931, 28889, 29662, 32097, 33853, 63837, 37226, 39409, 63838, 20098, 21365, 27396, 27410, 28734, 29211, 34349, 40478, 21068, 36771, 23888, 25829, 25900, 27414, 28651, 31811, 32412, 34253, 35172, 35261, 25289, 33240, 34847, 24266, 26391, 28010, 29436, 29701, 29807, 34690, 37086, 20358, 23821, 24480, 33802, 20919, 25504, 30053, 20142, 20486, 20841, 20937, 26753, 27153, 31918, 31921, 31975, 33391, 35538, 36635, 37327, 20406, 20791, 21237, 21570, 24300, 24942, 25150, 26053, 27354, 28670, 31018, 34268, 34851, 38317, 39522, 39530, 40599, 40654, 21147, 26310, 27511, 28701, 31019, 36706, 38722, 24976, 25088, 25891, 28451, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 29001, 29833, 32244, 32879, 34030, 36646, 36899, 37706, 20925, 21015, 21155, 27916, 28872, 35010, 24265, 25986, 27566, 28610, 31806, 29557, 20196, 20278, 22265, 63839, 23738, 23994, 24604, 29618, 31533, 32666, 32718, 32838, 36894, 37428, 38646, 38728, 38936, 40801, 20363, 28583, 31150, 37300, 38583, 21214, 63840, 25736, 25796, 27347, 28510, 28696, 29200, 30439, 32769, 34310, 34396, 36335, 36613, 38706, 39791, 40442, 40565, 30860, 31103, 32160, 33737, 37636, 40575, 40595, 35542, 22751, 24324, 26407, 28711, 29903, 31840, 32894, 20769, 28712, 29282, 30922, 36034, 36058, 36084, 38647, 20102, 20698, 23534, 24278, 26009, 29134, 30274, 30637, 32842, 34044, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 36988, 39719, 40845, 22744, 23105, 23650, 27155, 28122, 28431, 30267, 32047, 32311, 34078, 35128, 37860, 38475, 21129, 26066, 26611, 27060, 27969, 28316, 28687, 29705, 29792, 30041, 30244, 30827, 35628, 39006, 20845, 25134, 38520, 20374, 20523, 23833, 28138, 32184, 36650, 24459, 24900, 26647, 63841, 38534, 21202, 32907, 20956, 20940, 26974, 31260, 32190, 33777, 38517, 20442, 21033, 21400, 21519, 21774, 23653, 24743, 26446, 26792, 28012, 29313, 29432, 29702, 29827, 63842, 30178, 31852, 32633, 32696, 33673, 35023, 35041, 37324, 37328, 38626, 39881, 21533, 28542, 29136, 29848, 34298, 36522, 38563, 40023, 40607, 26519, 28107, 29747, 33256, 38678, 30764, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 31435, 31520, 31890, 25705, 29802, 30194, 30908, 30952, 39340, 39764, 40635, 23518, 24149, 28448, 33180, 33707, 37e3, 19975, 21325, 23081, 24018, 24398, 24930, 25405, 26217, 26364, 28415, 28459, 28771, 30622, 33836, 34067, 34875, 36627, 39237, 39995, 21788, 25273, 26411, 27819, 33545, 35178, 38778, 20129, 22916, 24536, 24537, 26395, 32178, 32596, 33426, 33579, 33725, 36638, 37017, 22475, 22969, 23186, 23504, 26151, 26522, 26757, 27599, 29028, 32629, 36023, 36067, 36993, 39749, 33032, 35978, 38476, 39488, 40613, 23391, 27667, 29467, 30450, 30431, 33804, 20906, 35219, 20813, 20885, 21193, 26825, 27796, 30468, 30496, 32191, 32236, 38754, 40629, 28357, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 34065, 20901, 21517, 21629, 26126, 26269, 26919, 28319, 30399, 30609, 33559, 33986, 34719, 37225, 37528, 40180, 34946, 20398, 20882, 21215, 22982, 24125, 24917, 25720, 25721, 26286, 26576, 27169, 27597, 27611, 29279, 29281, 29761, 30520, 30683, 32791, 33468, 33541, 35584, 35624, 35980, 26408, 27792, 29287, 30446, 30566, 31302, 40361, 27519, 27794, 22818, 26406, 33945, 21359, 22675, 22937, 24287, 25551, 26164, 26483, 28218, 29483, 31447, 33495, 37672, 21209, 24043, 25006, 25035, 25098, 25287, 25771, 26080, 26969, 27494, 27595, 28961, 29687, 30045, 32326, 33310, 33538, 34154, 35491, 36031, 38695, 40289, 22696, 40664, 20497, 21006, 21563, 21839, 25991, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 27766, 32010, 32011, 32862, 34442, 38272, 38639, 21247, 27797, 29289, 21619, 23194, 23614, 23883, 24396, 24494, 26410, 26806, 26979, 28220, 28228, 30473, 31859, 32654, 34183, 35598, 36855, 38753, 40692, 23735, 24758, 24845, 25003, 25935, 26107, 26108, 27665, 27887, 29599, 29641, 32225, 38292, 23494, 34588, 35600, 21085, 21338, 25293, 25615, 25778, 26420, 27192, 27850, 29632, 29854, 31636, 31893, 32283, 33162, 33334, 34180, 36843, 38649, 39361, 20276, 21322, 21453, 21467, 25292, 25644, 25856, 26001, 27075, 27886, 28504, 29677, 30036, 30242, 30436, 30460, 30928, 30971, 31020, 32070, 33324, 34784, 36820, 38930, 39151, 21187, 25300, 25765, 28196, 28497, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 30332, 36299, 37297, 37474, 39662, 39747, 20515, 20621, 22346, 22952, 23592, 24135, 24439, 25151, 25918, 26041, 26049, 26121, 26507, 27036, 28354, 30917, 32033, 32938, 33152, 33323, 33459, 33953, 34444, 35370, 35607, 37030, 38450, 40848, 20493, 20467, 63843, 22521, 24472, 25308, 25490, 26479, 28227, 28953, 30403, 32972, 32986, 35060, 35061, 35097, 36064, 36649, 37197, 38506, 20271, 20336, 24091, 26575, 26658, 30333, 30334, 39748, 24161, 27146, 29033, 29140, 30058, 63844, 32321, 34115, 34281, 39132, 20240, 31567, 32624, 38309, 20961, 24070, 26805, 27710, 27726, 27867, 29359, 31684, 33539, 27861, 29754, 20731, 21128, 22721, 25816, 27287, 29863, 30294, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 30887, 34327, 38370, 38713, 63845, 21342, 24321, 35722, 36776, 36783, 37002, 21029, 30629, 40009, 40712, 19993, 20482, 20853, 23643, 24183, 26142, 26170, 26564, 26821, 28851, 29953, 30149, 31177, 31453, 36647, 39200, 39432, 20445, 22561, 22577, 23542, 26222, 27493, 27921, 28282, 28541, 29668, 29995, 33769, 35036, 35091, 35676, 36628, 20239, 20693, 21264, 21340, 23443, 24489, 26381, 31119, 33145, 33583, 34068, 35079, 35206, 36665, 36667, 39333, 39954, 26412, 20086, 20472, 22857, 23553, 23791, 23792, 25447, 26834, 28925, 29090, 29739, 32299, 34028, 34562, 36898, 37586, 40179, 19981, 20184, 20463, 20613, 21078, 21103, 21542, 21648, 22496, 22827, 23142, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 23386, 23413, 23500, 24220, 63846, 25206, 25975, 26023, 28014, 28325, 29238, 31526, 31807, 32566, 33104, 33105, 33178, 33344, 33433, 33705, 35331, 36e3, 36070, 36091, 36212, 36282, 37096, 37340, 38428, 38468, 39385, 40167, 21271, 20998, 21545, 22132, 22707, 22868, 22894, 24575, 24996, 25198, 26128, 27774, 28954, 30406, 31881, 31966, 32027, 33452, 36033, 38640, 63847, 20315, 24343, 24447, 25282, 23849, 26379, 26842, 30844, 32323, 40300, 19989, 20633, 21269, 21290, 21329, 22915, 23138, 24199, 24754, 24970, 25161, 25209, 26e3, 26503, 27047, 27604, 27606, 27607, 27608, 27832, 63848, 29749, 30202, 30738, 30865, 31189, 31192, 31875, 32203, 32737, 32933, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 33086, 33218, 33778, 34586, 35048, 35513, 35692, 36027, 37145, 38750, 39131, 40763, 22188, 23338, 24428, 25996, 27315, 27567, 27996, 28657, 28693, 29277, 29613, 36007, 36051, 38971, 24977, 27703, 32856, 39425, 20045, 20107, 20123, 20181, 20282, 20284, 20351, 20447, 20735, 21490, 21496, 21766, 21987, 22235, 22763, 22882, 23057, 23531, 23546, 23556, 24051, 24107, 24473, 24605, 25448, 26012, 26031, 26614, 26619, 26797, 27515, 27801, 27863, 28195, 28681, 29509, 30722, 31038, 31040, 31072, 31169, 31721, 32023, 32114, 32902, 33293, 33678, 34001, 34503, 35039, 35408, 35422, 35613, 36060, 36198, 36781, 37034, 39164, 39391, 40605, 21066, 63849, 26388, 63850, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 20632, 21034, 23665, 25955, 27733, 29642, 29987, 30109, 31639, 33948, 37240, 38704, 20087, 25746, 27578, 29022, 34217, 19977, 63851, 26441, 26862, 28183, 33439, 34072, 34923, 25591, 28545, 37394, 39087, 19978, 20663, 20687, 20767, 21830, 21930, 22039, 23360, 23577, 23776, 24120, 24202, 24224, 24258, 24819, 26705, 27233, 28248, 29245, 29248, 29376, 30456, 31077, 31665, 32724, 35059, 35316, 35443, 35937, 36062, 38684, 22622, 29885, 36093, 21959, 63852, 31329, 32034, 33394, 29298, 29983, 29989, 63853, 31513, 22661, 22779, 23996, 24207, 24246, 24464, 24661, 25234, 25471, 25933, 26257, 26329, 26360, 26646, 26866, 29312, 29790, 31598, 32110, 32214, 32626, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 32997, 33298, 34223, 35199, 35475, 36893, 37604, 40653, 40736, 22805, 22893, 24109, 24796, 26132, 26227, 26512, 27728, 28101, 28511, 30707, 30889, 33990, 37323, 37675, 20185, 20682, 20808, 21892, 23307, 23459, 25159, 25982, 26059, 28210, 29053, 29697, 29764, 29831, 29887, 30316, 31146, 32218, 32341, 32680, 33146, 33203, 33337, 34330, 34796, 35445, 36323, 36984, 37521, 37925, 39245, 39854, 21352, 23633, 26964, 27844, 27945, 28203, 33292, 34203, 35131, 35373, 35498, 38634, 40807, 21089, 26297, 27570, 32406, 34814, 36109, 38275, 38493, 25885, 28041, 29166, 63854, 22478, 22995, 23468, 24615, 24826, 25104, 26143, 26207, 29481, 29689, 30427, 30465, 31596, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 32854, 32882, 33125, 35488, 37266, 19990, 21218, 27506, 27927, 31237, 31545, 32048, 63855, 36016, 21484, 22063, 22609, 23477, 23567, 23569, 24034, 25152, 25475, 25620, 26157, 26803, 27836, 28040, 28335, 28703, 28836, 29138, 29990, 30095, 30094, 30233, 31505, 31712, 31787, 32032, 32057, 34092, 34157, 34311, 35380, 36877, 36961, 37045, 37559, 38902, 39479, 20439, 23660, 26463, 28049, 31903, 32396, 35606, 36118, 36895, 23403, 24061, 25613, 33984, 36956, 39137, 29575, 23435, 24730, 26494, 28126, 35359, 35494, 36865, 38924, 21047, 63856, 28753, 30862, 37782, 34928, 37335, 20462, 21463, 22013, 22234, 22402, 22781, 23234, 23432, 23723, 23744, 24101, 24833, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 25101, 25163, 25480, 25628, 25910, 25976, 27193, 27530, 27700, 27929, 28465, 29159, 29417, 29560, 29703, 29874, 30246, 30561, 31168, 31319, 31466, 31929, 32143, 32172, 32353, 32670, 33065, 33585, 33936, 34010, 34282, 34966, 35504, 35728, 36664, 36930, 36995, 37228, 37526, 37561, 38539, 38567, 38568, 38614, 38656, 38920, 39318, 39635, 39706, 21460, 22654, 22809, 23408, 23487, 28113, 28506, 29087, 29729, 29881, 32901, 33789, 24033, 24455, 24490, 24642, 26092, 26642, 26991, 27219, 27529, 27957, 28147, 29667, 30462, 30636, 31565, 32020, 33059, 33308, 33600, 34036, 34147, 35426, 35524, 37255, 37662, 38918, 39348, 25100, 34899, 36848, 37477, 23815, 23847, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 23913, 29791, 33181, 34664, 28629, 25342, 32722, 35126, 35186, 19998, 20056, 20711, 21213, 21319, 25215, 26119, 32361, 34821, 38494, 20365, 21273, 22070, 22987, 23204, 23608, 23630, 23629, 24066, 24337, 24643, 26045, 26159, 26178, 26558, 26612, 29468, 30690, 31034, 32709, 33940, 33997, 35222, 35430, 35433, 35553, 35925, 35962, 22516, 23508, 24335, 24687, 25325, 26893, 27542, 28252, 29060, 31698, 34645, 35672, 36606, 39135, 39166, 20280, 20353, 20449, 21627, 23072, 23480, 24892, 26032, 26216, 29180, 30003, 31070, 32051, 33102, 33251, 33688, 34218, 34254, 34563, 35338, 36523, 36763, 63857, 36805, 22833, 23460, 23526, 24713, 23529, 23563, 24515, 27777, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 63858, 28145, 28683, 29978, 33455, 35574, 20160, 21313, 63859, 38617, 27663, 20126, 20420, 20818, 21854, 23077, 23784, 25105, 29273, 33469, 33706, 34558, 34905, 35357, 38463, 38597, 39187, 40201, 40285, 22538, 23731, 23997, 24132, 24801, 24853, 25569, 27138, 28197, 37122, 37716, 38990, 39952, 40823, 23433, 23736, 25353, 26191, 26696, 30524, 38593, 38797, 38996, 39839, 26017, 35585, 36555, 38332, 21813, 23721, 24022, 24245, 26263, 30284, 33780, 38343, 22739, 25276, 29390, 40232, 20208, 22830, 24591, 26171, 27523, 31207, 40230, 21395, 21696, 22467, 23830, 24859, 26326, 28079, 30861, 33406, 38552, 38724, 21380, 25212, 25494, 28082, 32266, 33099, 38989, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 27387, 32588, 40367, 40474, 20063, 20539, 20918, 22812, 24825, 25590, 26928, 29242, 32822, 63860, 37326, 24369, 63861, 63862, 32004, 33509, 33903, 33979, 34277, 36493, 63863, 20335, 63864, 63865, 22756, 23363, 24665, 25562, 25880, 25965, 26264, 63866, 26954, 27171, 27915, 28673, 29036, 30162, 30221, 31155, 31344, 63867, 32650, 63868, 35140, 63869, 35731, 37312, 38525, 63870, 39178, 22276, 24481, 26044, 28417, 30208, 31142, 35486, 39341, 39770, 40812, 20740, 25014, 25233, 27277, 33222, 20547, 22576, 24422, 28937, 35328, 35578, 23420, 34326, 20474, 20796, 22196, 22852, 25513, 28153, 23978, 26989, 20870, 20104, 20313, 63871, 63872, 63873, 22914, 63874, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 63875, 27487, 27741, 63876, 29877, 30998, 63877, 33287, 33349, 33593, 36671, 36701, 63878, 39192, 63879, 63880, 63881, 20134, 63882, 22495, 24441, 26131, 63883, 63884, 30123, 32377, 35695, 63885, 36870, 39515, 22181, 22567, 23032, 23071, 23476, 63886, 24310, 63887, 63888, 25424, 25403, 63889, 26941, 27783, 27839, 28046, 28051, 28149, 28436, 63890, 28895, 28982, 29017, 63891, 29123, 29141, 63892, 30799, 30831, 63893, 31605, 32227, 63894, 32303, 63895, 34893, 36575, 63896, 63897, 63898, 37467, 63899, 40182, 63900, 63901, 63902, 24709, 28037, 63903, 29105, 63904, 63905, 38321, 21421, 63906, 63907, 63908, 26579, 63909, 28814, 28976, 29744, 33398, 33490, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 63910, 38331, 39653, 40573, 26308, 63911, 29121, 33865, 63912, 63913, 22603, 63914, 63915, 23992, 24433, 63916, 26144, 26254, 27001, 27054, 27704, 27891, 28214, 28481, 28634, 28699, 28719, 29008, 29151, 29552, 63917, 29787, 63918, 29908, 30408, 31310, 32403, 63919, 63920, 33521, 35424, 36814, 63921, 37704, 63922, 38681, 63923, 63924, 20034, 20522, 63925, 21e3, 21473, 26355, 27757, 28618, 29450, 30591, 31330, 33454, 34269, 34306, 63926, 35028, 35427, 35709, 35947, 63927, 37555, 63928, 38675, 38928, 20116, 20237, 20425, 20658, 21320, 21566, 21555, 21978, 22626, 22714, 22887, 23067, 23524, 24735, 63929, 25034, 25942, 26111, 26212, 26791, 27738, 28595, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 28879, 29100, 29522, 31613, 34568, 35492, 39986, 40711, 23627, 27779, 29508, 29577, 37434, 28331, 29797, 30239, 31337, 32277, 34314, 20800, 22725, 25793, 29934, 29973, 30320, 32705, 37013, 38605, 39252, 28198, 29926, 31401, 31402, 33253, 34521, 34680, 35355, 23113, 23436, 23451, 26785, 26880, 28003, 29609, 29715, 29740, 30871, 32233, 32747, 33048, 33109, 33694, 35916, 38446, 38929, 26352, 24448, 26106, 26505, 27754, 29579, 20525, 23043, 27498, 30702, 22806, 23916, 24013, 29477, 30031, 63930, 63931, 20709, 20985, 22575, 22829, 22934, 23002, 23525, 63932, 63933, 23970, 25303, 25622, 25747, 25854, 63934, 26332, 63935, 27208, 63936, 29183, 29796, 63937, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 31368, 31407, 32327, 32350, 32768, 33136, 63938, 34799, 35201, 35616, 36953, 63939, 36992, 39250, 24958, 27442, 28020, 32287, 35109, 36785, 20433, 20653, 20887, 21191, 22471, 22665, 23481, 24248, 24898, 27029, 28044, 28263, 28342, 29076, 29794, 29992, 29996, 32883, 33592, 33993, 36362, 37780, 37854, 63940, 20110, 20305, 20598, 20778, 21448, 21451, 21491, 23431, 23507, 23588, 24858, 24962, 26100, 29275, 29591, 29760, 30402, 31056, 31121, 31161, 32006, 32701, 33419, 34261, 34398, 36802, 36935, 37109, 37354, 38533, 38632, 38633, 21206, 24423, 26093, 26161, 26671, 29020, 31286, 37057, 38922, 20113, 63941, 27218, 27550, 28560, 29065, 32792, 33464, 34131, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 36939, 38549, 38642, 38907, 34074, 39729, 20112, 29066, 38596, 20803, 21407, 21729, 22291, 22290, 22435, 23195, 23236, 23491, 24616, 24895, 25588, 27781, 27961, 28274, 28304, 29232, 29503, 29783, 33489, 34945, 36677, 36960, 63942, 38498, 39e3, 40219, 26376, 36234, 37470, 20301, 20553, 20702, 21361, 22285, 22996, 23041, 23561, 24944, 26256, 28205, 29234, 29771, 32239, 32963, 33806, 33894, 34111, 34655, 34907, 35096, 35586, 36949, 38859, 39759, 20083, 20369, 20754, 20842, 63943, 21807, 21929, 23418, 23461, 24188, 24189, 24254, 24736, 24799, 24840, 24841, 25540, 25912, 26377, 63944, 26580, 26586, 63945, 26977, 26978, 27833, 27943, 63946, 28216, 63947, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 28641, 29494, 29495, 63948, 29788, 30001, 63949, 30290, 63950, 63951, 32173, 33278, 33848, 35029, 35480, 35547, 35565, 36400, 36418, 36938, 36926, 36986, 37193, 37321, 37742, 63952, 63953, 22537, 63954, 27603, 32905, 32946, 63955, 63956, 20801, 22891, 23609, 63957, 63958, 28516, 29607, 32996, 36103, 63959, 37399, 38287, 63960, 63961, 63962, 63963, 32895, 25102, 28700, 32104, 34701, 63964, 22432, 24681, 24903, 27575, 35518, 37504, 38577, 20057, 21535, 28139, 34093, 38512, 38899, 39150, 25558, 27875, 37009, 20957, 25033, 33210, 40441, 20381, 20506, 20736, 23452, 24847, 25087, 25836, 26885, 27589, 30097, 30691, 32681, 33380, 34191, 34811, 34915, 35516, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 35696, 37291, 20108, 20197, 20234, 63965, 63966, 22839, 23016, 63967, 24050, 24347, 24411, 24609, 63968, 63969, 63970, 63971, 29246, 29669, 63972, 30064, 30157, 63973, 31227, 63974, 32780, 32819, 32900, 33505, 33617, 63975, 63976, 36029, 36019, 36999, 63977, 63978, 39156, 39180, 63979, 63980, 28727, 30410, 32714, 32716, 32764, 35610, 20154, 20161, 20995, 21360, 63981, 21693, 22240, 23035, 23493, 24341, 24525, 28270, 63982, 63983, 32106, 33589, 63984, 34451, 35469, 63985, 38765, 38775, 63986, 63987, 19968, 20314, 20350, 22777, 26085, 28322, 36920, 37808, 39353, 20219, 22764, 22922, 23001, 24641, 63988, 63989, 31252, 63990, 33615, 36035, 20837, 21316, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 63991, 63992, 63993, 20173, 21097, 23381, 33471, 20180, 21050, 21672, 22985, 23039, 23376, 23383, 23388, 24675, 24904, 28363, 28825, 29038, 29574, 29943, 30133, 30913, 32043, 32773, 33258, 33576, 34071, 34249, 35566, 36039, 38604, 20316, 21242, 22204, 26027, 26152, 28796, 28856, 29237, 32189, 33421, 37196, 38592, 40306, 23409, 26855, 27544, 28538, 30430, 23697, 26283, 28507, 31668, 31786, 34870, 38620, 19976, 20183, 21280, 22580, 22715, 22767, 22892, 23559, 24115, 24196, 24373, 25484, 26290, 26454, 27167, 27299, 27404, 28479, 29254, 63994, 29520, 29835, 31456, 31911, 33144, 33247, 33255, 33674, 33900, 34083, 34196, 34255, 35037, 36115, 37292, 38263, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 38556, 20877, 21705, 22312, 23472, 25165, 26448, 26685, 26771, 28221, 28371, 28797, 32289, 35009, 36001, 36617, 40779, 40782, 29229, 31631, 35533, 37658, 20295, 20302, 20786, 21632, 22992, 24213, 25269, 26485, 26990, 27159, 27822, 28186, 29401, 29482, 30141, 31672, 32053, 33511, 33785, 33879, 34295, 35419, 36015, 36487, 36889, 37048, 38606, 40799, 21219, 21514, 23265, 23490, 25688, 25973, 28404, 29380, 63995, 30340, 31309, 31515, 31821, 32318, 32735, 33659, 35627, 36042, 36196, 36321, 36447, 36842, 36857, 36969, 37841, 20291, 20346, 20659, 20840, 20856, 21069, 21098, 22625, 22652, 22880, 23560, 23637, 24283, 24731, 25136, 26643, 27583, 27656, 28593, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 29006, 29728, 3e4, 30008, 30033, 30322, 31564, 31627, 31661, 31686, 32399, 35438, 36670, 36681, 37439, 37523, 37666, 37931, 38651, 39002, 39019, 39198, 20999, 25130, 25240, 27993, 30308, 31434, 31680, 32118, 21344, 23742, 24215, 28472, 28857, 31896, 38673, 39822, 40670, 25509, 25722, 34678, 19969, 20117, 20141, 20572, 20597, 21576, 22979, 23450, 24128, 24237, 24311, 24449, 24773, 25402, 25919, 25972, 26060, 26230, 26232, 26622, 26984, 27273, 27491, 27712, 28096, 28136, 28191, 28254, 28702, 28833, 29582, 29693, 30010, 30555, 30855, 31118, 31243, 31357, 31934, 32142, 33351, 35330, 35562, 35998, 37165, 37194, 37336, 37478, 37580, 37664, 38662, 38742, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 38748, 38914, 40718, 21046, 21137, 21884, 22564, 24093, 24351, 24716, 25552, 26799, 28639, 31085, 31532, 33229, 34234, 35069, 35576, 36420, 37261, 38500, 38555, 38717, 38988, 40778, 20430, 20806, 20939, 21161, 22066, 24340, 24427, 25514, 25805, 26089, 26177, 26362, 26361, 26397, 26781, 26839, 27133, 28437, 28526, 29031, 29157, 29226, 29866, 30522, 31062, 31066, 31199, 31264, 31381, 31895, 31967, 32068, 32368, 32903, 34299, 34468, 35412, 35519, 36249, 36481, 36896, 36973, 37347, 38459, 38613, 40165, 26063, 31751, 36275, 37827, 23384, 23562, 21330, 25305, 29469, 20519, 23447, 24478, 24752, 24939, 26837, 28121, 29742, 31278, 32066, 32156, 32305, 33131, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 36394, 36405, 37758, 37912, 20304, 22352, 24038, 24231, 25387, 32618, 20027, 20303, 20367, 20570, 23005, 32964, 21610, 21608, 22014, 22863, 23449, 24030, 24282, 26205, 26417, 26609, 26666, 27880, 27954, 28234, 28557, 28855, 29664, 30087, 31820, 32002, 32044, 32162, 33311, 34523, 35387, 35461, 36208, 36490, 36659, 36913, 37198, 37202, 37956, 39376, 31481, 31909, 20426, 20737, 20934, 22472, 23535, 23803, 26201, 27197, 27994, 28310, 28652, 28940, 30063, 31459, 34850, 36897, 36981, 38603, 39423, 33537, 20013, 20210, 34886, 37325, 21373, 27355, 26987, 27713, 33914, 22686, 24974, 26366, 25327, 28893, 29969, 30151, 32338, 33976, 35657, 36104, 20043, 21482, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 21675, 22320, 22336, 24535, 25345, 25351, 25711, 25903, 26088, 26234, 26525, 26547, 27490, 27744, 27802, 28460, 30693, 30757, 31049, 31063, 32025, 32930, 33026, 33267, 33437, 33463, 34584, 35468, 63996, 36100, 36286, 36978, 30452, 31257, 31287, 32340, 32887, 21767, 21972, 22645, 25391, 25634, 26185, 26187, 26733, 27035, 27524, 27941, 28337, 29645, 29800, 29857, 30043, 30137, 30433, 30494, 30603, 31206, 32265, 32285, 33275, 34095, 34967, 35386, 36049, 36587, 36784, 36914, 37805, 38499, 38515, 38663, 20356, 21489, 23018, 23241, 24089, 26702, 29894, 30142, 31209, 31378, 33187, 34541, 36074, 36300, 36845, 26015, 26389, 63997, 22519, 28503, 32221, 36655, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 37878, 38598, 24501, 25074, 28548, 19988, 20376, 20511, 21449, 21983, 23919, 24046, 27425, 27492, 30923, 31642, 63998, 36425, 36554, 36974, 25417, 25662, 30528, 31364, 37679, 38015, 40810, 25776, 28591, 29158, 29864, 29914, 31428, 31762, 32386, 31922, 32408, 35738, 36106, 38013, 39184, 39244, 21049, 23519, 25830, 26413, 32046, 20717, 21443, 22649, 24920, 24921, 25082, 26028, 31449, 35730, 35734, 20489, 20513, 21109, 21809, 23100, 24288, 24432, 24884, 25950, 26124, 26166, 26274, 27085, 28356, 28466, 29462, 30241, 31379, 33081, 33369, 33750, 33980, 20661, 22512, 23488, 23528, 24425, 25505, 30758, 32181, 33756, 34081, 37319, 37365, 20874, 26613, 31574, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 36012, 20932, 22971, 24765, 34389, 20508, 63999, 21076, 23610, 24957, 25114, 25299, 25842, 26021, 28364, 30240, 33034, 36448, 38495, 38587, 20191, 21315, 21912, 22825, 24029, 25797, 27849, 28154, 29588, 31359, 33307, 34214, 36068, 36368, 36983, 37351, 38369, 38433, 38854, 20984, 21746, 21894, 24505, 25764, 28552, 32180, 36639, 36685, 37941, 20681, 23574, 27838, 28155, 29979, 30651, 31805, 31844, 35449, 35522, 22558, 22974, 24086, 25463, 29266, 30090, 30571, 35548, 36028, 36626, 24307, 26228, 28152, 32893, 33729, 35531, 38737, 39894, 64e3, 21059, 26367, 28053, 28399, 32224, 35558, 36910, 36958, 39636, 21021, 21119, 21736, 24980, 25220, 25307, 26786, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 26898, 26970, 27189, 28818, 28966, 30813, 30977, 30990, 31186, 31245, 32918, 33400, 33493, 33609, 34121, 35970, 36229, 37218, 37259, 37294, 20419, 22225, 29165, 30679, 34560, 35320, 23544, 24534, 26449, 37032, 21474, 22618, 23541, 24740, 24961, 25696, 32317, 32880, 34085, 37507, 25774, 20652, 23828, 26368, 22684, 25277, 25512, 26894, 27e3, 27166, 28267, 30394, 31179, 33467, 33833, 35535, 36264, 36861, 37138, 37195, 37276, 37648, 37656, 37786, 38619, 39478, 39949, 19985, 30044, 31069, 31482, 31569, 31689, 32302, 33988, 36441, 36468, 36600, 36880, 26149, 26943, 29763, 20986, 26414, 40668, 20805, 24544, 27798, 34802, 34909, 34935, 24756, 33205, 33795, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 36101, 21462, 21561, 22068, 23094, 23601, 28810, 32736, 32858, 33030, 33261, 36259, 37257, 39519, 40434, 20596, 20164, 21408, 24827, 28204, 23652, 20360, 20516, 21988, 23769, 24159, 24677, 26772, 27835, 28100, 29118, 30164, 30196, 30305, 31258, 31305, 32199, 32251, 32622, 33268, 34473, 36636, 38601, 39347, 40786, 21063, 21189, 39149, 35242, 19971, 26578, 28422, 20405, 23522, 26517, 27784, 28024, 29723, 30759, 37341, 37756, 34756, 31204, 31281, 24555, 20182, 21668, 21822, 22702, 22949, 24816, 25171, 25302, 26422, 26965, 33333, 38464, 39345, 39389, 20524, 21331, 21828, 22396, 64001, 25176, 64002, 25826, 26219, 26589, 28609, 28655, 29730, 29752, 35351, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 37944, 21585, 22022, 22374, 24392, 24986, 27470, 28760, 28845, 32187, 35477, 22890, 33067, 25506, 30472, 32829, 36010, 22612, 25645, 27067, 23445, 24081, 28271, 64003, 34153, 20812, 21488, 22826, 24608, 24907, 27526, 27760, 27888, 31518, 32974, 33492, 36294, 37040, 39089, 64004, 25799, 28580, 25745, 25860, 20814, 21520, 22303, 35342, 24927, 26742, 64005, 30171, 31570, 32113, 36890, 22534, 27084, 33151, 35114, 36864, 38969, 20600, 22871, 22956, 25237, 36879, 39722, 24925, 29305, 38358, 22369, 23110, 24052, 25226, 25773, 25850, 26487, 27874, 27966, 29228, 29750, 30772, 32631, 33453, 36315, 38935, 21028, 22338, 26495, 29256, 29923, 36009, 36774, 37393, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 38442, 20843, 21485, 25420, 20329, 21764, 24726, 25943, 27803, 28031, 29260, 29437, 31255, 35207, 35997, 24429, 28558, 28921, 33192, 24846, 20415, 20559, 25153, 29255, 31687, 32232, 32745, 36941, 38829, 39449, 36022, 22378, 24179, 26544, 33805, 35413, 21536, 23318, 24163, 24290, 24330, 25987, 32954, 34109, 38281, 38491, 20296, 21253, 21261, 21263, 21638, 21754, 22275, 24067, 24598, 25243, 25265, 25429, 64006, 27873, 28006, 30129, 30770, 32990, 33071, 33502, 33889, 33970, 34957, 35090, 36875, 37610, 39165, 39825, 24133, 26292, 26333, 28689, 29190, 64007, 20469, 21117, 24426, 24915, 26451, 27161, 28418, 29922, 31080, 34920, 35961, 39111, 39108, 39491, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 21697, 31263, 26963, 35575, 35914, 39080, 39342, 24444, 25259, 30130, 30382, 34987, 36991, 38466, 21305, 24380, 24517, 27852, 29644, 30050, 30091, 31558, 33534, 39325, 20047, 36924, 19979, 20309, 21414, 22799, 24264, 26160, 27827, 29781, 33655, 34662, 36032, 36944, 38686, 39957, 22737, 23416, 34384, 35604, 40372, 23506, 24680, 24717, 26097, 27735, 28450, 28579, 28698, 32597, 32752, 38289, 38290, 38480, 38867, 21106, 36676, 20989, 21547, 21688, 21859, 21898, 27323, 28085, 32216, 33382, 37532, 38519, 40569, 21512, 21704, 30418, 34532, 38308, 38356, 38492, 20130, 20233, 23022, 23270, 24055, 24658, 25239, 26477, 26689, 27782, 28207, 32568, 32923, 33322, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 64008, 64009, 38917, 20133, 20565, 21683, 22419, 22874, 23401, 23475, 25032, 26999, 28023, 28707, 34809, 35299, 35442, 35559, 36994, 39405, 39608, 21182, 26680, 20502, 24184, 26447, 33607, 34892, 20139, 21521, 22190, 29670, 37141, 38911, 39177, 39255, 39321, 22099, 22687, 34395, 35377, 25010, 27382, 29563, 36562, 27463, 38570, 39511, 22869, 29184, 36203, 38761, 20436, 23796, 24358, 25080, 26203, 27883, 28843, 29572, 29625, 29694, 30505, 30541, 32067, 32098, 32291, 33335, 34898, 64010, 36066, 37449, 39023, 23377, 31348, 34880, 38913, 23244, 20448, 21332, 22846, 23805, 25406, 28025, 29433, 33029, 33031, 33698, 37583, 38960, 20136, 20804, 21009, 22411, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 24418, 27842, 28366, 28677, 28752, 28847, 29074, 29673, 29801, 33610, 34722, 34913, 36872, 37026, 37795, 39336, 20846, 24407, 24800, 24935, 26291, 34137, 36426, 37295, 38795, 20046, 20114, 21628, 22741, 22778, 22909, 23733, 24359, 25142, 25160, 26122, 26215, 27627, 28009, 28111, 28246, 28408, 28564, 28640, 28649, 28765, 29392, 29733, 29786, 29920, 30355, 31068, 31946, 32286, 32993, 33446, 33899, 33983, 34382, 34399, 34676, 35703, 35946, 37804, 38912, 39013, 24785, 25110, 37239, 23130, 26127, 28151, 28222, 29759, 39746, 24573, 24794, 31503, 21700, 24344, 27742, 27859, 27946, 28888, 32005, 34425, 35340, 40251, 21270, 21644, 23301, 27194, 28779, 30069, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 31117, 31166, 33457, 33775, 35441, 35649, 36008, 38772, 64011, 25844, 25899, 30906, 30907, 31339, 20024, 21914, 22864, 23462, 24187, 24739, 25563, 27489, 26213, 26707, 28185, 29029, 29872, 32008, 36996, 39529, 39973, 27963, 28369, 29502, 35905, 38346, 20976, 24140, 24488, 24653, 24822, 24880, 24908, 26179, 26180, 27045, 27841, 28255, 28361, 28514, 29004, 29852, 30343, 31681, 31783, 33618, 34647, 36945, 38541, 40643, 21295, 22238, 24315, 24458, 24674, 24724, 25079, 26214, 26371, 27292, 28142, 28590, 28784, 29546, 32362, 33214, 33588, 34516, 35496, 36036, 21123, 29554, 23446, 27243, 37892, 21742, 22150, 23389, 25928, 25989, 26313, 26783, 28045, 28102, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 29243, 32948, 37237, 39501, 20399, 20505, 21402, 21518, 21564, 21897, 21957, 24127, 24460, 26429, 29030, 29661, 36869, 21211, 21235, 22628, 22734, 28932, 29071, 29179, 34224, 35347, 26248, 34216, 21927, 26244, 29002, 33841, 21321, 21913, 27585, 24409, 24509, 25582, 26249, 28999, 35569, 36637, 40638, 20241, 25658, 28875, 30054, 34407, 24676, 35662, 40440, 20807, 20982, 21256, 27958, 33016, 40657, 26133, 27427, 28824, 30165, 21507, 23673, 32007, 35350, 27424, 27453, 27462, 21560, 24688, 27965, 32725, 33288, 20694, 20958, 21916, 22123, 22221, 23020, 23305, 24076, 24985, 24984, 25137, 26206, 26342, 29081, 29113, 29114, 29351, 31143, 31232, 32690, 35440, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],
                    gb18030: [19970, 19972, 19973, 19974, 19983, 19986, 19991, 19999, 2e4, 20001, 20003, 20006, 20009, 20014, 20015, 20017, 20019, 20021, 20023, 20028, 20032, 20033, 20034, 20036, 20038, 20042, 20049, 20053, 20055, 20058, 20059, 20066, 20067, 20068, 20069, 20071, 20072, 20074, 20075, 20076, 20077, 20078, 20079, 20082, 20084, 20085, 20086, 20087, 20088, 20089, 20090, 20091, 20092, 20093, 20095, 20096, 20097, 20098, 20099, 20100, 20101, 20103, 20106, 20112, 20118, 20119, 20121, 20124, 20125, 20126, 20131, 20138, 20143, 20144, 20145, 20148, 20150, 20151, 20152, 20153, 20156, 20157, 20158, 20168, 20172, 20175, 20176, 20178, 20186, 20187, 20188, 20192, 20194, 20198, 20199, 20201, 20205, 20206, 20207, 20209, 20212, 20216, 20217, 20218, 20220, 20222, 20224, 20226, 20227, 20228, 20229, 20230, 20231, 20232, 20235, 20236, 20242, 20243, 20244, 20245, 20246, 20252, 20253, 20257, 20259, 20264, 20265, 20268, 20269, 20270, 20273, 20275, 20277, 20279, 20281, 20283, 20286, 20287, 20288, 20289, 20290, 20292, 20293, 20295, 20296, 20297, 20298, 20299, 20300, 20306, 20308, 20310, 20321, 20322, 20326, 20328, 20330, 20331, 20333, 20334, 20337, 20338, 20341, 20343, 20344, 20345, 20346, 20349, 20352, 20353, 20354, 20357, 20358, 20359, 20362, 20364, 20366, 20368, 20370, 20371, 20373, 20374, 20376, 20377, 20378, 20380, 20382, 20383, 20385, 20386, 20388, 20395, 20397, 20400, 20401, 20402, 20403, 20404, 20406, 20407, 20408, 20409, 20410, 20411, 20412, 20413, 20414, 20416, 20417, 20418, 20422, 20423, 20424, 20425, 20427, 20428, 20429, 20434, 20435, 20436, 20437, 20438, 20441, 20443, 20448, 20450, 20452, 20453, 20455, 20459, 20460, 20464, 20466, 20468, 20469, 20470, 20471, 20473, 20475, 20476, 20477, 20479, 20480, 20481, 20482, 20483, 20484, 20485, 20486, 20487, 20488, 20489, 20490, 20491, 20494, 20496, 20497, 20499, 20501, 20502, 20503, 20507, 20509, 20510, 20512, 20514, 20515, 20516, 20519, 20523, 20527, 20528, 20529, 20530, 20531, 20532, 20533, 20534, 20535, 20536, 20537, 20539, 20541, 20543, 20544, 20545, 20546, 20548, 20549, 20550, 20553, 20554, 20555, 20557, 20560, 20561, 20562, 20563, 20564, 20566, 20567, 20568, 20569, 20571, 20573, 20574, 20575, 20576, 20577, 20578, 20579, 20580, 20582, 20583, 20584, 20585, 20586, 20587, 20589, 20590, 20591, 20592, 20593, 20594, 20595, 20596, 20597, 20600, 20601, 20602, 20604, 20605, 20609, 20610, 20611, 20612, 20614, 20615, 20617, 20618, 20619, 20620, 20622, 20623, 20624, 20625, 20626, 20627, 20628, 20629, 20630, 20631, 20632, 20633, 20634, 20635, 20636, 20637, 20638, 20639, 20640, 20641, 20642, 20644, 20646, 20650, 20651, 20653, 20654, 20655, 20656, 20657, 20659, 20660, 20661, 20662, 20663, 20664, 20665, 20668, 20669, 20670, 20671, 20672, 20673, 20674, 20675, 20676, 20677, 20678, 20679, 20680, 20681, 20682, 20683, 20684, 20685, 20686, 20688, 20689, 20690, 20691, 20692, 20693, 20695, 20696, 20697, 20699, 20700, 20701, 20702, 20703, 20704, 20705, 20706, 20707, 20708, 20709, 20712, 20713, 20714, 20715, 20719, 20720, 20721, 20722, 20724, 20726, 20727, 20728, 20729, 20730, 20732, 20733, 20734, 20735, 20736, 20737, 20738, 20739, 20740, 20741, 20744, 20745, 20746, 20748, 20749, 20750, 20751, 20752, 20753, 20755, 20756, 20757, 20758, 20759, 20760, 20761, 20762, 20763, 20764, 20765, 20766, 20767, 20768, 20770, 20771, 20772, 20773, 20774, 20775, 20776, 20777, 20778, 20779, 20780, 20781, 20782, 20783, 20784, 20785, 20786, 20787, 20788, 20789, 20790, 20791, 20792, 20793, 20794, 20795, 20796, 20797, 20798, 20802, 20807, 20810, 20812, 20814, 20815, 20816, 20818, 20819, 20823, 20824, 20825, 20827, 20829, 20830, 20831, 20832, 20833, 20835, 20836, 20838, 20839, 20841, 20842, 20847, 20850, 20858, 20862, 20863, 20867, 20868, 20870, 20871, 20874, 20875, 20878, 20879, 20880, 20881, 20883, 20884, 20888, 20890, 20893, 20894, 20895, 20897, 20899, 20902, 20903, 20904, 20905, 20906, 20909, 20910, 20916, 20920, 20921, 20922, 20926, 20927, 20929, 20930, 20931, 20933, 20936, 20938, 20941, 20942, 20944, 20946, 20947, 20948, 20949, 20950, 20951, 20952, 20953, 20954, 20956, 20958, 20959, 20962, 20963, 20965, 20966, 20967, 20968, 20969, 20970, 20972, 20974, 20977, 20978, 20980, 20983, 20990, 20996, 20997, 21001, 21003, 21004, 21007, 21008, 21011, 21012, 21013, 21020, 21022, 21023, 21025, 21026, 21027, 21029, 21030, 21031, 21034, 21036, 21039, 21041, 21042, 21044, 21045, 21052, 21054, 21060, 21061, 21062, 21063, 21064, 21065, 21067, 21070, 21071, 21074, 21075, 21077, 21079, 21080, 21081, 21082, 21083, 21085, 21087, 21088, 21090, 21091, 21092, 21094, 21096, 21099, 21100, 21101, 21102, 21104, 21105, 21107, 21108, 21109, 21110, 21111, 21112, 21113, 21114, 21115, 21116, 21118, 21120, 21123, 21124, 21125, 21126, 21127, 21129, 21130, 21131, 21132, 21133, 21134, 21135, 21137, 21138, 21140, 21141, 21142, 21143, 21144, 21145, 21146, 21148, 21156, 21157, 21158, 21159, 21166, 21167, 21168, 21172, 21173, 21174, 21175, 21176, 21177, 21178, 21179, 21180, 21181, 21184, 21185, 21186, 21188, 21189, 21190, 21192, 21194, 21196, 21197, 21198, 21199, 21201, 21203, 21204, 21205, 21207, 21209, 21210, 21211, 21212, 21213, 21214, 21216, 21217, 21218, 21219, 21221, 21222, 21223, 21224, 21225, 21226, 21227, 21228, 21229, 21230, 21231, 21233, 21234, 21235, 21236, 21237, 21238, 21239, 21240, 21243, 21244, 21245, 21249, 21250, 21251, 21252, 21255, 21257, 21258, 21259, 21260, 21262, 21265, 21266, 21267, 21268, 21272, 21275, 21276, 21278, 21279, 21282, 21284, 21285, 21287, 21288, 21289, 21291, 21292, 21293, 21295, 21296, 21297, 21298, 21299, 21300, 21301, 21302, 21303, 21304, 21308, 21309, 21312, 21314, 21316, 21318, 21323, 21324, 21325, 21328, 21332, 21336, 21337, 21339, 21341, 21349, 21352, 21354, 21356, 21357, 21362, 21366, 21369, 21371, 21372, 21373, 21374, 21376, 21377, 21379, 21383, 21384, 21386, 21390, 21391, 21392, 21393, 21394, 21395, 21396, 21398, 21399, 21401, 21403, 21404, 21406, 21408, 21409, 21412, 21415, 21418, 21419, 21420, 21421, 21423, 21424, 21425, 21426, 21427, 21428, 21429, 21431, 21432, 21433, 21434, 21436, 21437, 21438, 21440, 21443, 21444, 21445, 21446, 21447, 21454, 21455, 21456, 21458, 21459, 21461, 21466, 21468, 21469, 21470, 21473, 21474, 21479, 21492, 21498, 21502, 21503, 21504, 21506, 21509, 21511, 21515, 21524, 21528, 21529, 21530, 21532, 21538, 21540, 21541, 21546, 21552, 21555, 21558, 21559, 21562, 21565, 21567, 21569, 21570, 21572, 21573, 21575, 21577, 21580, 21581, 21582, 21583, 21585, 21594, 21597, 21598, 21599, 21600, 21601, 21603, 21605, 21607, 21609, 21610, 21611, 21612, 21613, 21614, 21615, 21616, 21620, 21625, 21626, 21630, 21631, 21633, 21635, 21637, 21639, 21640, 21641, 21642, 21645, 21649, 21651, 21655, 21656, 21660, 21662, 21663, 21664, 21665, 21666, 21669, 21678, 21680, 21682, 21685, 21686, 21687, 21689, 21690, 21692, 21694, 21699, 21701, 21706, 21707, 21718, 21720, 21723, 21728, 21729, 21730, 21731, 21732, 21739, 21740, 21743, 21744, 21745, 21748, 21749, 21750, 21751, 21752, 21753, 21755, 21758, 21760, 21762, 21763, 21764, 21765, 21768, 21770, 21771, 21772, 21773, 21774, 21778, 21779, 21781, 21782, 21783, 21784, 21785, 21786, 21788, 21789, 21790, 21791, 21793, 21797, 21798, 21800, 21801, 21803, 21805, 21810, 21812, 21813, 21814, 21816, 21817, 21818, 21819, 21821, 21824, 21826, 21829, 21831, 21832, 21835, 21836, 21837, 21838, 21839, 21841, 21842, 21843, 21844, 21847, 21848, 21849, 21850, 21851, 21853, 21854, 21855, 21856, 21858, 21859, 21864, 21865, 21867, 21871, 21872, 21873, 21874, 21875, 21876, 21881, 21882, 21885, 21887, 21893, 21894, 21900, 21901, 21902, 21904, 21906, 21907, 21909, 21910, 21911, 21914, 21915, 21918, 21920, 21921, 21922, 21923, 21924, 21925, 21926, 21928, 21929, 21930, 21931, 21932, 21933, 21934, 21935, 21936, 21938, 21940, 21942, 21944, 21946, 21948, 21951, 21952, 21953, 21954, 21955, 21958, 21959, 21960, 21962, 21963, 21966, 21967, 21968, 21973, 21975, 21976, 21977, 21978, 21979, 21982, 21984, 21986, 21991, 21993, 21997, 21998, 22e3, 22001, 22004, 22006, 22008, 22009, 22010, 22011, 22012, 22015, 22018, 22019, 22020, 22021, 22022, 22023, 22026, 22027, 22029, 22032, 22033, 22034, 22035, 22036, 22037, 22038, 22039, 22041, 22042, 22044, 22045, 22048, 22049, 22050, 22053, 22054, 22056, 22057, 22058, 22059, 22062, 22063, 22064, 22067, 22069, 22071, 22072, 22074, 22076, 22077, 22078, 22080, 22081, 22082, 22083, 22084, 22085, 22086, 22087, 22088, 22089, 22090, 22091, 22095, 22096, 22097, 22098, 22099, 22101, 22102, 22106, 22107, 22109, 22110, 22111, 22112, 22113, 22115, 22117, 22118, 22119, 22125, 22126, 22127, 22128, 22130, 22131, 22132, 22133, 22135, 22136, 22137, 22138, 22141, 22142, 22143, 22144, 22145, 22146, 22147, 22148, 22151, 22152, 22153, 22154, 22155, 22156, 22157, 22160, 22161, 22162, 22164, 22165, 22166, 22167, 22168, 22169, 22170, 22171, 22172, 22173, 22174, 22175, 22176, 22177, 22178, 22180, 22181, 22182, 22183, 22184, 22185, 22186, 22187, 22188, 22189, 22190, 22192, 22193, 22194, 22195, 22196, 22197, 22198, 22200, 22201, 22202, 22203, 22205, 22206, 22207, 22208, 22209, 22210, 22211, 22212, 22213, 22214, 22215, 22216, 22217, 22219, 22220, 22221, 22222, 22223, 22224, 22225, 22226, 22227, 22229, 22230, 22232, 22233, 22236, 22243, 22245, 22246, 22247, 22248, 22249, 22250, 22252, 22254, 22255, 22258, 22259, 22262, 22263, 22264, 22267, 22268, 22272, 22273, 22274, 22277, 22279, 22283, 22284, 22285, 22286, 22287, 22288, 22289, 22290, 22291, 22292, 22293, 22294, 22295, 22296, 22297, 22298, 22299, 22301, 22302, 22304, 22305, 22306, 22308, 22309, 22310, 22311, 22315, 22321, 22322, 22324, 22325, 22326, 22327, 22328, 22332, 22333, 22335, 22337, 22339, 22340, 22341, 22342, 22344, 22345, 22347, 22354, 22355, 22356, 22357, 22358, 22360, 22361, 22370, 22371, 22373, 22375, 22380, 22382, 22384, 22385, 22386, 22388, 22389, 22392, 22393, 22394, 22397, 22398, 22399, 22400, 22401, 22407, 22408, 22409, 22410, 22413, 22414, 22415, 22416, 22417, 22420, 22421, 22422, 22423, 22424, 22425, 22426, 22428, 22429, 22430, 22431, 22437, 22440, 22442, 22444, 22447, 22448, 22449, 22451, 22453, 22454, 22455, 22457, 22458, 22459, 22460, 22461, 22462, 22463, 22464, 22465, 22468, 22469, 22470, 22471, 22472, 22473, 22474, 22476, 22477, 22480, 22481, 22483, 22486, 22487, 22491, 22492, 22494, 22497, 22498, 22499, 22501, 22502, 22503, 22504, 22505, 22506, 22507, 22508, 22510, 22512, 22513, 22514, 22515, 22517, 22518, 22519, 22523, 22524, 22526, 22527, 22529, 22531, 22532, 22533, 22536, 22537, 22538, 22540, 22542, 22543, 22544, 22546, 22547, 22548, 22550, 22551, 22552, 22554, 22555, 22556, 22557, 22559, 22562, 22563, 22565, 22566, 22567, 22568, 22569, 22571, 22572, 22573, 22574, 22575, 22577, 22578, 22579, 22580, 22582, 22583, 22584, 22585, 22586, 22587, 22588, 22589, 22590, 22591, 22592, 22593, 22594, 22595, 22597, 22598, 22599, 22600, 22601, 22602, 22603, 22606, 22607, 22608, 22610, 22611, 22613, 22614, 22615, 22617, 22618, 22619, 22620, 22621, 22623, 22624, 22625, 22626, 22627, 22628, 22630, 22631, 22632, 22633, 22634, 22637, 22638, 22639, 22640, 22641, 22642, 22643, 22644, 22645, 22646, 22647, 22648, 22649, 22650, 22651, 22652, 22653, 22655, 22658, 22660, 22662, 22663, 22664, 22666, 22667, 22668, 22669, 22670, 22671, 22672, 22673, 22676, 22677, 22678, 22679, 22680, 22683, 22684, 22685, 22688, 22689, 22690, 22691, 22692, 22693, 22694, 22695, 22698, 22699, 22700, 22701, 22702, 22703, 22704, 22705, 22706, 22707, 22708, 22709, 22710, 22711, 22712, 22713, 22714, 22715, 22717, 22718, 22719, 22720, 22722, 22723, 22724, 22726, 22727, 22728, 22729, 22730, 22731, 22732, 22733, 22734, 22735, 22736, 22738, 22739, 22740, 22742, 22743, 22744, 22745, 22746, 22747, 22748, 22749, 22750, 22751, 22752, 22753, 22754, 22755, 22757, 22758, 22759, 22760, 22761, 22762, 22765, 22767, 22769, 22770, 22772, 22773, 22775, 22776, 22778, 22779, 22780, 22781, 22782, 22783, 22784, 22785, 22787, 22789, 22790, 22792, 22793, 22794, 22795, 22796, 22798, 22800, 22801, 22802, 22803, 22807, 22808, 22811, 22813, 22814, 22816, 22817, 22818, 22819, 22822, 22824, 22828, 22832, 22834, 22835, 22837, 22838, 22843, 22845, 22846, 22847, 22848, 22851, 22853, 22854, 22858, 22860, 22861, 22864, 22866, 22867, 22873, 22875, 22876, 22877, 22878, 22879, 22881, 22883, 22884, 22886, 22887, 22888, 22889, 22890, 22891, 22892, 22893, 22894, 22895, 22896, 22897, 22898, 22901, 22903, 22906, 22907, 22908, 22910, 22911, 22912, 22917, 22921, 22923, 22924, 22926, 22927, 22928, 22929, 22932, 22933, 22936, 22938, 22939, 22940, 22941, 22943, 22944, 22945, 22946, 22950, 22951, 22956, 22957, 22960, 22961, 22963, 22964, 22965, 22966, 22967, 22968, 22970, 22972, 22973, 22975, 22976, 22977, 22978, 22979, 22980, 22981, 22983, 22984, 22985, 22988, 22989, 22990, 22991, 22997, 22998, 23001, 23003, 23006, 23007, 23008, 23009, 23010, 23012, 23014, 23015, 23017, 23018, 23019, 23021, 23022, 23023, 23024, 23025, 23026, 23027, 23028, 23029, 23030, 23031, 23032, 23034, 23036, 23037, 23038, 23040, 23042, 23050, 23051, 23053, 23054, 23055, 23056, 23058, 23060, 23061, 23062, 23063, 23065, 23066, 23067, 23069, 23070, 23073, 23074, 23076, 23078, 23079, 23080, 23082, 23083, 23084, 23085, 23086, 23087, 23088, 23091, 23093, 23095, 23096, 23097, 23098, 23099, 23101, 23102, 23103, 23105, 23106, 23107, 23108, 23109, 23111, 23112, 23115, 23116, 23117, 23118, 23119, 23120, 23121, 23122, 23123, 23124, 23126, 23127, 23128, 23129, 23131, 23132, 23133, 23134, 23135, 23136, 23137, 23139, 23140, 23141, 23142, 23144, 23145, 23147, 23148, 23149, 23150, 23151, 23152, 23153, 23154, 23155, 23160, 23161, 23163, 23164, 23165, 23166, 23168, 23169, 23170, 23171, 23172, 23173, 23174, 23175, 23176, 23177, 23178, 23179, 23180, 23181, 23182, 23183, 23184, 23185, 23187, 23188, 23189, 23190, 23191, 23192, 23193, 23196, 23197, 23198, 23199, 23200, 23201, 23202, 23203, 23204, 23205, 23206, 23207, 23208, 23209, 23211, 23212, 23213, 23214, 23215, 23216, 23217, 23220, 23222, 23223, 23225, 23226, 23227, 23228, 23229, 23231, 23232, 23235, 23236, 23237, 23238, 23239, 23240, 23242, 23243, 23245, 23246, 23247, 23248, 23249, 23251, 23253, 23255, 23257, 23258, 23259, 23261, 23262, 23263, 23266, 23268, 23269, 23271, 23272, 23274, 23276, 23277, 23278, 23279, 23280, 23282, 23283, 23284, 23285, 23286, 23287, 23288, 23289, 23290, 23291, 23292, 23293, 23294, 23295, 23296, 23297, 23298, 23299, 23300, 23301, 23302, 23303, 23304, 23306, 23307, 23308, 23309, 23310, 23311, 23312, 23313, 23314, 23315, 23316, 23317, 23320, 23321, 23322, 23323, 23324, 23325, 23326, 23327, 23328, 23329, 23330, 23331, 23332, 23333, 23334, 23335, 23336, 23337, 23338, 23339, 23340, 23341, 23342, 23343, 23344, 23345, 23347, 23349, 23350, 23352, 23353, 23354, 23355, 23356, 23357, 23358, 23359, 23361, 23362, 23363, 23364, 23365, 23366, 23367, 23368, 23369, 23370, 23371, 23372, 23373, 23374, 23375, 23378, 23382, 23390, 23392, 23393, 23399, 23400, 23403, 23405, 23406, 23407, 23410, 23412, 23414, 23415, 23416, 23417, 23419, 23420, 23422, 23423, 23426, 23430, 23434, 23437, 23438, 23440, 23441, 23442, 23444, 23446, 23455, 23463, 23464, 23465, 23468, 23469, 23470, 23471, 23473, 23474, 23479, 23482, 23483, 23484, 23488, 23489, 23491, 23496, 23497, 23498, 23499, 23501, 23502, 23503, 23505, 23508, 23509, 23510, 23511, 23512, 23513, 23514, 23515, 23516, 23520, 23522, 23523, 23526, 23527, 23529, 23530, 23531, 23532, 23533, 23535, 23537, 23538, 23539, 23540, 23541, 23542, 23543, 23549, 23550, 23552, 23554, 23555, 23557, 23559, 23560, 23563, 23564, 23565, 23566, 23568, 23570, 23571, 23575, 23577, 23579, 23582, 23583, 23584, 23585, 23587, 23590, 23592, 23593, 23594, 23595, 23597, 23598, 23599, 23600, 23602, 23603, 23605, 23606, 23607, 23619, 23620, 23622, 23623, 23628, 23629, 23634, 23635, 23636, 23638, 23639, 23640, 23642, 23643, 23644, 23645, 23647, 23650, 23652, 23655, 23656, 23657, 23658, 23659, 23660, 23661, 23664, 23666, 23667, 23668, 23669, 23670, 23671, 23672, 23675, 23676, 23677, 23678, 23680, 23683, 23684, 23685, 23686, 23687, 23689, 23690, 23691, 23694, 23695, 23698, 23699, 23701, 23709, 23710, 23711, 23712, 23713, 23716, 23717, 23718, 23719, 23720, 23722, 23726, 23727, 23728, 23730, 23732, 23734, 23737, 23738, 23739, 23740, 23742, 23744, 23746, 23747, 23749, 23750, 23751, 23752, 23753, 23754, 23756, 23757, 23758, 23759, 23760, 23761, 23763, 23764, 23765, 23766, 23767, 23768, 23770, 23771, 23772, 23773, 23774, 23775, 23776, 23778, 23779, 23783, 23785, 23787, 23788, 23790, 23791, 23793, 23794, 23795, 23796, 23797, 23798, 23799, 23800, 23801, 23802, 23804, 23805, 23806, 23807, 23808, 23809, 23812, 23813, 23816, 23817, 23818, 23819, 23820, 23821, 23823, 23824, 23825, 23826, 23827, 23829, 23831, 23832, 23833, 23834, 23836, 23837, 23839, 23840, 23841, 23842, 23843, 23845, 23848, 23850, 23851, 23852, 23855, 23856, 23857, 23858, 23859, 23861, 23862, 23863, 23864, 23865, 23866, 23867, 23868, 23871, 23872, 23873, 23874, 23875, 23876, 23877, 23878, 23880, 23881, 23885, 23886, 23887, 23888, 23889, 23890, 23891, 23892, 23893, 23894, 23895, 23897, 23898, 23900, 23902, 23903, 23904, 23905, 23906, 23907, 23908, 23909, 23910, 23911, 23912, 23914, 23917, 23918, 23920, 23921, 23922, 23923, 23925, 23926, 23927, 23928, 23929, 23930, 23931, 23932, 23933, 23934, 23935, 23936, 23937, 23939, 23940, 23941, 23942, 23943, 23944, 23945, 23946, 23947, 23948, 23949, 23950, 23951, 23952, 23953, 23954, 23955, 23956, 23957, 23958, 23959, 23960, 23962, 23963, 23964, 23966, 23967, 23968, 23969, 23970, 23971, 23972, 23973, 23974, 23975, 23976, 23977, 23978, 23979, 23980, 23981, 23982, 23983, 23984, 23985, 23986, 23987, 23988, 23989, 23990, 23992, 23993, 23994, 23995, 23996, 23997, 23998, 23999, 24e3, 24001, 24002, 24003, 24004, 24006, 24007, 24008, 24009, 24010, 24011, 24012, 24014, 24015, 24016, 24017, 24018, 24019, 24020, 24021, 24022, 24023, 24024, 24025, 24026, 24028, 24031, 24032, 24035, 24036, 24042, 24044, 24045, 24048, 24053, 24054, 24056, 24057, 24058, 24059, 24060, 24063, 24064, 24068, 24071, 24073, 24074, 24075, 24077, 24078, 24082, 24083, 24087, 24094, 24095, 24096, 24097, 24098, 24099, 24100, 24101, 24104, 24105, 24106, 24107, 24108, 24111, 24112, 24114, 24115, 24116, 24117, 24118, 24121, 24122, 24126, 24127, 24128, 24129, 24131, 24134, 24135, 24136, 24137, 24138, 24139, 24141, 24142, 24143, 24144, 24145, 24146, 24147, 24150, 24151, 24152, 24153, 24154, 24156, 24157, 24159, 24160, 24163, 24164, 24165, 24166, 24167, 24168, 24169, 24170, 24171, 24172, 24173, 24174, 24175, 24176, 24177, 24181, 24183, 24185, 24190, 24193, 24194, 24195, 24197, 24200, 24201, 24204, 24205, 24206, 24210, 24216, 24219, 24221, 24225, 24226, 24227, 24228, 24232, 24233, 24234, 24235, 24236, 24238, 24239, 24240, 24241, 24242, 24244, 24250, 24251, 24252, 24253, 24255, 24256, 24257, 24258, 24259, 24260, 24261, 24262, 24263, 24264, 24267, 24268, 24269, 24270, 24271, 24272, 24276, 24277, 24279, 24280, 24281, 24282, 24284, 24285, 24286, 24287, 24288, 24289, 24290, 24291, 24292, 24293, 24294, 24295, 24297, 24299, 24300, 24301, 24302, 24303, 24304, 24305, 24306, 24307, 24309, 24312, 24313, 24315, 24316, 24317, 24325, 24326, 24327, 24329, 24332, 24333, 24334, 24336, 24338, 24340, 24342, 24345, 24346, 24348, 24349, 24350, 24353, 24354, 24355, 24356, 24360, 24363, 24364, 24366, 24368, 24370, 24371, 24372, 24373, 24374, 24375, 24376, 24379, 24381, 24382, 24383, 24385, 24386, 24387, 24388, 24389, 24390, 24391, 24392, 24393, 24394, 24395, 24396, 24397, 24398, 24399, 24401, 24404, 24409, 24410, 24411, 24412, 24414, 24415, 24416, 24419, 24421, 24423, 24424, 24427, 24430, 24431, 24434, 24436, 24437, 24438, 24440, 24442, 24445, 24446, 24447, 24451, 24454, 24461, 24462, 24463, 24465, 24467, 24468, 24470, 24474, 24475, 24477, 24478, 24479, 24480, 24482, 24483, 24484, 24485, 24486, 24487, 24489, 24491, 24492, 24495, 24496, 24497, 24498, 24499, 24500, 24502, 24504, 24505, 24506, 24507, 24510, 24511, 24512, 24513, 24514, 24519, 24520, 24522, 24523, 24526, 24531, 24532, 24533, 24538, 24539, 24540, 24542, 24543, 24546, 24547, 24549, 24550, 24552, 24553, 24556, 24559, 24560, 24562, 24563, 24564, 24566, 24567, 24569, 24570, 24572, 24583, 24584, 24585, 24587, 24588, 24592, 24593, 24595, 24599, 24600, 24602, 24606, 24607, 24610, 24611, 24612, 24620, 24621, 24622, 24624, 24625, 24626, 24627, 24628, 24630, 24631, 24632, 24633, 24634, 24637, 24638, 24640, 24644, 24645, 24646, 24647, 24648, 24649, 24650, 24652, 24654, 24655, 24657, 24659, 24660, 24662, 24663, 24664, 24667, 24668, 24670, 24671, 24672, 24673, 24677, 24678, 24686, 24689, 24690, 24692, 24693, 24695, 24702, 24704, 24705, 24706, 24709, 24710, 24711, 24712, 24714, 24715, 24718, 24719, 24720, 24721, 24723, 24725, 24727, 24728, 24729, 24732, 24734, 24737, 24738, 24740, 24741, 24743, 24745, 24746, 24750, 24752, 24755, 24757, 24758, 24759, 24761, 24762, 24765, 24766, 24767, 24768, 24769, 24770, 24771, 24772, 24775, 24776, 24777, 24780, 24781, 24782, 24783, 24784, 24786, 24787, 24788, 24790, 24791, 24793, 24795, 24798, 24801, 24802, 24803, 24804, 24805, 24810, 24817, 24818, 24821, 24823, 24824, 24827, 24828, 24829, 24830, 24831, 24834, 24835, 24836, 24837, 24839, 24842, 24843, 24844, 24848, 24849, 24850, 24851, 24852, 24854, 24855, 24856, 24857, 24859, 24860, 24861, 24862, 24865, 24866, 24869, 24872, 24873, 24874, 24876, 24877, 24878, 24879, 24880, 24881, 24882, 24883, 24884, 24885, 24886, 24887, 24888, 24889, 24890, 24891, 24892, 24893, 24894, 24896, 24897, 24898, 24899, 24900, 24901, 24902, 24903, 24905, 24907, 24909, 24911, 24912, 24914, 24915, 24916, 24918, 24919, 24920, 24921, 24922, 24923, 24924, 24926, 24927, 24928, 24929, 24931, 24932, 24933, 24934, 24937, 24938, 24939, 24940, 24941, 24942, 24943, 24945, 24946, 24947, 24948, 24950, 24952, 24953, 24954, 24955, 24956, 24957, 24958, 24959, 24960, 24961, 24962, 24963, 24964, 24965, 24966, 24967, 24968, 24969, 24970, 24972, 24973, 24975, 24976, 24977, 24978, 24979, 24981, 24982, 24983, 24984, 24985, 24986, 24987, 24988, 24990, 24991, 24992, 24993, 24994, 24995, 24996, 24997, 24998, 25002, 25003, 25005, 25006, 25007, 25008, 25009, 25010, 25011, 25012, 25013, 25014, 25016, 25017, 25018, 25019, 25020, 25021, 25023, 25024, 25025, 25027, 25028, 25029, 25030, 25031, 25033, 25036, 25037, 25038, 25039, 25040, 25043, 25045, 25046, 25047, 25048, 25049, 25050, 25051, 25052, 25053, 25054, 25055, 25056, 25057, 25058, 25059, 25060, 25061, 25063, 25064, 25065, 25066, 25067, 25068, 25069, 25070, 25071, 25072, 25073, 25074, 25075, 25076, 25078, 25079, 25080, 25081, 25082, 25083, 25084, 25085, 25086, 25088, 25089, 25090, 25091, 25092, 25093, 25095, 25097, 25107, 25108, 25113, 25116, 25117, 25118, 25120, 25123, 25126, 25127, 25128, 25129, 25131, 25133, 25135, 25136, 25137, 25138, 25141, 25142, 25144, 25145, 25146, 25147, 25148, 25154, 25156, 25157, 25158, 25162, 25167, 25168, 25173, 25174, 25175, 25177, 25178, 25180, 25181, 25182, 25183, 25184, 25185, 25186, 25188, 25189, 25192, 25201, 25202, 25204, 25205, 25207, 25208, 25210, 25211, 25213, 25217, 25218, 25219, 25221, 25222, 25223, 25224, 25227, 25228, 25229, 25230, 25231, 25232, 25236, 25241, 25244, 25245, 25246, 25251, 25254, 25255, 25257, 25258, 25261, 25262, 25263, 25264, 25266, 25267, 25268, 25270, 25271, 25272, 25274, 25278, 25280, 25281, 25283, 25291, 25295, 25297, 25301, 25309, 25310, 25312, 25313, 25316, 25322, 25323, 25328, 25330, 25333, 25336, 25337, 25338, 25339, 25344, 25347, 25348, 25349, 25350, 25354, 25355, 25356, 25357, 25359, 25360, 25362, 25363, 25364, 25365, 25367, 25368, 25369, 25372, 25382, 25383, 25385, 25388, 25389, 25390, 25392, 25393, 25395, 25396, 25397, 25398, 25399, 25400, 25403, 25404, 25406, 25407, 25408, 25409, 25412, 25415, 25416, 25418, 25425, 25426, 25427, 25428, 25430, 25431, 25432, 25433, 25434, 25435, 25436, 25437, 25440, 25444, 25445, 25446, 25448, 25450, 25451, 25452, 25455, 25456, 25458, 25459, 25460, 25461, 25464, 25465, 25468, 25469, 25470, 25471, 25473, 25475, 25476, 25477, 25478, 25483, 25485, 25489, 25491, 25492, 25493, 25495, 25497, 25498, 25499, 25500, 25501, 25502, 25503, 25505, 25508, 25510, 25515, 25519, 25521, 25522, 25525, 25526, 25529, 25531, 25533, 25535, 25536, 25537, 25538, 25539, 25541, 25543, 25544, 25546, 25547, 25548, 25553, 25555, 25556, 25557, 25559, 25560, 25561, 25562, 25563, 25564, 25565, 25567, 25570, 25572, 25573, 25574, 25575, 25576, 25579, 25580, 25582, 25583, 25584, 25585, 25587, 25589, 25591, 25593, 25594, 25595, 25596, 25598, 25603, 25604, 25606, 25607, 25608, 25609, 25610, 25613, 25614, 25617, 25618, 25621, 25622, 25623, 25624, 25625, 25626, 25629, 25631, 25634, 25635, 25636, 25637, 25639, 25640, 25641, 25643, 25646, 25647, 25648, 25649, 25650, 25651, 25653, 25654, 25655, 25656, 25657, 25659, 25660, 25662, 25664, 25666, 25667, 25673, 25675, 25676, 25677, 25678, 25679, 25680, 25681, 25683, 25685, 25686, 25687, 25689, 25690, 25691, 25692, 25693, 25695, 25696, 25697, 25698, 25699, 25700, 25701, 25702, 25704, 25706, 25707, 25708, 25710, 25711, 25712, 25713, 25714, 25715, 25716, 25717, 25718, 25719, 25723, 25724, 25725, 25726, 25727, 25728, 25729, 25731, 25734, 25736, 25737, 25738, 25739, 25740, 25741, 25742, 25743, 25744, 25747, 25748, 25751, 25752, 25754, 25755, 25756, 25757, 25759, 25760, 25761, 25762, 25763, 25765, 25766, 25767, 25768, 25770, 25771, 25775, 25777, 25778, 25779, 25780, 25782, 25785, 25787, 25789, 25790, 25791, 25793, 25795, 25796, 25798, 25799, 25800, 25801, 25802, 25803, 25804, 25807, 25809, 25811, 25812, 25813, 25814, 25817, 25818, 25819, 25820, 25821, 25823, 25824, 25825, 25827, 25829, 25831, 25832, 25833, 25834, 25835, 25836, 25837, 25838, 25839, 25840, 25841, 25842, 25843, 25844, 25845, 25846, 25847, 25848, 25849, 25850, 25851, 25852, 25853, 25854, 25855, 25857, 25858, 25859, 25860, 25861, 25862, 25863, 25864, 25866, 25867, 25868, 25869, 25870, 25871, 25872, 25873, 25875, 25876, 25877, 25878, 25879, 25881, 25882, 25883, 25884, 25885, 25886, 25887, 25888, 25889, 25890, 25891, 25892, 25894, 25895, 25896, 25897, 25898, 25900, 25901, 25904, 25905, 25906, 25907, 25911, 25914, 25916, 25917, 25920, 25921, 25922, 25923, 25924, 25926, 25927, 25930, 25931, 25933, 25934, 25936, 25938, 25939, 25940, 25943, 25944, 25946, 25948, 25951, 25952, 25953, 25956, 25957, 25959, 25960, 25961, 25962, 25965, 25966, 25967, 25969, 25971, 25973, 25974, 25976, 25977, 25978, 25979, 25980, 25981, 25982, 25983, 25984, 25985, 25986, 25987, 25988, 25989, 25990, 25992, 25993, 25994, 25997, 25998, 25999, 26002, 26004, 26005, 26006, 26008, 26010, 26013, 26014, 26016, 26018, 26019, 26022, 26024, 26026, 26028, 26030, 26033, 26034, 26035, 26036, 26037, 26038, 26039, 26040, 26042, 26043, 26046, 26047, 26048, 26050, 26055, 26056, 26057, 26058, 26061, 26064, 26065, 26067, 26068, 26069, 26072, 26073, 26074, 26075, 26076, 26077, 26078, 26079, 26081, 26083, 26084, 26090, 26091, 26098, 26099, 26100, 26101, 26104, 26105, 26107, 26108, 26109, 26110, 26111, 26113, 26116, 26117, 26119, 26120, 26121, 26123, 26125, 26128, 26129, 26130, 26134, 26135, 26136, 26138, 26139, 26140, 26142, 26145, 26146, 26147, 26148, 26150, 26153, 26154, 26155, 26156, 26158, 26160, 26162, 26163, 26167, 26168, 26169, 26170, 26171, 26173, 26175, 26176, 26178, 26180, 26181, 26182, 26183, 26184, 26185, 26186, 26189, 26190, 26192, 26193, 26200, 26201, 26203, 26204, 26205, 26206, 26208, 26210, 26211, 26213, 26215, 26217, 26218, 26219, 26220, 26221, 26225, 26226, 26227, 26229, 26232, 26233, 26235, 26236, 26237, 26239, 26240, 26241, 26243, 26245, 26246, 26248, 26249, 26250, 26251, 26253, 26254, 26255, 26256, 26258, 26259, 26260, 26261, 26264, 26265, 26266, 26267, 26268, 26270, 26271, 26272, 26273, 26274, 26275, 26276, 26277, 26278, 26281, 26282, 26283, 26284, 26285, 26287, 26288, 26289, 26290, 26291, 26293, 26294, 26295, 26296, 26298, 26299, 26300, 26301, 26303, 26304, 26305, 26306, 26307, 26308, 26309, 26310, 26311, 26312, 26313, 26314, 26315, 26316, 26317, 26318, 26319, 26320, 26321, 26322, 26323, 26324, 26325, 26326, 26327, 26328, 26330, 26334, 26335, 26336, 26337, 26338, 26339, 26340, 26341, 26343, 26344, 26346, 26347, 26348, 26349, 26350, 26351, 26353, 26357, 26358, 26360, 26362, 26363, 26365, 26369, 26370, 26371, 26372, 26373, 26374, 26375, 26380, 26382, 26383, 26385, 26386, 26387, 26390, 26392, 26393, 26394, 26396, 26398, 26400, 26401, 26402, 26403, 26404, 26405, 26407, 26409, 26414, 26416, 26418, 26419, 26422, 26423, 26424, 26425, 26427, 26428, 26430, 26431, 26433, 26436, 26437, 26439, 26442, 26443, 26445, 26450, 26452, 26453, 26455, 26456, 26457, 26458, 26459, 26461, 26466, 26467, 26468, 26470, 26471, 26475, 26476, 26478, 26481, 26484, 26486, 26488, 26489, 26490, 26491, 26493, 26496, 26498, 26499, 26501, 26502, 26504, 26506, 26508, 26509, 26510, 26511, 26513, 26514, 26515, 26516, 26518, 26521, 26523, 26527, 26528, 26529, 26532, 26534, 26537, 26540, 26542, 26545, 26546, 26548, 26553, 26554, 26555, 26556, 26557, 26558, 26559, 26560, 26562, 26565, 26566, 26567, 26568, 26569, 26570, 26571, 26572, 26573, 26574, 26581, 26582, 26583, 26587, 26591, 26593, 26595, 26596, 26598, 26599, 26600, 26602, 26603, 26605, 26606, 26610, 26613, 26614, 26615, 26616, 26617, 26618, 26619, 26620, 26622, 26625, 26626, 26627, 26628, 26630, 26637, 26640, 26642, 26644, 26645, 26648, 26649, 26650, 26651, 26652, 26654, 26655, 26656, 26658, 26659, 26660, 26661, 26662, 26663, 26664, 26667, 26668, 26669, 26670, 26671, 26672, 26673, 26676, 26677, 26678, 26682, 26683, 26687, 26695, 26699, 26701, 26703, 26706, 26710, 26711, 26712, 26713, 26714, 26715, 26716, 26717, 26718, 26719, 26730, 26732, 26733, 26734, 26735, 26736, 26737, 26738, 26739, 26741, 26744, 26745, 26746, 26747, 26748, 26749, 26750, 26751, 26752, 26754, 26756, 26759, 26760, 26761, 26762, 26763, 26764, 26765, 26766, 26768, 26769, 26770, 26772, 26773, 26774, 26776, 26777, 26778, 26779, 26780, 26781, 26782, 26783, 26784, 26785, 26787, 26788, 26789, 26793, 26794, 26795, 26796, 26798, 26801, 26802, 26804, 26806, 26807, 26808, 26809, 26810, 26811, 26812, 26813, 26814, 26815, 26817, 26819, 26820, 26821, 26822, 26823, 26824, 26826, 26828, 26830, 26831, 26832, 26833, 26835, 26836, 26838, 26839, 26841, 26843, 26844, 26845, 26846, 26847, 26849, 26850, 26852, 26853, 26854, 26855, 26856, 26857, 26858, 26859, 26860, 26861, 26863, 26866, 26867, 26868, 26870, 26871, 26872, 26875, 26877, 26878, 26879, 26880, 26882, 26883, 26884, 26886, 26887, 26888, 26889, 26890, 26892, 26895, 26897, 26899, 26900, 26901, 26902, 26903, 26904, 26905, 26906, 26907, 26908, 26909, 26910, 26913, 26914, 26915, 26917, 26918, 26919, 26920, 26921, 26922, 26923, 26924, 26926, 26927, 26929, 26930, 26931, 26933, 26934, 26935, 26936, 26938, 26939, 26940, 26942, 26944, 26945, 26947, 26948, 26949, 26950, 26951, 26952, 26953, 26954, 26955, 26956, 26957, 26958, 26959, 26960, 26961, 26962, 26963, 26965, 26966, 26968, 26969, 26971, 26972, 26975, 26977, 26978, 26980, 26981, 26983, 26984, 26985, 26986, 26988, 26989, 26991, 26992, 26994, 26995, 26996, 26997, 26998, 27002, 27003, 27005, 27006, 27007, 27009, 27011, 27013, 27018, 27019, 27020, 27022, 27023, 27024, 27025, 27026, 27027, 27030, 27031, 27033, 27034, 27037, 27038, 27039, 27040, 27041, 27042, 27043, 27044, 27045, 27046, 27049, 27050, 27052, 27054, 27055, 27056, 27058, 27059, 27061, 27062, 27064, 27065, 27066, 27068, 27069, 27070, 27071, 27072, 27074, 27075, 27076, 27077, 27078, 27079, 27080, 27081, 27083, 27085, 27087, 27089, 27090, 27091, 27093, 27094, 27095, 27096, 27097, 27098, 27100, 27101, 27102, 27105, 27106, 27107, 27108, 27109, 27110, 27111, 27112, 27113, 27114, 27115, 27116, 27118, 27119, 27120, 27121, 27123, 27124, 27125, 27126, 27127, 27128, 27129, 27130, 27131, 27132, 27134, 27136, 27137, 27138, 27139, 27140, 27141, 27142, 27143, 27144, 27145, 27147, 27148, 27149, 27150, 27151, 27152, 27153, 27154, 27155, 27156, 27157, 27158, 27161, 27162, 27163, 27164, 27165, 27166, 27168, 27170, 27171, 27172, 27173, 27174, 27175, 27177, 27179, 27180, 27181, 27182, 27184, 27186, 27187, 27188, 27190, 27191, 27192, 27193, 27194, 27195, 27196, 27199, 27200, 27201, 27202, 27203, 27205, 27206, 27208, 27209, 27210, 27211, 27212, 27213, 27214, 27215, 27217, 27218, 27219, 27220, 27221, 27222, 27223, 27226, 27228, 27229, 27230, 27231, 27232, 27234, 27235, 27236, 27238, 27239, 27240, 27241, 27242, 27243, 27244, 27245, 27246, 27247, 27248, 27250, 27251, 27252, 27253, 27254, 27255, 27256, 27258, 27259, 27261, 27262, 27263, 27265, 27266, 27267, 27269, 27270, 27271, 27272, 27273, 27274, 27275, 27276, 27277, 27279, 27282, 27283, 27284, 27285, 27286, 27288, 27289, 27290, 27291, 27292, 27293, 27294, 27295, 27297, 27298, 27299, 27300, 27301, 27302, 27303, 27304, 27306, 27309, 27310, 27311, 27312, 27313, 27314, 27315, 27316, 27317, 27318, 27319, 27320, 27321, 27322, 27323, 27324, 27325, 27326, 27327, 27328, 27329, 27330, 27331, 27332, 27333, 27334, 27335, 27336, 27337, 27338, 27339, 27340, 27341, 27342, 27343, 27344, 27345, 27346, 27347, 27348, 27349, 27350, 27351, 27352, 27353, 27354, 27355, 27356, 27357, 27358, 27359, 27360, 27361, 27362, 27363, 27364, 27365, 27366, 27367, 27368, 27369, 27370, 27371, 27372, 27373, 27374, 27375, 27376, 27377, 27378, 27379, 27380, 27381, 27382, 27383, 27384, 27385, 27386, 27387, 27388, 27389, 27390, 27391, 27392, 27393, 27394, 27395, 27396, 27397, 27398, 27399, 27400, 27401, 27402, 27403, 27404, 27405, 27406, 27407, 27408, 27409, 27410, 27411, 27412, 27413, 27414, 27415, 27416, 27417, 27418, 27419, 27420, 27421, 27422, 27423, 27429, 27430, 27432, 27433, 27434, 27435, 27436, 27437, 27438, 27439, 27440, 27441, 27443, 27444, 27445, 27446, 27448, 27451, 27452, 27453, 27455, 27456, 27457, 27458, 27460, 27461, 27464, 27466, 27467, 27469, 27470, 27471, 27472, 27473, 27474, 27475, 27476, 27477, 27478, 27479, 27480, 27482, 27483, 27484, 27485, 27486, 27487, 27488, 27489, 27496, 27497, 27499, 27500, 27501, 27502, 27503, 27504, 27505, 27506, 27507, 27508, 27509, 27510, 27511, 27512, 27514, 27517, 27518, 27519, 27520, 27525, 27528, 27532, 27534, 27535, 27536, 27537, 27540, 27541, 27543, 27544, 27545, 27548, 27549, 27550, 27551, 27552, 27554, 27555, 27556, 27557, 27558, 27559, 27560, 27561, 27563, 27564, 27565, 27566, 27567, 27568, 27569, 27570, 27574, 27576, 27577, 27578, 27579, 27580, 27581, 27582, 27584, 27587, 27588, 27590, 27591, 27592, 27593, 27594, 27596, 27598, 27600, 27601, 27608, 27610, 27612, 27613, 27614, 27615, 27616, 27618, 27619, 27620, 27621, 27622, 27623, 27624, 27625, 27628, 27629, 27630, 27632, 27633, 27634, 27636, 27638, 27639, 27640, 27642, 27643, 27644, 27646, 27647, 27648, 27649, 27650, 27651, 27652, 27656, 27657, 27658, 27659, 27660, 27662, 27666, 27671, 27676, 27677, 27678, 27680, 27683, 27685, 27691, 27692, 27693, 27697, 27699, 27702, 27703, 27705, 27706, 27707, 27708, 27710, 27711, 27715, 27716, 27717, 27720, 27723, 27724, 27725, 27726, 27727, 27729, 27730, 27731, 27734, 27736, 27737, 27738, 27746, 27747, 27749, 27750, 27751, 27755, 27756, 27757, 27758, 27759, 27761, 27763, 27765, 27767, 27768, 27770, 27771, 27772, 27775, 27776, 27780, 27783, 27786, 27787, 27789, 27790, 27793, 27794, 27797, 27798, 27799, 27800, 27802, 27804, 27805, 27806, 27808, 27810, 27816, 27820, 27823, 27824, 27828, 27829, 27830, 27831, 27834, 27840, 27841, 27842, 27843, 27846, 27847, 27848, 27851, 27853, 27854, 27855, 27857, 27858, 27864, 27865, 27866, 27868, 27869, 27871, 27876, 27878, 27879, 27881, 27884, 27885, 27890, 27892, 27897, 27903, 27904, 27906, 27907, 27909, 27910, 27912, 27913, 27914, 27917, 27919, 27920, 27921, 27923, 27924, 27925, 27926, 27928, 27932, 27933, 27935, 27936, 27937, 27938, 27939, 27940, 27942, 27944, 27945, 27948, 27949, 27951, 27952, 27956, 27958, 27959, 27960, 27962, 27967, 27968, 27970, 27972, 27977, 27980, 27984, 27989, 27990, 27991, 27992, 27995, 27997, 27999, 28001, 28002, 28004, 28005, 28007, 28008, 28011, 28012, 28013, 28016, 28017, 28018, 28019, 28021, 28022, 28025, 28026, 28027, 28029, 28030, 28031, 28032, 28033, 28035, 28036, 28038, 28039, 28042, 28043, 28045, 28047, 28048, 28050, 28054, 28055, 28056, 28057, 28058, 28060, 28066, 28069, 28076, 28077, 28080, 28081, 28083, 28084, 28086, 28087, 28089, 28090, 28091, 28092, 28093, 28094, 28097, 28098, 28099, 28104, 28105, 28106, 28109, 28110, 28111, 28112, 28114, 28115, 28116, 28117, 28119, 28122, 28123, 28124, 28127, 28130, 28131, 28133, 28135, 28136, 28137, 28138, 28141, 28143, 28144, 28146, 28148, 28149, 28150, 28152, 28154, 28157, 28158, 28159, 28160, 28161, 28162, 28163, 28164, 28166, 28167, 28168, 28169, 28171, 28175, 28178, 28179, 28181, 28184, 28185, 28187, 28188, 28190, 28191, 28194, 28198, 28199, 28200, 28202, 28204, 28206, 28208, 28209, 28211, 28213, 28214, 28215, 28217, 28219, 28220, 28221, 28222, 28223, 28224, 28225, 28226, 28229, 28230, 28231, 28232, 28233, 28234, 28235, 28236, 28239, 28240, 28241, 28242, 28245, 28247, 28249, 28250, 28252, 28253, 28254, 28256, 28257, 28258, 28259, 28260, 28261, 28262, 28263, 28264, 28265, 28266, 28268, 28269, 28271, 28272, 28273, 28274, 28275, 28276, 28277, 28278, 28279, 28280, 28281, 28282, 28283, 28284, 28285, 28288, 28289, 28290, 28292, 28295, 28296, 28298, 28299, 28300, 28301, 28302, 28305, 28306, 28307, 28308, 28309, 28310, 28311, 28313, 28314, 28315, 28317, 28318, 28320, 28321, 28323, 28324, 28326, 28328, 28329, 28331, 28332, 28333, 28334, 28336, 28339, 28341, 28344, 28345, 28348, 28350, 28351, 28352, 28355, 28356, 28357, 28358, 28360, 28361, 28362, 28364, 28365, 28366, 28368, 28370, 28374, 28376, 28377, 28379, 28380, 28381, 28387, 28391, 28394, 28395, 28396, 28397, 28398, 28399, 28400, 28401, 28402, 28403, 28405, 28406, 28407, 28408, 28410, 28411, 28412, 28413, 28414, 28415, 28416, 28417, 28419, 28420, 28421, 28423, 28424, 28426, 28427, 28428, 28429, 28430, 28432, 28433, 28434, 28438, 28439, 28440, 28441, 28442, 28443, 28444, 28445, 28446, 28447, 28449, 28450, 28451, 28453, 28454, 28455, 28456, 28460, 28462, 28464, 28466, 28468, 28469, 28471, 28472, 28473, 28474, 28475, 28476, 28477, 28479, 28480, 28481, 28482, 28483, 28484, 28485, 28488, 28489, 28490, 28492, 28494, 28495, 28496, 28497, 28498, 28499, 28500, 28501, 28502, 28503, 28505, 28506, 28507, 28509, 28511, 28512, 28513, 28515, 28516, 28517, 28519, 28520, 28521, 28522, 28523, 28524, 28527, 28528, 28529, 28531, 28533, 28534, 28535, 28537, 28539, 28541, 28542, 28543, 28544, 28545, 28546, 28547, 28549, 28550, 28551, 28554, 28555, 28559, 28560, 28561, 28562, 28563, 28564, 28565, 28566, 28567, 28568, 28569, 28570, 28571, 28573, 28574, 28575, 28576, 28578, 28579, 28580, 28581, 28582, 28584, 28585, 28586, 28587, 28588, 28589, 28590, 28591, 28592, 28593, 28594, 28596, 28597, 28599, 28600, 28602, 28603, 28604, 28605, 28606, 28607, 28609, 28611, 28612, 28613, 28614, 28615, 28616, 28618, 28619, 28620, 28621, 28622, 28623, 28624, 28627, 28628, 28629, 28630, 28631, 28632, 28633, 28634, 28635, 28636, 28637, 28639, 28642, 28643, 28644, 28645, 28646, 28647, 28648, 28649, 28650, 28651, 28652, 28653, 28656, 28657, 28658, 28659, 28660, 28661, 28662, 28663, 28664, 28665, 28666, 28667, 28668, 28669, 28670, 28671, 28672, 28673, 28674, 28675, 28676, 28677, 28678, 28679, 28680, 28681, 28682, 28683, 28684, 28685, 28686, 28687, 28688, 28690, 28691, 28692, 28693, 28694, 28695, 28696, 28697, 28700, 28701, 28702, 28703, 28704, 28705, 28706, 28708, 28709, 28710, 28711, 28712, 28713, 28714, 28715, 28716, 28717, 28718, 28719, 28720, 28721, 28722, 28723, 28724, 28726, 28727, 28728, 28730, 28731, 28732, 28733, 28734, 28735, 28736, 28737, 28738, 28739, 28740, 28741, 28742, 28743, 28744, 28745, 28746, 28747, 28749, 28750, 28752, 28753, 28754, 28755, 28756, 28757, 28758, 28759, 28760, 28761, 28762, 28763, 28764, 28765, 28767, 28768, 28769, 28770, 28771, 28772, 28773, 28774, 28775, 28776, 28777, 28778, 28782, 28785, 28786, 28787, 28788, 28791, 28793, 28794, 28795, 28797, 28801, 28802, 28803, 28804, 28806, 28807, 28808, 28811, 28812, 28813, 28815, 28816, 28817, 28819, 28823, 28824, 28826, 28827, 28830, 28831, 28832, 28833, 28834, 28835, 28836, 28837, 28838, 28839, 28840, 28841, 28842, 28848, 28850, 28852, 28853, 28854, 28858, 28862, 28863, 28868, 28869, 28870, 28871, 28873, 28875, 28876, 28877, 28878, 28879, 28880, 28881, 28882, 28883, 28884, 28885, 28886, 28887, 28890, 28892, 28893, 28894, 28896, 28897, 28898, 28899, 28901, 28906, 28910, 28912, 28913, 28914, 28915, 28916, 28917, 28918, 28920, 28922, 28923, 28924, 28926, 28927, 28928, 28929, 28930, 28931, 28932, 28933, 28934, 28935, 28936, 28939, 28940, 28941, 28942, 28943, 28945, 28946, 28948, 28951, 28955, 28956, 28957, 28958, 28959, 28960, 28961, 28962, 28963, 28964, 28965, 28967, 28968, 28969, 28970, 28971, 28972, 28973, 28974, 28978, 28979, 28980, 28981, 28983, 28984, 28985, 28986, 28987, 28988, 28989, 28990, 28991, 28992, 28993, 28994, 28995, 28996, 28998, 28999, 29e3, 29001, 29003, 29005, 29007, 29008, 29009, 29010, 29011, 29012, 29013, 29014, 29015, 29016, 29017, 29018, 29019, 29021, 29023, 29024, 29025, 29026, 29027, 29029, 29033, 29034, 29035, 29036, 29037, 29039, 29040, 29041, 29044, 29045, 29046, 29047, 29049, 29051, 29052, 29054, 29055, 29056, 29057, 29058, 29059, 29061, 29062, 29063, 29064, 29065, 29067, 29068, 29069, 29070, 29072, 29073, 29074, 29075, 29077, 29078, 29079, 29082, 29083, 29084, 29085, 29086, 29089, 29090, 29091, 29092, 29093, 29094, 29095, 29097, 29098, 29099, 29101, 29102, 29103, 29104, 29105, 29106, 29108, 29110, 29111, 29112, 29114, 29115, 29116, 29117, 29118, 29119, 29120, 29121, 29122, 29124, 29125, 29126, 29127, 29128, 29129, 29130, 29131, 29132, 29133, 29135, 29136, 29137, 29138, 29139, 29142, 29143, 29144, 29145, 29146, 29147, 29148, 29149, 29150, 29151, 29153, 29154, 29155, 29156, 29158, 29160, 29161, 29162, 29163, 29164, 29165, 29167, 29168, 29169, 29170, 29171, 29172, 29173, 29174, 29175, 29176, 29178, 29179, 29180, 29181, 29182, 29183, 29184, 29185, 29186, 29187, 29188, 29189, 29191, 29192, 29193, 29194, 29195, 29196, 29197, 29198, 29199, 29200, 29201, 29202, 29203, 29204, 29205, 29206, 29207, 29208, 29209, 29210, 29211, 29212, 29214, 29215, 29216, 29217, 29218, 29219, 29220, 29221, 29222, 29223, 29225, 29227, 29229, 29230, 29231, 29234, 29235, 29236, 29242, 29244, 29246, 29248, 29249, 29250, 29251, 29252, 29253, 29254, 29257, 29258, 29259, 29262, 29263, 29264, 29265, 29267, 29268, 29269, 29271, 29272, 29274, 29276, 29278, 29280, 29283, 29284, 29285, 29288, 29290, 29291, 29292, 29293, 29296, 29297, 29299, 29300, 29302, 29303, 29304, 29307, 29308, 29309, 29314, 29315, 29317, 29318, 29319, 29320, 29321, 29324, 29326, 29328, 29329, 29331, 29332, 29333, 29334, 29335, 29336, 29337, 29338, 29339, 29340, 29341, 29342, 29344, 29345, 29346, 29347, 29348, 29349, 29350, 29351, 29352, 29353, 29354, 29355, 29358, 29361, 29362, 29363, 29365, 29370, 29371, 29372, 29373, 29374, 29375, 29376, 29381, 29382, 29383, 29385, 29386, 29387, 29388, 29391, 29393, 29395, 29396, 29397, 29398, 29400, 29402, 29403, 58566, 58567, 58568, 58569, 58570, 58571, 58572, 58573, 58574, 58575, 58576, 58577, 58578, 58579, 58580, 58581, 58582, 58583, 58584, 58585, 58586, 58587, 58588, 58589, 58590, 58591, 58592, 58593, 58594, 58595, 58596, 58597, 58598, 58599, 58600, 58601, 58602, 58603, 58604, 58605, 58606, 58607, 58608, 58609, 58610, 58611, 58612, 58613, 58614, 58615, 58616, 58617, 58618, 58619, 58620, 58621, 58622, 58623, 58624, 58625, 58626, 58627, 58628, 58629, 58630, 58631, 58632, 58633, 58634, 58635, 58636, 58637, 58638, 58639, 58640, 58641, 58642, 58643, 58644, 58645, 58646, 58647, 58648, 58649, 58650, 58651, 58652, 58653, 58654, 58655, 58656, 58657, 58658, 58659, 58660, 58661, 12288, 12289, 12290, 183, 713, 711, 168, 12291, 12293, 8212, 65374, 8214, 8230, 8216, 8217, 8220, 8221, 12308, 12309, 12296, 12297, 12298, 12299, 12300, 12301, 12302, 12303, 12310, 12311, 12304, 12305, 177, 215, 247, 8758, 8743, 8744, 8721, 8719, 8746, 8745, 8712, 8759, 8730, 8869, 8741, 8736, 8978, 8857, 8747, 8750, 8801, 8780, 8776, 8765, 8733, 8800, 8814, 8815, 8804, 8805, 8734, 8757, 8756, 9794, 9792, 176, 8242, 8243, 8451, 65284, 164, 65504, 65505, 8240, 167, 8470, 9734, 9733, 9675, 9679, 9678, 9671, 9670, 9633, 9632, 9651, 9650, 8251, 8594, 8592, 8593, 8595, 12307, 58662, 58663, 58664, 58665, 58666, 58667, 58668, 58669, 58670, 58671, 58672, 58673, 58674, 58675, 58676, 58677, 58678, 58679, 58680, 58681, 58682, 58683, 58684, 58685, 58686, 58687, 58688, 58689, 58690, 58691, 58692, 58693, 58694, 58695, 58696, 58697, 58698, 58699, 58700, 58701, 58702, 58703, 58704, 58705, 58706, 58707, 58708, 58709, 58710, 58711, 58712, 58713, 58714, 58715, 58716, 58717, 58718, 58719, 58720, 58721, 58722, 58723, 58724, 58725, 58726, 58727, 58728, 58729, 58730, 58731, 58732, 58733, 58734, 58735, 58736, 58737, 58738, 58739, 58740, 58741, 58742, 58743, 58744, 58745, 58746, 58747, 58748, 58749, 58750, 58751, 58752, 58753, 58754, 58755, 58756, 58757, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 59238, 59239, 59240, 59241, 59242, 59243, 9352, 9353, 9354, 9355, 9356, 9357, 9358, 9359, 9360, 9361, 9362, 9363, 9364, 9365, 9366, 9367, 9368, 9369, 9370, 9371, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 9342, 9343, 9344, 9345, 9346, 9347, 9348, 9349, 9350, 9351, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 8364, 59245, 12832, 12833, 12834, 12835, 12836, 12837, 12838, 12839, 12840, 12841, 59246, 59247, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 59248, 59249, 58758, 58759, 58760, 58761, 58762, 58763, 58764, 58765, 58766, 58767, 58768, 58769, 58770, 58771, 58772, 58773, 58774, 58775, 58776, 58777, 58778, 58779, 58780, 58781, 58782, 58783, 58784, 58785, 58786, 58787, 58788, 58789, 58790, 58791, 58792, 58793, 58794, 58795, 58796, 58797, 58798, 58799, 58800, 58801, 58802, 58803, 58804, 58805, 58806, 58807, 58808, 58809, 58810, 58811, 58812, 58813, 58814, 58815, 58816, 58817, 58818, 58819, 58820, 58821, 58822, 58823, 58824, 58825, 58826, 58827, 58828, 58829, 58830, 58831, 58832, 58833, 58834, 58835, 58836, 58837, 58838, 58839, 58840, 58841, 58842, 58843, 58844, 58845, 58846, 58847, 58848, 58849, 58850, 58851, 58852, 12288, 65281, 65282, 65283, 65509, 65285, 65286, 65287, 65288, 65289, 65290, 65291, 65292, 65293, 65294, 65295, 65296, 65297, 65298, 65299, 65300, 65301, 65302, 65303, 65304, 65305, 65306, 65307, 65308, 65309, 65310, 65311, 65312, 65313, 65314, 65315, 65316, 65317, 65318, 65319, 65320, 65321, 65322, 65323, 65324, 65325, 65326, 65327, 65328, 65329, 65330, 65331, 65332, 65333, 65334, 65335, 65336, 65337, 65338, 65339, 65340, 65341, 65342, 65343, 65344, 65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361, 65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370, 65371, 65372, 65373, 65507, 58854, 58855, 58856, 58857, 58858, 58859, 58860, 58861, 58862, 58863, 58864, 58865, 58866, 58867, 58868, 58869, 58870, 58871, 58872, 58873, 58874, 58875, 58876, 58877, 58878, 58879, 58880, 58881, 58882, 58883, 58884, 58885, 58886, 58887, 58888, 58889, 58890, 58891, 58892, 58893, 58894, 58895, 58896, 58897, 58898, 58899, 58900, 58901, 58902, 58903, 58904, 58905, 58906, 58907, 58908, 58909, 58910, 58911, 58912, 58913, 58914, 58915, 58916, 58917, 58918, 58919, 58920, 58921, 58922, 58923, 58924, 58925, 58926, 58927, 58928, 58929, 58930, 58931, 58932, 58933, 58934, 58935, 58936, 58937, 58938, 58939, 58940, 58941, 58942, 58943, 58944, 58945, 58946, 58947, 58948, 58949, 12353, 12354, 12355, 12356, 12357, 12358, 12359, 12360, 12361, 12362, 12363, 12364, 12365, 12366, 12367, 12368, 12369, 12370, 12371, 12372, 12373, 12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382, 12383, 12384, 12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392, 12393, 12394, 12395, 12396, 12397, 12398, 12399, 12400, 12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412, 12413, 12414, 12415, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431, 12432, 12433, 12434, 12435, 59250, 59251, 59252, 59253, 59254, 59255, 59256, 59257, 59258, 59259, 59260, 58950, 58951, 58952, 58953, 58954, 58955, 58956, 58957, 58958, 58959, 58960, 58961, 58962, 58963, 58964, 58965, 58966, 58967, 58968, 58969, 58970, 58971, 58972, 58973, 58974, 58975, 58976, 58977, 58978, 58979, 58980, 58981, 58982, 58983, 58984, 58985, 58986, 58987, 58988, 58989, 58990, 58991, 58992, 58993, 58994, 58995, 58996, 58997, 58998, 58999, 59e3, 59001, 59002, 59003, 59004, 59005, 59006, 59007, 59008, 59009, 59010, 59011, 59012, 59013, 59014, 59015, 59016, 59017, 59018, 59019, 59020, 59021, 59022, 59023, 59024, 59025, 59026, 59027, 59028, 59029, 59030, 59031, 59032, 59033, 59034, 59035, 59036, 59037, 59038, 59039, 59040, 59041, 59042, 59043, 59044, 59045, 12449, 12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461, 12462, 12463, 12464, 12465, 12466, 12467, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 12475, 12476, 12477, 12478, 12479, 12480, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489, 12490, 12491, 12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499, 12500, 12501, 12502, 12503, 12504, 12505, 12506, 12507, 12508, 12509, 12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519, 12520, 12521, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531, 12532, 12533, 12534, 59261, 59262, 59263, 59264, 59265, 59266, 59267, 59268, 59046, 59047, 59048, 59049, 59050, 59051, 59052, 59053, 59054, 59055, 59056, 59057, 59058, 59059, 59060, 59061, 59062, 59063, 59064, 59065, 59066, 59067, 59068, 59069, 59070, 59071, 59072, 59073, 59074, 59075, 59076, 59077, 59078, 59079, 59080, 59081, 59082, 59083, 59084, 59085, 59086, 59087, 59088, 59089, 59090, 59091, 59092, 59093, 59094, 59095, 59096, 59097, 59098, 59099, 59100, 59101, 59102, 59103, 59104, 59105, 59106, 59107, 59108, 59109, 59110, 59111, 59112, 59113, 59114, 59115, 59116, 59117, 59118, 59119, 59120, 59121, 59122, 59123, 59124, 59125, 59126, 59127, 59128, 59129, 59130, 59131, 59132, 59133, 59134, 59135, 59136, 59137, 59138, 59139, 59140, 59141, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 59269, 59270, 59271, 59272, 59273, 59274, 59275, 59276, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 967, 968, 969, 59277, 59278, 59279, 59280, 59281, 59282, 59283, 65077, 65078, 65081, 65082, 65087, 65088, 65085, 65086, 65089, 65090, 65091, 65092, 59284, 59285, 65083, 65084, 65079, 65080, 65073, 59286, 65075, 65076, 59287, 59288, 59289, 59290, 59291, 59292, 59293, 59294, 59295, 59142, 59143, 59144, 59145, 59146, 59147, 59148, 59149, 59150, 59151, 59152, 59153, 59154, 59155, 59156, 59157, 59158, 59159, 59160, 59161, 59162, 59163, 59164, 59165, 59166, 59167, 59168, 59169, 59170, 59171, 59172, 59173, 59174, 59175, 59176, 59177, 59178, 59179, 59180, 59181, 59182, 59183, 59184, 59185, 59186, 59187, 59188, 59189, 59190, 59191, 59192, 59193, 59194, 59195, 59196, 59197, 59198, 59199, 59200, 59201, 59202, 59203, 59204, 59205, 59206, 59207, 59208, 59209, 59210, 59211, 59212, 59213, 59214, 59215, 59216, 59217, 59218, 59219, 59220, 59221, 59222, 59223, 59224, 59225, 59226, 59227, 59228, 59229, 59230, 59231, 59232, 59233, 59234, 59235, 59236, 59237, 1040, 1041, 1042, 1043, 1044, 1045, 1025, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 59296, 59297, 59298, 59299, 59300, 59301, 59302, 59303, 59304, 59305, 59306, 59307, 59308, 59309, 59310, 1072, 1073, 1074, 1075, 1076, 1077, 1105, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 59311, 59312, 59313, 59314, 59315, 59316, 59317, 59318, 59319, 59320, 59321, 59322, 59323, 714, 715, 729, 8211, 8213, 8229, 8245, 8453, 8457, 8598, 8599, 8600, 8601, 8725, 8735, 8739, 8786, 8806, 8807, 8895, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9581, 9582, 9583, 9584, 9585, 9586, 9587, 9601, 9602, 9603, 9604, 9605, 9606, 9607, 9608, 9609, 9610, 9611, 9612, 9613, 9614, 9615, 9619, 9620, 9621, 9660, 9661, 9698, 9699, 9700, 9701, 9737, 8853, 12306, 12317, 12318, 59324, 59325, 59326, 59327, 59328, 59329, 59330, 59331, 59332, 59333, 59334, 257, 225, 462, 224, 275, 233, 283, 232, 299, 237, 464, 236, 333, 243, 466, 242, 363, 250, 468, 249, 470, 472, 474, 476, 252, 234, 593, 7743, 324, 328, 505, 609, 59337, 59338, 59339, 59340, 12549, 12550, 12551, 12552, 12553, 12554, 12555, 12556, 12557, 12558, 12559, 12560, 12561, 12562, 12563, 12564, 12565, 12566, 12567, 12568, 12569, 12570, 12571, 12572, 12573, 12574, 12575, 12576, 12577, 12578, 12579, 12580, 12581, 12582, 12583, 12584, 12585, 59341, 59342, 59343, 59344, 59345, 59346, 59347, 59348, 59349, 59350, 59351, 59352, 59353, 59354, 59355, 59356, 59357, 59358, 59359, 59360, 59361, 12321, 12322, 12323, 12324, 12325, 12326, 12327, 12328, 12329, 12963, 13198, 13199, 13212, 13213, 13214, 13217, 13252, 13262, 13265, 13266, 13269, 65072, 65506, 65508, 59362, 8481, 12849, 59363, 8208, 59364, 59365, 59366, 12540, 12443, 12444, 12541, 12542, 12294, 12445, 12446, 65097, 65098, 65099, 65100, 65101, 65102, 65103, 65104, 65105, 65106, 65108, 65109, 65110, 65111, 65113, 65114, 65115, 65116, 65117, 65118, 65119, 65120, 65121, 65122, 65123, 65124, 65125, 65126, 65128, 65129, 65130, 65131, 12350, 12272, 12273, 12274, 12275, 12276, 12277, 12278, 12279, 12280, 12281, 12282, 12283, 12295, 59380, 59381, 59382, 59383, 59384, 59385, 59386, 59387, 59388, 59389, 59390, 59391, 59392, 9472, 9473, 9474, 9475, 9476, 9477, 9478, 9479, 9480, 9481, 9482, 9483, 9484, 9485, 9486, 9487, 9488, 9489, 9490, 9491, 9492, 9493, 9494, 9495, 9496, 9497, 9498, 9499, 9500, 9501, 9502, 9503, 9504, 9505, 9506, 9507, 9508, 9509, 9510, 9511, 9512, 9513, 9514, 9515, 9516, 9517, 9518, 9519, 9520, 9521, 9522, 9523, 9524, 9525, 9526, 9527, 9528, 9529, 9530, 9531, 9532, 9533, 9534, 9535, 9536, 9537, 9538, 9539, 9540, 9541, 9542, 9543, 9544, 9545, 9546, 9547, 59393, 59394, 59395, 59396, 59397, 59398, 59399, 59400, 59401, 59402, 59403, 59404, 59405, 59406, 59407, 29404, 29405, 29407, 29410, 29411, 29412, 29413, 29414, 29415, 29418, 29419, 29429, 29430, 29433, 29437, 29438, 29439, 29440, 29442, 29444, 29445, 29446, 29447, 29448, 29449, 29451, 29452, 29453, 29455, 29456, 29457, 29458, 29460, 29464, 29465, 29466, 29471, 29472, 29475, 29476, 29478, 29479, 29480, 29485, 29487, 29488, 29490, 29491, 29493, 29494, 29498, 29499, 29500, 29501, 29504, 29505, 29506, 29507, 29508, 29509, 29510, 29511, 29512, 29513, 29514, 29515, 29516, 29518, 29519, 29521, 29523, 29524, 29525, 29526, 29528, 29529, 29530, 29531, 29532, 29533, 29534, 29535, 29537, 29538, 29539, 29540, 29541, 29542, 29543, 29544, 29545, 29546, 29547, 29550, 29552, 29553, 57344, 57345, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57356, 57357, 57358, 57359, 57360, 57361, 57362, 57363, 57364, 57365, 57366, 57367, 57368, 57369, 57370, 57371, 57372, 57373, 57374, 57375, 57376, 57377, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57388, 57389, 57390, 57391, 57392, 57393, 57394, 57395, 57396, 57397, 57398, 57399, 57400, 57401, 57402, 57403, 57404, 57405, 57406, 57407, 57408, 57409, 57410, 57411, 57412, 57413, 57414, 57415, 57416, 57417, 57418, 57419, 57420, 57421, 57422, 57423, 57424, 57425, 57426, 57427, 57428, 57429, 57430, 57431, 57432, 57433, 57434, 57435, 57436, 57437, 29554, 29555, 29556, 29557, 29558, 29559, 29560, 29561, 29562, 29563, 29564, 29565, 29567, 29568, 29569, 29570, 29571, 29573, 29574, 29576, 29578, 29580, 29581, 29583, 29584, 29586, 29587, 29588, 29589, 29591, 29592, 29593, 29594, 29596, 29597, 29598, 29600, 29601, 29603, 29604, 29605, 29606, 29607, 29608, 29610, 29612, 29613, 29617, 29620, 29621, 29622, 29624, 29625, 29628, 29629, 29630, 29631, 29633, 29635, 29636, 29637, 29638, 29639, 29643, 29644, 29646, 29650, 29651, 29652, 29653, 29654, 29655, 29656, 29658, 29659, 29660, 29661, 29663, 29665, 29666, 29667, 29668, 29670, 29672, 29674, 29675, 29676, 29678, 29679, 29680, 29681, 29683, 29684, 29685, 29686, 29687, 57438, 57439, 57440, 57441, 57442, 57443, 57444, 57445, 57446, 57447, 57448, 57449, 57450, 57451, 57452, 57453, 57454, 57455, 57456, 57457, 57458, 57459, 57460, 57461, 57462, 57463, 57464, 57465, 57466, 57467, 57468, 57469, 57470, 57471, 57472, 57473, 57474, 57475, 57476, 57477, 57478, 57479, 57480, 57481, 57482, 57483, 57484, 57485, 57486, 57487, 57488, 57489, 57490, 57491, 57492, 57493, 57494, 57495, 57496, 57497, 57498, 57499, 57500, 57501, 57502, 57503, 57504, 57505, 57506, 57507, 57508, 57509, 57510, 57511, 57512, 57513, 57514, 57515, 57516, 57517, 57518, 57519, 57520, 57521, 57522, 57523, 57524, 57525, 57526, 57527, 57528, 57529, 57530, 57531, 29688, 29689, 29690, 29691, 29692, 29693, 29694, 29695, 29696, 29697, 29698, 29700, 29703, 29704, 29707, 29708, 29709, 29710, 29713, 29714, 29715, 29716, 29717, 29718, 29719, 29720, 29721, 29724, 29725, 29726, 29727, 29728, 29729, 29731, 29732, 29735, 29737, 29739, 29741, 29743, 29745, 29746, 29751, 29752, 29753, 29754, 29755, 29757, 29758, 29759, 29760, 29762, 29763, 29764, 29765, 29766, 29767, 29768, 29769, 29770, 29771, 29772, 29773, 29774, 29775, 29776, 29777, 29778, 29779, 29780, 29782, 29784, 29789, 29792, 29793, 29794, 29795, 29796, 29797, 29798, 29799, 29800, 29801, 29802, 29803, 29804, 29806, 29807, 29809, 29810, 29811, 29812, 29813, 29816, 29817, 29818, 57532, 57533, 57534, 57535, 57536, 57537, 57538, 57539, 57540, 57541, 57542, 57543, 57544, 57545, 57546, 57547, 57548, 57549, 57550, 57551, 57552, 57553, 57554, 57555, 57556, 57557, 57558, 57559, 57560, 57561, 57562, 57563, 57564, 57565, 57566, 57567, 57568, 57569, 57570, 57571, 57572, 57573, 57574, 57575, 57576, 57577, 57578, 57579, 57580, 57581, 57582, 57583, 57584, 57585, 57586, 57587, 57588, 57589, 57590, 57591, 57592, 57593, 57594, 57595, 57596, 57597, 57598, 57599, 57600, 57601, 57602, 57603, 57604, 57605, 57606, 57607, 57608, 57609, 57610, 57611, 57612, 57613, 57614, 57615, 57616, 57617, 57618, 57619, 57620, 57621, 57622, 57623, 57624, 57625, 29819, 29820, 29821, 29823, 29826, 29828, 29829, 29830, 29832, 29833, 29834, 29836, 29837, 29839, 29841, 29842, 29843, 29844, 29845, 29846, 29847, 29848, 29849, 29850, 29851, 29853, 29855, 29856, 29857, 29858, 29859, 29860, 29861, 29862, 29866, 29867, 29868, 29869, 29870, 29871, 29872, 29873, 29874, 29875, 29876, 29877, 29878, 29879, 29880, 29881, 29883, 29884, 29885, 29886, 29887, 29888, 29889, 29890, 29891, 29892, 29893, 29894, 29895, 29896, 29897, 29898, 29899, 29900, 29901, 29902, 29903, 29904, 29905, 29907, 29908, 29909, 29910, 29911, 29912, 29913, 29914, 29915, 29917, 29919, 29921, 29925, 29927, 29928, 29929, 29930, 29931, 29932, 29933, 29936, 29937, 29938, 57626, 57627, 57628, 57629, 57630, 57631, 57632, 57633, 57634, 57635, 57636, 57637, 57638, 57639, 57640, 57641, 57642, 57643, 57644, 57645, 57646, 57647, 57648, 57649, 57650, 57651, 57652, 57653, 57654, 57655, 57656, 57657, 57658, 57659, 57660, 57661, 57662, 57663, 57664, 57665, 57666, 57667, 57668, 57669, 57670, 57671, 57672, 57673, 57674, 57675, 57676, 57677, 57678, 57679, 57680, 57681, 57682, 57683, 57684, 57685, 57686, 57687, 57688, 57689, 57690, 57691, 57692, 57693, 57694, 57695, 57696, 57697, 57698, 57699, 57700, 57701, 57702, 57703, 57704, 57705, 57706, 57707, 57708, 57709, 57710, 57711, 57712, 57713, 57714, 57715, 57716, 57717, 57718, 57719, 29939, 29941, 29944, 29945, 29946, 29947, 29948, 29949, 29950, 29952, 29953, 29954, 29955, 29957, 29958, 29959, 29960, 29961, 29962, 29963, 29964, 29966, 29968, 29970, 29972, 29973, 29974, 29975, 29979, 29981, 29982, 29984, 29985, 29986, 29987, 29988, 29990, 29991, 29994, 29998, 30004, 30006, 30009, 30012, 30013, 30015, 30017, 30018, 30019, 30020, 30022, 30023, 30025, 30026, 30029, 30032, 30033, 30034, 30035, 30037, 30038, 30039, 30040, 30045, 30046, 30047, 30048, 30049, 30050, 30051, 30052, 30055, 30056, 30057, 30059, 30060, 30061, 30062, 30063, 30064, 30065, 30067, 30069, 30070, 30071, 30074, 30075, 30076, 30077, 30078, 30080, 30081, 30082, 30084, 30085, 30087, 57720, 57721, 57722, 57723, 57724, 57725, 57726, 57727, 57728, 57729, 57730, 57731, 57732, 57733, 57734, 57735, 57736, 57737, 57738, 57739, 57740, 57741, 57742, 57743, 57744, 57745, 57746, 57747, 57748, 57749, 57750, 57751, 57752, 57753, 57754, 57755, 57756, 57757, 57758, 57759, 57760, 57761, 57762, 57763, 57764, 57765, 57766, 57767, 57768, 57769, 57770, 57771, 57772, 57773, 57774, 57775, 57776, 57777, 57778, 57779, 57780, 57781, 57782, 57783, 57784, 57785, 57786, 57787, 57788, 57789, 57790, 57791, 57792, 57793, 57794, 57795, 57796, 57797, 57798, 57799, 57800, 57801, 57802, 57803, 57804, 57805, 57806, 57807, 57808, 57809, 57810, 57811, 57812, 57813, 30088, 30089, 30090, 30092, 30093, 30094, 30096, 30099, 30101, 30104, 30107, 30108, 30110, 30114, 30118, 30119, 30120, 30121, 30122, 30125, 30134, 30135, 30138, 30139, 30143, 30144, 30145, 30150, 30155, 30156, 30158, 30159, 30160, 30161, 30163, 30167, 30169, 30170, 30172, 30173, 30175, 30176, 30177, 30181, 30185, 30188, 30189, 30190, 30191, 30194, 30195, 30197, 30198, 30199, 30200, 30202, 30203, 30205, 30206, 30210, 30212, 30214, 30215, 30216, 30217, 30219, 30221, 30222, 30223, 30225, 30226, 30227, 30228, 30230, 30234, 30236, 30237, 30238, 30241, 30243, 30247, 30248, 30252, 30254, 30255, 30257, 30258, 30262, 30263, 30265, 30266, 30267, 30269, 30273, 30274, 30276, 57814, 57815, 57816, 57817, 57818, 57819, 57820, 57821, 57822, 57823, 57824, 57825, 57826, 57827, 57828, 57829, 57830, 57831, 57832, 57833, 57834, 57835, 57836, 57837, 57838, 57839, 57840, 57841, 57842, 57843, 57844, 57845, 57846, 57847, 57848, 57849, 57850, 57851, 57852, 57853, 57854, 57855, 57856, 57857, 57858, 57859, 57860, 57861, 57862, 57863, 57864, 57865, 57866, 57867, 57868, 57869, 57870, 57871, 57872, 57873, 57874, 57875, 57876, 57877, 57878, 57879, 57880, 57881, 57882, 57883, 57884, 57885, 57886, 57887, 57888, 57889, 57890, 57891, 57892, 57893, 57894, 57895, 57896, 57897, 57898, 57899, 57900, 57901, 57902, 57903, 57904, 57905, 57906, 57907, 30277, 30278, 30279, 30280, 30281, 30282, 30283, 30286, 30287, 30288, 30289, 30290, 30291, 30293, 30295, 30296, 30297, 30298, 30299, 30301, 30303, 30304, 30305, 30306, 30308, 30309, 30310, 30311, 30312, 30313, 30314, 30316, 30317, 30318, 30320, 30321, 30322, 30323, 30324, 30325, 30326, 30327, 30329, 30330, 30332, 30335, 30336, 30337, 30339, 30341, 30345, 30346, 30348, 30349, 30351, 30352, 30354, 30356, 30357, 30359, 30360, 30362, 30363, 30364, 30365, 30366, 30367, 30368, 30369, 30370, 30371, 30373, 30374, 30375, 30376, 30377, 30378, 30379, 30380, 30381, 30383, 30384, 30387, 30389, 30390, 30391, 30392, 30393, 30394, 30395, 30396, 30397, 30398, 30400, 30401, 30403, 21834, 38463, 22467, 25384, 21710, 21769, 21696, 30353, 30284, 34108, 30702, 33406, 30861, 29233, 38552, 38797, 27688, 23433, 20474, 25353, 26263, 23736, 33018, 26696, 32942, 26114, 30414, 20985, 25942, 29100, 32753, 34948, 20658, 22885, 25034, 28595, 33453, 25420, 25170, 21485, 21543, 31494, 20843, 30116, 24052, 25300, 36299, 38774, 25226, 32793, 22365, 38712, 32610, 29240, 30333, 26575, 30334, 25670, 20336, 36133, 25308, 31255, 26001, 29677, 25644, 25203, 33324, 39041, 26495, 29256, 25198, 25292, 20276, 29923, 21322, 21150, 32458, 37030, 24110, 26758, 27036, 33152, 32465, 26834, 30917, 34444, 38225, 20621, 35876, 33502, 32990, 21253, 35090, 21093, 30404, 30407, 30409, 30411, 30412, 30419, 30421, 30425, 30426, 30428, 30429, 30430, 30432, 30433, 30434, 30435, 30436, 30438, 30439, 30440, 30441, 30442, 30443, 30444, 30445, 30448, 30451, 30453, 30454, 30455, 30458, 30459, 30461, 30463, 30464, 30466, 30467, 30469, 30470, 30474, 30476, 30478, 30479, 30480, 30481, 30482, 30483, 30484, 30485, 30486, 30487, 30488, 30491, 30492, 30493, 30494, 30497, 30499, 30500, 30501, 30503, 30506, 30507, 30508, 30510, 30512, 30513, 30514, 30515, 30516, 30521, 30523, 30525, 30526, 30527, 30530, 30532, 30533, 30534, 30536, 30537, 30538, 30539, 30540, 30541, 30542, 30543, 30546, 30547, 30548, 30549, 30550, 30551, 30552, 30553, 30556, 34180, 38649, 20445, 22561, 39281, 23453, 25265, 25253, 26292, 35961, 40077, 29190, 26479, 30865, 24754, 21329, 21271, 36744, 32972, 36125, 38049, 20493, 29384, 22791, 24811, 28953, 34987, 22868, 33519, 26412, 31528, 23849, 32503, 29997, 27893, 36454, 36856, 36924, 40763, 27604, 37145, 31508, 24444, 30887, 34006, 34109, 27605, 27609, 27606, 24065, 24199, 30201, 38381, 25949, 24330, 24517, 36767, 22721, 33218, 36991, 38491, 38829, 36793, 32534, 36140, 25153, 20415, 21464, 21342, 36776, 36777, 36779, 36941, 26631, 24426, 33176, 34920, 40150, 24971, 21035, 30250, 24428, 25996, 28626, 28392, 23486, 25672, 20853, 20912, 26564, 19993, 31177, 39292, 28851, 30557, 30558, 30559, 30560, 30564, 30567, 30569, 30570, 30573, 30574, 30575, 30576, 30577, 30578, 30579, 30580, 30581, 30582, 30583, 30584, 30586, 30587, 30588, 30593, 30594, 30595, 30598, 30599, 30600, 30601, 30602, 30603, 30607, 30608, 30611, 30612, 30613, 30614, 30615, 30616, 30617, 30618, 30619, 30620, 30621, 30622, 30625, 30627, 30628, 30630, 30632, 30635, 30637, 30638, 30639, 30641, 30642, 30644, 30646, 30647, 30648, 30649, 30650, 30652, 30654, 30656, 30657, 30658, 30659, 30660, 30661, 30662, 30663, 30664, 30665, 30666, 30667, 30668, 30670, 30671, 30672, 30673, 30674, 30675, 30676, 30677, 30678, 30680, 30681, 30682, 30685, 30686, 30687, 30688, 30689, 30692, 30149, 24182, 29627, 33760, 25773, 25320, 38069, 27874, 21338, 21187, 25615, 38082, 31636, 20271, 24091, 33334, 33046, 33162, 28196, 27850, 39539, 25429, 21340, 21754, 34917, 22496, 19981, 24067, 27493, 31807, 37096, 24598, 25830, 29468, 35009, 26448, 25165, 36130, 30572, 36393, 37319, 24425, 33756, 34081, 39184, 21442, 34453, 27531, 24813, 24808, 28799, 33485, 33329, 20179, 27815, 34255, 25805, 31961, 27133, 26361, 33609, 21397, 31574, 20391, 20876, 27979, 23618, 36461, 25554, 21449, 33580, 33590, 26597, 30900, 25661, 23519, 23700, 24046, 35815, 25286, 26612, 35962, 25600, 25530, 34633, 39307, 35863, 32544, 38130, 20135, 38416, 39076, 26124, 29462, 30694, 30696, 30698, 30703, 30704, 30705, 30706, 30708, 30709, 30711, 30713, 30714, 30715, 30716, 30723, 30724, 30725, 30726, 30727, 30728, 30730, 30731, 30734, 30735, 30736, 30739, 30741, 30745, 30747, 30750, 30752, 30753, 30754, 30756, 30760, 30762, 30763, 30766, 30767, 30769, 30770, 30771, 30773, 30774, 30781, 30783, 30785, 30786, 30787, 30788, 30790, 30792, 30793, 30794, 30795, 30797, 30799, 30801, 30803, 30804, 30808, 30809, 30810, 30811, 30812, 30814, 30815, 30816, 30817, 30818, 30819, 30820, 30821, 30822, 30823, 30824, 30825, 30831, 30832, 30833, 30834, 30835, 30836, 30837, 30838, 30840, 30841, 30842, 30843, 30845, 30846, 30847, 30848, 30849, 30850, 30851, 22330, 23581, 24120, 38271, 20607, 32928, 21378, 25950, 30021, 21809, 20513, 36229, 25220, 38046, 26397, 22066, 28526, 24034, 21557, 28818, 36710, 25199, 25764, 25507, 24443, 28552, 37108, 33251, 36784, 23576, 26216, 24561, 27785, 38472, 36225, 34924, 25745, 31216, 22478, 27225, 25104, 21576, 20056, 31243, 24809, 28548, 35802, 25215, 36894, 39563, 31204, 21507, 30196, 25345, 21273, 27744, 36831, 24347, 39536, 32827, 40831, 20360, 23610, 36196, 32709, 26021, 28861, 20805, 20914, 34411, 23815, 23456, 25277, 37228, 30068, 36364, 31264, 24833, 31609, 20167, 32504, 30597, 19985, 33261, 21021, 20986, 27249, 21416, 36487, 38148, 38607, 28353, 38500, 26970, 30852, 30853, 30854, 30856, 30858, 30859, 30863, 30864, 30866, 30868, 30869, 30870, 30873, 30877, 30878, 30880, 30882, 30884, 30886, 30888, 30889, 30890, 30891, 30892, 30893, 30894, 30895, 30901, 30902, 30903, 30904, 30906, 30907, 30908, 30909, 30911, 30912, 30914, 30915, 30916, 30918, 30919, 30920, 30924, 30925, 30926, 30927, 30929, 30930, 30931, 30934, 30935, 30936, 30938, 30939, 30940, 30941, 30942, 30943, 30944, 30945, 30946, 30947, 30948, 30949, 30950, 30951, 30953, 30954, 30955, 30957, 30958, 30959, 30960, 30961, 30963, 30965, 30966, 30968, 30969, 30971, 30972, 30973, 30974, 30975, 30976, 30978, 30979, 30980, 30982, 30983, 30984, 30985, 30986, 30987, 30988, 30784, 20648, 30679, 25616, 35302, 22788, 25571, 24029, 31359, 26941, 20256, 33337, 21912, 20018, 30126, 31383, 24162, 24202, 38383, 21019, 21561, 28810, 25462, 38180, 22402, 26149, 26943, 37255, 21767, 28147, 32431, 34850, 25139, 32496, 30133, 33576, 30913, 38604, 36766, 24904, 29943, 35789, 27492, 21050, 36176, 27425, 32874, 33905, 22257, 21254, 20174, 19995, 20945, 31895, 37259, 31751, 20419, 36479, 31713, 31388, 25703, 23828, 20652, 33030, 30209, 31929, 28140, 32736, 26449, 23384, 23544, 30923, 25774, 25619, 25514, 25387, 38169, 25645, 36798, 31572, 30249, 25171, 22823, 21574, 27513, 20643, 25140, 24102, 27526, 20195, 36151, 34955, 24453, 36910, 30989, 30990, 30991, 30992, 30993, 30994, 30996, 30997, 30998, 30999, 31e3, 31001, 31002, 31003, 31004, 31005, 31007, 31008, 31009, 31010, 31011, 31013, 31014, 31015, 31016, 31017, 31018, 31019, 31020, 31021, 31022, 31023, 31024, 31025, 31026, 31027, 31029, 31030, 31031, 31032, 31033, 31037, 31039, 31042, 31043, 31044, 31045, 31047, 31050, 31051, 31052, 31053, 31054, 31055, 31056, 31057, 31058, 31060, 31061, 31064, 31065, 31073, 31075, 31076, 31078, 31081, 31082, 31083, 31084, 31086, 31088, 31089, 31090, 31091, 31092, 31093, 31094, 31097, 31099, 31100, 31101, 31102, 31103, 31106, 31107, 31110, 31111, 31112, 31113, 31115, 31116, 31117, 31118, 31120, 31121, 31122, 24608, 32829, 25285, 20025, 21333, 37112, 25528, 32966, 26086, 27694, 20294, 24814, 28129, 35806, 24377, 34507, 24403, 25377, 20826, 33633, 26723, 20992, 25443, 36424, 20498, 23707, 31095, 23548, 21040, 31291, 24764, 36947, 30423, 24503, 24471, 30340, 36460, 28783, 30331, 31561, 30634, 20979, 37011, 22564, 20302, 28404, 36842, 25932, 31515, 29380, 28068, 32735, 23265, 25269, 24213, 22320, 33922, 31532, 24093, 24351, 36882, 32532, 39072, 25474, 28359, 30872, 28857, 20856, 38747, 22443, 30005, 20291, 30008, 24215, 24806, 22880, 28096, 27583, 30857, 21500, 38613, 20939, 20993, 25481, 21514, 38035, 35843, 36300, 29241, 30879, 34678, 36845, 35853, 21472, 31123, 31124, 31125, 31126, 31127, 31128, 31129, 31131, 31132, 31133, 31134, 31135, 31136, 31137, 31138, 31139, 31140, 31141, 31142, 31144, 31145, 31146, 31147, 31148, 31149, 31150, 31151, 31152, 31153, 31154, 31156, 31157, 31158, 31159, 31160, 31164, 31167, 31170, 31172, 31173, 31175, 31176, 31178, 31180, 31182, 31183, 31184, 31187, 31188, 31190, 31191, 31193, 31194, 31195, 31196, 31197, 31198, 31200, 31201, 31202, 31205, 31208, 31210, 31212, 31214, 31217, 31218, 31219, 31220, 31221, 31222, 31223, 31225, 31226, 31228, 31230, 31231, 31233, 31236, 31237, 31239, 31240, 31241, 31242, 31244, 31247, 31248, 31249, 31250, 31251, 31253, 31254, 31256, 31257, 31259, 31260, 19969, 30447, 21486, 38025, 39030, 40718, 38189, 23450, 35746, 20002, 19996, 20908, 33891, 25026, 21160, 26635, 20375, 24683, 20923, 27934, 20828, 25238, 26007, 38497, 35910, 36887, 30168, 37117, 30563, 27602, 29322, 29420, 35835, 22581, 30585, 36172, 26460, 38208, 32922, 24230, 28193, 22930, 31471, 30701, 38203, 27573, 26029, 32526, 22534, 20817, 38431, 23545, 22697, 21544, 36466, 25958, 39039, 22244, 38045, 30462, 36929, 25479, 21702, 22810, 22842, 22427, 36530, 26421, 36346, 33333, 21057, 24816, 22549, 34558, 23784, 40517, 20420, 39069, 35769, 23077, 24694, 21380, 25212, 36943, 37122, 39295, 24681, 32780, 20799, 32819, 23572, 39285, 27953, 20108, 31261, 31263, 31265, 31266, 31268, 31269, 31270, 31271, 31272, 31273, 31274, 31275, 31276, 31277, 31278, 31279, 31280, 31281, 31282, 31284, 31285, 31286, 31288, 31290, 31294, 31296, 31297, 31298, 31299, 31300, 31301, 31303, 31304, 31305, 31306, 31307, 31308, 31309, 31310, 31311, 31312, 31314, 31315, 31316, 31317, 31318, 31320, 31321, 31322, 31323, 31324, 31325, 31326, 31327, 31328, 31329, 31330, 31331, 31332, 31333, 31334, 31335, 31336, 31337, 31338, 31339, 31340, 31341, 31342, 31343, 31345, 31346, 31347, 31349, 31355, 31356, 31357, 31358, 31362, 31365, 31367, 31369, 31370, 31371, 31372, 31374, 31375, 31376, 31379, 31380, 31385, 31386, 31387, 31390, 31393, 31394, 36144, 21457, 32602, 31567, 20240, 20047, 38400, 27861, 29648, 34281, 24070, 30058, 32763, 27146, 30718, 38034, 32321, 20961, 28902, 21453, 36820, 33539, 36137, 29359, 39277, 27867, 22346, 33459, 26041, 32938, 25151, 38450, 22952, 20223, 35775, 32442, 25918, 33778, 38750, 21857, 39134, 32933, 21290, 35837, 21536, 32954, 24223, 27832, 36153, 33452, 37210, 21545, 27675, 20998, 32439, 22367, 28954, 27774, 31881, 22859, 20221, 24575, 24868, 31914, 20016, 23553, 26539, 34562, 23792, 38155, 39118, 30127, 28925, 36898, 20911, 32541, 35773, 22857, 20964, 20315, 21542, 22827, 25975, 32932, 23413, 25206, 25282, 36752, 24133, 27679, 31526, 20239, 20440, 26381, 31395, 31396, 31399, 31401, 31402, 31403, 31406, 31407, 31408, 31409, 31410, 31412, 31413, 31414, 31415, 31416, 31417, 31418, 31419, 31420, 31421, 31422, 31424, 31425, 31426, 31427, 31428, 31429, 31430, 31431, 31432, 31433, 31434, 31436, 31437, 31438, 31439, 31440, 31441, 31442, 31443, 31444, 31445, 31447, 31448, 31450, 31451, 31452, 31453, 31457, 31458, 31460, 31463, 31464, 31465, 31466, 31467, 31468, 31470, 31472, 31473, 31474, 31475, 31476, 31477, 31478, 31479, 31480, 31483, 31484, 31486, 31488, 31489, 31490, 31493, 31495, 31497, 31500, 31501, 31502, 31504, 31506, 31507, 31510, 31511, 31512, 31514, 31516, 31517, 31519, 31521, 31522, 31523, 31527, 31529, 31533, 28014, 28074, 31119, 34993, 24343, 29995, 25242, 36741, 20463, 37340, 26023, 33071, 33105, 24220, 33104, 36212, 21103, 35206, 36171, 22797, 20613, 20184, 38428, 29238, 33145, 36127, 23500, 35747, 38468, 22919, 32538, 21648, 22134, 22030, 35813, 25913, 27010, 38041, 30422, 28297, 24178, 29976, 26438, 26577, 31487, 32925, 36214, 24863, 31174, 25954, 36195, 20872, 21018, 38050, 32568, 32923, 32434, 23703, 28207, 26464, 31705, 30347, 39640, 33167, 32660, 31957, 25630, 38224, 31295, 21578, 21733, 27468, 25601, 25096, 40509, 33011, 30105, 21106, 38761, 33883, 26684, 34532, 38401, 38548, 38124, 20010, 21508, 32473, 26681, 36319, 32789, 26356, 24218, 32697, 31535, 31536, 31538, 31540, 31541, 31542, 31543, 31545, 31547, 31549, 31551, 31552, 31553, 31554, 31555, 31556, 31558, 31560, 31562, 31565, 31566, 31571, 31573, 31575, 31577, 31580, 31582, 31583, 31585, 31587, 31588, 31589, 31590, 31591, 31592, 31593, 31594, 31595, 31596, 31597, 31599, 31600, 31603, 31604, 31606, 31608, 31610, 31612, 31613, 31615, 31617, 31618, 31619, 31620, 31622, 31623, 31624, 31625, 31626, 31627, 31628, 31630, 31631, 31633, 31634, 31635, 31638, 31640, 31641, 31642, 31643, 31646, 31647, 31648, 31651, 31652, 31653, 31662, 31663, 31664, 31666, 31667, 31669, 31670, 31671, 31673, 31674, 31675, 31676, 31677, 31678, 31679, 31680, 31682, 31683, 31684, 22466, 32831, 26775, 24037, 25915, 21151, 24685, 40858, 20379, 36524, 20844, 23467, 24339, 24041, 27742, 25329, 36129, 20849, 38057, 21246, 27807, 33503, 29399, 22434, 26500, 36141, 22815, 36764, 33735, 21653, 31629, 20272, 27837, 23396, 22993, 40723, 21476, 34506, 39592, 35895, 32929, 25925, 39038, 22266, 38599, 21038, 29916, 21072, 23521, 25346, 35074, 20054, 25296, 24618, 26874, 20851, 23448, 20896, 35266, 31649, 39302, 32592, 24815, 28748, 36143, 20809, 24191, 36891, 29808, 35268, 22317, 30789, 24402, 40863, 38394, 36712, 39740, 35809, 30328, 26690, 26588, 36330, 36149, 21053, 36746, 28378, 26829, 38149, 37101, 22269, 26524, 35065, 36807, 21704, 31685, 31688, 31689, 31690, 31691, 31693, 31694, 31695, 31696, 31698, 31700, 31701, 31702, 31703, 31704, 31707, 31708, 31710, 31711, 31712, 31714, 31715, 31716, 31719, 31720, 31721, 31723, 31724, 31725, 31727, 31728, 31730, 31731, 31732, 31733, 31734, 31736, 31737, 31738, 31739, 31741, 31743, 31744, 31745, 31746, 31747, 31748, 31749, 31750, 31752, 31753, 31754, 31757, 31758, 31760, 31761, 31762, 31763, 31764, 31765, 31767, 31768, 31769, 31770, 31771, 31772, 31773, 31774, 31776, 31777, 31778, 31779, 31780, 31781, 31784, 31785, 31787, 31788, 31789, 31790, 31791, 31792, 31793, 31794, 31795, 31796, 31797, 31798, 31799, 31801, 31802, 31803, 31804, 31805, 31806, 31810, 39608, 23401, 28023, 27686, 20133, 23475, 39559, 37219, 25e3, 37039, 38889, 21547, 28085, 23506, 20989, 21898, 32597, 32752, 25788, 25421, 26097, 25022, 24717, 28938, 27735, 27721, 22831, 26477, 33322, 22741, 22158, 35946, 27627, 37085, 22909, 32791, 21495, 28009, 21621, 21917, 33655, 33743, 26680, 31166, 21644, 20309, 21512, 30418, 35977, 38402, 27827, 28088, 36203, 35088, 40548, 36154, 22079, 40657, 30165, 24456, 29408, 24680, 21756, 20136, 27178, 34913, 24658, 36720, 21700, 28888, 34425, 40511, 27946, 23439, 24344, 32418, 21897, 20399, 29492, 21564, 21402, 20505, 21518, 21628, 20046, 24573, 29786, 22774, 33899, 32993, 34676, 29392, 31946, 28246, 31811, 31812, 31813, 31814, 31815, 31816, 31817, 31818, 31819, 31820, 31822, 31823, 31824, 31825, 31826, 31827, 31828, 31829, 31830, 31831, 31832, 31833, 31834, 31835, 31836, 31837, 31838, 31839, 31840, 31841, 31842, 31843, 31844, 31845, 31846, 31847, 31848, 31849, 31850, 31851, 31852, 31853, 31854, 31855, 31856, 31857, 31858, 31861, 31862, 31863, 31864, 31865, 31866, 31870, 31871, 31872, 31873, 31874, 31875, 31876, 31877, 31878, 31879, 31880, 31882, 31883, 31884, 31885, 31886, 31887, 31888, 31891, 31892, 31894, 31897, 31898, 31899, 31904, 31905, 31907, 31910, 31911, 31912, 31913, 31915, 31916, 31917, 31919, 31920, 31924, 31925, 31926, 31927, 31928, 31930, 31931, 24359, 34382, 21804, 25252, 20114, 27818, 25143, 33457, 21719, 21326, 29502, 28369, 30011, 21010, 21270, 35805, 27088, 24458, 24576, 28142, 22351, 27426, 29615, 26707, 36824, 32531, 25442, 24739, 21796, 30186, 35938, 28949, 28067, 23462, 24187, 33618, 24908, 40644, 30970, 34647, 31783, 30343, 20976, 24822, 29004, 26179, 24140, 24653, 35854, 28784, 25381, 36745, 24509, 24674, 34516, 22238, 27585, 24724, 24935, 21321, 24800, 26214, 36159, 31229, 20250, 28905, 27719, 35763, 35826, 32472, 33636, 26127, 23130, 39746, 27985, 28151, 35905, 27963, 20249, 28779, 33719, 25110, 24785, 38669, 36135, 31096, 20987, 22334, 22522, 26426, 30072, 31293, 31215, 31637, 31935, 31936, 31938, 31939, 31940, 31942, 31945, 31947, 31950, 31951, 31952, 31953, 31954, 31955, 31956, 31960, 31962, 31963, 31965, 31966, 31969, 31970, 31971, 31972, 31973, 31974, 31975, 31977, 31978, 31979, 31980, 31981, 31982, 31984, 31985, 31986, 31987, 31988, 31989, 31990, 31991, 31993, 31994, 31996, 31997, 31998, 31999, 32e3, 32001, 32002, 32003, 32004, 32005, 32006, 32007, 32008, 32009, 32011, 32012, 32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020, 32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028, 32029, 32030, 32031, 32033, 32035, 32036, 32037, 32038, 32040, 32041, 32042, 32044, 32045, 32046, 32048, 32049, 32050, 32051, 32052, 32053, 32054, 32908, 39269, 36857, 28608, 35749, 40481, 23020, 32489, 32521, 21513, 26497, 26840, 36753, 31821, 38598, 21450, 24613, 30142, 27762, 21363, 23241, 32423, 25380, 20960, 33034, 24049, 34015, 25216, 20864, 23395, 20238, 31085, 21058, 24760, 27982, 23492, 23490, 35745, 35760, 26082, 24524, 38469, 22931, 32487, 32426, 22025, 26551, 22841, 20339, 23478, 21152, 33626, 39050, 36158, 30002, 38078, 20551, 31292, 20215, 26550, 39550, 23233, 27516, 30417, 22362, 23574, 31546, 38388, 29006, 20860, 32937, 33392, 22904, 32516, 33575, 26816, 26604, 30897, 30839, 25315, 25441, 31616, 20461, 21098, 20943, 33616, 27099, 37492, 36341, 36145, 35265, 38190, 31661, 20214, 32055, 32056, 32057, 32058, 32059, 32060, 32061, 32062, 32063, 32064, 32065, 32066, 32067, 32068, 32069, 32070, 32071, 32072, 32073, 32074, 32075, 32076, 32077, 32078, 32079, 32080, 32081, 32082, 32083, 32084, 32085, 32086, 32087, 32088, 32089, 32090, 32091, 32092, 32093, 32094, 32095, 32096, 32097, 32098, 32099, 32100, 32101, 32102, 32103, 32104, 32105, 32106, 32107, 32108, 32109, 32111, 32112, 32113, 32114, 32115, 32116, 32117, 32118, 32120, 32121, 32122, 32123, 32124, 32125, 32126, 32127, 32128, 32129, 32130, 32131, 32132, 32133, 32134, 32135, 32136, 32137, 32138, 32139, 32140, 32141, 32142, 32143, 32144, 32145, 32146, 32147, 32148, 32149, 32150, 32151, 32152, 20581, 33328, 21073, 39279, 28176, 28293, 28071, 24314, 20725, 23004, 23558, 27974, 27743, 30086, 33931, 26728, 22870, 35762, 21280, 37233, 38477, 34121, 26898, 30977, 28966, 33014, 20132, 37066, 27975, 39556, 23047, 22204, 25605, 38128, 30699, 20389, 33050, 29409, 35282, 39290, 32564, 32478, 21119, 25945, 37237, 36735, 36739, 21483, 31382, 25581, 25509, 30342, 31224, 34903, 38454, 25130, 21163, 33410, 26708, 26480, 25463, 30571, 31469, 27905, 32467, 35299, 22992, 25106, 34249, 33445, 30028, 20511, 20171, 30117, 35819, 23626, 24062, 31563, 26020, 37329, 20170, 27941, 35167, 32039, 38182, 20165, 35880, 36827, 38771, 26187, 31105, 36817, 28908, 28024, 32153, 32154, 32155, 32156, 32157, 32158, 32159, 32160, 32161, 32162, 32163, 32164, 32165, 32167, 32168, 32169, 32170, 32171, 32172, 32173, 32175, 32176, 32177, 32178, 32179, 32180, 32181, 32182, 32183, 32184, 32185, 32186, 32187, 32188, 32189, 32190, 32191, 32192, 32193, 32194, 32195, 32196, 32197, 32198, 32199, 32200, 32201, 32202, 32203, 32204, 32205, 32206, 32207, 32208, 32209, 32210, 32211, 32212, 32213, 32214, 32215, 32216, 32217, 32218, 32219, 32220, 32221, 32222, 32223, 32224, 32225, 32226, 32227, 32228, 32229, 32230, 32231, 32232, 32233, 32234, 32235, 32236, 32237, 32238, 32239, 32240, 32241, 32242, 32243, 32244, 32245, 32246, 32247, 32248, 32249, 32250, 23613, 21170, 33606, 20834, 33550, 30555, 26230, 40120, 20140, 24778, 31934, 31923, 32463, 20117, 35686, 26223, 39048, 38745, 22659, 25964, 38236, 24452, 30153, 38742, 31455, 31454, 20928, 28847, 31384, 25578, 31350, 32416, 29590, 38893, 20037, 28792, 20061, 37202, 21417, 25937, 26087, 33276, 33285, 21646, 23601, 30106, 38816, 25304, 29401, 30141, 23621, 39545, 33738, 23616, 21632, 30697, 20030, 27822, 32858, 25298, 25454, 24040, 20855, 36317, 36382, 38191, 20465, 21477, 24807, 28844, 21095, 25424, 40515, 23071, 20518, 30519, 21367, 32482, 25733, 25899, 25225, 25496, 20500, 29237, 35273, 20915, 35776, 32477, 22343, 33740, 38055, 20891, 21531, 23803, 32251, 32252, 32253, 32254, 32255, 32256, 32257, 32258, 32259, 32260, 32261, 32262, 32263, 32264, 32265, 32266, 32267, 32268, 32269, 32270, 32271, 32272, 32273, 32274, 32275, 32276, 32277, 32278, 32279, 32280, 32281, 32282, 32283, 32284, 32285, 32286, 32287, 32288, 32289, 32290, 32291, 32292, 32293, 32294, 32295, 32296, 32297, 32298, 32299, 32300, 32301, 32302, 32303, 32304, 32305, 32306, 32307, 32308, 32309, 32310, 32311, 32312, 32313, 32314, 32316, 32317, 32318, 32319, 32320, 32322, 32323, 32324, 32325, 32326, 32328, 32329, 32330, 32331, 32332, 32333, 32334, 32335, 32336, 32337, 32338, 32339, 32340, 32341, 32342, 32343, 32344, 32345, 32346, 32347, 32348, 32349, 20426, 31459, 27994, 37089, 39567, 21888, 21654, 21345, 21679, 24320, 25577, 26999, 20975, 24936, 21002, 22570, 21208, 22350, 30733, 30475, 24247, 24951, 31968, 25179, 25239, 20130, 28821, 32771, 25335, 28900, 38752, 22391, 33499, 26607, 26869, 30933, 39063, 31185, 22771, 21683, 21487, 28212, 20811, 21051, 23458, 35838, 32943, 21827, 22438, 24691, 22353, 21549, 31354, 24656, 23380, 25511, 25248, 21475, 25187, 23495, 26543, 21741, 31391, 33510, 37239, 24211, 35044, 22840, 22446, 25358, 36328, 33007, 22359, 31607, 20393, 24555, 23485, 27454, 21281, 31568, 29378, 26694, 30719, 30518, 26103, 20917, 20111, 30420, 23743, 31397, 33909, 22862, 39745, 20608, 32350, 32351, 32352, 32353, 32354, 32355, 32356, 32357, 32358, 32359, 32360, 32361, 32362, 32363, 32364, 32365, 32366, 32367, 32368, 32369, 32370, 32371, 32372, 32373, 32374, 32375, 32376, 32377, 32378, 32379, 32380, 32381, 32382, 32383, 32384, 32385, 32387, 32388, 32389, 32390, 32391, 32392, 32393, 32394, 32395, 32396, 32397, 32398, 32399, 32400, 32401, 32402, 32403, 32404, 32405, 32406, 32407, 32408, 32409, 32410, 32412, 32413, 32414, 32430, 32436, 32443, 32444, 32470, 32484, 32492, 32505, 32522, 32528, 32542, 32567, 32569, 32571, 32572, 32573, 32574, 32575, 32576, 32577, 32579, 32582, 32583, 32584, 32585, 32586, 32587, 32588, 32589, 32590, 32591, 32594, 32595, 39304, 24871, 28291, 22372, 26118, 25414, 22256, 25324, 25193, 24275, 38420, 22403, 25289, 21895, 34593, 33098, 36771, 21862, 33713, 26469, 36182, 34013, 23146, 26639, 25318, 31726, 38417, 20848, 28572, 35888, 25597, 35272, 25042, 32518, 28866, 28389, 29701, 27028, 29436, 24266, 37070, 26391, 28010, 25438, 21171, 29282, 32769, 20332, 23013, 37226, 28889, 28061, 21202, 20048, 38647, 38253, 34174, 30922, 32047, 20769, 22418, 25794, 32907, 31867, 27882, 26865, 26974, 20919, 21400, 26792, 29313, 40654, 31729, 29432, 31163, 28435, 29702, 26446, 37324, 40100, 31036, 33673, 33620, 21519, 26647, 20029, 21385, 21169, 30782, 21382, 21033, 20616, 20363, 20432, 32598, 32601, 32603, 32604, 32605, 32606, 32608, 32611, 32612, 32613, 32614, 32615, 32619, 32620, 32621, 32623, 32624, 32627, 32629, 32630, 32631, 32632, 32634, 32635, 32636, 32637, 32639, 32640, 32642, 32643, 32644, 32645, 32646, 32647, 32648, 32649, 32651, 32653, 32655, 32656, 32657, 32658, 32659, 32661, 32662, 32663, 32664, 32665, 32667, 32668, 32672, 32674, 32675, 32677, 32678, 32680, 32681, 32682, 32683, 32684, 32685, 32686, 32689, 32691, 32692, 32693, 32694, 32695, 32698, 32699, 32702, 32704, 32706, 32707, 32708, 32710, 32711, 32712, 32713, 32715, 32717, 32719, 32720, 32721, 32722, 32723, 32726, 32727, 32729, 32730, 32731, 32732, 32733, 32734, 32738, 32739, 30178, 31435, 31890, 27813, 38582, 21147, 29827, 21737, 20457, 32852, 33714, 36830, 38256, 24265, 24604, 28063, 24088, 25947, 33080, 38142, 24651, 28860, 32451, 31918, 20937, 26753, 31921, 33391, 20004, 36742, 37327, 26238, 20142, 35845, 25769, 32842, 20698, 30103, 29134, 23525, 36797, 28518, 20102, 25730, 38243, 24278, 26009, 21015, 35010, 28872, 21155, 29454, 29747, 26519, 30967, 38678, 20020, 37051, 40158, 28107, 20955, 36161, 21533, 25294, 29618, 33777, 38646, 40836, 38083, 20278, 32666, 20940, 28789, 38517, 23725, 39046, 21478, 20196, 28316, 29705, 27060, 30827, 39311, 30041, 21016, 30244, 27969, 26611, 20845, 40857, 32843, 21657, 31548, 31423, 32740, 32743, 32744, 32746, 32747, 32748, 32749, 32751, 32754, 32756, 32757, 32758, 32759, 32760, 32761, 32762, 32765, 32766, 32767, 32770, 32775, 32776, 32777, 32778, 32782, 32783, 32785, 32787, 32794, 32795, 32797, 32798, 32799, 32801, 32803, 32804, 32811, 32812, 32813, 32814, 32815, 32816, 32818, 32820, 32825, 32826, 32828, 32830, 32832, 32833, 32836, 32837, 32839, 32840, 32841, 32846, 32847, 32848, 32849, 32851, 32853, 32854, 32855, 32857, 32859, 32860, 32861, 32862, 32863, 32864, 32865, 32866, 32867, 32868, 32869, 32870, 32871, 32872, 32875, 32876, 32877, 32878, 32879, 32880, 32882, 32883, 32884, 32885, 32886, 32887, 32888, 32889, 32890, 32891, 32892, 32893, 38534, 22404, 25314, 38471, 27004, 23044, 25602, 31699, 28431, 38475, 33446, 21346, 39045, 24208, 28809, 25523, 21348, 34383, 40065, 40595, 30860, 38706, 36335, 36162, 40575, 28510, 31108, 24405, 38470, 25134, 39540, 21525, 38109, 20387, 26053, 23653, 23649, 32533, 34385, 27695, 24459, 29575, 28388, 32511, 23782, 25371, 23402, 28390, 21365, 20081, 25504, 30053, 25249, 36718, 20262, 20177, 27814, 32438, 35770, 33821, 34746, 32599, 36923, 38179, 31657, 39585, 35064, 33853, 27931, 39558, 32476, 22920, 40635, 29595, 30721, 34434, 39532, 39554, 22043, 21527, 22475, 20080, 40614, 21334, 36808, 33033, 30610, 39314, 34542, 28385, 34067, 26364, 24930, 28459, 32894, 32897, 32898, 32901, 32904, 32906, 32909, 32910, 32911, 32912, 32913, 32914, 32916, 32917, 32919, 32921, 32926, 32931, 32934, 32935, 32936, 32940, 32944, 32947, 32949, 32950, 32952, 32953, 32955, 32965, 32967, 32968, 32969, 32970, 32971, 32975, 32976, 32977, 32978, 32979, 32980, 32981, 32984, 32991, 32992, 32994, 32995, 32998, 33006, 33013, 33015, 33017, 33019, 33022, 33023, 33024, 33025, 33027, 33028, 33029, 33031, 33032, 33035, 33036, 33045, 33047, 33049, 33051, 33052, 33053, 33055, 33056, 33057, 33058, 33059, 33060, 33061, 33062, 33063, 33064, 33065, 33066, 33067, 33069, 33070, 33072, 33075, 33076, 33077, 33079, 33081, 33082, 33083, 33084, 33085, 33087, 35881, 33426, 33579, 30450, 27667, 24537, 33725, 29483, 33541, 38170, 27611, 30683, 38086, 21359, 33538, 20882, 24125, 35980, 36152, 20040, 29611, 26522, 26757, 37238, 38665, 29028, 27809, 30473, 23186, 38209, 27599, 32654, 26151, 23504, 22969, 23194, 38376, 38391, 20204, 33804, 33945, 27308, 30431, 38192, 29467, 26790, 23391, 30511, 37274, 38753, 31964, 36855, 35868, 24357, 31859, 31192, 35269, 27852, 34588, 23494, 24130, 26825, 30496, 32501, 20885, 20813, 21193, 23081, 32517, 38754, 33495, 25551, 30596, 34256, 31186, 28218, 24217, 22937, 34065, 28781, 27665, 25279, 30399, 25935, 24751, 38397, 26126, 34719, 40483, 38125, 21517, 21629, 35884, 25720, 33088, 33089, 33090, 33091, 33092, 33093, 33095, 33097, 33101, 33102, 33103, 33106, 33110, 33111, 33112, 33115, 33116, 33117, 33118, 33119, 33121, 33122, 33123, 33124, 33126, 33128, 33130, 33131, 33132, 33135, 33138, 33139, 33141, 33142, 33143, 33144, 33153, 33155, 33156, 33157, 33158, 33159, 33161, 33163, 33164, 33165, 33166, 33168, 33170, 33171, 33172, 33173, 33174, 33175, 33177, 33178, 33182, 33183, 33184, 33185, 33186, 33188, 33189, 33191, 33193, 33195, 33196, 33197, 33198, 33199, 33200, 33201, 33202, 33204, 33205, 33206, 33207, 33208, 33209, 33212, 33213, 33214, 33215, 33220, 33221, 33223, 33224, 33225, 33227, 33229, 33230, 33231, 33232, 33233, 33234, 33235, 25721, 34321, 27169, 33180, 30952, 25705, 39764, 25273, 26411, 33707, 22696, 40664, 27819, 28448, 23518, 38476, 35851, 29279, 26576, 25287, 29281, 20137, 22982, 27597, 22675, 26286, 24149, 21215, 24917, 26408, 30446, 30566, 29287, 31302, 25343, 21738, 21584, 38048, 37027, 23068, 32435, 27670, 20035, 22902, 32784, 22856, 21335, 30007, 38590, 22218, 25376, 33041, 24700, 38393, 28118, 21602, 39297, 20869, 23273, 33021, 22958, 38675, 20522, 27877, 23612, 25311, 20320, 21311, 33147, 36870, 28346, 34091, 25288, 24180, 30910, 25781, 25467, 24565, 23064, 37247, 40479, 23615, 25423, 32834, 23421, 21870, 38218, 38221, 28037, 24744, 26592, 29406, 20957, 23425, 33236, 33237, 33238, 33239, 33240, 33241, 33242, 33243, 33244, 33245, 33246, 33247, 33248, 33249, 33250, 33252, 33253, 33254, 33256, 33257, 33259, 33262, 33263, 33264, 33265, 33266, 33269, 33270, 33271, 33272, 33273, 33274, 33277, 33279, 33283, 33287, 33288, 33289, 33290, 33291, 33294, 33295, 33297, 33299, 33301, 33302, 33303, 33304, 33305, 33306, 33309, 33312, 33316, 33317, 33318, 33319, 33321, 33326, 33330, 33338, 33340, 33341, 33343, 33344, 33345, 33346, 33347, 33349, 33350, 33352, 33354, 33356, 33357, 33358, 33360, 33361, 33362, 33363, 33364, 33365, 33366, 33367, 33369, 33371, 33372, 33373, 33374, 33376, 33377, 33378, 33379, 33380, 33381, 33382, 33383, 33385, 25319, 27870, 29275, 25197, 38062, 32445, 33043, 27987, 20892, 24324, 22900, 21162, 24594, 22899, 26262, 34384, 30111, 25386, 25062, 31983, 35834, 21734, 27431, 40485, 27572, 34261, 21589, 20598, 27812, 21866, 36276, 29228, 24085, 24597, 29750, 25293, 25490, 29260, 24472, 28227, 27966, 25856, 28504, 30424, 30928, 30460, 30036, 21028, 21467, 20051, 24222, 26049, 32810, 32982, 25243, 21638, 21032, 28846, 34957, 36305, 27873, 21624, 32986, 22521, 35060, 36180, 38506, 37197, 20329, 27803, 21943, 30406, 30768, 25256, 28921, 28558, 24429, 34028, 26842, 30844, 31735, 33192, 26379, 40527, 25447, 30896, 22383, 30738, 38713, 25209, 25259, 21128, 29749, 27607, 33386, 33387, 33388, 33389, 33393, 33397, 33398, 33399, 33400, 33403, 33404, 33408, 33409, 33411, 33413, 33414, 33415, 33417, 33420, 33424, 33427, 33428, 33429, 33430, 33434, 33435, 33438, 33440, 33442, 33443, 33447, 33458, 33461, 33462, 33466, 33467, 33468, 33471, 33472, 33474, 33475, 33477, 33478, 33481, 33488, 33494, 33497, 33498, 33501, 33506, 33511, 33512, 33513, 33514, 33516, 33517, 33518, 33520, 33522, 33523, 33525, 33526, 33528, 33530, 33532, 33533, 33534, 33535, 33536, 33546, 33547, 33549, 33552, 33554, 33555, 33558, 33560, 33561, 33565, 33566, 33567, 33568, 33569, 33570, 33571, 33572, 33573, 33574, 33577, 33578, 33582, 33584, 33586, 33591, 33595, 33597, 21860, 33086, 30130, 30382, 21305, 30174, 20731, 23617, 35692, 31687, 20559, 29255, 39575, 39128, 28418, 29922, 31080, 25735, 30629, 25340, 39057, 36139, 21697, 32856, 20050, 22378, 33529, 33805, 24179, 20973, 29942, 35780, 23631, 22369, 27900, 39047, 23110, 30772, 39748, 36843, 31893, 21078, 25169, 38138, 20166, 33670, 33889, 33769, 33970, 22484, 26420, 22275, 26222, 28006, 35889, 26333, 28689, 26399, 27450, 26646, 25114, 22971, 19971, 20932, 28422, 26578, 27791, 20854, 26827, 22855, 27495, 30054, 23822, 33040, 40784, 26071, 31048, 31041, 39569, 36215, 23682, 20062, 20225, 21551, 22865, 30732, 22120, 27668, 36804, 24323, 27773, 27875, 35755, 25488, 33598, 33599, 33601, 33602, 33604, 33605, 33608, 33610, 33611, 33612, 33613, 33614, 33619, 33621, 33622, 33623, 33624, 33625, 33629, 33634, 33648, 33649, 33650, 33651, 33652, 33653, 33654, 33657, 33658, 33662, 33663, 33664, 33665, 33666, 33667, 33668, 33671, 33672, 33674, 33675, 33676, 33677, 33679, 33680, 33681, 33684, 33685, 33686, 33687, 33689, 33690, 33693, 33695, 33697, 33698, 33699, 33700, 33701, 33702, 33703, 33708, 33709, 33710, 33711, 33717, 33723, 33726, 33727, 33730, 33731, 33732, 33734, 33736, 33737, 33739, 33741, 33742, 33744, 33745, 33746, 33747, 33749, 33751, 33753, 33754, 33755, 33758, 33762, 33763, 33764, 33766, 33767, 33768, 33771, 33772, 33773, 24688, 27965, 29301, 25190, 38030, 38085, 21315, 36801, 31614, 20191, 35878, 20094, 40660, 38065, 38067, 21069, 28508, 36963, 27973, 35892, 22545, 23884, 27424, 27465, 26538, 21595, 33108, 32652, 22681, 34103, 24378, 25250, 27207, 38201, 25970, 24708, 26725, 30631, 20052, 20392, 24039, 38808, 25772, 32728, 23789, 20431, 31373, 20999, 33540, 19988, 24623, 31363, 38054, 20405, 20146, 31206, 29748, 21220, 33465, 25810, 31165, 23517, 27777, 38738, 36731, 27682, 20542, 21375, 28165, 25806, 26228, 27696, 24773, 39031, 35831, 24198, 29756, 31351, 31179, 19992, 37041, 29699, 27714, 22234, 37195, 27845, 36235, 21306, 34502, 26354, 36527, 23624, 39537, 28192, 33774, 33775, 33779, 33780, 33781, 33782, 33783, 33786, 33787, 33788, 33790, 33791, 33792, 33794, 33797, 33799, 33800, 33801, 33802, 33808, 33810, 33811, 33812, 33813, 33814, 33815, 33817, 33818, 33819, 33822, 33823, 33824, 33825, 33826, 33827, 33833, 33834, 33835, 33836, 33837, 33838, 33839, 33840, 33842, 33843, 33844, 33845, 33846, 33847, 33849, 33850, 33851, 33854, 33855, 33856, 33857, 33858, 33859, 33860, 33861, 33863, 33864, 33865, 33866, 33867, 33868, 33869, 33870, 33871, 33872, 33874, 33875, 33876, 33877, 33878, 33880, 33885, 33886, 33887, 33888, 33890, 33892, 33893, 33894, 33895, 33896, 33898, 33902, 33903, 33904, 33906, 33908, 33911, 33913, 33915, 33916, 21462, 23094, 40843, 36259, 21435, 22280, 39079, 26435, 37275, 27849, 20840, 30154, 25331, 29356, 21048, 21149, 32570, 28820, 30264, 21364, 40522, 27063, 30830, 38592, 35033, 32676, 28982, 29123, 20873, 26579, 29924, 22756, 25880, 22199, 35753, 39286, 25200, 32469, 24825, 28909, 22764, 20161, 20154, 24525, 38887, 20219, 35748, 20995, 22922, 32427, 25172, 20173, 26085, 25102, 33592, 33993, 33635, 34701, 29076, 28342, 23481, 32466, 20887, 25545, 26580, 32905, 33593, 34837, 20754, 23418, 22914, 36785, 20083, 27741, 20837, 35109, 36719, 38446, 34122, 29790, 38160, 38384, 28070, 33509, 24369, 25746, 27922, 33832, 33134, 40131, 22622, 36187, 19977, 21441, 33917, 33918, 33919, 33920, 33921, 33923, 33924, 33925, 33926, 33930, 33933, 33935, 33936, 33937, 33938, 33939, 33940, 33941, 33942, 33944, 33946, 33947, 33949, 33950, 33951, 33952, 33954, 33955, 33956, 33957, 33958, 33959, 33960, 33961, 33962, 33963, 33964, 33965, 33966, 33968, 33969, 33971, 33973, 33974, 33975, 33979, 33980, 33982, 33984, 33986, 33987, 33989, 33990, 33991, 33992, 33995, 33996, 33998, 33999, 34002, 34004, 34005, 34007, 34008, 34009, 34010, 34011, 34012, 34014, 34017, 34018, 34020, 34023, 34024, 34025, 34026, 34027, 34029, 34030, 34031, 34033, 34034, 34035, 34036, 34037, 34038, 34039, 34040, 34041, 34042, 34043, 34045, 34046, 34048, 34049, 34050, 20254, 25955, 26705, 21971, 20007, 25620, 39578, 25195, 23234, 29791, 33394, 28073, 26862, 20711, 33678, 30722, 26432, 21049, 27801, 32433, 20667, 21861, 29022, 31579, 26194, 29642, 33515, 26441, 23665, 21024, 29053, 34923, 38378, 38485, 25797, 36193, 33203, 21892, 27733, 25159, 32558, 22674, 20260, 21830, 36175, 26188, 19978, 23578, 35059, 26786, 25422, 31245, 28903, 33421, 21242, 38902, 23569, 21736, 37045, 32461, 22882, 36170, 34503, 33292, 33293, 36198, 25668, 23556, 24913, 28041, 31038, 35774, 30775, 30003, 21627, 20280, 36523, 28145, 23072, 32453, 31070, 27784, 23457, 23158, 29978, 32958, 24910, 28183, 22768, 29983, 29989, 29298, 21319, 32499, 34051, 34052, 34053, 34054, 34055, 34056, 34057, 34058, 34059, 34061, 34062, 34063, 34064, 34066, 34068, 34069, 34070, 34072, 34073, 34075, 34076, 34077, 34078, 34080, 34082, 34083, 34084, 34085, 34086, 34087, 34088, 34089, 34090, 34093, 34094, 34095, 34096, 34097, 34098, 34099, 34100, 34101, 34102, 34110, 34111, 34112, 34113, 34114, 34116, 34117, 34118, 34119, 34123, 34124, 34125, 34126, 34127, 34128, 34129, 34130, 34131, 34132, 34133, 34135, 34136, 34138, 34139, 34140, 34141, 34143, 34144, 34145, 34146, 34147, 34149, 34150, 34151, 34153, 34154, 34155, 34156, 34157, 34158, 34159, 34160, 34161, 34163, 34165, 34166, 34167, 34168, 34172, 34173, 34175, 34176, 34177, 30465, 30427, 21097, 32988, 22307, 24072, 22833, 29422, 26045, 28287, 35799, 23608, 34417, 21313, 30707, 25342, 26102, 20160, 39135, 34432, 23454, 35782, 21490, 30690, 20351, 23630, 39542, 22987, 24335, 31034, 22763, 19990, 26623, 20107, 25325, 35475, 36893, 21183, 26159, 21980, 22124, 36866, 20181, 20365, 37322, 39280, 27663, 24066, 24643, 23460, 35270, 35797, 25910, 25163, 39318, 23432, 23551, 25480, 21806, 21463, 30246, 20861, 34092, 26530, 26803, 27530, 25234, 36755, 21460, 33298, 28113, 30095, 20070, 36174, 23408, 29087, 34223, 26257, 26329, 32626, 34560, 40653, 40736, 23646, 26415, 36848, 26641, 26463, 25101, 31446, 22661, 24246, 25968, 28465, 34178, 34179, 34182, 34184, 34185, 34186, 34187, 34188, 34189, 34190, 34192, 34193, 34194, 34195, 34196, 34197, 34198, 34199, 34200, 34201, 34202, 34205, 34206, 34207, 34208, 34209, 34210, 34211, 34213, 34214, 34215, 34217, 34219, 34220, 34221, 34225, 34226, 34227, 34228, 34229, 34230, 34232, 34234, 34235, 34236, 34237, 34238, 34239, 34240, 34242, 34243, 34244, 34245, 34246, 34247, 34248, 34250, 34251, 34252, 34253, 34254, 34257, 34258, 34260, 34262, 34263, 34264, 34265, 34266, 34267, 34269, 34270, 34271, 34272, 34273, 34274, 34275, 34277, 34278, 34279, 34280, 34282, 34283, 34284, 34285, 34286, 34287, 34288, 34289, 34290, 34291, 34292, 34293, 34294, 34295, 34296, 24661, 21047, 32781, 25684, 34928, 29993, 24069, 26643, 25332, 38684, 21452, 29245, 35841, 27700, 30561, 31246, 21550, 30636, 39034, 33308, 35828, 30805, 26388, 28865, 26031, 25749, 22070, 24605, 31169, 21496, 19997, 27515, 32902, 23546, 21987, 22235, 20282, 20284, 39282, 24051, 26494, 32824, 24578, 39042, 36865, 23435, 35772, 35829, 25628, 33368, 25822, 22013, 33487, 37221, 20439, 32032, 36895, 31903, 20723, 22609, 28335, 23487, 35785, 32899, 37240, 33948, 31639, 34429, 38539, 38543, 32485, 39635, 30862, 23681, 31319, 36930, 38567, 31071, 23385, 25439, 31499, 34001, 26797, 21766, 32553, 29712, 32034, 38145, 25152, 22604, 20182, 23427, 22905, 22612, 34297, 34298, 34300, 34301, 34302, 34304, 34305, 34306, 34307, 34308, 34310, 34311, 34312, 34313, 34314, 34315, 34316, 34317, 34318, 34319, 34320, 34322, 34323, 34324, 34325, 34327, 34328, 34329, 34330, 34331, 34332, 34333, 34334, 34335, 34336, 34337, 34338, 34339, 34340, 34341, 34342, 34344, 34346, 34347, 34348, 34349, 34350, 34351, 34352, 34353, 34354, 34355, 34356, 34357, 34358, 34359, 34361, 34362, 34363, 34365, 34366, 34367, 34368, 34369, 34370, 34371, 34372, 34373, 34374, 34375, 34376, 34377, 34378, 34379, 34380, 34386, 34387, 34389, 34390, 34391, 34392, 34393, 34395, 34396, 34397, 34399, 34400, 34401, 34403, 34404, 34405, 34406, 34407, 34408, 34409, 34410, 29549, 25374, 36427, 36367, 32974, 33492, 25260, 21488, 27888, 37214, 22826, 24577, 27760, 22349, 25674, 36138, 30251, 28393, 22363, 27264, 30192, 28525, 35885, 35848, 22374, 27631, 34962, 30899, 25506, 21497, 28845, 27748, 22616, 25642, 22530, 26848, 33179, 21776, 31958, 20504, 36538, 28108, 36255, 28907, 25487, 28059, 28372, 32486, 33796, 26691, 36867, 28120, 38518, 35752, 22871, 29305, 34276, 33150, 30140, 35466, 26799, 21076, 36386, 38161, 25552, 39064, 36420, 21884, 20307, 26367, 22159, 24789, 28053, 21059, 23625, 22825, 28155, 22635, 3e4, 29980, 24684, 33300, 33094, 25361, 26465, 36834, 30522, 36339, 36148, 38081, 24086, 21381, 21548, 28867, 34413, 34415, 34416, 34418, 34419, 34420, 34421, 34422, 34423, 34424, 34435, 34436, 34437, 34438, 34439, 34440, 34441, 34446, 34447, 34448, 34449, 34450, 34452, 34454, 34455, 34456, 34457, 34458, 34459, 34462, 34463, 34464, 34465, 34466, 34469, 34470, 34475, 34477, 34478, 34482, 34483, 34487, 34488, 34489, 34491, 34492, 34493, 34494, 34495, 34497, 34498, 34499, 34501, 34504, 34508, 34509, 34514, 34515, 34517, 34518, 34519, 34522, 34524, 34525, 34528, 34529, 34530, 34531, 34533, 34534, 34535, 34536, 34538, 34539, 34540, 34543, 34549, 34550, 34551, 34554, 34555, 34556, 34557, 34559, 34561, 34564, 34565, 34566, 34571, 34572, 34574, 34575, 34576, 34577, 34580, 34582, 27712, 24311, 20572, 20141, 24237, 25402, 33351, 36890, 26704, 37230, 30643, 21516, 38108, 24420, 31461, 26742, 25413, 31570, 32479, 30171, 20599, 25237, 22836, 36879, 20984, 31171, 31361, 22270, 24466, 36884, 28034, 23648, 22303, 21520, 20820, 28237, 22242, 25512, 39059, 33151, 34581, 35114, 36864, 21534, 23663, 33216, 25302, 25176, 33073, 40501, 38464, 39534, 39548, 26925, 22949, 25299, 21822, 25366, 21703, 34521, 27964, 23043, 29926, 34972, 27498, 22806, 35916, 24367, 28286, 29609, 39037, 20024, 28919, 23436, 30871, 25405, 26202, 30358, 24779, 23451, 23113, 19975, 33109, 27754, 29579, 20129, 26505, 32593, 24448, 26106, 26395, 24536, 22916, 23041, 34585, 34587, 34589, 34591, 34592, 34596, 34598, 34599, 34600, 34602, 34603, 34604, 34605, 34607, 34608, 34610, 34611, 34613, 34614, 34616, 34617, 34618, 34620, 34621, 34624, 34625, 34626, 34627, 34628, 34629, 34630, 34634, 34635, 34637, 34639, 34640, 34641, 34642, 34644, 34645, 34646, 34648, 34650, 34651, 34652, 34653, 34654, 34655, 34657, 34658, 34662, 34663, 34664, 34665, 34666, 34667, 34668, 34669, 34671, 34673, 34674, 34675, 34677, 34679, 34680, 34681, 34682, 34687, 34688, 34689, 34692, 34694, 34695, 34697, 34698, 34700, 34702, 34703, 34704, 34705, 34706, 34708, 34709, 34710, 34712, 34713, 34714, 34715, 34716, 34717, 34718, 34720, 34721, 34722, 34723, 34724, 24013, 24494, 21361, 38886, 36829, 26693, 22260, 21807, 24799, 20026, 28493, 32500, 33479, 33806, 22996, 20255, 20266, 23614, 32428, 26410, 34074, 21619, 30031, 32963, 21890, 39759, 20301, 28205, 35859, 23561, 24944, 21355, 30239, 28201, 34442, 25991, 38395, 32441, 21563, 31283, 32010, 38382, 21985, 32705, 29934, 25373, 34583, 28065, 31389, 25105, 26017, 21351, 25569, 27779, 24043, 21596, 38056, 20044, 27745, 35820, 23627, 26080, 33436, 26791, 21566, 21556, 27595, 27494, 20116, 25410, 21320, 33310, 20237, 20398, 22366, 25098, 38654, 26212, 29289, 21247, 21153, 24735, 35823, 26132, 29081, 26512, 35199, 30802, 30717, 26224, 22075, 21560, 38177, 29306, 34725, 34726, 34727, 34729, 34730, 34734, 34736, 34737, 34738, 34740, 34742, 34743, 34744, 34745, 34747, 34748, 34750, 34751, 34753, 34754, 34755, 34756, 34757, 34759, 34760, 34761, 34764, 34765, 34766, 34767, 34768, 34772, 34773, 34774, 34775, 34776, 34777, 34778, 34780, 34781, 34782, 34783, 34785, 34786, 34787, 34788, 34790, 34791, 34792, 34793, 34795, 34796, 34797, 34799, 34800, 34801, 34802, 34803, 34804, 34805, 34806, 34807, 34808, 34810, 34811, 34812, 34813, 34815, 34816, 34817, 34818, 34820, 34821, 34822, 34823, 34824, 34825, 34827, 34828, 34829, 34830, 34831, 34832, 34833, 34834, 34836, 34839, 34840, 34841, 34842, 34844, 34845, 34846, 34847, 34848, 34851, 31232, 24687, 24076, 24713, 33181, 22805, 24796, 29060, 28911, 28330, 27728, 29312, 27268, 34989, 24109, 20064, 23219, 21916, 38115, 27927, 31995, 38553, 25103, 32454, 30606, 34430, 21283, 38686, 36758, 26247, 23777, 20384, 29421, 19979, 21414, 22799, 21523, 25472, 38184, 20808, 20185, 40092, 32420, 21688, 36132, 34900, 33335, 38386, 28046, 24358, 23244, 26174, 38505, 29616, 29486, 21439, 33146, 39301, 32673, 23466, 38519, 38480, 32447, 30456, 21410, 38262, 39321, 31665, 35140, 28248, 20065, 32724, 31077, 35814, 24819, 21709, 20139, 39033, 24055, 27233, 20687, 21521, 35937, 33831, 30813, 38660, 21066, 21742, 22179, 38144, 28040, 23477, 28102, 26195, 34852, 34853, 34854, 34855, 34856, 34857, 34858, 34859, 34860, 34861, 34862, 34863, 34864, 34865, 34867, 34868, 34869, 34870, 34871, 34872, 34874, 34875, 34877, 34878, 34879, 34881, 34882, 34883, 34886, 34887, 34888, 34889, 34890, 34891, 34894, 34895, 34896, 34897, 34898, 34899, 34901, 34902, 34904, 34906, 34907, 34908, 34909, 34910, 34911, 34912, 34918, 34919, 34922, 34925, 34927, 34929, 34931, 34932, 34933, 34934, 34936, 34937, 34938, 34939, 34940, 34944, 34947, 34950, 34951, 34953, 34954, 34956, 34958, 34959, 34960, 34961, 34963, 34964, 34965, 34967, 34968, 34969, 34970, 34971, 34973, 34974, 34975, 34976, 34977, 34979, 34981, 34982, 34983, 34984, 34985, 34986, 23567, 23389, 26657, 32918, 21880, 31505, 25928, 26964, 20123, 27463, 34638, 38795, 21327, 25375, 25658, 37034, 26012, 32961, 35856, 20889, 26800, 21368, 34809, 25032, 27844, 27899, 35874, 23633, 34218, 33455, 38156, 27427, 36763, 26032, 24571, 24515, 20449, 34885, 26143, 33125, 29481, 24826, 20852, 21009, 22411, 24418, 37026, 34892, 37266, 24184, 26447, 24615, 22995, 20804, 20982, 33016, 21256, 27769, 38596, 29066, 20241, 20462, 32670, 26429, 21957, 38152, 31168, 34966, 32483, 22687, 25100, 38656, 34394, 22040, 39035, 24464, 35768, 33988, 37207, 21465, 26093, 24207, 30044, 24676, 32110, 23167, 32490, 32493, 36713, 21927, 23459, 24748, 26059, 29572, 34988, 34990, 34991, 34992, 34994, 34995, 34996, 34997, 34998, 35e3, 35001, 35002, 35003, 35005, 35006, 35007, 35008, 35011, 35012, 35015, 35016, 35018, 35019, 35020, 35021, 35023, 35024, 35025, 35027, 35030, 35031, 35034, 35035, 35036, 35037, 35038, 35040, 35041, 35046, 35047, 35049, 35050, 35051, 35052, 35053, 35054, 35055, 35058, 35061, 35062, 35063, 35066, 35067, 35069, 35071, 35072, 35073, 35075, 35076, 35077, 35078, 35079, 35080, 35081, 35083, 35084, 35085, 35086, 35087, 35089, 35092, 35093, 35094, 35095, 35096, 35100, 35101, 35102, 35103, 35104, 35106, 35107, 35108, 35110, 35111, 35112, 35113, 35116, 35117, 35118, 35119, 35121, 35122, 35123, 35125, 35127, 36873, 30307, 30505, 32474, 38772, 34203, 23398, 31348, 38634, 34880, 21195, 29071, 24490, 26092, 35810, 23547, 39535, 24033, 27529, 27739, 35757, 35759, 36874, 36805, 21387, 25276, 40486, 40493, 21568, 20011, 33469, 29273, 34460, 23830, 34905, 28079, 38597, 21713, 20122, 35766, 28937, 21693, 38409, 28895, 28153, 30416, 20005, 30740, 34578, 23721, 24310, 35328, 39068, 38414, 28814, 27839, 22852, 25513, 30524, 34893, 28436, 33395, 22576, 29141, 21388, 30746, 38593, 21761, 24422, 28976, 23476, 35866, 39564, 27523, 22830, 40495, 31207, 26472, 25196, 20335, 30113, 32650, 27915, 38451, 27687, 20208, 30162, 20859, 26679, 28478, 36992, 33136, 22934, 29814, 35128, 35129, 35130, 35131, 35132, 35133, 35134, 35135, 35136, 35138, 35139, 35141, 35142, 35143, 35144, 35145, 35146, 35147, 35148, 35149, 35150, 35151, 35152, 35153, 35154, 35155, 35156, 35157, 35158, 35159, 35160, 35161, 35162, 35163, 35164, 35165, 35168, 35169, 35170, 35171, 35172, 35173, 35175, 35176, 35177, 35178, 35179, 35180, 35181, 35182, 35183, 35184, 35185, 35186, 35187, 35188, 35189, 35190, 35191, 35192, 35193, 35194, 35196, 35197, 35198, 35200, 35202, 35204, 35205, 35207, 35208, 35209, 35210, 35211, 35212, 35213, 35214, 35215, 35216, 35217, 35218, 35219, 35220, 35221, 35222, 35223, 35224, 35225, 35226, 35227, 35228, 35229, 35230, 35231, 35232, 35233, 25671, 23591, 36965, 31377, 35875, 23002, 21676, 33280, 33647, 35201, 32768, 26928, 22094, 32822, 29239, 37326, 20918, 20063, 39029, 25494, 19994, 21494, 26355, 33099, 22812, 28082, 19968, 22777, 21307, 25558, 38129, 20381, 20234, 34915, 39056, 22839, 36951, 31227, 20202, 33008, 30097, 27778, 23452, 23016, 24413, 26885, 34433, 20506, 24050, 20057, 30691, 20197, 33402, 25233, 26131, 37009, 23673, 20159, 24441, 33222, 36920, 32900, 30123, 20134, 35028, 24847, 27589, 24518, 20041, 30410, 28322, 35811, 35758, 35850, 35793, 24322, 32764, 32716, 32462, 33589, 33643, 22240, 27575, 38899, 38452, 23035, 21535, 38134, 28139, 23493, 39278, 23609, 24341, 38544, 35234, 35235, 35236, 35237, 35238, 35239, 35240, 35241, 35242, 35243, 35244, 35245, 35246, 35247, 35248, 35249, 35250, 35251, 35252, 35253, 35254, 35255, 35256, 35257, 35258, 35259, 35260, 35261, 35262, 35263, 35264, 35267, 35277, 35283, 35284, 35285, 35287, 35288, 35289, 35291, 35293, 35295, 35296, 35297, 35298, 35300, 35303, 35304, 35305, 35306, 35308, 35309, 35310, 35312, 35313, 35314, 35316, 35317, 35318, 35319, 35320, 35321, 35322, 35323, 35324, 35325, 35326, 35327, 35329, 35330, 35331, 35332, 35333, 35334, 35336, 35337, 35338, 35339, 35340, 35341, 35342, 35343, 35344, 35345, 35346, 35347, 35348, 35349, 35350, 35351, 35352, 35353, 35354, 35355, 35356, 35357, 21360, 33521, 27185, 23156, 40560, 24212, 32552, 33721, 33828, 33829, 33639, 34631, 36814, 36194, 30408, 24433, 39062, 30828, 26144, 21727, 25317, 20323, 33219, 30152, 24248, 38605, 36362, 34553, 21647, 27891, 28044, 27704, 24703, 21191, 29992, 24189, 20248, 24736, 24551, 23588, 30001, 37038, 38080, 29369, 27833, 28216, 37193, 26377, 21451, 21491, 20305, 37321, 35825, 21448, 24188, 36802, 28132, 20110, 30402, 27014, 34398, 24858, 33286, 20313, 20446, 36926, 40060, 24841, 28189, 28180, 38533, 20104, 23089, 38632, 19982, 23679, 31161, 23431, 35821, 32701, 29577, 22495, 33419, 37057, 21505, 36935, 21947, 23786, 24481, 24840, 27442, 29425, 32946, 35465, 35358, 35359, 35360, 35361, 35362, 35363, 35364, 35365, 35366, 35367, 35368, 35369, 35370, 35371, 35372, 35373, 35374, 35375, 35376, 35377, 35378, 35379, 35380, 35381, 35382, 35383, 35384, 35385, 35386, 35387, 35388, 35389, 35391, 35392, 35393, 35394, 35395, 35396, 35397, 35398, 35399, 35401, 35402, 35403, 35404, 35405, 35406, 35407, 35408, 35409, 35410, 35411, 35412, 35413, 35414, 35415, 35416, 35417, 35418, 35419, 35420, 35421, 35422, 35423, 35424, 35425, 35426, 35427, 35428, 35429, 35430, 35431, 35432, 35433, 35434, 35435, 35436, 35437, 35438, 35439, 35440, 35441, 35442, 35443, 35444, 35445, 35446, 35447, 35448, 35450, 35451, 35452, 35453, 35454, 35455, 35456, 28020, 23507, 35029, 39044, 35947, 39533, 40499, 28170, 20900, 20803, 22435, 34945, 21407, 25588, 36757, 22253, 21592, 22278, 29503, 28304, 32536, 36828, 33489, 24895, 24616, 38498, 26352, 32422, 36234, 36291, 38053, 23731, 31908, 26376, 24742, 38405, 32792, 20113, 37095, 21248, 38504, 20801, 36816, 34164, 37213, 26197, 38901, 23381, 21277, 30776, 26434, 26685, 21705, 28798, 23472, 36733, 20877, 22312, 21681, 25874, 26242, 36190, 36163, 33039, 33900, 36973, 31967, 20991, 34299, 26531, 26089, 28577, 34468, 36481, 22122, 36896, 30338, 28790, 29157, 36131, 25321, 21017, 27901, 36156, 24590, 22686, 24974, 26366, 36192, 25166, 21939, 28195, 26413, 36711, 35457, 35458, 35459, 35460, 35461, 35462, 35463, 35464, 35467, 35468, 35469, 35470, 35471, 35472, 35473, 35474, 35476, 35477, 35478, 35479, 35480, 35481, 35482, 35483, 35484, 35485, 35486, 35487, 35488, 35489, 35490, 35491, 35492, 35493, 35494, 35495, 35496, 35497, 35498, 35499, 35500, 35501, 35502, 35503, 35504, 35505, 35506, 35507, 35508, 35509, 35510, 35511, 35512, 35513, 35514, 35515, 35516, 35517, 35518, 35519, 35520, 35521, 35522, 35523, 35524, 35525, 35526, 35527, 35528, 35529, 35530, 35531, 35532, 35533, 35534, 35535, 35536, 35537, 35538, 35539, 35540, 35541, 35542, 35543, 35544, 35545, 35546, 35547, 35548, 35549, 35550, 35551, 35552, 35553, 35554, 35555, 38113, 38392, 30504, 26629, 27048, 21643, 20045, 28856, 35784, 25688, 25995, 23429, 31364, 20538, 23528, 30651, 27617, 35449, 31896, 27838, 30415, 26025, 36759, 23853, 23637, 34360, 26632, 21344, 25112, 31449, 28251, 32509, 27167, 31456, 24432, 28467, 24352, 25484, 28072, 26454, 19976, 24080, 36134, 20183, 32960, 30260, 38556, 25307, 26157, 25214, 27836, 36213, 29031, 32617, 20806, 32903, 21484, 36974, 25240, 21746, 34544, 36761, 32773, 38167, 34071, 36825, 27993, 29645, 26015, 30495, 29956, 30759, 33275, 36126, 38024, 20390, 26517, 30137, 35786, 38663, 25391, 38215, 38453, 33976, 25379, 30529, 24449, 29424, 20105, 24596, 25972, 25327, 27491, 25919, 35556, 35557, 35558, 35559, 35560, 35561, 35562, 35563, 35564, 35565, 35566, 35567, 35568, 35569, 35570, 35571, 35572, 35573, 35574, 35575, 35576, 35577, 35578, 35579, 35580, 35581, 35582, 35583, 35584, 35585, 35586, 35587, 35588, 35589, 35590, 35592, 35593, 35594, 35595, 35596, 35597, 35598, 35599, 35600, 35601, 35602, 35603, 35604, 35605, 35606, 35607, 35608, 35609, 35610, 35611, 35612, 35613, 35614, 35615, 35616, 35617, 35618, 35619, 35620, 35621, 35623, 35624, 35625, 35626, 35627, 35628, 35629, 35630, 35631, 35632, 35633, 35634, 35635, 35636, 35637, 35638, 35639, 35640, 35641, 35642, 35643, 35644, 35645, 35646, 35647, 35648, 35649, 35650, 35651, 35652, 35653, 24103, 30151, 37073, 35777, 33437, 26525, 25903, 21553, 34584, 30693, 32930, 33026, 27713, 20043, 32455, 32844, 30452, 26893, 27542, 25191, 20540, 20356, 22336, 25351, 27490, 36286, 21482, 26088, 32440, 24535, 25370, 25527, 33267, 33268, 32622, 24092, 23769, 21046, 26234, 31209, 31258, 36136, 28825, 30164, 28382, 27835, 31378, 20013, 30405, 24544, 38047, 34935, 32456, 31181, 32959, 37325, 20210, 20247, 33311, 21608, 24030, 27954, 35788, 31909, 36724, 32920, 24090, 21650, 30385, 23449, 26172, 39588, 29664, 26666, 34523, 26417, 29482, 35832, 35803, 36880, 31481, 28891, 29038, 25284, 30633, 22065, 20027, 33879, 26609, 21161, 34496, 36142, 38136, 31569, 35654, 35655, 35656, 35657, 35658, 35659, 35660, 35661, 35662, 35663, 35664, 35665, 35666, 35667, 35668, 35669, 35670, 35671, 35672, 35673, 35674, 35675, 35676, 35677, 35678, 35679, 35680, 35681, 35682, 35683, 35684, 35685, 35687, 35688, 35689, 35690, 35691, 35693, 35694, 35695, 35696, 35697, 35698, 35699, 35700, 35701, 35702, 35703, 35704, 35705, 35706, 35707, 35708, 35709, 35710, 35711, 35712, 35713, 35714, 35715, 35716, 35717, 35718, 35719, 35720, 35721, 35722, 35723, 35724, 35725, 35726, 35727, 35728, 35729, 35730, 35731, 35732, 35733, 35734, 35735, 35736, 35737, 35738, 35739, 35740, 35741, 35742, 35743, 35756, 35761, 35771, 35783, 35792, 35818, 35849, 35870, 20303, 27880, 31069, 39547, 25235, 29226, 25341, 19987, 30742, 36716, 25776, 36186, 31686, 26729, 24196, 35013, 22918, 25758, 22766, 29366, 26894, 38181, 36861, 36184, 22368, 32512, 35846, 20934, 25417, 25305, 21331, 26700, 29730, 33537, 37196, 21828, 30528, 28796, 27978, 20857, 21672, 36164, 23039, 28363, 28100, 23388, 32043, 20180, 31869, 28371, 23376, 33258, 28173, 23383, 39683, 26837, 36394, 23447, 32508, 24635, 32437, 37049, 36208, 22863, 25549, 31199, 36275, 21330, 26063, 31062, 35781, 38459, 32452, 38075, 32386, 22068, 37257, 26368, 32618, 23562, 36981, 26152, 24038, 20304, 26590, 20570, 20316, 22352, 24231, 59408, 59409, 59410, 59411, 59412, 35896, 35897, 35898, 35899, 35900, 35901, 35902, 35903, 35904, 35906, 35907, 35908, 35909, 35912, 35914, 35915, 35917, 35918, 35919, 35920, 35921, 35922, 35923, 35924, 35926, 35927, 35928, 35929, 35931, 35932, 35933, 35934, 35935, 35936, 35939, 35940, 35941, 35942, 35943, 35944, 35945, 35948, 35949, 35950, 35951, 35952, 35953, 35954, 35956, 35957, 35958, 35959, 35963, 35964, 35965, 35966, 35967, 35968, 35969, 35971, 35972, 35974, 35975, 35976, 35979, 35981, 35982, 35983, 35984, 35985, 35986, 35987, 35989, 35990, 35991, 35993, 35994, 35995, 35996, 35997, 35998, 35999, 36e3, 36001, 36002, 36003, 36004, 36005, 36006, 36007, 36008, 36009, 36010, 36011, 36012, 36013, 20109, 19980, 20800, 19984, 24319, 21317, 19989, 20120, 19998, 39730, 23404, 22121, 20008, 31162, 20031, 21269, 20039, 22829, 29243, 21358, 27664, 22239, 32996, 39319, 27603, 30590, 40727, 20022, 20127, 40720, 20060, 20073, 20115, 33416, 23387, 21868, 22031, 20164, 21389, 21405, 21411, 21413, 21422, 38757, 36189, 21274, 21493, 21286, 21294, 21310, 36188, 21350, 21347, 20994, 21e3, 21006, 21037, 21043, 21055, 21056, 21068, 21086, 21089, 21084, 33967, 21117, 21122, 21121, 21136, 21139, 20866, 32596, 20155, 20163, 20169, 20162, 20200, 20193, 20203, 20190, 20251, 20211, 20258, 20324, 20213, 20261, 20263, 20233, 20267, 20318, 20327, 25912, 20314, 20317, 36014, 36015, 36016, 36017, 36018, 36019, 36020, 36021, 36022, 36023, 36024, 36025, 36026, 36027, 36028, 36029, 36030, 36031, 36032, 36033, 36034, 36035, 36036, 36037, 36038, 36039, 36040, 36041, 36042, 36043, 36044, 36045, 36046, 36047, 36048, 36049, 36050, 36051, 36052, 36053, 36054, 36055, 36056, 36057, 36058, 36059, 36060, 36061, 36062, 36063, 36064, 36065, 36066, 36067, 36068, 36069, 36070, 36071, 36072, 36073, 36074, 36075, 36076, 36077, 36078, 36079, 36080, 36081, 36082, 36083, 36084, 36085, 36086, 36087, 36088, 36089, 36090, 36091, 36092, 36093, 36094, 36095, 36096, 36097, 36098, 36099, 36100, 36101, 36102, 36103, 36104, 36105, 36106, 36107, 36108, 36109, 20319, 20311, 20274, 20285, 20342, 20340, 20369, 20361, 20355, 20367, 20350, 20347, 20394, 20348, 20396, 20372, 20454, 20456, 20458, 20421, 20442, 20451, 20444, 20433, 20447, 20472, 20521, 20556, 20467, 20524, 20495, 20526, 20525, 20478, 20508, 20492, 20517, 20520, 20606, 20547, 20565, 20552, 20558, 20588, 20603, 20645, 20647, 20649, 20666, 20694, 20742, 20717, 20716, 20710, 20718, 20743, 20747, 20189, 27709, 20312, 20325, 20430, 40864, 27718, 31860, 20846, 24061, 40649, 39320, 20865, 22804, 21241, 21261, 35335, 21264, 20971, 22809, 20821, 20128, 20822, 20147, 34926, 34980, 20149, 33044, 35026, 31104, 23348, 34819, 32696, 20907, 20913, 20925, 20924, 36110, 36111, 36112, 36113, 36114, 36115, 36116, 36117, 36118, 36119, 36120, 36121, 36122, 36123, 36124, 36128, 36177, 36178, 36183, 36191, 36197, 36200, 36201, 36202, 36204, 36206, 36207, 36209, 36210, 36216, 36217, 36218, 36219, 36220, 36221, 36222, 36223, 36224, 36226, 36227, 36230, 36231, 36232, 36233, 36236, 36237, 36238, 36239, 36240, 36242, 36243, 36245, 36246, 36247, 36248, 36249, 36250, 36251, 36252, 36253, 36254, 36256, 36257, 36258, 36260, 36261, 36262, 36263, 36264, 36265, 36266, 36267, 36268, 36269, 36270, 36271, 36272, 36274, 36278, 36279, 36281, 36283, 36285, 36288, 36289, 36290, 36293, 36295, 36296, 36297, 36298, 36301, 36304, 36306, 36307, 36308, 20935, 20886, 20898, 20901, 35744, 35750, 35751, 35754, 35764, 35765, 35767, 35778, 35779, 35787, 35791, 35790, 35794, 35795, 35796, 35798, 35800, 35801, 35804, 35807, 35808, 35812, 35816, 35817, 35822, 35824, 35827, 35830, 35833, 35836, 35839, 35840, 35842, 35844, 35847, 35852, 35855, 35857, 35858, 35860, 35861, 35862, 35865, 35867, 35864, 35869, 35871, 35872, 35873, 35877, 35879, 35882, 35883, 35886, 35887, 35890, 35891, 35893, 35894, 21353, 21370, 38429, 38434, 38433, 38449, 38442, 38461, 38460, 38466, 38473, 38484, 38495, 38503, 38508, 38514, 38516, 38536, 38541, 38551, 38576, 37015, 37019, 37021, 37017, 37036, 37025, 37044, 37043, 37046, 37050, 36309, 36312, 36313, 36316, 36320, 36321, 36322, 36325, 36326, 36327, 36329, 36333, 36334, 36336, 36337, 36338, 36340, 36342, 36348, 36350, 36351, 36352, 36353, 36354, 36355, 36356, 36358, 36359, 36360, 36363, 36365, 36366, 36368, 36369, 36370, 36371, 36373, 36374, 36375, 36376, 36377, 36378, 36379, 36380, 36384, 36385, 36388, 36389, 36390, 36391, 36392, 36395, 36397, 36400, 36402, 36403, 36404, 36406, 36407, 36408, 36411, 36412, 36414, 36415, 36419, 36421, 36422, 36428, 36429, 36430, 36431, 36432, 36435, 36436, 36437, 36438, 36439, 36440, 36442, 36443, 36444, 36445, 36446, 36447, 36448, 36449, 36450, 36451, 36452, 36453, 36455, 36456, 36458, 36459, 36462, 36465, 37048, 37040, 37071, 37061, 37054, 37072, 37060, 37063, 37075, 37094, 37090, 37084, 37079, 37083, 37099, 37103, 37118, 37124, 37154, 37150, 37155, 37169, 37167, 37177, 37187, 37190, 21005, 22850, 21154, 21164, 21165, 21182, 21759, 21200, 21206, 21232, 21471, 29166, 30669, 24308, 20981, 20988, 39727, 21430, 24321, 30042, 24047, 22348, 22441, 22433, 22654, 22716, 22725, 22737, 22313, 22316, 22314, 22323, 22329, 22318, 22319, 22364, 22331, 22338, 22377, 22405, 22379, 22406, 22396, 22395, 22376, 22381, 22390, 22387, 22445, 22436, 22412, 22450, 22479, 22439, 22452, 22419, 22432, 22485, 22488, 22490, 22489, 22482, 22456, 22516, 22511, 22520, 22500, 22493, 36467, 36469, 36471, 36472, 36473, 36474, 36475, 36477, 36478, 36480, 36482, 36483, 36484, 36486, 36488, 36489, 36490, 36491, 36492, 36493, 36494, 36497, 36498, 36499, 36501, 36502, 36503, 36504, 36505, 36506, 36507, 36509, 36511, 36512, 36513, 36514, 36515, 36516, 36517, 36518, 36519, 36520, 36521, 36522, 36525, 36526, 36528, 36529, 36531, 36532, 36533, 36534, 36535, 36536, 36537, 36539, 36540, 36541, 36542, 36543, 36544, 36545, 36546, 36547, 36548, 36549, 36550, 36551, 36552, 36553, 36554, 36555, 36556, 36557, 36559, 36560, 36561, 36562, 36563, 36564, 36565, 36566, 36567, 36568, 36569, 36570, 36571, 36572, 36573, 36574, 36575, 36576, 36577, 36578, 36579, 36580, 22539, 22541, 22525, 22509, 22528, 22558, 22553, 22596, 22560, 22629, 22636, 22657, 22665, 22682, 22656, 39336, 40729, 25087, 33401, 33405, 33407, 33423, 33418, 33448, 33412, 33422, 33425, 33431, 33433, 33451, 33464, 33470, 33456, 33480, 33482, 33507, 33432, 33463, 33454, 33483, 33484, 33473, 33449, 33460, 33441, 33450, 33439, 33476, 33486, 33444, 33505, 33545, 33527, 33508, 33551, 33543, 33500, 33524, 33490, 33496, 33548, 33531, 33491, 33553, 33562, 33542, 33556, 33557, 33504, 33493, 33564, 33617, 33627, 33628, 33544, 33682, 33596, 33588, 33585, 33691, 33630, 33583, 33615, 33607, 33603, 33631, 33600, 33559, 33632, 33581, 33594, 33587, 33638, 33637, 36581, 36582, 36583, 36584, 36585, 36586, 36587, 36588, 36589, 36590, 36591, 36592, 36593, 36594, 36595, 36596, 36597, 36598, 36599, 36600, 36601, 36602, 36603, 36604, 36605, 36606, 36607, 36608, 36609, 36610, 36611, 36612, 36613, 36614, 36615, 36616, 36617, 36618, 36619, 36620, 36621, 36622, 36623, 36624, 36625, 36626, 36627, 36628, 36629, 36630, 36631, 36632, 36633, 36634, 36635, 36636, 36637, 36638, 36639, 36640, 36641, 36642, 36643, 36644, 36645, 36646, 36647, 36648, 36649, 36650, 36651, 36652, 36653, 36654, 36655, 36656, 36657, 36658, 36659, 36660, 36661, 36662, 36663, 36664, 36665, 36666, 36667, 36668, 36669, 36670, 36671, 36672, 36673, 36674, 36675, 36676, 33640, 33563, 33641, 33644, 33642, 33645, 33646, 33712, 33656, 33715, 33716, 33696, 33706, 33683, 33692, 33669, 33660, 33718, 33705, 33661, 33720, 33659, 33688, 33694, 33704, 33722, 33724, 33729, 33793, 33765, 33752, 22535, 33816, 33803, 33757, 33789, 33750, 33820, 33848, 33809, 33798, 33748, 33759, 33807, 33795, 33784, 33785, 33770, 33733, 33728, 33830, 33776, 33761, 33884, 33873, 33882, 33881, 33907, 33927, 33928, 33914, 33929, 33912, 33852, 33862, 33897, 33910, 33932, 33934, 33841, 33901, 33985, 33997, 34e3, 34022, 33981, 34003, 33994, 33983, 33978, 34016, 33953, 33977, 33972, 33943, 34021, 34019, 34060, 29965, 34104, 34032, 34105, 34079, 34106, 36677, 36678, 36679, 36680, 36681, 36682, 36683, 36684, 36685, 36686, 36687, 36688, 36689, 36690, 36691, 36692, 36693, 36694, 36695, 36696, 36697, 36698, 36699, 36700, 36701, 36702, 36703, 36704, 36705, 36706, 36707, 36708, 36709, 36714, 36736, 36748, 36754, 36765, 36768, 36769, 36770, 36772, 36773, 36774, 36775, 36778, 36780, 36781, 36782, 36783, 36786, 36787, 36788, 36789, 36791, 36792, 36794, 36795, 36796, 36799, 36800, 36803, 36806, 36809, 36810, 36811, 36812, 36813, 36815, 36818, 36822, 36823, 36826, 36832, 36833, 36835, 36839, 36844, 36847, 36849, 36850, 36852, 36853, 36854, 36858, 36859, 36860, 36862, 36863, 36871, 36872, 36876, 36878, 36883, 36885, 36888, 34134, 34107, 34047, 34044, 34137, 34120, 34152, 34148, 34142, 34170, 30626, 34115, 34162, 34171, 34212, 34216, 34183, 34191, 34169, 34222, 34204, 34181, 34233, 34231, 34224, 34259, 34241, 34268, 34303, 34343, 34309, 34345, 34326, 34364, 24318, 24328, 22844, 22849, 32823, 22869, 22874, 22872, 21263, 23586, 23589, 23596, 23604, 25164, 25194, 25247, 25275, 25290, 25306, 25303, 25326, 25378, 25334, 25401, 25419, 25411, 25517, 25590, 25457, 25466, 25486, 25524, 25453, 25516, 25482, 25449, 25518, 25532, 25586, 25592, 25568, 25599, 25540, 25566, 25550, 25682, 25542, 25534, 25669, 25665, 25611, 25627, 25632, 25612, 25638, 25633, 25694, 25732, 25709, 25750, 36889, 36892, 36899, 36900, 36901, 36903, 36904, 36905, 36906, 36907, 36908, 36912, 36913, 36914, 36915, 36916, 36919, 36921, 36922, 36925, 36927, 36928, 36931, 36933, 36934, 36936, 36937, 36938, 36939, 36940, 36942, 36948, 36949, 36950, 36953, 36954, 36956, 36957, 36958, 36959, 36960, 36961, 36964, 36966, 36967, 36969, 36970, 36971, 36972, 36975, 36976, 36977, 36978, 36979, 36982, 36983, 36984, 36985, 36986, 36987, 36988, 36990, 36993, 36996, 36997, 36998, 36999, 37001, 37002, 37004, 37005, 37006, 37007, 37008, 37010, 37012, 37014, 37016, 37018, 37020, 37022, 37023, 37024, 37028, 37029, 37031, 37032, 37033, 37035, 37037, 37042, 37047, 37052, 37053, 37055, 37056, 25722, 25783, 25784, 25753, 25786, 25792, 25808, 25815, 25828, 25826, 25865, 25893, 25902, 24331, 24530, 29977, 24337, 21343, 21489, 21501, 21481, 21480, 21499, 21522, 21526, 21510, 21579, 21586, 21587, 21588, 21590, 21571, 21537, 21591, 21593, 21539, 21554, 21634, 21652, 21623, 21617, 21604, 21658, 21659, 21636, 21622, 21606, 21661, 21712, 21677, 21698, 21684, 21714, 21671, 21670, 21715, 21716, 21618, 21667, 21717, 21691, 21695, 21708, 21721, 21722, 21724, 21673, 21674, 21668, 21725, 21711, 21726, 21787, 21735, 21792, 21757, 21780, 21747, 21794, 21795, 21775, 21777, 21799, 21802, 21863, 21903, 21941, 21833, 21869, 21825, 21845, 21823, 21840, 21820, 37058, 37059, 37062, 37064, 37065, 37067, 37068, 37069, 37074, 37076, 37077, 37078, 37080, 37081, 37082, 37086, 37087, 37088, 37091, 37092, 37093, 37097, 37098, 37100, 37102, 37104, 37105, 37106, 37107, 37109, 37110, 37111, 37113, 37114, 37115, 37116, 37119, 37120, 37121, 37123, 37125, 37126, 37127, 37128, 37129, 37130, 37131, 37132, 37133, 37134, 37135, 37136, 37137, 37138, 37139, 37140, 37141, 37142, 37143, 37144, 37146, 37147, 37148, 37149, 37151, 37152, 37153, 37156, 37157, 37158, 37159, 37160, 37161, 37162, 37163, 37164, 37165, 37166, 37168, 37170, 37171, 37172, 37173, 37174, 37175, 37176, 37178, 37179, 37180, 37181, 37182, 37183, 37184, 37185, 37186, 37188, 21815, 21846, 21877, 21878, 21879, 21811, 21808, 21852, 21899, 21970, 21891, 21937, 21945, 21896, 21889, 21919, 21886, 21974, 21905, 21883, 21983, 21949, 21950, 21908, 21913, 21994, 22007, 21961, 22047, 21969, 21995, 21996, 21972, 21990, 21981, 21956, 21999, 21989, 22002, 22003, 21964, 21965, 21992, 22005, 21988, 36756, 22046, 22024, 22028, 22017, 22052, 22051, 22014, 22016, 22055, 22061, 22104, 22073, 22103, 22060, 22093, 22114, 22105, 22108, 22092, 22100, 22150, 22116, 22129, 22123, 22139, 22140, 22149, 22163, 22191, 22228, 22231, 22237, 22241, 22261, 22251, 22265, 22271, 22276, 22282, 22281, 22300, 24079, 24089, 24084, 24081, 24113, 24123, 24124, 37189, 37191, 37192, 37201, 37203, 37204, 37205, 37206, 37208, 37209, 37211, 37212, 37215, 37216, 37222, 37223, 37224, 37227, 37229, 37235, 37242, 37243, 37244, 37248, 37249, 37250, 37251, 37252, 37254, 37256, 37258, 37262, 37263, 37267, 37268, 37269, 37270, 37271, 37272, 37273, 37276, 37277, 37278, 37279, 37280, 37281, 37284, 37285, 37286, 37287, 37288, 37289, 37291, 37292, 37296, 37297, 37298, 37299, 37302, 37303, 37304, 37305, 37307, 37308, 37309, 37310, 37311, 37312, 37313, 37314, 37315, 37316, 37317, 37318, 37320, 37323, 37328, 37330, 37331, 37332, 37333, 37334, 37335, 37336, 37337, 37338, 37339, 37341, 37342, 37343, 37344, 37345, 37346, 37347, 37348, 37349, 24119, 24132, 24148, 24155, 24158, 24161, 23692, 23674, 23693, 23696, 23702, 23688, 23704, 23705, 23697, 23706, 23708, 23733, 23714, 23741, 23724, 23723, 23729, 23715, 23745, 23735, 23748, 23762, 23780, 23755, 23781, 23810, 23811, 23847, 23846, 23854, 23844, 23838, 23814, 23835, 23896, 23870, 23860, 23869, 23916, 23899, 23919, 23901, 23915, 23883, 23882, 23913, 23924, 23938, 23961, 23965, 35955, 23991, 24005, 24435, 24439, 24450, 24455, 24457, 24460, 24469, 24473, 24476, 24488, 24493, 24501, 24508, 34914, 24417, 29357, 29360, 29364, 29367, 29368, 29379, 29377, 29390, 29389, 29394, 29416, 29423, 29417, 29426, 29428, 29431, 29441, 29427, 29443, 29434, 37350, 37351, 37352, 37353, 37354, 37355, 37356, 37357, 37358, 37359, 37360, 37361, 37362, 37363, 37364, 37365, 37366, 37367, 37368, 37369, 37370, 37371, 37372, 37373, 37374, 37375, 37376, 37377, 37378, 37379, 37380, 37381, 37382, 37383, 37384, 37385, 37386, 37387, 37388, 37389, 37390, 37391, 37392, 37393, 37394, 37395, 37396, 37397, 37398, 37399, 37400, 37401, 37402, 37403, 37404, 37405, 37406, 37407, 37408, 37409, 37410, 37411, 37412, 37413, 37414, 37415, 37416, 37417, 37418, 37419, 37420, 37421, 37422, 37423, 37424, 37425, 37426, 37427, 37428, 37429, 37430, 37431, 37432, 37433, 37434, 37435, 37436, 37437, 37438, 37439, 37440, 37441, 37442, 37443, 37444, 37445, 29435, 29463, 29459, 29473, 29450, 29470, 29469, 29461, 29474, 29497, 29477, 29484, 29496, 29489, 29520, 29517, 29527, 29536, 29548, 29551, 29566, 33307, 22821, 39143, 22820, 22786, 39267, 39271, 39272, 39273, 39274, 39275, 39276, 39284, 39287, 39293, 39296, 39300, 39303, 39306, 39309, 39312, 39313, 39315, 39316, 39317, 24192, 24209, 24203, 24214, 24229, 24224, 24249, 24245, 24254, 24243, 36179, 24274, 24273, 24283, 24296, 24298, 33210, 24516, 24521, 24534, 24527, 24579, 24558, 24580, 24545, 24548, 24574, 24581, 24582, 24554, 24557, 24568, 24601, 24629, 24614, 24603, 24591, 24589, 24617, 24619, 24586, 24639, 24609, 24696, 24697, 24699, 24698, 24642, 37446, 37447, 37448, 37449, 37450, 37451, 37452, 37453, 37454, 37455, 37456, 37457, 37458, 37459, 37460, 37461, 37462, 37463, 37464, 37465, 37466, 37467, 37468, 37469, 37470, 37471, 37472, 37473, 37474, 37475, 37476, 37477, 37478, 37479, 37480, 37481, 37482, 37483, 37484, 37485, 37486, 37487, 37488, 37489, 37490, 37491, 37493, 37494, 37495, 37496, 37497, 37498, 37499, 37500, 37501, 37502, 37503, 37504, 37505, 37506, 37507, 37508, 37509, 37510, 37511, 37512, 37513, 37514, 37515, 37516, 37517, 37519, 37520, 37521, 37522, 37523, 37524, 37525, 37526, 37527, 37528, 37529, 37530, 37531, 37532, 37533, 37534, 37535, 37536, 37537, 37538, 37539, 37540, 37541, 37542, 37543, 24682, 24701, 24726, 24730, 24749, 24733, 24707, 24722, 24716, 24731, 24812, 24763, 24753, 24797, 24792, 24774, 24794, 24756, 24864, 24870, 24853, 24867, 24820, 24832, 24846, 24875, 24906, 24949, 25004, 24980, 24999, 25015, 25044, 25077, 24541, 38579, 38377, 38379, 38385, 38387, 38389, 38390, 38396, 38398, 38403, 38404, 38406, 38408, 38410, 38411, 38412, 38413, 38415, 38418, 38421, 38422, 38423, 38425, 38426, 20012, 29247, 25109, 27701, 27732, 27740, 27722, 27811, 27781, 27792, 27796, 27788, 27752, 27753, 27764, 27766, 27782, 27817, 27856, 27860, 27821, 27895, 27896, 27889, 27863, 27826, 27872, 27862, 27898, 27883, 27886, 27825, 27859, 27887, 27902, 37544, 37545, 37546, 37547, 37548, 37549, 37551, 37552, 37553, 37554, 37555, 37556, 37557, 37558, 37559, 37560, 37561, 37562, 37563, 37564, 37565, 37566, 37567, 37568, 37569, 37570, 37571, 37572, 37573, 37574, 37575, 37577, 37578, 37579, 37580, 37581, 37582, 37583, 37584, 37585, 37586, 37587, 37588, 37589, 37590, 37591, 37592, 37593, 37594, 37595, 37596, 37597, 37598, 37599, 37600, 37601, 37602, 37603, 37604, 37605, 37606, 37607, 37608, 37609, 37610, 37611, 37612, 37613, 37614, 37615, 37616, 37617, 37618, 37619, 37620, 37621, 37622, 37623, 37624, 37625, 37626, 37627, 37628, 37629, 37630, 37631, 37632, 37633, 37634, 37635, 37636, 37637, 37638, 37639, 37640, 37641, 27961, 27943, 27916, 27971, 27976, 27911, 27908, 27929, 27918, 27947, 27981, 27950, 27957, 27930, 27983, 27986, 27988, 27955, 28049, 28015, 28062, 28064, 27998, 28051, 28052, 27996, 28e3, 28028, 28003, 28186, 28103, 28101, 28126, 28174, 28095, 28128, 28177, 28134, 28125, 28121, 28182, 28075, 28172, 28078, 28203, 28270, 28238, 28267, 28338, 28255, 28294, 28243, 28244, 28210, 28197, 28228, 28383, 28337, 28312, 28384, 28461, 28386, 28325, 28327, 28349, 28347, 28343, 28375, 28340, 28367, 28303, 28354, 28319, 28514, 28486, 28487, 28452, 28437, 28409, 28463, 28470, 28491, 28532, 28458, 28425, 28457, 28553, 28557, 28556, 28536, 28530, 28540, 28538, 28625, 37642, 37643, 37644, 37645, 37646, 37647, 37648, 37649, 37650, 37651, 37652, 37653, 37654, 37655, 37656, 37657, 37658, 37659, 37660, 37661, 37662, 37663, 37664, 37665, 37666, 37667, 37668, 37669, 37670, 37671, 37672, 37673, 37674, 37675, 37676, 37677, 37678, 37679, 37680, 37681, 37682, 37683, 37684, 37685, 37686, 37687, 37688, 37689, 37690, 37691, 37692, 37693, 37695, 37696, 37697, 37698, 37699, 37700, 37701, 37702, 37703, 37704, 37705, 37706, 37707, 37708, 37709, 37710, 37711, 37712, 37713, 37714, 37715, 37716, 37717, 37718, 37719, 37720, 37721, 37722, 37723, 37724, 37725, 37726, 37727, 37728, 37729, 37730, 37731, 37732, 37733, 37734, 37735, 37736, 37737, 37739, 28617, 28583, 28601, 28598, 28610, 28641, 28654, 28638, 28640, 28655, 28698, 28707, 28699, 28729, 28725, 28751, 28766, 23424, 23428, 23445, 23443, 23461, 23480, 29999, 39582, 25652, 23524, 23534, 35120, 23536, 36423, 35591, 36790, 36819, 36821, 36837, 36846, 36836, 36841, 36838, 36851, 36840, 36869, 36868, 36875, 36902, 36881, 36877, 36886, 36897, 36917, 36918, 36909, 36911, 36932, 36945, 36946, 36944, 36968, 36952, 36962, 36955, 26297, 36980, 36989, 36994, 37e3, 36995, 37003, 24400, 24407, 24406, 24408, 23611, 21675, 23632, 23641, 23409, 23651, 23654, 32700, 24362, 24361, 24365, 33396, 24380, 39739, 23662, 22913, 22915, 22925, 22953, 22954, 22947, 37740, 37741, 37742, 37743, 37744, 37745, 37746, 37747, 37748, 37749, 37750, 37751, 37752, 37753, 37754, 37755, 37756, 37757, 37758, 37759, 37760, 37761, 37762, 37763, 37764, 37765, 37766, 37767, 37768, 37769, 37770, 37771, 37772, 37773, 37774, 37776, 37777, 37778, 37779, 37780, 37781, 37782, 37783, 37784, 37785, 37786, 37787, 37788, 37789, 37790, 37791, 37792, 37793, 37794, 37795, 37796, 37797, 37798, 37799, 37800, 37801, 37802, 37803, 37804, 37805, 37806, 37807, 37808, 37809, 37810, 37811, 37812, 37813, 37814, 37815, 37816, 37817, 37818, 37819, 37820, 37821, 37822, 37823, 37824, 37825, 37826, 37827, 37828, 37829, 37830, 37831, 37832, 37833, 37835, 37836, 37837, 22935, 22986, 22955, 22942, 22948, 22994, 22962, 22959, 22999, 22974, 23045, 23046, 23005, 23048, 23011, 23e3, 23033, 23052, 23049, 23090, 23092, 23057, 23075, 23059, 23104, 23143, 23114, 23125, 23100, 23138, 23157, 33004, 23210, 23195, 23159, 23162, 23230, 23275, 23218, 23250, 23252, 23224, 23264, 23267, 23281, 23254, 23270, 23256, 23260, 23305, 23319, 23318, 23346, 23351, 23360, 23573, 23580, 23386, 23397, 23411, 23377, 23379, 23394, 39541, 39543, 39544, 39546, 39551, 39549, 39552, 39553, 39557, 39560, 39562, 39568, 39570, 39571, 39574, 39576, 39579, 39580, 39581, 39583, 39584, 39586, 39587, 39589, 39591, 32415, 32417, 32419, 32421, 32424, 32425, 37838, 37839, 37840, 37841, 37842, 37843, 37844, 37845, 37847, 37848, 37849, 37850, 37851, 37852, 37853, 37854, 37855, 37856, 37857, 37858, 37859, 37860, 37861, 37862, 37863, 37864, 37865, 37866, 37867, 37868, 37869, 37870, 37871, 37872, 37873, 37874, 37875, 37876, 37877, 37878, 37879, 37880, 37881, 37882, 37883, 37884, 37885, 37886, 37887, 37888, 37889, 37890, 37891, 37892, 37893, 37894, 37895, 37896, 37897, 37898, 37899, 37900, 37901, 37902, 37903, 37904, 37905, 37906, 37907, 37908, 37909, 37910, 37911, 37912, 37913, 37914, 37915, 37916, 37917, 37918, 37919, 37920, 37921, 37922, 37923, 37924, 37925, 37926, 37927, 37928, 37929, 37930, 37931, 37932, 37933, 37934, 32429, 32432, 32446, 32448, 32449, 32450, 32457, 32459, 32460, 32464, 32468, 32471, 32475, 32480, 32481, 32488, 32491, 32494, 32495, 32497, 32498, 32525, 32502, 32506, 32507, 32510, 32513, 32514, 32515, 32519, 32520, 32523, 32524, 32527, 32529, 32530, 32535, 32537, 32540, 32539, 32543, 32545, 32546, 32547, 32548, 32549, 32550, 32551, 32554, 32555, 32556, 32557, 32559, 32560, 32561, 32562, 32563, 32565, 24186, 30079, 24027, 30014, 37013, 29582, 29585, 29614, 29602, 29599, 29647, 29634, 29649, 29623, 29619, 29632, 29641, 29640, 29669, 29657, 39036, 29706, 29673, 29671, 29662, 29626, 29682, 29711, 29738, 29787, 29734, 29733, 29736, 29744, 29742, 29740, 37935, 37936, 37937, 37938, 37939, 37940, 37941, 37942, 37943, 37944, 37945, 37946, 37947, 37948, 37949, 37951, 37952, 37953, 37954, 37955, 37956, 37957, 37958, 37959, 37960, 37961, 37962, 37963, 37964, 37965, 37966, 37967, 37968, 37969, 37970, 37971, 37972, 37973, 37974, 37975, 37976, 37977, 37978, 37979, 37980, 37981, 37982, 37983, 37984, 37985, 37986, 37987, 37988, 37989, 37990, 37991, 37992, 37993, 37994, 37996, 37997, 37998, 37999, 38e3, 38001, 38002, 38003, 38004, 38005, 38006, 38007, 38008, 38009, 38010, 38011, 38012, 38013, 38014, 38015, 38016, 38017, 38018, 38019, 38020, 38033, 38038, 38040, 38087, 38095, 38099, 38100, 38106, 38118, 38139, 38172, 38176, 29723, 29722, 29761, 29788, 29783, 29781, 29785, 29815, 29805, 29822, 29852, 29838, 29824, 29825, 29831, 29835, 29854, 29864, 29865, 29840, 29863, 29906, 29882, 38890, 38891, 38892, 26444, 26451, 26462, 26440, 26473, 26533, 26503, 26474, 26483, 26520, 26535, 26485, 26536, 26526, 26541, 26507, 26487, 26492, 26608, 26633, 26584, 26634, 26601, 26544, 26636, 26585, 26549, 26586, 26547, 26589, 26624, 26563, 26552, 26594, 26638, 26561, 26621, 26674, 26675, 26720, 26721, 26702, 26722, 26692, 26724, 26755, 26653, 26709, 26726, 26689, 26727, 26688, 26686, 26698, 26697, 26665, 26805, 26767, 26740, 26743, 26771, 26731, 26818, 26990, 26876, 26911, 26912, 26873, 38183, 38195, 38205, 38211, 38216, 38219, 38229, 38234, 38240, 38254, 38260, 38261, 38263, 38264, 38265, 38266, 38267, 38268, 38269, 38270, 38272, 38273, 38274, 38275, 38276, 38277, 38278, 38279, 38280, 38281, 38282, 38283, 38284, 38285, 38286, 38287, 38288, 38289, 38290, 38291, 38292, 38293, 38294, 38295, 38296, 38297, 38298, 38299, 38300, 38301, 38302, 38303, 38304, 38305, 38306, 38307, 38308, 38309, 38310, 38311, 38312, 38313, 38314, 38315, 38316, 38317, 38318, 38319, 38320, 38321, 38322, 38323, 38324, 38325, 38326, 38327, 38328, 38329, 38330, 38331, 38332, 38333, 38334, 38335, 38336, 38337, 38338, 38339, 38340, 38341, 38342, 38343, 38344, 38345, 38346, 38347, 26916, 26864, 26891, 26881, 26967, 26851, 26896, 26993, 26937, 26976, 26946, 26973, 27012, 26987, 27008, 27032, 27e3, 26932, 27084, 27015, 27016, 27086, 27017, 26982, 26979, 27001, 27035, 27047, 27067, 27051, 27053, 27092, 27057, 27073, 27082, 27103, 27029, 27104, 27021, 27135, 27183, 27117, 27159, 27160, 27237, 27122, 27204, 27198, 27296, 27216, 27227, 27189, 27278, 27257, 27197, 27176, 27224, 27260, 27281, 27280, 27305, 27287, 27307, 29495, 29522, 27521, 27522, 27527, 27524, 27538, 27539, 27533, 27546, 27547, 27553, 27562, 36715, 36717, 36721, 36722, 36723, 36725, 36726, 36728, 36727, 36729, 36730, 36732, 36734, 36737, 36738, 36740, 36743, 36747, 38348, 38349, 38350, 38351, 38352, 38353, 38354, 38355, 38356, 38357, 38358, 38359, 38360, 38361, 38362, 38363, 38364, 38365, 38366, 38367, 38368, 38369, 38370, 38371, 38372, 38373, 38374, 38375, 38380, 38399, 38407, 38419, 38424, 38427, 38430, 38432, 38435, 38436, 38437, 38438, 38439, 38440, 38441, 38443, 38444, 38445, 38447, 38448, 38455, 38456, 38457, 38458, 38462, 38465, 38467, 38474, 38478, 38479, 38481, 38482, 38483, 38486, 38487, 38488, 38489, 38490, 38492, 38493, 38494, 38496, 38499, 38501, 38502, 38507, 38509, 38510, 38511, 38512, 38513, 38515, 38520, 38521, 38522, 38523, 38524, 38525, 38526, 38527, 38528, 38529, 38530, 38531, 38532, 38535, 38537, 38538, 36749, 36750, 36751, 36760, 36762, 36558, 25099, 25111, 25115, 25119, 25122, 25121, 25125, 25124, 25132, 33255, 29935, 29940, 29951, 29967, 29969, 29971, 25908, 26094, 26095, 26096, 26122, 26137, 26482, 26115, 26133, 26112, 28805, 26359, 26141, 26164, 26161, 26166, 26165, 32774, 26207, 26196, 26177, 26191, 26198, 26209, 26199, 26231, 26244, 26252, 26279, 26269, 26302, 26331, 26332, 26342, 26345, 36146, 36147, 36150, 36155, 36157, 36160, 36165, 36166, 36168, 36169, 36167, 36173, 36181, 36185, 35271, 35274, 35275, 35276, 35278, 35279, 35280, 35281, 29294, 29343, 29277, 29286, 29295, 29310, 29311, 29316, 29323, 29325, 29327, 29330, 25352, 25394, 25520, 38540, 38542, 38545, 38546, 38547, 38549, 38550, 38554, 38555, 38557, 38558, 38559, 38560, 38561, 38562, 38563, 38564, 38565, 38566, 38568, 38569, 38570, 38571, 38572, 38573, 38574, 38575, 38577, 38578, 38580, 38581, 38583, 38584, 38586, 38587, 38591, 38594, 38595, 38600, 38602, 38603, 38608, 38609, 38611, 38612, 38614, 38615, 38616, 38617, 38618, 38619, 38620, 38621, 38622, 38623, 38625, 38626, 38627, 38628, 38629, 38630, 38631, 38635, 38636, 38637, 38638, 38640, 38641, 38642, 38644, 38645, 38648, 38650, 38651, 38652, 38653, 38655, 38658, 38659, 38661, 38666, 38667, 38668, 38672, 38673, 38674, 38676, 38677, 38679, 38680, 38681, 38682, 38683, 38685, 38687, 38688, 25663, 25816, 32772, 27626, 27635, 27645, 27637, 27641, 27653, 27655, 27654, 27661, 27669, 27672, 27673, 27674, 27681, 27689, 27684, 27690, 27698, 25909, 25941, 25963, 29261, 29266, 29270, 29232, 34402, 21014, 32927, 32924, 32915, 32956, 26378, 32957, 32945, 32939, 32941, 32948, 32951, 32999, 33e3, 33001, 33002, 32987, 32962, 32964, 32985, 32973, 32983, 26384, 32989, 33003, 33009, 33012, 33005, 33037, 33038, 33010, 33020, 26389, 33042, 35930, 33078, 33054, 33068, 33048, 33074, 33096, 33100, 33107, 33140, 33113, 33114, 33137, 33120, 33129, 33148, 33149, 33133, 33127, 22605, 23221, 33160, 33154, 33169, 28373, 33187, 33194, 33228, 26406, 33226, 33211, 38689, 38690, 38691, 38692, 38693, 38694, 38695, 38696, 38697, 38699, 38700, 38702, 38703, 38705, 38707, 38708, 38709, 38710, 38711, 38714, 38715, 38716, 38717, 38719, 38720, 38721, 38722, 38723, 38724, 38725, 38726, 38727, 38728, 38729, 38730, 38731, 38732, 38733, 38734, 38735, 38736, 38737, 38740, 38741, 38743, 38744, 38746, 38748, 38749, 38751, 38755, 38756, 38758, 38759, 38760, 38762, 38763, 38764, 38765, 38766, 38767, 38768, 38769, 38770, 38773, 38775, 38776, 38777, 38778, 38779, 38781, 38782, 38783, 38784, 38785, 38786, 38787, 38788, 38790, 38791, 38792, 38793, 38794, 38796, 38798, 38799, 38800, 38803, 38805, 38806, 38807, 38809, 38810, 38811, 38812, 38813, 33217, 33190, 27428, 27447, 27449, 27459, 27462, 27481, 39121, 39122, 39123, 39125, 39129, 39130, 27571, 24384, 27586, 35315, 26e3, 40785, 26003, 26044, 26054, 26052, 26051, 26060, 26062, 26066, 26070, 28800, 28828, 28822, 28829, 28859, 28864, 28855, 28843, 28849, 28904, 28874, 28944, 28947, 28950, 28975, 28977, 29043, 29020, 29032, 28997, 29042, 29002, 29048, 29050, 29080, 29107, 29109, 29096, 29088, 29152, 29140, 29159, 29177, 29213, 29224, 28780, 28952, 29030, 29113, 25150, 25149, 25155, 25160, 25161, 31035, 31040, 31046, 31049, 31067, 31068, 31059, 31066, 31074, 31063, 31072, 31087, 31079, 31098, 31109, 31114, 31130, 31143, 31155, 24529, 24528, 38814, 38815, 38817, 38818, 38820, 38821, 38822, 38823, 38824, 38825, 38826, 38828, 38830, 38832, 38833, 38835, 38837, 38838, 38839, 38840, 38841, 38842, 38843, 38844, 38845, 38846, 38847, 38848, 38849, 38850, 38851, 38852, 38853, 38854, 38855, 38856, 38857, 38858, 38859, 38860, 38861, 38862, 38863, 38864, 38865, 38866, 38867, 38868, 38869, 38870, 38871, 38872, 38873, 38874, 38875, 38876, 38877, 38878, 38879, 38880, 38881, 38882, 38883, 38884, 38885, 38888, 38894, 38895, 38896, 38897, 38898, 38900, 38903, 38904, 38905, 38906, 38907, 38908, 38909, 38910, 38911, 38912, 38913, 38914, 38915, 38916, 38917, 38918, 38919, 38920, 38921, 38922, 38923, 38924, 38925, 38926, 24636, 24669, 24666, 24679, 24641, 24665, 24675, 24747, 24838, 24845, 24925, 25001, 24989, 25035, 25041, 25094, 32896, 32895, 27795, 27894, 28156, 30710, 30712, 30720, 30729, 30743, 30744, 30737, 26027, 30765, 30748, 30749, 30777, 30778, 30779, 30751, 30780, 30757, 30764, 30755, 30761, 30798, 30829, 30806, 30807, 30758, 30800, 30791, 30796, 30826, 30875, 30867, 30874, 30855, 30876, 30881, 30883, 30898, 30905, 30885, 30932, 30937, 30921, 30956, 30962, 30981, 30964, 30995, 31012, 31006, 31028, 40859, 40697, 40699, 40700, 30449, 30468, 30477, 30457, 30471, 30472, 30490, 30498, 30489, 30509, 30502, 30517, 30520, 30544, 30545, 30535, 30531, 30554, 30568, 38927, 38928, 38929, 38930, 38931, 38932, 38933, 38934, 38935, 38936, 38937, 38938, 38939, 38940, 38941, 38942, 38943, 38944, 38945, 38946, 38947, 38948, 38949, 38950, 38951, 38952, 38953, 38954, 38955, 38956, 38957, 38958, 38959, 38960, 38961, 38962, 38963, 38964, 38965, 38966, 38967, 38968, 38969, 38970, 38971, 38972, 38973, 38974, 38975, 38976, 38977, 38978, 38979, 38980, 38981, 38982, 38983, 38984, 38985, 38986, 38987, 38988, 38989, 38990, 38991, 38992, 38993, 38994, 38995, 38996, 38997, 38998, 38999, 39e3, 39001, 39002, 39003, 39004, 39005, 39006, 39007, 39008, 39009, 39010, 39011, 39012, 39013, 39014, 39015, 39016, 39017, 39018, 39019, 39020, 39021, 39022, 30562, 30565, 30591, 30605, 30589, 30592, 30604, 30609, 30623, 30624, 30640, 30645, 30653, 30010, 30016, 30030, 30027, 30024, 30043, 30066, 30073, 30083, 32600, 32609, 32607, 35400, 32616, 32628, 32625, 32633, 32641, 32638, 30413, 30437, 34866, 38021, 38022, 38023, 38027, 38026, 38028, 38029, 38031, 38032, 38036, 38039, 38037, 38042, 38043, 38044, 38051, 38052, 38059, 38058, 38061, 38060, 38063, 38064, 38066, 38068, 38070, 38071, 38072, 38073, 38074, 38076, 38077, 38079, 38084, 38088, 38089, 38090, 38091, 38092, 38093, 38094, 38096, 38097, 38098, 38101, 38102, 38103, 38105, 38104, 38107, 38110, 38111, 38112, 38114, 38116, 38117, 38119, 38120, 38122, 39023, 39024, 39025, 39026, 39027, 39028, 39051, 39054, 39058, 39061, 39065, 39075, 39080, 39081, 39082, 39083, 39084, 39085, 39086, 39087, 39088, 39089, 39090, 39091, 39092, 39093, 39094, 39095, 39096, 39097, 39098, 39099, 39100, 39101, 39102, 39103, 39104, 39105, 39106, 39107, 39108, 39109, 39110, 39111, 39112, 39113, 39114, 39115, 39116, 39117, 39119, 39120, 39124, 39126, 39127, 39131, 39132, 39133, 39136, 39137, 39138, 39139, 39140, 39141, 39142, 39145, 39146, 39147, 39148, 39149, 39150, 39151, 39152, 39153, 39154, 39155, 39156, 39157, 39158, 39159, 39160, 39161, 39162, 39163, 39164, 39165, 39166, 39167, 39168, 39169, 39170, 39171, 39172, 39173, 39174, 39175, 38121, 38123, 38126, 38127, 38131, 38132, 38133, 38135, 38137, 38140, 38141, 38143, 38147, 38146, 38150, 38151, 38153, 38154, 38157, 38158, 38159, 38162, 38163, 38164, 38165, 38166, 38168, 38171, 38173, 38174, 38175, 38178, 38186, 38187, 38185, 38188, 38193, 38194, 38196, 38198, 38199, 38200, 38204, 38206, 38207, 38210, 38197, 38212, 38213, 38214, 38217, 38220, 38222, 38223, 38226, 38227, 38228, 38230, 38231, 38232, 38233, 38235, 38238, 38239, 38237, 38241, 38242, 38244, 38245, 38246, 38247, 38248, 38249, 38250, 38251, 38252, 38255, 38257, 38258, 38259, 38202, 30695, 30700, 38601, 31189, 31213, 31203, 31211, 31238, 23879, 31235, 31234, 31262, 31252, 39176, 39177, 39178, 39179, 39180, 39182, 39183, 39185, 39186, 39187, 39188, 39189, 39190, 39191, 39192, 39193, 39194, 39195, 39196, 39197, 39198, 39199, 39200, 39201, 39202, 39203, 39204, 39205, 39206, 39207, 39208, 39209, 39210, 39211, 39212, 39213, 39215, 39216, 39217, 39218, 39219, 39220, 39221, 39222, 39223, 39224, 39225, 39226, 39227, 39228, 39229, 39230, 39231, 39232, 39233, 39234, 39235, 39236, 39237, 39238, 39239, 39240, 39241, 39242, 39243, 39244, 39245, 39246, 39247, 39248, 39249, 39250, 39251, 39254, 39255, 39256, 39257, 39258, 39259, 39260, 39261, 39262, 39263, 39264, 39265, 39266, 39268, 39270, 39283, 39288, 39289, 39291, 39294, 39298, 39299, 39305, 31289, 31287, 31313, 40655, 39333, 31344, 30344, 30350, 30355, 30361, 30372, 29918, 29920, 29996, 40480, 40482, 40488, 40489, 40490, 40491, 40492, 40498, 40497, 40502, 40504, 40503, 40505, 40506, 40510, 40513, 40514, 40516, 40518, 40519, 40520, 40521, 40523, 40524, 40526, 40529, 40533, 40535, 40538, 40539, 40540, 40542, 40547, 40550, 40551, 40552, 40553, 40554, 40555, 40556, 40561, 40557, 40563, 30098, 30100, 30102, 30112, 30109, 30124, 30115, 30131, 30132, 30136, 30148, 30129, 30128, 30147, 30146, 30166, 30157, 30179, 30184, 30182, 30180, 30187, 30183, 30211, 30193, 30204, 30207, 30224, 30208, 30213, 30220, 30231, 30218, 30245, 30232, 30229, 30233, 39308, 39310, 39322, 39323, 39324, 39325, 39326, 39327, 39328, 39329, 39330, 39331, 39332, 39334, 39335, 39337, 39338, 39339, 39340, 39341, 39342, 39343, 39344, 39345, 39346, 39347, 39348, 39349, 39350, 39351, 39352, 39353, 39354, 39355, 39356, 39357, 39358, 39359, 39360, 39361, 39362, 39363, 39364, 39365, 39366, 39367, 39368, 39369, 39370, 39371, 39372, 39373, 39374, 39375, 39376, 39377, 39378, 39379, 39380, 39381, 39382, 39383, 39384, 39385, 39386, 39387, 39388, 39389, 39390, 39391, 39392, 39393, 39394, 39395, 39396, 39397, 39398, 39399, 39400, 39401, 39402, 39403, 39404, 39405, 39406, 39407, 39408, 39409, 39410, 39411, 39412, 39413, 39414, 39415, 39416, 39417, 30235, 30268, 30242, 30240, 30272, 30253, 30256, 30271, 30261, 30275, 30270, 30259, 30285, 30302, 30292, 30300, 30294, 30315, 30319, 32714, 31462, 31352, 31353, 31360, 31366, 31368, 31381, 31398, 31392, 31404, 31400, 31405, 31411, 34916, 34921, 34930, 34941, 34943, 34946, 34978, 35014, 34999, 35004, 35017, 35042, 35022, 35043, 35045, 35057, 35098, 35068, 35048, 35070, 35056, 35105, 35097, 35091, 35099, 35082, 35124, 35115, 35126, 35137, 35174, 35195, 30091, 32997, 30386, 30388, 30684, 32786, 32788, 32790, 32796, 32800, 32802, 32805, 32806, 32807, 32809, 32808, 32817, 32779, 32821, 32835, 32838, 32845, 32850, 32873, 32881, 35203, 39032, 39040, 39043, 39418, 39419, 39420, 39421, 39422, 39423, 39424, 39425, 39426, 39427, 39428, 39429, 39430, 39431, 39432, 39433, 39434, 39435, 39436, 39437, 39438, 39439, 39440, 39441, 39442, 39443, 39444, 39445, 39446, 39447, 39448, 39449, 39450, 39451, 39452, 39453, 39454, 39455, 39456, 39457, 39458, 39459, 39460, 39461, 39462, 39463, 39464, 39465, 39466, 39467, 39468, 39469, 39470, 39471, 39472, 39473, 39474, 39475, 39476, 39477, 39478, 39479, 39480, 39481, 39482, 39483, 39484, 39485, 39486, 39487, 39488, 39489, 39490, 39491, 39492, 39493, 39494, 39495, 39496, 39497, 39498, 39499, 39500, 39501, 39502, 39503, 39504, 39505, 39506, 39507, 39508, 39509, 39510, 39511, 39512, 39513, 39049, 39052, 39053, 39055, 39060, 39066, 39067, 39070, 39071, 39073, 39074, 39077, 39078, 34381, 34388, 34412, 34414, 34431, 34426, 34428, 34427, 34472, 34445, 34443, 34476, 34461, 34471, 34467, 34474, 34451, 34473, 34486, 34500, 34485, 34510, 34480, 34490, 34481, 34479, 34505, 34511, 34484, 34537, 34545, 34546, 34541, 34547, 34512, 34579, 34526, 34548, 34527, 34520, 34513, 34563, 34567, 34552, 34568, 34570, 34573, 34569, 34595, 34619, 34590, 34597, 34606, 34586, 34622, 34632, 34612, 34609, 34601, 34615, 34623, 34690, 34594, 34685, 34686, 34683, 34656, 34672, 34636, 34670, 34699, 34643, 34659, 34684, 34660, 34649, 34661, 34707, 34735, 34728, 34770, 39514, 39515, 39516, 39517, 39518, 39519, 39520, 39521, 39522, 39523, 39524, 39525, 39526, 39527, 39528, 39529, 39530, 39531, 39538, 39555, 39561, 39565, 39566, 39572, 39573, 39577, 39590, 39593, 39594, 39595, 39596, 39597, 39598, 39599, 39602, 39603, 39604, 39605, 39609, 39611, 39613, 39614, 39615, 39619, 39620, 39622, 39623, 39624, 39625, 39626, 39629, 39630, 39631, 39632, 39634, 39636, 39637, 39638, 39639, 39641, 39642, 39643, 39644, 39645, 39646, 39648, 39650, 39651, 39652, 39653, 39655, 39656, 39657, 39658, 39660, 39662, 39664, 39665, 39666, 39667, 39668, 39669, 39670, 39671, 39672, 39674, 39676, 39677, 39678, 39679, 39680, 39681, 39682, 39684, 39685, 39686, 34758, 34696, 34693, 34733, 34711, 34691, 34731, 34789, 34732, 34741, 34739, 34763, 34771, 34749, 34769, 34752, 34762, 34779, 34794, 34784, 34798, 34838, 34835, 34814, 34826, 34843, 34849, 34873, 34876, 32566, 32578, 32580, 32581, 33296, 31482, 31485, 31496, 31491, 31492, 31509, 31498, 31531, 31503, 31559, 31544, 31530, 31513, 31534, 31537, 31520, 31525, 31524, 31539, 31550, 31518, 31576, 31578, 31557, 31605, 31564, 31581, 31584, 31598, 31611, 31586, 31602, 31601, 31632, 31654, 31655, 31672, 31660, 31645, 31656, 31621, 31658, 31644, 31650, 31659, 31668, 31697, 31681, 31692, 31709, 31706, 31717, 31718, 31722, 31756, 31742, 31740, 31759, 31766, 31755, 39687, 39689, 39690, 39691, 39692, 39693, 39694, 39696, 39697, 39698, 39700, 39701, 39702, 39703, 39704, 39705, 39706, 39707, 39708, 39709, 39710, 39712, 39713, 39714, 39716, 39717, 39718, 39719, 39720, 39721, 39722, 39723, 39724, 39725, 39726, 39728, 39729, 39731, 39732, 39733, 39734, 39735, 39736, 39737, 39738, 39741, 39742, 39743, 39744, 39750, 39754, 39755, 39756, 39758, 39760, 39762, 39763, 39765, 39766, 39767, 39768, 39769, 39770, 39771, 39772, 39773, 39774, 39775, 39776, 39777, 39778, 39779, 39780, 39781, 39782, 39783, 39784, 39785, 39786, 39787, 39788, 39789, 39790, 39791, 39792, 39793, 39794, 39795, 39796, 39797, 39798, 39799, 39800, 39801, 39802, 39803, 31775, 31786, 31782, 31800, 31809, 31808, 33278, 33281, 33282, 33284, 33260, 34884, 33313, 33314, 33315, 33325, 33327, 33320, 33323, 33336, 33339, 33331, 33332, 33342, 33348, 33353, 33355, 33359, 33370, 33375, 33384, 34942, 34949, 34952, 35032, 35039, 35166, 32669, 32671, 32679, 32687, 32688, 32690, 31868, 25929, 31889, 31901, 31900, 31902, 31906, 31922, 31932, 31933, 31937, 31943, 31948, 31949, 31944, 31941, 31959, 31976, 33390, 26280, 32703, 32718, 32725, 32741, 32737, 32742, 32745, 32750, 32755, 31992, 32119, 32166, 32174, 32327, 32411, 40632, 40628, 36211, 36228, 36244, 36241, 36273, 36199, 36205, 35911, 35913, 37194, 37200, 37198, 37199, 37220, 39804, 39805, 39806, 39807, 39808, 39809, 39810, 39811, 39812, 39813, 39814, 39815, 39816, 39817, 39818, 39819, 39820, 39821, 39822, 39823, 39824, 39825, 39826, 39827, 39828, 39829, 39830, 39831, 39832, 39833, 39834, 39835, 39836, 39837, 39838, 39839, 39840, 39841, 39842, 39843, 39844, 39845, 39846, 39847, 39848, 39849, 39850, 39851, 39852, 39853, 39854, 39855, 39856, 39857, 39858, 39859, 39860, 39861, 39862, 39863, 39864, 39865, 39866, 39867, 39868, 39869, 39870, 39871, 39872, 39873, 39874, 39875, 39876, 39877, 39878, 39879, 39880, 39881, 39882, 39883, 39884, 39885, 39886, 39887, 39888, 39889, 39890, 39891, 39892, 39893, 39894, 39895, 39896, 39897, 39898, 39899, 37218, 37217, 37232, 37225, 37231, 37245, 37246, 37234, 37236, 37241, 37260, 37253, 37264, 37261, 37265, 37282, 37283, 37290, 37293, 37294, 37295, 37301, 37300, 37306, 35925, 40574, 36280, 36331, 36357, 36441, 36457, 36277, 36287, 36284, 36282, 36292, 36310, 36311, 36314, 36318, 36302, 36303, 36315, 36294, 36332, 36343, 36344, 36323, 36345, 36347, 36324, 36361, 36349, 36372, 36381, 36383, 36396, 36398, 36387, 36399, 36410, 36416, 36409, 36405, 36413, 36401, 36425, 36417, 36418, 36433, 36434, 36426, 36464, 36470, 36476, 36463, 36468, 36485, 36495, 36500, 36496, 36508, 36510, 35960, 35970, 35978, 35973, 35992, 35988, 26011, 35286, 35294, 35290, 35292, 39900, 39901, 39902, 39903, 39904, 39905, 39906, 39907, 39908, 39909, 39910, 39911, 39912, 39913, 39914, 39915, 39916, 39917, 39918, 39919, 39920, 39921, 39922, 39923, 39924, 39925, 39926, 39927, 39928, 39929, 39930, 39931, 39932, 39933, 39934, 39935, 39936, 39937, 39938, 39939, 39940, 39941, 39942, 39943, 39944, 39945, 39946, 39947, 39948, 39949, 39950, 39951, 39952, 39953, 39954, 39955, 39956, 39957, 39958, 39959, 39960, 39961, 39962, 39963, 39964, 39965, 39966, 39967, 39968, 39969, 39970, 39971, 39972, 39973, 39974, 39975, 39976, 39977, 39978, 39979, 39980, 39981, 39982, 39983, 39984, 39985, 39986, 39987, 39988, 39989, 39990, 39991, 39992, 39993, 39994, 39995, 35301, 35307, 35311, 35390, 35622, 38739, 38633, 38643, 38639, 38662, 38657, 38664, 38671, 38670, 38698, 38701, 38704, 38718, 40832, 40835, 40837, 40838, 40839, 40840, 40841, 40842, 40844, 40702, 40715, 40717, 38585, 38588, 38589, 38606, 38610, 30655, 38624, 37518, 37550, 37576, 37694, 37738, 37834, 37775, 37950, 37995, 40063, 40066, 40069, 40070, 40071, 40072, 31267, 40075, 40078, 40080, 40081, 40082, 40084, 40085, 40090, 40091, 40094, 40095, 40096, 40097, 40098, 40099, 40101, 40102, 40103, 40104, 40105, 40107, 40109, 40110, 40112, 40113, 40114, 40115, 40116, 40117, 40118, 40119, 40122, 40123, 40124, 40125, 40132, 40133, 40134, 40135, 40138, 40139, 39996, 39997, 39998, 39999, 4e4, 40001, 40002, 40003, 40004, 40005, 40006, 40007, 40008, 40009, 40010, 40011, 40012, 40013, 40014, 40015, 40016, 40017, 40018, 40019, 40020, 40021, 40022, 40023, 40024, 40025, 40026, 40027, 40028, 40029, 40030, 40031, 40032, 40033, 40034, 40035, 40036, 40037, 40038, 40039, 40040, 40041, 40042, 40043, 40044, 40045, 40046, 40047, 40048, 40049, 40050, 40051, 40052, 40053, 40054, 40055, 40056, 40057, 40058, 40059, 40061, 40062, 40064, 40067, 40068, 40073, 40074, 40076, 40079, 40083, 40086, 40087, 40088, 40089, 40093, 40106, 40108, 40111, 40121, 40126, 40127, 40128, 40129, 40130, 40136, 40137, 40145, 40146, 40154, 40155, 40160, 40161, 40140, 40141, 40142, 40143, 40144, 40147, 40148, 40149, 40151, 40152, 40153, 40156, 40157, 40159, 40162, 38780, 38789, 38801, 38802, 38804, 38831, 38827, 38819, 38834, 38836, 39601, 39600, 39607, 40536, 39606, 39610, 39612, 39617, 39616, 39621, 39618, 39627, 39628, 39633, 39749, 39747, 39751, 39753, 39752, 39757, 39761, 39144, 39181, 39214, 39253, 39252, 39647, 39649, 39654, 39663, 39659, 39675, 39661, 39673, 39688, 39695, 39699, 39711, 39715, 40637, 40638, 32315, 40578, 40583, 40584, 40587, 40594, 37846, 40605, 40607, 40667, 40668, 40669, 40672, 40671, 40674, 40681, 40679, 40677, 40682, 40687, 40738, 40748, 40751, 40761, 40759, 40765, 40766, 40772, 40163, 40164, 40165, 40166, 40167, 40168, 40169, 40170, 40171, 40172, 40173, 40174, 40175, 40176, 40177, 40178, 40179, 40180, 40181, 40182, 40183, 40184, 40185, 40186, 40187, 40188, 40189, 40190, 40191, 40192, 40193, 40194, 40195, 40196, 40197, 40198, 40199, 40200, 40201, 40202, 40203, 40204, 40205, 40206, 40207, 40208, 40209, 40210, 40211, 40212, 40213, 40214, 40215, 40216, 40217, 40218, 40219, 40220, 40221, 40222, 40223, 40224, 40225, 40226, 40227, 40228, 40229, 40230, 40231, 40232, 40233, 40234, 40235, 40236, 40237, 40238, 40239, 40240, 40241, 40242, 40243, 40244, 40245, 40246, 40247, 40248, 40249, 40250, 40251, 40252, 40253, 40254, 40255, 40256, 40257, 40258, 57908, 57909, 57910, 57911, 57912, 57913, 57914, 57915, 57916, 57917, 57918, 57919, 57920, 57921, 57922, 57923, 57924, 57925, 57926, 57927, 57928, 57929, 57930, 57931, 57932, 57933, 57934, 57935, 57936, 57937, 57938, 57939, 57940, 57941, 57942, 57943, 57944, 57945, 57946, 57947, 57948, 57949, 57950, 57951, 57952, 57953, 57954, 57955, 57956, 57957, 57958, 57959, 57960, 57961, 57962, 57963, 57964, 57965, 57966, 57967, 57968, 57969, 57970, 57971, 57972, 57973, 57974, 57975, 57976, 57977, 57978, 57979, 57980, 57981, 57982, 57983, 57984, 57985, 57986, 57987, 57988, 57989, 57990, 57991, 57992, 57993, 57994, 57995, 57996, 57997, 57998, 57999, 58e3, 58001, 40259, 40260, 40261, 40262, 40263, 40264, 40265, 40266, 40267, 40268, 40269, 40270, 40271, 40272, 40273, 40274, 40275, 40276, 40277, 40278, 40279, 40280, 40281, 40282, 40283, 40284, 40285, 40286, 40287, 40288, 40289, 40290, 40291, 40292, 40293, 40294, 40295, 40296, 40297, 40298, 40299, 40300, 40301, 40302, 40303, 40304, 40305, 40306, 40307, 40308, 40309, 40310, 40311, 40312, 40313, 40314, 40315, 40316, 40317, 40318, 40319, 40320, 40321, 40322, 40323, 40324, 40325, 40326, 40327, 40328, 40329, 40330, 40331, 40332, 40333, 40334, 40335, 40336, 40337, 40338, 40339, 40340, 40341, 40342, 40343, 40344, 40345, 40346, 40347, 40348, 40349, 40350, 40351, 40352, 40353, 40354, 58002, 58003, 58004, 58005, 58006, 58007, 58008, 58009, 58010, 58011, 58012, 58013, 58014, 58015, 58016, 58017, 58018, 58019, 58020, 58021, 58022, 58023, 58024, 58025, 58026, 58027, 58028, 58029, 58030, 58031, 58032, 58033, 58034, 58035, 58036, 58037, 58038, 58039, 58040, 58041, 58042, 58043, 58044, 58045, 58046, 58047, 58048, 58049, 58050, 58051, 58052, 58053, 58054, 58055, 58056, 58057, 58058, 58059, 58060, 58061, 58062, 58063, 58064, 58065, 58066, 58067, 58068, 58069, 58070, 58071, 58072, 58073, 58074, 58075, 58076, 58077, 58078, 58079, 58080, 58081, 58082, 58083, 58084, 58085, 58086, 58087, 58088, 58089, 58090, 58091, 58092, 58093, 58094, 58095, 40355, 40356, 40357, 40358, 40359, 40360, 40361, 40362, 40363, 40364, 40365, 40366, 40367, 40368, 40369, 40370, 40371, 40372, 40373, 40374, 40375, 40376, 40377, 40378, 40379, 40380, 40381, 40382, 40383, 40384, 40385, 40386, 40387, 40388, 40389, 40390, 40391, 40392, 40393, 40394, 40395, 40396, 40397, 40398, 40399, 40400, 40401, 40402, 40403, 40404, 40405, 40406, 40407, 40408, 40409, 40410, 40411, 40412, 40413, 40414, 40415, 40416, 40417, 40418, 40419, 40420, 40421, 40422, 40423, 40424, 40425, 40426, 40427, 40428, 40429, 40430, 40431, 40432, 40433, 40434, 40435, 40436, 40437, 40438, 40439, 40440, 40441, 40442, 40443, 40444, 40445, 40446, 40447, 40448, 40449, 40450, 58096, 58097, 58098, 58099, 58100, 58101, 58102, 58103, 58104, 58105, 58106, 58107, 58108, 58109, 58110, 58111, 58112, 58113, 58114, 58115, 58116, 58117, 58118, 58119, 58120, 58121, 58122, 58123, 58124, 58125, 58126, 58127, 58128, 58129, 58130, 58131, 58132, 58133, 58134, 58135, 58136, 58137, 58138, 58139, 58140, 58141, 58142, 58143, 58144, 58145, 58146, 58147, 58148, 58149, 58150, 58151, 58152, 58153, 58154, 58155, 58156, 58157, 58158, 58159, 58160, 58161, 58162, 58163, 58164, 58165, 58166, 58167, 58168, 58169, 58170, 58171, 58172, 58173, 58174, 58175, 58176, 58177, 58178, 58179, 58180, 58181, 58182, 58183, 58184, 58185, 58186, 58187, 58188, 58189, 40451, 40452, 40453, 40454, 40455, 40456, 40457, 40458, 40459, 40460, 40461, 40462, 40463, 40464, 40465, 40466, 40467, 40468, 40469, 40470, 40471, 40472, 40473, 40474, 40475, 40476, 40477, 40478, 40484, 40487, 40494, 40496, 40500, 40507, 40508, 40512, 40525, 40528, 40530, 40531, 40532, 40534, 40537, 40541, 40543, 40544, 40545, 40546, 40549, 40558, 40559, 40562, 40564, 40565, 40566, 40567, 40568, 40569, 40570, 40571, 40572, 40573, 40576, 40577, 40579, 40580, 40581, 40582, 40585, 40586, 40588, 40589, 40590, 40591, 40592, 40593, 40596, 40597, 40598, 40599, 40600, 40601, 40602, 40603, 40604, 40606, 40608, 40609, 40610, 40611, 40612, 40613, 40615, 40616, 40617, 40618, 58190, 58191, 58192, 58193, 58194, 58195, 58196, 58197, 58198, 58199, 58200, 58201, 58202, 58203, 58204, 58205, 58206, 58207, 58208, 58209, 58210, 58211, 58212, 58213, 58214, 58215, 58216, 58217, 58218, 58219, 58220, 58221, 58222, 58223, 58224, 58225, 58226, 58227, 58228, 58229, 58230, 58231, 58232, 58233, 58234, 58235, 58236, 58237, 58238, 58239, 58240, 58241, 58242, 58243, 58244, 58245, 58246, 58247, 58248, 58249, 58250, 58251, 58252, 58253, 58254, 58255, 58256, 58257, 58258, 58259, 58260, 58261, 58262, 58263, 58264, 58265, 58266, 58267, 58268, 58269, 58270, 58271, 58272, 58273, 58274, 58275, 58276, 58277, 58278, 58279, 58280, 58281, 58282, 58283, 40619, 40620, 40621, 40622, 40623, 40624, 40625, 40626, 40627, 40629, 40630, 40631, 40633, 40634, 40636, 40639, 40640, 40641, 40642, 40643, 40645, 40646, 40647, 40648, 40650, 40651, 40652, 40656, 40658, 40659, 40661, 40662, 40663, 40665, 40666, 40670, 40673, 40675, 40676, 40678, 40680, 40683, 40684, 40685, 40686, 40688, 40689, 40690, 40691, 40692, 40693, 40694, 40695, 40696, 40698, 40701, 40703, 40704, 40705, 40706, 40707, 40708, 40709, 40710, 40711, 40712, 40713, 40714, 40716, 40719, 40721, 40722, 40724, 40725, 40726, 40728, 40730, 40731, 40732, 40733, 40734, 40735, 40737, 40739, 40740, 40741, 40742, 40743, 40744, 40745, 40746, 40747, 40749, 40750, 40752, 40753, 58284, 58285, 58286, 58287, 58288, 58289, 58290, 58291, 58292, 58293, 58294, 58295, 58296, 58297, 58298, 58299, 58300, 58301, 58302, 58303, 58304, 58305, 58306, 58307, 58308, 58309, 58310, 58311, 58312, 58313, 58314, 58315, 58316, 58317, 58318, 58319, 58320, 58321, 58322, 58323, 58324, 58325, 58326, 58327, 58328, 58329, 58330, 58331, 58332, 58333, 58334, 58335, 58336, 58337, 58338, 58339, 58340, 58341, 58342, 58343, 58344, 58345, 58346, 58347, 58348, 58349, 58350, 58351, 58352, 58353, 58354, 58355, 58356, 58357, 58358, 58359, 58360, 58361, 58362, 58363, 58364, 58365, 58366, 58367, 58368, 58369, 58370, 58371, 58372, 58373, 58374, 58375, 58376, 58377, 40754, 40755, 40756, 40757, 40758, 40760, 40762, 40764, 40767, 40768, 40769, 40770, 40771, 40773, 40774, 40775, 40776, 40777, 40778, 40779, 40780, 40781, 40782, 40783, 40786, 40787, 40788, 40789, 40790, 40791, 40792, 40793, 40794, 40795, 40796, 40797, 40798, 40799, 40800, 40801, 40802, 40803, 40804, 40805, 40806, 40807, 40808, 40809, 40810, 40811, 40812, 40813, 40814, 40815, 40816, 40817, 40818, 40819, 40820, 40821, 40822, 40823, 40824, 40825, 40826, 40827, 40828, 40829, 40830, 40833, 40834, 40845, 40846, 40847, 40848, 40849, 40850, 40851, 40852, 40853, 40854, 40855, 40856, 40860, 40861, 40862, 40865, 40866, 40867, 40868, 40869, 63788, 63865, 63893, 63975, 63985, 58378, 58379, 58380, 58381, 58382, 58383, 58384, 58385, 58386, 58387, 58388, 58389, 58390, 58391, 58392, 58393, 58394, 58395, 58396, 58397, 58398, 58399, 58400, 58401, 58402, 58403, 58404, 58405, 58406, 58407, 58408, 58409, 58410, 58411, 58412, 58413, 58414, 58415, 58416, 58417, 58418, 58419, 58420, 58421, 58422, 58423, 58424, 58425, 58426, 58427, 58428, 58429, 58430, 58431, 58432, 58433, 58434, 58435, 58436, 58437, 58438, 58439, 58440, 58441, 58442, 58443, 58444, 58445, 58446, 58447, 58448, 58449, 58450, 58451, 58452, 58453, 58454, 58455, 58456, 58457, 58458, 58459, 58460, 58461, 58462, 58463, 58464, 58465, 58466, 58467, 58468, 58469, 58470, 58471, 64012, 64013, 64014, 64015, 64017, 64019, 64020, 64024, 64031, 64032, 64033, 64035, 64036, 64039, 64040, 64041, 11905, 59414, 59415, 59416, 11908, 13427, 13383, 11912, 11915, 59422, 13726, 13850, 13838, 11916, 11927, 14702, 14616, 59430, 14799, 14815, 14963, 14800, 59435, 59436, 15182, 15470, 15584, 11943, 59441, 59442, 11946, 16470, 16735, 11950, 17207, 11955, 11958, 11959, 59451, 17329, 17324, 11963, 17373, 17622, 18017, 17996, 59459, 18211, 18217, 18300, 18317, 11978, 18759, 18810, 18813, 18818, 18819, 18821, 18822, 18847, 18843, 18871, 18870, 59476, 59477, 19619, 19615, 19616, 19617, 19575, 19618, 19731, 19732, 19733, 19734, 19735, 19736, 19737, 19886, 59492, 58472, 58473, 58474, 58475, 58476, 58477, 58478, 58479, 58480, 58481, 58482, 58483, 58484, 58485, 58486, 58487, 58488, 58489, 58490, 58491, 58492, 58493, 58494, 58495, 58496, 58497, 58498, 58499, 58500, 58501, 58502, 58503, 58504, 58505, 58506, 58507, 58508, 58509, 58510, 58511, 58512, 58513, 58514, 58515, 58516, 58517, 58518, 58519, 58520, 58521, 58522, 58523, 58524, 58525, 58526, 58527, 58528, 58529, 58530, 58531, 58532, 58533, 58534, 58535, 58536, 58537, 58538, 58539, 58540, 58541, 58542, 58543, 58544, 58545, 58546, 58547, 58548, 58549, 58550, 58551, 58552, 58553, 58554, 58555, 58556, 58557, 58558, 58559, 58560, 58561, 58562, 58563, 58564, 58565],
                    "gb18030-ranges": [[0, 128], [36, 165], [38, 169], [45, 178], [50, 184], [81, 216], [89, 226], [95, 235], [96, 238], [100, 244], [103, 248], [104, 251], [105, 253], [109, 258], [126, 276], [133, 284], [148, 300], [172, 325], [175, 329], [179, 334], [208, 364], [306, 463], [307, 465], [308, 467], [309, 469], [310, 471], [311, 473], [312, 475], [313, 477], [341, 506], [428, 594], [443, 610], [544, 712], [545, 716], [558, 730], [741, 930], [742, 938], [749, 962], [750, 970], [805, 1026], [819, 1104], [820, 1106], [7922, 8209], [7924, 8215], [7925, 8218], [7927, 8222], [7934, 8231], [7943, 8241], [7944, 8244], [7945, 8246], [7950, 8252], [8062, 8365], [8148, 8452], [8149, 8454], [8152, 8458], [8164, 8471], [8174, 8482], [8236, 8556], [8240, 8570], [8262, 8596], [8264, 8602], [8374, 8713], [8380, 8720], [8381, 8722], [8384, 8726], [8388, 8731], [8390, 8737], [8392, 8740], [8393, 8742], [8394, 8748], [8396, 8751], [8401, 8760], [8406, 8766], [8416, 8777], [8419, 8781], [8424, 8787], [8437, 8802], [8439, 8808], [8445, 8816], [8482, 8854], [8485, 8858], [8496, 8870], [8521, 8896], [8603, 8979], [8936, 9322], [8946, 9372], [9046, 9548], [9050, 9588], [9063, 9616], [9066, 9622], [9076, 9634], [9092, 9652], [9100, 9662], [9108, 9672], [9111, 9676], [9113, 9680], [9131, 9702], [9162, 9735], [9164, 9738], [9218, 9793], [9219, 9795], [11329, 11906], [11331, 11909], [11334, 11913], [11336, 11917], [11346, 11928], [11361, 11944], [11363, 11947], [11366, 11951], [11370, 11956], [11372, 11960], [11375, 11964], [11389, 11979], [11682, 12284], [11686, 12292], [11687, 12312], [11692, 12319], [11694, 12330], [11714, 12351], [11716, 12436], [11723, 12447], [11725, 12535], [11730, 12543], [11736, 12586], [11982, 12842], [11989, 12850], [12102, 12964], [12336, 13200], [12348, 13215], [12350, 13218], [12384, 13253], [12393, 13263], [12395, 13267], [12397, 13270], [12510, 13384], [12553, 13428], [12851, 13727], [12962, 13839], [12973, 13851], [13738, 14617], [13823, 14703], [13919, 14801], [13933, 14816], [14080, 14964], [14298, 15183], [14585, 15471], [14698, 15585], [15583, 16471], [15847, 16736], [16318, 17208], [16434, 17325], [16438, 17330], [16481, 17374], [16729, 17623], [17102, 17997], [17122, 18018], [17315, 18212], [17320, 18218], [17402, 18301], [17418, 18318], [17859, 18760], [17909, 18811], [17911, 18814], [17915, 18820], [17916, 18823], [17936, 18844], [17939, 18848], [17961, 18872], [18664, 19576], [18703, 19620], [18814, 19738], [18962, 19887], [19043, 40870], [33469, 59244], [33470, 59336], [33471, 59367], [33484, 59413], [33485, 59417], [33490, 59423], [33497, 59431], [33501, 59437], [33505, 59443], [33513, 59452], [33520, 59460], [33536, 59478], [33550, 59493], [37845, 63789], [37921, 63866], [37948, 63894], [38029, 63976], [38038, 63986], [38064, 64016], [38065, 64018], [38066, 64021], [38069, 64025], [38075, 64034], [38076, 64037], [38078, 64042], [39108, 65074], [39109, 65093], [39113, 65107], [39114, 65112], [39115, 65127], [39116, 65132], [39265, 65375], [39394, 65510], [189e3, 65536]],
                    jis0208: [12288, 12289, 12290, 65292, 65294, 12539, 65306, 65307, 65311, 65281, 12443, 12444, 180, 65344, 168, 65342, 65507, 65343, 12541, 12542, 12445, 12446, 12291, 20189, 12293, 12294, 12295, 12540, 8213, 8208, 65295, 65340, 65374, 8741, 65372, 8230, 8229, 8216, 8217, 8220, 8221, 65288, 65289, 12308, 12309, 65339, 65341, 65371, 65373, 12296, 12297, 12298, 12299, 12300, 12301, 12302, 12303, 12304, 12305, 65291, 65293, 177, 215, 247, 65309, 8800, 65308, 65310, 8806, 8807, 8734, 8756, 9794, 9792, 176, 8242, 8243, 8451, 65509, 65284, 65504, 65505, 65285, 65283, 65286, 65290, 65312, 167, 9734, 9733, 9675, 9679, 9678, 9671, 9670, 9633, 9632, 9651, 9650, 9661, 9660, 8251, 12306, 8594, 8592, 8593, 8595, 12307, null, null, null, null, null, null, null, null, null, null, null, 8712, 8715, 8838, 8839, 8834, 8835, 8746, 8745, null, null, null, null, null, null, null, null, 8743, 8744, 65506, 8658, 8660, 8704, 8707, null, null, null, null, null, null, null, null, null, null, null, 8736, 8869, 8978, 8706, 8711, 8801, 8786, 8810, 8811, 8730, 8765, 8733, 8757, 8747, 8748, null, null, null, null, null, null, null, 8491, 8240, 9839, 9837, 9834, 8224, 8225, 182, null, null, null, null, 9711, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 65296, 65297, 65298, 65299, 65300, 65301, 65302, 65303, 65304, 65305, null, null, null, null, null, null, null, 65313, 65314, 65315, 65316, 65317, 65318, 65319, 65320, 65321, 65322, 65323, 65324, 65325, 65326, 65327, 65328, 65329, 65330, 65331, 65332, 65333, 65334, 65335, 65336, 65337, 65338, null, null, null, null, null, null, 65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361, 65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370, null, null, null, null, 12353, 12354, 12355, 12356, 12357, 12358, 12359, 12360, 12361, 12362, 12363, 12364, 12365, 12366, 12367, 12368, 12369, 12370, 12371, 12372, 12373, 12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382, 12383, 12384, 12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392, 12393, 12394, 12395, 12396, 12397, 12398, 12399, 12400, 12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412, 12413, 12414, 12415, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431, 12432, 12433, 12434, 12435, null, null, null, null, null, null, null, null, null, null, null, 12449, 12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461, 12462, 12463, 12464, 12465, 12466, 12467, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 12475, 12476, 12477, 12478, 12479, 12480, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489, 12490, 12491, 12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499, 12500, 12501, 12502, 12503, 12504, 12505, 12506, 12507, 12508, 12509, 12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519, 12520, 12521, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531, 12532, 12533, 12534, null, null, null, null, null, null, null, null, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, null, null, null, null, null, null, null, null, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 967, 968, 969, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1040, 1041, 1042, 1043, 1044, 1045, 1025, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1072, 1073, 1074, 1075, 1076, 1077, 1105, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, null, null, null, null, null, null, null, null, null, null, null, null, null, 9472, 9474, 9484, 9488, 9496, 9492, 9500, 9516, 9508, 9524, 9532, 9473, 9475, 9487, 9491, 9499, 9495, 9507, 9523, 9515, 9531, 9547, 9504, 9519, 9512, 9527, 9535, 9501, 9520, 9509, 9528, 9538, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 9322, 9323, 9324, 9325, 9326, 9327, 9328, 9329, 9330, 9331, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, null, 13129, 13076, 13090, 13133, 13080, 13095, 13059, 13110, 13137, 13143, 13069, 13094, 13091, 13099, 13130, 13115, 13212, 13213, 13214, 13198, 13199, 13252, 13217, null, null, null, null, null, null, null, null, 13179, 12317, 12319, 8470, 13261, 8481, 12964, 12965, 12966, 12967, 12968, 12849, 12850, 12857, 13182, 13181, 13180, 8786, 8801, 8747, 8750, 8721, 8730, 8869, 8736, 8735, 8895, 8757, 8745, 8746, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 20124, 21782, 23043, 38463, 21696, 24859, 25384, 23030, 36898, 33909, 33564, 31312, 24746, 25569, 28197, 26093, 33894, 33446, 39925, 26771, 22311, 26017, 25201, 23451, 22992, 34427, 39156, 32098, 32190, 39822, 25110, 31903, 34999, 23433, 24245, 25353, 26263, 26696, 38343, 38797, 26447, 20197, 20234, 20301, 20381, 20553, 22258, 22839, 22996, 23041, 23561, 24799, 24847, 24944, 26131, 26885, 28858, 30031, 30064, 31227, 32173, 32239, 32963, 33806, 34915, 35586, 36949, 36986, 21307, 20117, 20133, 22495, 32946, 37057, 30959, 19968, 22769, 28322, 36920, 31282, 33576, 33419, 39983, 20801, 21360, 21693, 21729, 22240, 23035, 24341, 39154, 28139, 32996, 34093, 38498, 38512, 38560, 38907, 21515, 21491, 23431, 28879, 32701, 36802, 38632, 21359, 40284, 31418, 19985, 30867, 33276, 28198, 22040, 21764, 27421, 34074, 39995, 23013, 21417, 28006, 29916, 38287, 22082, 20113, 36939, 38642, 33615, 39180, 21473, 21942, 23344, 24433, 26144, 26355, 26628, 27704, 27891, 27945, 29787, 30408, 31310, 38964, 33521, 34907, 35424, 37613, 28082, 30123, 30410, 39365, 24742, 35585, 36234, 38322, 27022, 21421, 20870, 22290, 22576, 22852, 23476, 24310, 24616, 25513, 25588, 27839, 28436, 28814, 28948, 29017, 29141, 29503, 32257, 33398, 33489, 34199, 36960, 37467, 40219, 22633, 26044, 27738, 29989, 20985, 22830, 22885, 24448, 24540, 25276, 26106, 27178, 27431, 27572, 29579, 32705, 35158, 40236, 40206, 40644, 23713, 27798, 33659, 20740, 23627, 25014, 33222, 26742, 29281, 20057, 20474, 21368, 24681, 28201, 31311, 38899, 19979, 21270, 20206, 20309, 20285, 20385, 20339, 21152, 21487, 22025, 22799, 23233, 23478, 23521, 31185, 26247, 26524, 26550, 27468, 27827, 28779, 29634, 31117, 31166, 31292, 31623, 33457, 33499, 33540, 33655, 33775, 33747, 34662, 35506, 22057, 36008, 36838, 36942, 38686, 34442, 20420, 23784, 25105, 29273, 30011, 33253, 33469, 34558, 36032, 38597, 39187, 39381, 20171, 20250, 35299, 22238, 22602, 22730, 24315, 24555, 24618, 24724, 24674, 25040, 25106, 25296, 25913, 39745, 26214, 26800, 28023, 28784, 30028, 30342, 32117, 33445, 34809, 38283, 38542, 35997, 20977, 21182, 22806, 21683, 23475, 23830, 24936, 27010, 28079, 30861, 33995, 34903, 35442, 37799, 39608, 28012, 39336, 34521, 22435, 26623, 34510, 37390, 21123, 22151, 21508, 24275, 25313, 25785, 26684, 26680, 27579, 29554, 30906, 31339, 35226, 35282, 36203, 36611, 37101, 38307, 38548, 38761, 23398, 23731, 27005, 38989, 38990, 25499, 31520, 27179, 27263, 26806, 39949, 28511, 21106, 21917, 24688, 25324, 27963, 28167, 28369, 33883, 35088, 36676, 19988, 39993, 21494, 26907, 27194, 38788, 26666, 20828, 31427, 33970, 37340, 37772, 22107, 40232, 26658, 33541, 33841, 31909, 21e3, 33477, 29926, 20094, 20355, 20896, 23506, 21002, 21208, 21223, 24059, 21914, 22570, 23014, 23436, 23448, 23515, 24178, 24185, 24739, 24863, 24931, 25022, 25563, 25954, 26577, 26707, 26874, 27454, 27475, 27735, 28450, 28567, 28485, 29872, 29976, 30435, 30475, 31487, 31649, 31777, 32233, 32566, 32752, 32925, 33382, 33694, 35251, 35532, 36011, 36996, 37969, 38291, 38289, 38306, 38501, 38867, 39208, 33304, 20024, 21547, 23736, 24012, 29609, 30284, 30524, 23721, 32747, 36107, 38593, 38929, 38996, 39e3, 20225, 20238, 21361, 21916, 22120, 22522, 22855, 23305, 23492, 23696, 24076, 24190, 24524, 25582, 26426, 26071, 26082, 26399, 26827, 26820, 27231, 24112, 27589, 27671, 27773, 30079, 31048, 23395, 31232, 32e3, 24509, 35215, 35352, 36020, 36215, 36556, 36637, 39138, 39438, 39740, 20096, 20605, 20736, 22931, 23452, 25135, 25216, 25836, 27450, 29344, 30097, 31047, 32681, 34811, 35516, 35696, 25516, 33738, 38816, 21513, 21507, 21931, 26708, 27224, 35440, 30759, 26485, 40653, 21364, 23458, 33050, 34384, 36870, 19992, 20037, 20167, 20241, 21450, 21560, 23470, 24339, 24613, 25937, 26429, 27714, 27762, 27875, 28792, 29699, 31350, 31406, 31496, 32026, 31998, 32102, 26087, 29275, 21435, 23621, 24040, 25298, 25312, 25369, 28192, 34394, 35377, 36317, 37624, 28417, 31142, 39770, 20136, 20139, 20140, 20379, 20384, 20689, 20807, 31478, 20849, 20982, 21332, 21281, 21375, 21483, 21932, 22659, 23777, 24375, 24394, 24623, 24656, 24685, 25375, 25945, 27211, 27841, 29378, 29421, 30703, 33016, 33029, 33288, 34126, 37111, 37857, 38911, 39255, 39514, 20208, 20957, 23597, 26241, 26989, 23616, 26354, 26997, 29577, 26704, 31873, 20677, 21220, 22343, 24062, 37670, 26020, 27427, 27453, 29748, 31105, 31165, 31563, 32202, 33465, 33740, 34943, 35167, 35641, 36817, 37329, 21535, 37504, 20061, 20534, 21477, 21306, 29399, 29590, 30697, 33510, 36527, 39366, 39368, 39378, 20855, 24858, 34398, 21936, 31354, 20598, 23507, 36935, 38533, 20018, 27355, 37351, 23633, 23624, 25496, 31391, 27795, 38772, 36705, 31402, 29066, 38536, 31874, 26647, 32368, 26705, 37740, 21234, 21531, 34219, 35347, 32676, 36557, 37089, 21350, 34952, 31041, 20418, 20670, 21009, 20804, 21843, 22317, 29674, 22411, 22865, 24418, 24452, 24693, 24950, 24935, 25001, 25522, 25658, 25964, 26223, 26690, 28179, 30054, 31293, 31995, 32076, 32153, 32331, 32619, 33550, 33610, 34509, 35336, 35427, 35686, 36605, 38938, 40335, 33464, 36814, 39912, 21127, 25119, 25731, 28608, 38553, 26689, 20625, 27424, 27770, 28500, 31348, 32080, 34880, 35363, 26376, 20214, 20537, 20518, 20581, 20860, 21048, 21091, 21927, 22287, 22533, 23244, 24314, 25010, 25080, 25331, 25458, 26908, 27177, 29309, 29356, 29486, 30740, 30831, 32121, 30476, 32937, 35211, 35609, 36066, 36562, 36963, 37749, 38522, 38997, 39443, 40568, 20803, 21407, 21427, 24187, 24358, 28187, 28304, 29572, 29694, 32067, 33335, 35328, 35578, 38480, 20046, 20491, 21476, 21628, 22266, 22993, 23396, 24049, 24235, 24359, 25144, 25925, 26543, 28246, 29392, 31946, 34996, 32929, 32993, 33776, 34382, 35463, 36328, 37431, 38599, 39015, 40723, 20116, 20114, 20237, 21320, 21577, 21566, 23087, 24460, 24481, 24735, 26791, 27278, 29786, 30849, 35486, 35492, 35703, 37264, 20062, 39881, 20132, 20348, 20399, 20505, 20502, 20809, 20844, 21151, 21177, 21246, 21402, 21475, 21521, 21518, 21897, 22353, 22434, 22909, 23380, 23389, 23439, 24037, 24039, 24055, 24184, 24195, 24218, 24247, 24344, 24658, 24908, 25239, 25304, 25511, 25915, 26114, 26179, 26356, 26477, 26657, 26775, 27083, 27743, 27946, 28009, 28207, 28317, 30002, 30343, 30828, 31295, 31968, 32005, 32024, 32094, 32177, 32789, 32771, 32943, 32945, 33108, 33167, 33322, 33618, 34892, 34913, 35611, 36002, 36092, 37066, 37237, 37489, 30783, 37628, 38308, 38477, 38917, 39321, 39640, 40251, 21083, 21163, 21495, 21512, 22741, 25335, 28640, 35946, 36703, 40633, 20811, 21051, 21578, 22269, 31296, 37239, 40288, 40658, 29508, 28425, 33136, 29969, 24573, 24794, 39592, 29403, 36796, 27492, 38915, 20170, 22256, 22372, 22718, 23130, 24680, 25031, 26127, 26118, 26681, 26801, 28151, 30165, 32058, 33390, 39746, 20123, 20304, 21449, 21766, 23919, 24038, 24046, 26619, 27801, 29811, 30722, 35408, 37782, 35039, 22352, 24231, 25387, 20661, 20652, 20877, 26368, 21705, 22622, 22971, 23472, 24425, 25165, 25505, 26685, 27507, 28168, 28797, 37319, 29312, 30741, 30758, 31085, 25998, 32048, 33756, 35009, 36617, 38555, 21092, 22312, 26448, 32618, 36001, 20916, 22338, 38442, 22586, 27018, 32948, 21682, 23822, 22524, 30869, 40442, 20316, 21066, 21643, 25662, 26152, 26388, 26613, 31364, 31574, 32034, 37679, 26716, 39853, 31545, 21273, 20874, 21047, 23519, 25334, 25774, 25830, 26413, 27578, 34217, 38609, 30352, 39894, 25420, 37638, 39851, 30399, 26194, 19977, 20632, 21442, 23665, 24808, 25746, 25955, 26719, 29158, 29642, 29987, 31639, 32386, 34453, 35715, 36059, 37240, 39184, 26028, 26283, 27531, 20181, 20180, 20282, 20351, 21050, 21496, 21490, 21987, 22235, 22763, 22987, 22985, 23039, 23376, 23629, 24066, 24107, 24535, 24605, 25351, 25903, 23388, 26031, 26045, 26088, 26525, 27490, 27515, 27663, 29509, 31049, 31169, 31992, 32025, 32043, 32930, 33026, 33267, 35222, 35422, 35433, 35430, 35468, 35566, 36039, 36060, 38604, 39164, 27503, 20107, 20284, 20365, 20816, 23383, 23546, 24904, 25345, 26178, 27425, 28363, 27835, 29246, 29885, 30164, 30913, 31034, 32780, 32819, 33258, 33940, 36766, 27728, 40575, 24335, 35672, 40235, 31482, 36600, 23437, 38635, 19971, 21489, 22519, 22833, 23241, 23460, 24713, 28287, 28422, 30142, 36074, 23455, 34048, 31712, 20594, 26612, 33437, 23649, 34122, 32286, 33294, 20889, 23556, 25448, 36198, 26012, 29038, 31038, 32023, 32773, 35613, 36554, 36974, 34503, 37034, 20511, 21242, 23610, 26451, 28796, 29237, 37196, 37320, 37675, 33509, 23490, 24369, 24825, 20027, 21462, 23432, 25163, 26417, 27530, 29417, 29664, 31278, 33131, 36259, 37202, 39318, 20754, 21463, 21610, 23551, 25480, 27193, 32172, 38656, 22234, 21454, 21608, 23447, 23601, 24030, 20462, 24833, 25342, 27954, 31168, 31179, 32066, 32333, 32722, 33261, 33311, 33936, 34886, 35186, 35728, 36468, 36655, 36913, 37195, 37228, 38598, 37276, 20160, 20303, 20805, 21313, 24467, 25102, 26580, 27713, 28171, 29539, 32294, 37325, 37507, 21460, 22809, 23487, 28113, 31069, 32302, 31899, 22654, 29087, 20986, 34899, 36848, 20426, 23803, 26149, 30636, 31459, 33308, 39423, 20934, 24490, 26092, 26991, 27529, 28147, 28310, 28516, 30462, 32020, 24033, 36981, 37255, 38918, 20966, 21021, 25152, 26257, 26329, 28186, 24246, 32210, 32626, 26360, 34223, 34295, 35576, 21161, 21465, 22899, 24207, 24464, 24661, 37604, 38500, 20663, 20767, 21213, 21280, 21319, 21484, 21736, 21830, 21809, 22039, 22888, 22974, 23100, 23477, 23558, 23567, 23569, 23578, 24196, 24202, 24288, 24432, 25215, 25220, 25307, 25484, 25463, 26119, 26124, 26157, 26230, 26494, 26786, 27167, 27189, 27836, 28040, 28169, 28248, 28988, 28966, 29031, 30151, 30465, 30813, 30977, 31077, 31216, 31456, 31505, 31911, 32057, 32918, 33750, 33931, 34121, 34909, 35059, 35359, 35388, 35412, 35443, 35937, 36062, 37284, 37478, 37758, 37912, 38556, 38808, 19978, 19976, 19998, 20055, 20887, 21104, 22478, 22580, 22732, 23330, 24120, 24773, 25854, 26465, 26454, 27972, 29366, 30067, 31331, 33976, 35698, 37304, 37664, 22065, 22516, 39166, 25325, 26893, 27542, 29165, 32340, 32887, 33394, 35302, 39135, 34645, 36785, 23611, 20280, 20449, 20405, 21767, 23072, 23517, 23529, 24515, 24910, 25391, 26032, 26187, 26862, 27035, 28024, 28145, 30003, 30137, 30495, 31070, 31206, 32051, 33251, 33455, 34218, 35242, 35386, 36523, 36763, 36914, 37341, 38663, 20154, 20161, 20995, 22645, 22764, 23563, 29978, 23613, 33102, 35338, 36805, 38499, 38765, 31525, 35535, 38920, 37218, 22259, 21416, 36887, 21561, 22402, 24101, 25512, 27700, 28810, 30561, 31883, 32736, 34928, 36930, 37204, 37648, 37656, 38543, 29790, 39620, 23815, 23913, 25968, 26530, 36264, 38619, 25454, 26441, 26905, 33733, 38935, 38592, 35070, 28548, 25722, 23544, 19990, 28716, 30045, 26159, 20932, 21046, 21218, 22995, 24449, 24615, 25104, 25919, 25972, 26143, 26228, 26866, 26646, 27491, 28165, 29298, 29983, 30427, 31934, 32854, 22768, 35069, 35199, 35488, 35475, 35531, 36893, 37266, 38738, 38745, 25993, 31246, 33030, 38587, 24109, 24796, 25114, 26021, 26132, 26512, 30707, 31309, 31821, 32318, 33034, 36012, 36196, 36321, 36447, 30889, 20999, 25305, 25509, 25666, 25240, 35373, 31363, 31680, 35500, 38634, 32118, 33292, 34633, 20185, 20808, 21315, 21344, 23459, 23554, 23574, 24029, 25126, 25159, 25776, 26643, 26676, 27849, 27973, 27927, 26579, 28508, 29006, 29053, 26059, 31359, 31661, 32218, 32330, 32680, 33146, 33307, 33337, 34214, 35438, 36046, 36341, 36984, 36983, 37549, 37521, 38275, 39854, 21069, 21892, 28472, 28982, 20840, 31109, 32341, 33203, 31950, 22092, 22609, 23720, 25514, 26366, 26365, 26970, 29401, 30095, 30094, 30990, 31062, 31199, 31895, 32032, 32068, 34311, 35380, 38459, 36961, 40736, 20711, 21109, 21452, 21474, 20489, 21930, 22766, 22863, 29245, 23435, 23652, 21277, 24803, 24819, 25436, 25475, 25407, 25531, 25805, 26089, 26361, 24035, 27085, 27133, 28437, 29157, 20105, 30185, 30456, 31379, 31967, 32207, 32156, 32865, 33609, 33624, 33900, 33980, 34299, 35013, 36208, 36865, 36973, 37783, 38684, 39442, 20687, 22679, 24974, 33235, 34101, 36104, 36896, 20419, 20596, 21063, 21363, 24687, 25417, 26463, 28204, 36275, 36895, 20439, 23646, 36042, 26063, 32154, 21330, 34966, 20854, 25539, 23384, 23403, 23562, 25613, 26449, 36956, 20182, 22810, 22826, 27760, 35409, 21822, 22549, 22949, 24816, 25171, 26561, 33333, 26965, 38464, 39364, 39464, 20307, 22534, 23550, 32784, 23729, 24111, 24453, 24608, 24907, 25140, 26367, 27888, 28382, 32974, 33151, 33492, 34955, 36024, 36864, 36910, 38538, 40667, 39899, 20195, 21488, 22823, 31532, 37261, 38988, 40441, 28381, 28711, 21331, 21828, 23429, 25176, 25246, 25299, 27810, 28655, 29730, 35351, 37944, 28609, 35582, 33592, 20967, 34552, 21482, 21481, 20294, 36948, 36784, 22890, 33073, 24061, 31466, 36799, 26842, 35895, 29432, 40008, 27197, 35504, 20025, 21336, 22022, 22374, 25285, 25506, 26086, 27470, 28129, 28251, 28845, 30701, 31471, 31658, 32187, 32829, 32966, 34507, 35477, 37723, 22243, 22727, 24382, 26029, 26262, 27264, 27573, 30007, 35527, 20516, 30693, 22320, 24347, 24677, 26234, 27744, 30196, 31258, 32622, 33268, 34584, 36933, 39347, 31689, 30044, 31481, 31569, 33988, 36880, 31209, 31378, 33590, 23265, 30528, 20013, 20210, 23449, 24544, 25277, 26172, 26609, 27880, 34411, 34935, 35387, 37198, 37619, 39376, 27159, 28710, 29482, 33511, 33879, 36015, 19969, 20806, 20939, 21899, 23541, 24086, 24115, 24193, 24340, 24373, 24427, 24500, 25074, 25361, 26274, 26397, 28526, 29266, 30010, 30522, 32884, 33081, 33144, 34678, 35519, 35548, 36229, 36339, 37530, 38263, 38914, 40165, 21189, 25431, 30452, 26389, 27784, 29645, 36035, 37806, 38515, 27941, 22684, 26894, 27084, 36861, 37786, 30171, 36890, 22618, 26626, 25524, 27131, 20291, 28460, 26584, 36795, 34086, 32180, 37716, 26943, 28528, 22378, 22775, 23340, 32044, 29226, 21514, 37347, 40372, 20141, 20302, 20572, 20597, 21059, 35998, 21576, 22564, 23450, 24093, 24213, 24237, 24311, 24351, 24716, 25269, 25402, 25552, 26799, 27712, 30855, 31118, 31243, 32224, 33351, 35330, 35558, 36420, 36883, 37048, 37165, 37336, 40718, 27877, 25688, 25826, 25973, 28404, 30340, 31515, 36969, 37841, 28346, 21746, 24505, 25764, 36685, 36845, 37444, 20856, 22635, 22825, 23637, 24215, 28155, 32399, 29980, 36028, 36578, 39003, 28857, 20253, 27583, 28593, 3e4, 38651, 20814, 21520, 22581, 22615, 22956, 23648, 24466, 26007, 26460, 28193, 30331, 33759, 36077, 36884, 37117, 37709, 30757, 30778, 21162, 24230, 22303, 22900, 24594, 20498, 20826, 20908, 20941, 20992, 21776, 22612, 22616, 22871, 23445, 23798, 23947, 24764, 25237, 25645, 26481, 26691, 26812, 26847, 30423, 28120, 28271, 28059, 28783, 29128, 24403, 30168, 31095, 31561, 31572, 31570, 31958, 32113, 21040, 33891, 34153, 34276, 35342, 35588, 35910, 36367, 36867, 36879, 37913, 38518, 38957, 39472, 38360, 20685, 21205, 21516, 22530, 23566, 24999, 25758, 27934, 30643, 31461, 33012, 33796, 36947, 37509, 23776, 40199, 21311, 24471, 24499, 28060, 29305, 30563, 31167, 31716, 27602, 29420, 35501, 26627, 27233, 20984, 31361, 26932, 23626, 40182, 33515, 23493, 37193, 28702, 22136, 23663, 24775, 25958, 27788, 35930, 36929, 38931, 21585, 26311, 37389, 22856, 37027, 20869, 20045, 20970, 34201, 35598, 28760, 25466, 37707, 26978, 39348, 32260, 30071, 21335, 26976, 36575, 38627, 27741, 20108, 23612, 24336, 36841, 21250, 36049, 32905, 34425, 24319, 26085, 20083, 20837, 22914, 23615, 38894, 20219, 22922, 24525, 35469, 28641, 31152, 31074, 23527, 33905, 29483, 29105, 24180, 24565, 25467, 25754, 29123, 31896, 20035, 24316, 20043, 22492, 22178, 24745, 28611, 32013, 33021, 33075, 33215, 36786, 35223, 34468, 24052, 25226, 25773, 35207, 26487, 27874, 27966, 29750, 30772, 23110, 32629, 33453, 39340, 20467, 24259, 25309, 25490, 25943, 26479, 30403, 29260, 32972, 32954, 36649, 37197, 20493, 22521, 23186, 26757, 26995, 29028, 29437, 36023, 22770, 36064, 38506, 36889, 34687, 31204, 30695, 33833, 20271, 21093, 21338, 25293, 26575, 27850, 30333, 31636, 31893, 33334, 34180, 36843, 26333, 28448, 29190, 32283, 33707, 39361, 40614, 20989, 31665, 30834, 31672, 32903, 31560, 27368, 24161, 32908, 30033, 30048, 20843, 37474, 28300, 30330, 37271, 39658, 20240, 32624, 25244, 31567, 38309, 40169, 22138, 22617, 34532, 38588, 20276, 21028, 21322, 21453, 21467, 24070, 25644, 26001, 26495, 27710, 27726, 29256, 29359, 29677, 30036, 32321, 33324, 34281, 36009, 31684, 37318, 29033, 38930, 39151, 25405, 26217, 30058, 30436, 30928, 34115, 34542, 21290, 21329, 21542, 22915, 24199, 24444, 24754, 25161, 25209, 25259, 26e3, 27604, 27852, 30130, 30382, 30865, 31192, 32203, 32631, 32933, 34987, 35513, 36027, 36991, 38750, 39131, 27147, 31800, 20633, 23614, 24494, 26503, 27608, 29749, 30473, 32654, 40763, 26570, 31255, 21305, 30091, 39661, 24422, 33181, 33777, 32920, 24380, 24517, 30050, 31558, 36924, 26727, 23019, 23195, 32016, 30334, 35628, 20469, 24426, 27161, 27703, 28418, 29922, 31080, 34920, 35413, 35961, 24287, 25551, 30149, 31186, 33495, 37672, 37618, 33948, 34541, 39981, 21697, 24428, 25996, 27996, 28693, 36007, 36051, 38971, 25935, 29942, 19981, 20184, 22496, 22827, 23142, 23500, 20904, 24067, 24220, 24598, 25206, 25975, 26023, 26222, 28014, 29238, 31526, 33104, 33178, 33433, 35676, 36e3, 36070, 36212, 38428, 38468, 20398, 25771, 27494, 33310, 33889, 34154, 37096, 23553, 26963, 39080, 33914, 34135, 20239, 21103, 24489, 24133, 26381, 31119, 33145, 35079, 35206, 28149, 24343, 25173, 27832, 20175, 29289, 39826, 20998, 21563, 22132, 22707, 24996, 25198, 28954, 22894, 31881, 31966, 32027, 38640, 25991, 32862, 19993, 20341, 20853, 22592, 24163, 24179, 24330, 26564, 20006, 34109, 38281, 38491, 31859, 38913, 20731, 22721, 30294, 30887, 21029, 30629, 34065, 31622, 20559, 22793, 29255, 31687, 32232, 36794, 36820, 36941, 20415, 21193, 23081, 24321, 38829, 20445, 33303, 37610, 22275, 25429, 27497, 29995, 35036, 36628, 31298, 21215, 22675, 24917, 25098, 26286, 27597, 31807, 33769, 20515, 20472, 21253, 21574, 22577, 22857, 23453, 23792, 23791, 23849, 24214, 25265, 25447, 25918, 26041, 26379, 27861, 27873, 28921, 30770, 32299, 32990, 33459, 33804, 34028, 34562, 35090, 35370, 35914, 37030, 37586, 39165, 40179, 40300, 20047, 20129, 20621, 21078, 22346, 22952, 24125, 24536, 24537, 25151, 26292, 26395, 26576, 26834, 20882, 32033, 32938, 33192, 35584, 35980, 36031, 37502, 38450, 21536, 38956, 21271, 20693, 21340, 22696, 25778, 26420, 29287, 30566, 31302, 37350, 21187, 27809, 27526, 22528, 24140, 22868, 26412, 32763, 20961, 30406, 25705, 30952, 39764, 40635, 22475, 22969, 26151, 26522, 27598, 21737, 27097, 24149, 33180, 26517, 39850, 26622, 40018, 26717, 20134, 20451, 21448, 25273, 26411, 27819, 36804, 20397, 32365, 40639, 19975, 24930, 28288, 28459, 34067, 21619, 26410, 39749, 24051, 31637, 23724, 23494, 34588, 28234, 34001, 31252, 33032, 22937, 31885, 27665, 30496, 21209, 22818, 28961, 29279, 30683, 38695, 40289, 26891, 23167, 23064, 20901, 21517, 21629, 26126, 30431, 36855, 37528, 40180, 23018, 29277, 28357, 20813, 26825, 32191, 32236, 38754, 40634, 25720, 27169, 33538, 22916, 23391, 27611, 29467, 30450, 32178, 32791, 33945, 20786, 26408, 40665, 30446, 26466, 21247, 39173, 23588, 25147, 31870, 36016, 21839, 24758, 32011, 38272, 21249, 20063, 20918, 22812, 29242, 32822, 37326, 24357, 30690, 21380, 24441, 32004, 34220, 35379, 36493, 38742, 26611, 34222, 37971, 24841, 24840, 27833, 30290, 35565, 36664, 21807, 20305, 20778, 21191, 21451, 23461, 24189, 24736, 24962, 25558, 26377, 26586, 28263, 28044, 29494, 29495, 30001, 31056, 35029, 35480, 36938, 37009, 37109, 38596, 34701, 22805, 20104, 20313, 19982, 35465, 36671, 38928, 20653, 24188, 22934, 23481, 24248, 25562, 25594, 25793, 26332, 26954, 27096, 27915, 28342, 29076, 29992, 31407, 32650, 32768, 33865, 33993, 35201, 35617, 36362, 36965, 38525, 39178, 24958, 25233, 27442, 27779, 28020, 32716, 32764, 28096, 32645, 34746, 35064, 26469, 33713, 38972, 38647, 27931, 32097, 33853, 37226, 20081, 21365, 23888, 27396, 28651, 34253, 34349, 35239, 21033, 21519, 23653, 26446, 26792, 29702, 29827, 30178, 35023, 35041, 37324, 38626, 38520, 24459, 29575, 31435, 33870, 25504, 30053, 21129, 27969, 28316, 29705, 30041, 30827, 31890, 38534, 31452, 40845, 20406, 24942, 26053, 34396, 20102, 20142, 20698, 20001, 20940, 23534, 26009, 26753, 28092, 29471, 30274, 30637, 31260, 31975, 33391, 35538, 36988, 37327, 38517, 38936, 21147, 32209, 20523, 21400, 26519, 28107, 29136, 29747, 33256, 36650, 38563, 40023, 40607, 29792, 22593, 28057, 32047, 39006, 20196, 20278, 20363, 20919, 21169, 23994, 24604, 29618, 31036, 33491, 37428, 38583, 38646, 38666, 40599, 40802, 26278, 27508, 21015, 21155, 28872, 35010, 24265, 24651, 24976, 28451, 29001, 31806, 32244, 32879, 34030, 36899, 37676, 21570, 39791, 27347, 28809, 36034, 36335, 38706, 21172, 23105, 24266, 24324, 26391, 27004, 27028, 28010, 28431, 29282, 29436, 31725, 32769, 32894, 34635, 37070, 20845, 40595, 31108, 32907, 37682, 35542, 20525, 21644, 35441, 27498, 36036, 33031, 24785, 26528, 40434, 20121, 20120, 39952, 35435, 34241, 34152, 26880, 28286, 30871, 33109, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 24332, 19984, 19989, 20010, 20017, 20022, 20028, 20031, 20034, 20054, 20056, 20098, 20101, 35947, 20106, 33298, 24333, 20110, 20126, 20127, 20128, 20130, 20144, 20147, 20150, 20174, 20173, 20164, 20166, 20162, 20183, 20190, 20205, 20191, 20215, 20233, 20314, 20272, 20315, 20317, 20311, 20295, 20342, 20360, 20367, 20376, 20347, 20329, 20336, 20369, 20335, 20358, 20374, 20760, 20436, 20447, 20430, 20440, 20443, 20433, 20442, 20432, 20452, 20453, 20506, 20520, 20500, 20522, 20517, 20485, 20252, 20470, 20513, 20521, 20524, 20478, 20463, 20497, 20486, 20547, 20551, 26371, 20565, 20560, 20552, 20570, 20566, 20588, 20600, 20608, 20634, 20613, 20660, 20658, 20681, 20682, 20659, 20674, 20694, 20702, 20709, 20717, 20707, 20718, 20729, 20725, 20745, 20737, 20738, 20758, 20757, 20756, 20762, 20769, 20794, 20791, 20796, 20795, 20799, 20800, 20818, 20812, 20820, 20834, 31480, 20841, 20842, 20846, 20864, 20866, 22232, 20876, 20873, 20879, 20881, 20883, 20885, 20886, 20900, 20902, 20898, 20905, 20906, 20907, 20915, 20913, 20914, 20912, 20917, 20925, 20933, 20937, 20955, 20960, 34389, 20969, 20973, 20976, 20981, 20990, 20996, 21003, 21012, 21006, 21031, 21034, 21038, 21043, 21049, 21071, 21060, 21067, 21068, 21086, 21076, 21098, 21108, 21097, 21107, 21119, 21117, 21133, 21140, 21138, 21105, 21128, 21137, 36776, 36775, 21164, 21165, 21180, 21173, 21185, 21197, 21207, 21214, 21219, 21222, 39149, 21216, 21235, 21237, 21240, 21241, 21254, 21256, 30008, 21261, 21264, 21263, 21269, 21274, 21283, 21295, 21297, 21299, 21304, 21312, 21318, 21317, 19991, 21321, 21325, 20950, 21342, 21353, 21358, 22808, 21371, 21367, 21378, 21398, 21408, 21414, 21413, 21422, 21424, 21430, 21443, 31762, 38617, 21471, 26364, 29166, 21486, 21480, 21485, 21498, 21505, 21565, 21568, 21548, 21549, 21564, 21550, 21558, 21545, 21533, 21582, 21647, 21621, 21646, 21599, 21617, 21623, 21616, 21650, 21627, 21632, 21622, 21636, 21648, 21638, 21703, 21666, 21688, 21669, 21676, 21700, 21704, 21672, 21675, 21698, 21668, 21694, 21692, 21720, 21733, 21734, 21775, 21780, 21757, 21742, 21741, 21754, 21730, 21817, 21824, 21859, 21836, 21806, 21852, 21829, 21846, 21847, 21816, 21811, 21853, 21913, 21888, 21679, 21898, 21919, 21883, 21886, 21912, 21918, 21934, 21884, 21891, 21929, 21895, 21928, 21978, 21957, 21983, 21956, 21980, 21988, 21972, 22036, 22007, 22038, 22014, 22013, 22043, 22009, 22094, 22096, 29151, 22068, 22070, 22066, 22072, 22123, 22116, 22063, 22124, 22122, 22150, 22144, 22154, 22176, 22164, 22159, 22181, 22190, 22198, 22196, 22210, 22204, 22209, 22211, 22208, 22216, 22222, 22225, 22227, 22231, 22254, 22265, 22272, 22271, 22276, 22281, 22280, 22283, 22285, 22291, 22296, 22294, 21959, 22300, 22310, 22327, 22328, 22350, 22331, 22336, 22351, 22377, 22464, 22408, 22369, 22399, 22409, 22419, 22432, 22451, 22436, 22442, 22448, 22467, 22470, 22484, 22482, 22483, 22538, 22486, 22499, 22539, 22553, 22557, 22642, 22561, 22626, 22603, 22640, 27584, 22610, 22589, 22649, 22661, 22713, 22687, 22699, 22714, 22750, 22715, 22712, 22702, 22725, 22739, 22737, 22743, 22745, 22744, 22757, 22748, 22756, 22751, 22767, 22778, 22777, 22779, 22780, 22781, 22786, 22794, 22800, 22811, 26790, 22821, 22828, 22829, 22834, 22840, 22846, 31442, 22869, 22864, 22862, 22874, 22872, 22882, 22880, 22887, 22892, 22889, 22904, 22913, 22941, 20318, 20395, 22947, 22962, 22982, 23016, 23004, 22925, 23001, 23002, 23077, 23071, 23057, 23068, 23049, 23066, 23104, 23148, 23113, 23093, 23094, 23138, 23146, 23194, 23228, 23230, 23243, 23234, 23229, 23267, 23255, 23270, 23273, 23254, 23290, 23291, 23308, 23307, 23318, 23346, 23248, 23338, 23350, 23358, 23363, 23365, 23360, 23377, 23381, 23386, 23387, 23397, 23401, 23408, 23411, 23413, 23416, 25992, 23418, 23424, 23427, 23462, 23480, 23491, 23495, 23497, 23508, 23504, 23524, 23526, 23522, 23518, 23525, 23531, 23536, 23542, 23539, 23557, 23559, 23560, 23565, 23571, 23584, 23586, 23592, 23608, 23609, 23617, 23622, 23630, 23635, 23632, 23631, 23409, 23660, 23662, 20066, 23670, 23673, 23692, 23697, 23700, 22939, 23723, 23739, 23734, 23740, 23735, 23749, 23742, 23751, 23769, 23785, 23805, 23802, 23789, 23948, 23786, 23819, 23829, 23831, 23900, 23839, 23835, 23825, 23828, 23842, 23834, 23833, 23832, 23884, 23890, 23886, 23883, 23916, 23923, 23926, 23943, 23940, 23938, 23970, 23965, 23980, 23982, 23997, 23952, 23991, 23996, 24009, 24013, 24019, 24018, 24022, 24027, 24043, 24050, 24053, 24075, 24090, 24089, 24081, 24091, 24118, 24119, 24132, 24131, 24128, 24142, 24151, 24148, 24159, 24162, 24164, 24135, 24181, 24182, 24186, 40636, 24191, 24224, 24257, 24258, 24264, 24272, 24271, 24278, 24291, 24285, 24282, 24283, 24290, 24289, 24296, 24297, 24300, 24305, 24307, 24304, 24308, 24312, 24318, 24323, 24329, 24413, 24412, 24331, 24337, 24342, 24361, 24365, 24376, 24385, 24392, 24396, 24398, 24367, 24401, 24406, 24407, 24409, 24417, 24429, 24435, 24439, 24451, 24450, 24447, 24458, 24456, 24465, 24455, 24478, 24473, 24472, 24480, 24488, 24493, 24508, 24534, 24571, 24548, 24568, 24561, 24541, 24755, 24575, 24609, 24672, 24601, 24592, 24617, 24590, 24625, 24603, 24597, 24619, 24614, 24591, 24634, 24666, 24641, 24682, 24695, 24671, 24650, 24646, 24653, 24675, 24643, 24676, 24642, 24684, 24683, 24665, 24705, 24717, 24807, 24707, 24730, 24708, 24731, 24726, 24727, 24722, 24743, 24715, 24801, 24760, 24800, 24787, 24756, 24560, 24765, 24774, 24757, 24792, 24909, 24853, 24838, 24822, 24823, 24832, 24820, 24826, 24835, 24865, 24827, 24817, 24845, 24846, 24903, 24894, 24872, 24871, 24906, 24895, 24892, 24876, 24884, 24893, 24898, 24900, 24947, 24951, 24920, 24921, 24922, 24939, 24948, 24943, 24933, 24945, 24927, 24925, 24915, 24949, 24985, 24982, 24967, 25004, 24980, 24986, 24970, 24977, 25003, 25006, 25036, 25034, 25033, 25079, 25032, 25027, 25030, 25018, 25035, 32633, 25037, 25062, 25059, 25078, 25082, 25076, 25087, 25085, 25084, 25086, 25088, 25096, 25097, 25101, 25100, 25108, 25115, 25118, 25121, 25130, 25134, 25136, 25138, 25139, 25153, 25166, 25182, 25187, 25179, 25184, 25192, 25212, 25218, 25225, 25214, 25234, 25235, 25238, 25300, 25219, 25236, 25303, 25297, 25275, 25295, 25343, 25286, 25812, 25288, 25308, 25292, 25290, 25282, 25287, 25243, 25289, 25356, 25326, 25329, 25383, 25346, 25352, 25327, 25333, 25424, 25406, 25421, 25628, 25423, 25494, 25486, 25472, 25515, 25462, 25507, 25487, 25481, 25503, 25525, 25451, 25449, 25534, 25577, 25536, 25542, 25571, 25545, 25554, 25590, 25540, 25622, 25652, 25606, 25619, 25638, 25654, 25885, 25623, 25640, 25615, 25703, 25711, 25718, 25678, 25898, 25749, 25747, 25765, 25769, 25736, 25788, 25818, 25810, 25797, 25799, 25787, 25816, 25794, 25841, 25831, 33289, 25824, 25825, 25260, 25827, 25839, 25900, 25846, 25844, 25842, 25850, 25856, 25853, 25880, 25884, 25861, 25892, 25891, 25899, 25908, 25909, 25911, 25910, 25912, 30027, 25928, 25942, 25941, 25933, 25944, 25950, 25949, 25970, 25976, 25986, 25987, 35722, 26011, 26015, 26027, 26039, 26051, 26054, 26049, 26052, 26060, 26066, 26075, 26073, 26080, 26081, 26097, 26482, 26122, 26115, 26107, 26483, 26165, 26166, 26164, 26140, 26191, 26180, 26185, 26177, 26206, 26205, 26212, 26215, 26216, 26207, 26210, 26224, 26243, 26248, 26254, 26249, 26244, 26264, 26269, 26305, 26297, 26313, 26302, 26300, 26308, 26296, 26326, 26330, 26336, 26175, 26342, 26345, 26352, 26357, 26359, 26383, 26390, 26398, 26406, 26407, 38712, 26414, 26431, 26422, 26433, 26424, 26423, 26438, 26462, 26464, 26457, 26467, 26468, 26505, 26480, 26537, 26492, 26474, 26508, 26507, 26534, 26529, 26501, 26551, 26607, 26548, 26604, 26547, 26601, 26552, 26596, 26590, 26589, 26594, 26606, 26553, 26574, 26566, 26599, 27292, 26654, 26694, 26665, 26688, 26701, 26674, 26702, 26803, 26667, 26713, 26723, 26743, 26751, 26783, 26767, 26797, 26772, 26781, 26779, 26755, 27310, 26809, 26740, 26805, 26784, 26810, 26895, 26765, 26750, 26881, 26826, 26888, 26840, 26914, 26918, 26849, 26892, 26829, 26836, 26855, 26837, 26934, 26898, 26884, 26839, 26851, 26917, 26873, 26848, 26863, 26920, 26922, 26906, 26915, 26913, 26822, 27001, 26999, 26972, 27e3, 26987, 26964, 27006, 26990, 26937, 26996, 26941, 26969, 26928, 26977, 26974, 26973, 27009, 26986, 27058, 27054, 27088, 27071, 27073, 27091, 27070, 27086, 23528, 27082, 27101, 27067, 27075, 27047, 27182, 27025, 27040, 27036, 27029, 27060, 27102, 27112, 27138, 27163, 27135, 27402, 27129, 27122, 27111, 27141, 27057, 27166, 27117, 27156, 27115, 27146, 27154, 27329, 27171, 27155, 27204, 27148, 27250, 27190, 27256, 27207, 27234, 27225, 27238, 27208, 27192, 27170, 27280, 27277, 27296, 27268, 27298, 27299, 27287, 34327, 27323, 27331, 27330, 27320, 27315, 27308, 27358, 27345, 27359, 27306, 27354, 27370, 27387, 27397, 34326, 27386, 27410, 27414, 39729, 27423, 27448, 27447, 30428, 27449, 39150, 27463, 27459, 27465, 27472, 27481, 27476, 27483, 27487, 27489, 27512, 27513, 27519, 27520, 27524, 27523, 27533, 27544, 27541, 27550, 27556, 27562, 27563, 27567, 27570, 27569, 27571, 27575, 27580, 27590, 27595, 27603, 27615, 27628, 27627, 27635, 27631, 40638, 27656, 27667, 27668, 27675, 27684, 27683, 27742, 27733, 27746, 27754, 27778, 27789, 27802, 27777, 27803, 27774, 27752, 27763, 27794, 27792, 27844, 27889, 27859, 27837, 27863, 27845, 27869, 27822, 27825, 27838, 27834, 27867, 27887, 27865, 27882, 27935, 34893, 27958, 27947, 27965, 27960, 27929, 27957, 27955, 27922, 27916, 28003, 28051, 28004, 27994, 28025, 27993, 28046, 28053, 28644, 28037, 28153, 28181, 28170, 28085, 28103, 28134, 28088, 28102, 28140, 28126, 28108, 28136, 28114, 28101, 28154, 28121, 28132, 28117, 28138, 28142, 28205, 28270, 28206, 28185, 28274, 28255, 28222, 28195, 28267, 28203, 28278, 28237, 28191, 28227, 28218, 28238, 28196, 28415, 28189, 28216, 28290, 28330, 28312, 28361, 28343, 28371, 28349, 28335, 28356, 28338, 28372, 28373, 28303, 28325, 28354, 28319, 28481, 28433, 28748, 28396, 28408, 28414, 28479, 28402, 28465, 28399, 28466, 28364, 28478, 28435, 28407, 28550, 28538, 28536, 28545, 28544, 28527, 28507, 28659, 28525, 28546, 28540, 28504, 28558, 28561, 28610, 28518, 28595, 28579, 28577, 28580, 28601, 28614, 28586, 28639, 28629, 28652, 28628, 28632, 28657, 28654, 28635, 28681, 28683, 28666, 28689, 28673, 28687, 28670, 28699, 28698, 28532, 28701, 28696, 28703, 28720, 28734, 28722, 28753, 28771, 28825, 28818, 28847, 28913, 28844, 28856, 28851, 28846, 28895, 28875, 28893, 28889, 28937, 28925, 28956, 28953, 29029, 29013, 29064, 29030, 29026, 29004, 29014, 29036, 29071, 29179, 29060, 29077, 29096, 29100, 29143, 29113, 29118, 29138, 29129, 29140, 29134, 29152, 29164, 29159, 29173, 29180, 29177, 29183, 29197, 29200, 29211, 29224, 29229, 29228, 29232, 29234, 29243, 29244, 29247, 29248, 29254, 29259, 29272, 29300, 29310, 29314, 29313, 29319, 29330, 29334, 29346, 29351, 29369, 29362, 29379, 29382, 29380, 29390, 29394, 29410, 29408, 29409, 29433, 29431, 20495, 29463, 29450, 29468, 29462, 29469, 29492, 29487, 29481, 29477, 29502, 29518, 29519, 40664, 29527, 29546, 29544, 29552, 29560, 29557, 29563, 29562, 29640, 29619, 29646, 29627, 29632, 29669, 29678, 29662, 29858, 29701, 29807, 29733, 29688, 29746, 29754, 29781, 29759, 29791, 29785, 29761, 29788, 29801, 29808, 29795, 29802, 29814, 29822, 29835, 29854, 29863, 29898, 29903, 29908, 29681, 29920, 29923, 29927, 29929, 29934, 29938, 29936, 29937, 29944, 29943, 29956, 29955, 29957, 29964, 29966, 29965, 29973, 29971, 29982, 29990, 29996, 30012, 30020, 30029, 30026, 30025, 30043, 30022, 30042, 30057, 30052, 30055, 30059, 30061, 30072, 30070, 30086, 30087, 30068, 30090, 30089, 30082, 30100, 30106, 30109, 30117, 30115, 30146, 30131, 30147, 30133, 30141, 30136, 30140, 30129, 30157, 30154, 30162, 30169, 30179, 30174, 30206, 30207, 30204, 30209, 30192, 30202, 30194, 30195, 30219, 30221, 30217, 30239, 30247, 30240, 30241, 30242, 30244, 30260, 30256, 30267, 30279, 30280, 30278, 30300, 30296, 30305, 30306, 30312, 30313, 30314, 30311, 30316, 30320, 30322, 30326, 30328, 30332, 30336, 30339, 30344, 30347, 30350, 30358, 30355, 30361, 30362, 30384, 30388, 30392, 30393, 30394, 30402, 30413, 30422, 30418, 30430, 30433, 30437, 30439, 30442, 34351, 30459, 30472, 30471, 30468, 30505, 30500, 30494, 30501, 30502, 30491, 30519, 30520, 30535, 30554, 30568, 30571, 30555, 30565, 30591, 30590, 30585, 30606, 30603, 30609, 30624, 30622, 30640, 30646, 30649, 30655, 30652, 30653, 30651, 30663, 30669, 30679, 30682, 30684, 30691, 30702, 30716, 30732, 30738, 31014, 30752, 31018, 30789, 30862, 30836, 30854, 30844, 30874, 30860, 30883, 30901, 30890, 30895, 30929, 30918, 30923, 30932, 30910, 30908, 30917, 30922, 30956, 30951, 30938, 30973, 30964, 30983, 30994, 30993, 31001, 31020, 31019, 31040, 31072, 31063, 31071, 31066, 31061, 31059, 31098, 31103, 31114, 31133, 31143, 40779, 31146, 31150, 31155, 31161, 31162, 31177, 31189, 31207, 31212, 31201, 31203, 31240, 31245, 31256, 31257, 31264, 31263, 31104, 31281, 31291, 31294, 31287, 31299, 31319, 31305, 31329, 31330, 31337, 40861, 31344, 31353, 31357, 31368, 31383, 31381, 31384, 31382, 31401, 31432, 31408, 31414, 31429, 31428, 31423, 36995, 31431, 31434, 31437, 31439, 31445, 31443, 31449, 31450, 31453, 31457, 31458, 31462, 31469, 31472, 31490, 31503, 31498, 31494, 31539, 31512, 31513, 31518, 31541, 31528, 31542, 31568, 31610, 31492, 31565, 31499, 31564, 31557, 31605, 31589, 31604, 31591, 31600, 31601, 31596, 31598, 31645, 31640, 31647, 31629, 31644, 31642, 31627, 31634, 31631, 31581, 31641, 31691, 31681, 31692, 31695, 31668, 31686, 31709, 31721, 31761, 31764, 31718, 31717, 31840, 31744, 31751, 31763, 31731, 31735, 31767, 31757, 31734, 31779, 31783, 31786, 31775, 31799, 31787, 31805, 31820, 31811, 31828, 31823, 31808, 31824, 31832, 31839, 31844, 31830, 31845, 31852, 31861, 31875, 31888, 31908, 31917, 31906, 31915, 31905, 31912, 31923, 31922, 31921, 31918, 31929, 31933, 31936, 31941, 31938, 31960, 31954, 31964, 31970, 39739, 31983, 31986, 31988, 31990, 31994, 32006, 32002, 32028, 32021, 32010, 32069, 32075, 32046, 32050, 32063, 32053, 32070, 32115, 32086, 32078, 32114, 32104, 32110, 32079, 32099, 32147, 32137, 32091, 32143, 32125, 32155, 32186, 32174, 32163, 32181, 32199, 32189, 32171, 32317, 32162, 32175, 32220, 32184, 32159, 32176, 32216, 32221, 32228, 32222, 32251, 32242, 32225, 32261, 32266, 32291, 32289, 32274, 32305, 32287, 32265, 32267, 32290, 32326, 32358, 32315, 32309, 32313, 32323, 32311, 32306, 32314, 32359, 32349, 32342, 32350, 32345, 32346, 32377, 32362, 32361, 32380, 32379, 32387, 32213, 32381, 36782, 32383, 32392, 32393, 32396, 32402, 32400, 32403, 32404, 32406, 32398, 32411, 32412, 32568, 32570, 32581, 32588, 32589, 32590, 32592, 32593, 32597, 32596, 32600, 32607, 32608, 32616, 32617, 32615, 32632, 32642, 32646, 32643, 32648, 32647, 32652, 32660, 32670, 32669, 32666, 32675, 32687, 32690, 32697, 32686, 32694, 32696, 35697, 32709, 32710, 32714, 32725, 32724, 32737, 32742, 32745, 32755, 32761, 39132, 32774, 32772, 32779, 32786, 32792, 32793, 32796, 32801, 32808, 32831, 32827, 32842, 32838, 32850, 32856, 32858, 32863, 32866, 32872, 32883, 32882, 32880, 32886, 32889, 32893, 32895, 32900, 32902, 32901, 32923, 32915, 32922, 32941, 20880, 32940, 32987, 32997, 32985, 32989, 32964, 32986, 32982, 33033, 33007, 33009, 33051, 33065, 33059, 33071, 33099, 38539, 33094, 33086, 33107, 33105, 33020, 33137, 33134, 33125, 33126, 33140, 33155, 33160, 33162, 33152, 33154, 33184, 33173, 33188, 33187, 33119, 33171, 33193, 33200, 33205, 33214, 33208, 33213, 33216, 33218, 33210, 33225, 33229, 33233, 33241, 33240, 33224, 33242, 33247, 33248, 33255, 33274, 33275, 33278, 33281, 33282, 33285, 33287, 33290, 33293, 33296, 33302, 33321, 33323, 33336, 33331, 33344, 33369, 33368, 33373, 33370, 33375, 33380, 33378, 33384, 33386, 33387, 33326, 33393, 33399, 33400, 33406, 33421, 33426, 33451, 33439, 33467, 33452, 33505, 33507, 33503, 33490, 33524, 33523, 33530, 33683, 33539, 33531, 33529, 33502, 33542, 33500, 33545, 33497, 33589, 33588, 33558, 33586, 33585, 33600, 33593, 33616, 33605, 33583, 33579, 33559, 33560, 33669, 33690, 33706, 33695, 33698, 33686, 33571, 33678, 33671, 33674, 33660, 33717, 33651, 33653, 33696, 33673, 33704, 33780, 33811, 33771, 33742, 33789, 33795, 33752, 33803, 33729, 33783, 33799, 33760, 33778, 33805, 33826, 33824, 33725, 33848, 34054, 33787, 33901, 33834, 33852, 34138, 33924, 33911, 33899, 33965, 33902, 33922, 33897, 33862, 33836, 33903, 33913, 33845, 33994, 33890, 33977, 33983, 33951, 34009, 33997, 33979, 34010, 34e3, 33985, 33990, 34006, 33953, 34081, 34047, 34036, 34071, 34072, 34092, 34079, 34069, 34068, 34044, 34112, 34147, 34136, 34120, 34113, 34306, 34123, 34133, 34176, 34212, 34184, 34193, 34186, 34216, 34157, 34196, 34203, 34282, 34183, 34204, 34167, 34174, 34192, 34249, 34234, 34255, 34233, 34256, 34261, 34269, 34277, 34268, 34297, 34314, 34323, 34315, 34302, 34298, 34310, 34338, 34330, 34352, 34367, 34381, 20053, 34388, 34399, 34407, 34417, 34451, 34467, 34473, 34474, 34443, 34444, 34486, 34479, 34500, 34502, 34480, 34505, 34851, 34475, 34516, 34526, 34537, 34540, 34527, 34523, 34543, 34578, 34566, 34568, 34560, 34563, 34555, 34577, 34569, 34573, 34553, 34570, 34612, 34623, 34615, 34619, 34597, 34601, 34586, 34656, 34655, 34680, 34636, 34638, 34676, 34647, 34664, 34670, 34649, 34643, 34659, 34666, 34821, 34722, 34719, 34690, 34735, 34763, 34749, 34752, 34768, 38614, 34731, 34756, 34739, 34759, 34758, 34747, 34799, 34802, 34784, 34831, 34829, 34814, 34806, 34807, 34830, 34770, 34833, 34838, 34837, 34850, 34849, 34865, 34870, 34873, 34855, 34875, 34884, 34882, 34898, 34905, 34910, 34914, 34923, 34945, 34942, 34974, 34933, 34941, 34997, 34930, 34946, 34967, 34962, 34990, 34969, 34978, 34957, 34980, 34992, 35007, 34993, 35011, 35012, 35028, 35032, 35033, 35037, 35065, 35074, 35068, 35060, 35048, 35058, 35076, 35084, 35082, 35091, 35139, 35102, 35109, 35114, 35115, 35137, 35140, 35131, 35126, 35128, 35148, 35101, 35168, 35166, 35174, 35172, 35181, 35178, 35183, 35188, 35191, 35198, 35203, 35208, 35210, 35219, 35224, 35233, 35241, 35238, 35244, 35247, 35250, 35258, 35261, 35263, 35264, 35290, 35292, 35293, 35303, 35316, 35320, 35331, 35350, 35344, 35340, 35355, 35357, 35365, 35382, 35393, 35419, 35410, 35398, 35400, 35452, 35437, 35436, 35426, 35461, 35458, 35460, 35496, 35489, 35473, 35493, 35494, 35482, 35491, 35524, 35533, 35522, 35546, 35563, 35571, 35559, 35556, 35569, 35604, 35552, 35554, 35575, 35550, 35547, 35596, 35591, 35610, 35553, 35606, 35600, 35607, 35616, 35635, 38827, 35622, 35627, 35646, 35624, 35649, 35660, 35663, 35662, 35657, 35670, 35675, 35674, 35691, 35679, 35692, 35695, 35700, 35709, 35712, 35724, 35726, 35730, 35731, 35734, 35737, 35738, 35898, 35905, 35903, 35912, 35916, 35918, 35920, 35925, 35938, 35948, 35960, 35962, 35970, 35977, 35973, 35978, 35981, 35982, 35988, 35964, 35992, 25117, 36013, 36010, 36029, 36018, 36019, 36014, 36022, 36040, 36033, 36068, 36067, 36058, 36093, 36090, 36091, 36100, 36101, 36106, 36103, 36111, 36109, 36112, 40782, 36115, 36045, 36116, 36118, 36199, 36205, 36209, 36211, 36225, 36249, 36290, 36286, 36282, 36303, 36314, 36310, 36300, 36315, 36299, 36330, 36331, 36319, 36323, 36348, 36360, 36361, 36351, 36381, 36382, 36368, 36383, 36418, 36405, 36400, 36404, 36426, 36423, 36425, 36428, 36432, 36424, 36441, 36452, 36448, 36394, 36451, 36437, 36470, 36466, 36476, 36481, 36487, 36485, 36484, 36491, 36490, 36499, 36497, 36500, 36505, 36522, 36513, 36524, 36528, 36550, 36529, 36542, 36549, 36552, 36555, 36571, 36579, 36604, 36603, 36587, 36606, 36618, 36613, 36629, 36626, 36633, 36627, 36636, 36639, 36635, 36620, 36646, 36659, 36667, 36665, 36677, 36674, 36670, 36684, 36681, 36678, 36686, 36695, 36700, 36706, 36707, 36708, 36764, 36767, 36771, 36781, 36783, 36791, 36826, 36837, 36834, 36842, 36847, 36999, 36852, 36869, 36857, 36858, 36881, 36885, 36897, 36877, 36894, 36886, 36875, 36903, 36918, 36917, 36921, 36856, 36943, 36944, 36945, 36946, 36878, 36937, 36926, 36950, 36952, 36958, 36968, 36975, 36982, 38568, 36978, 36994, 36989, 36993, 36992, 37002, 37001, 37007, 37032, 37039, 37041, 37045, 37090, 37092, 25160, 37083, 37122, 37138, 37145, 37170, 37168, 37194, 37206, 37208, 37219, 37221, 37225, 37235, 37234, 37259, 37257, 37250, 37282, 37291, 37295, 37290, 37301, 37300, 37306, 37312, 37313, 37321, 37323, 37328, 37334, 37343, 37345, 37339, 37372, 37365, 37366, 37406, 37375, 37396, 37420, 37397, 37393, 37470, 37463, 37445, 37449, 37476, 37448, 37525, 37439, 37451, 37456, 37532, 37526, 37523, 37531, 37466, 37583, 37561, 37559, 37609, 37647, 37626, 37700, 37678, 37657, 37666, 37658, 37667, 37690, 37685, 37691, 37724, 37728, 37756, 37742, 37718, 37808, 37804, 37805, 37780, 37817, 37846, 37847, 37864, 37861, 37848, 37827, 37853, 37840, 37832, 37860, 37914, 37908, 37907, 37891, 37895, 37904, 37942, 37931, 37941, 37921, 37946, 37953, 37970, 37956, 37979, 37984, 37986, 37982, 37994, 37417, 38e3, 38005, 38007, 38013, 37978, 38012, 38014, 38017, 38015, 38274, 38279, 38282, 38292, 38294, 38296, 38297, 38304, 38312, 38311, 38317, 38332, 38331, 38329, 38334, 38346, 28662, 38339, 38349, 38348, 38357, 38356, 38358, 38364, 38369, 38373, 38370, 38433, 38440, 38446, 38447, 38466, 38476, 38479, 38475, 38519, 38492, 38494, 38493, 38495, 38502, 38514, 38508, 38541, 38552, 38549, 38551, 38570, 38567, 38577, 38578, 38576, 38580, 38582, 38584, 38585, 38606, 38603, 38601, 38605, 35149, 38620, 38669, 38613, 38649, 38660, 38662, 38664, 38675, 38670, 38673, 38671, 38678, 38681, 38692, 38698, 38704, 38713, 38717, 38718, 38724, 38726, 38728, 38722, 38729, 38748, 38752, 38756, 38758, 38760, 21202, 38763, 38769, 38777, 38789, 38780, 38785, 38778, 38790, 38795, 38799, 38800, 38812, 38824, 38822, 38819, 38835, 38836, 38851, 38854, 38856, 38859, 38876, 38893, 40783, 38898, 31455, 38902, 38901, 38927, 38924, 38968, 38948, 38945, 38967, 38973, 38982, 38991, 38987, 39019, 39023, 39024, 39025, 39028, 39027, 39082, 39087, 39089, 39094, 39108, 39107, 39110, 39145, 39147, 39171, 39177, 39186, 39188, 39192, 39201, 39197, 39198, 39204, 39200, 39212, 39214, 39229, 39230, 39234, 39241, 39237, 39248, 39243, 39249, 39250, 39244, 39253, 39319, 39320, 39333, 39341, 39342, 39356, 39391, 39387, 39389, 39384, 39377, 39405, 39406, 39409, 39410, 39419, 39416, 39425, 39439, 39429, 39394, 39449, 39467, 39479, 39493, 39490, 39488, 39491, 39486, 39509, 39501, 39515, 39511, 39519, 39522, 39525, 39524, 39529, 39531, 39530, 39597, 39600, 39612, 39616, 39631, 39633, 39635, 39636, 39646, 39647, 39650, 39651, 39654, 39663, 39659, 39662, 39668, 39665, 39671, 39675, 39686, 39704, 39706, 39711, 39714, 39715, 39717, 39719, 39720, 39721, 39722, 39726, 39727, 39730, 39748, 39747, 39759, 39757, 39758, 39761, 39768, 39796, 39827, 39811, 39825, 39830, 39831, 39839, 39840, 39848, 39860, 39872, 39882, 39865, 39878, 39887, 39889, 39890, 39907, 39906, 39908, 39892, 39905, 39994, 39922, 39921, 39920, 39957, 39956, 39945, 39955, 39948, 39942, 39944, 39954, 39946, 39940, 39982, 39963, 39973, 39972, 39969, 39984, 40007, 39986, 40006, 39998, 40026, 40032, 40039, 40054, 40056, 40167, 40172, 40176, 40201, 40200, 40171, 40195, 40198, 40234, 40230, 40367, 40227, 40223, 40260, 40213, 40210, 40257, 40255, 40254, 40262, 40264, 40285, 40286, 40292, 40273, 40272, 40281, 40306, 40329, 40327, 40363, 40303, 40314, 40346, 40356, 40361, 40370, 40388, 40385, 40379, 40376, 40378, 40390, 40399, 40386, 40409, 40403, 40440, 40422, 40429, 40431, 40445, 40474, 40475, 40478, 40565, 40569, 40573, 40577, 40584, 40587, 40588, 40594, 40597, 40593, 40605, 40613, 40617, 40632, 40618, 40621, 38753, 40652, 40654, 40655, 40656, 40660, 40668, 40670, 40669, 40672, 40677, 40680, 40687, 40692, 40694, 40695, 40697, 40699, 40700, 40701, 40711, 40712, 30391, 40725, 40737, 40748, 40766, 40778, 40786, 40788, 40803, 40799, 40800, 40801, 40806, 40807, 40812, 40810, 40823, 40818, 40822, 40853, 40860, 40864, 22575, 27079, 36953, 29796, 20956, 29081, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 32394, 35100, 37704, 37512, 34012, 20425, 28859, 26161, 26824, 37625, 26363, 24389, 20008, 20193, 20220, 20224, 20227, 20281, 20310, 20370, 20362, 20378, 20372, 20429, 20544, 20514, 20479, 20510, 20550, 20592, 20546, 20628, 20724, 20696, 20810, 20836, 20893, 20926, 20972, 21013, 21148, 21158, 21184, 21211, 21248, 21255, 21284, 21362, 21395, 21426, 21469, 64014, 21660, 21642, 21673, 21759, 21894, 22361, 22373, 22444, 22472, 22471, 64015, 64016, 22686, 22706, 22795, 22867, 22875, 22877, 22883, 22948, 22970, 23382, 23488, 29999, 23512, 23532, 23582, 23718, 23738, 23797, 23847, 23891, 64017, 23874, 23917, 23992, 23993, 24016, 24353, 24372, 24423, 24503, 24542, 24669, 24709, 24714, 24798, 24789, 24864, 24818, 24849, 24887, 24880, 24984, 25107, 25254, 25589, 25696, 25757, 25806, 25934, 26112, 26133, 26171, 26121, 26158, 26142, 26148, 26213, 26199, 26201, 64018, 26227, 26265, 26272, 26290, 26303, 26362, 26382, 63785, 26470, 26555, 26706, 26560, 26625, 26692, 26831, 64019, 26984, 64020, 27032, 27106, 27184, 27243, 27206, 27251, 27262, 27362, 27364, 27606, 27711, 27740, 27782, 27759, 27866, 27908, 28039, 28015, 28054, 28076, 28111, 28152, 28146, 28156, 28217, 28252, 28199, 28220, 28351, 28552, 28597, 28661, 28677, 28679, 28712, 28805, 28843, 28943, 28932, 29020, 28998, 28999, 64021, 29121, 29182, 29361, 29374, 29476, 64022, 29559, 29629, 29641, 29654, 29667, 29650, 29703, 29685, 29734, 29738, 29737, 29742, 29794, 29833, 29855, 29953, 30063, 30338, 30364, 30366, 30363, 30374, 64023, 30534, 21167, 30753, 30798, 30820, 30842, 31024, 64024, 64025, 64026, 31124, 64027, 31131, 31441, 31463, 64028, 31467, 31646, 64029, 32072, 32092, 32183, 32160, 32214, 32338, 32583, 32673, 64030, 33537, 33634, 33663, 33735, 33782, 33864, 33972, 34131, 34137, 34155, 64031, 34224, 64032, 64033, 34823, 35061, 35346, 35383, 35449, 35495, 35518, 35551, 64034, 35574, 35667, 35711, 36080, 36084, 36114, 36214, 64035, 36559, 64036, 64037, 36967, 37086, 64038, 37141, 37159, 37338, 37335, 37342, 37357, 37358, 37348, 37349, 37382, 37392, 37386, 37434, 37440, 37436, 37454, 37465, 37457, 37433, 37479, 37543, 37495, 37496, 37607, 37591, 37593, 37584, 64039, 37589, 37600, 37587, 37669, 37665, 37627, 64040, 37662, 37631, 37661, 37634, 37744, 37719, 37796, 37830, 37854, 37880, 37937, 37957, 37960, 38290, 63964, 64041, 38557, 38575, 38707, 38715, 38723, 38733, 38735, 38737, 38741, 38999, 39013, 64042, 64043, 39207, 64044, 39326, 39502, 39641, 39644, 39797, 39794, 39823, 39857, 39867, 39936, 40304, 40299, 64045, 40473, 40657, null, null, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 65506, 65508, 65287, 65282, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 65506, 65508, 65287, 65282, 12849, 8470, 8481, 8757, 32394, 35100, 37704, 37512, 34012, 20425, 28859, 26161, 26824, 37625, 26363, 24389, 20008, 20193, 20220, 20224, 20227, 20281, 20310, 20370, 20362, 20378, 20372, 20429, 20544, 20514, 20479, 20510, 20550, 20592, 20546, 20628, 20724, 20696, 20810, 20836, 20893, 20926, 20972, 21013, 21148, 21158, 21184, 21211, 21248, 21255, 21284, 21362, 21395, 21426, 21469, 64014, 21660, 21642, 21673, 21759, 21894, 22361, 22373, 22444, 22472, 22471, 64015, 64016, 22686, 22706, 22795, 22867, 22875, 22877, 22883, 22948, 22970, 23382, 23488, 29999, 23512, 23532, 23582, 23718, 23738, 23797, 23847, 23891, 64017, 23874, 23917, 23992, 23993, 24016, 24353, 24372, 24423, 24503, 24542, 24669, 24709, 24714, 24798, 24789, 24864, 24818, 24849, 24887, 24880, 24984, 25107, 25254, 25589, 25696, 25757, 25806, 25934, 26112, 26133, 26171, 26121, 26158, 26142, 26148, 26213, 26199, 26201, 64018, 26227, 26265, 26272, 26290, 26303, 26362, 26382, 63785, 26470, 26555, 26706, 26560, 26625, 26692, 26831, 64019, 26984, 64020, 27032, 27106, 27184, 27243, 27206, 27251, 27262, 27362, 27364, 27606, 27711, 27740, 27782, 27759, 27866, 27908, 28039, 28015, 28054, 28076, 28111, 28152, 28146, 28156, 28217, 28252, 28199, 28220, 28351, 28552, 28597, 28661, 28677, 28679, 28712, 28805, 28843, 28943, 28932, 29020, 28998, 28999, 64021, 29121, 29182, 29361, 29374, 29476, 64022, 29559, 29629, 29641, 29654, 29667, 29650, 29703, 29685, 29734, 29738, 29737, 29742, 29794, 29833, 29855, 29953, 30063, 30338, 30364, 30366, 30363, 30374, 64023, 30534, 21167, 30753, 30798, 30820, 30842, 31024, 64024, 64025, 64026, 31124, 64027, 31131, 31441, 31463, 64028, 31467, 31646, 64029, 32072, 32092, 32183, 32160, 32214, 32338, 32583, 32673, 64030, 33537, 33634, 33663, 33735, 33782, 33864, 33972, 34131, 34137, 34155, 64031, 34224, 64032, 64033, 34823, 35061, 35346, 35383, 35449, 35495, 35518, 35551, 64034, 35574, 35667, 35711, 36080, 36084, 36114, 36214, 64035, 36559, 64036, 64037, 36967, 37086, 64038, 37141, 37159, 37338, 37335, 37342, 37357, 37358, 37348, 37349, 37382, 37392, 37386, 37434, 37440, 37436, 37454, 37465, 37457, 37433, 37479, 37543, 37495, 37496, 37607, 37591, 37593, 37584, 64039, 37589, 37600, 37587, 37669, 37665, 37627, 64040, 37662, 37631, 37661, 37634, 37744, 37719, 37796, 37830, 37854, 37880, 37937, 37957, 37960, 38290, 63964, 64041, 38557, 38575, 38707, 38715, 38723, 38733, 38735, 38737, 38741, 38999, 39013, 64042, 64043, 39207, 64044, 39326, 39502, 39641, 39644, 39797, 39794, 39823, 39857, 39867, 39936, 40304, 40299, 64045, 40473, 40657, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],
                    jis0212: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 728, 711, 184, 729, 733, 175, 731, 730, 65374, 900, 901, null, null, null, null, null, null, null, null, 161, 166, 191, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 186, 170, 169, 174, 8482, 164, 8470, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 902, 904, 905, 906, 938, null, 908, null, 910, 939, null, 911, null, null, null, null, 940, 941, 942, 943, 970, 912, 972, 962, 973, 971, 944, 974, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1039, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 198, 272, null, 294, null, 306, null, 321, 319, null, 330, 216, 338, null, 358, 222, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 230, 273, 240, 295, 305, 307, 312, 322, 320, 329, 331, 248, 339, 223, 359, 254, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 193, 192, 196, 194, 258, 461, 256, 260, 197, 195, 262, 264, 268, 199, 266, 270, 201, 200, 203, 202, 282, 278, 274, 280, null, 284, 286, 290, 288, 292, 205, 204, 207, 206, 463, 304, 298, 302, 296, 308, 310, 313, 317, 315, 323, 327, 325, 209, 211, 210, 214, 212, 465, 336, 332, 213, 340, 344, 342, 346, 348, 352, 350, 356, 354, 218, 217, 220, 219, 364, 467, 368, 362, 370, 366, 360, 471, 475, 473, 469, 372, 221, 376, 374, 377, 381, 379, null, null, null, null, null, null, null, 225, 224, 228, 226, 259, 462, 257, 261, 229, 227, 263, 265, 269, 231, 267, 271, 233, 232, 235, 234, 283, 279, 275, 281, 501, 285, 287, null, 289, 293, 237, 236, 239, 238, 464, null, 299, 303, 297, 309, 311, 314, 318, 316, 324, 328, 326, 241, 243, 242, 246, 244, 466, 337, 333, 245, 341, 345, 343, 347, 349, 353, 351, 357, 355, 250, 249, 252, 251, 365, 468, 369, 363, 371, 367, 361, 472, 476, 474, 470, 373, 253, 255, 375, 378, 382, 380, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 19970, 19972, 19973, 19980, 19986, 19999, 20003, 20004, 20008, 20011, 20014, 20015, 20016, 20021, 20032, 20033, 20036, 20039, 20049, 20058, 20060, 20067, 20072, 20073, 20084, 20085, 20089, 20095, 20109, 20118, 20119, 20125, 20143, 20153, 20163, 20176, 20186, 20187, 20192, 20193, 20194, 20200, 20207, 20209, 20211, 20213, 20221, 20222, 20223, 20224, 20226, 20227, 20232, 20235, 20236, 20242, 20245, 20246, 20247, 20249, 20270, 20273, 20320, 20275, 20277, 20279, 20281, 20283, 20286, 20288, 20290, 20296, 20297, 20299, 20300, 20306, 20308, 20310, 20312, 20319, 20323, 20330, 20332, 20334, 20337, 20343, 20344, 20345, 20346, 20349, 20350, 20353, 20354, 20356, 20357, 20361, 20362, 20364, 20366, 20368, 20370, 20371, 20372, 20375, 20377, 20378, 20382, 20383, 20402, 20407, 20409, 20411, 20412, 20413, 20414, 20416, 20417, 20421, 20422, 20424, 20425, 20427, 20428, 20429, 20431, 20434, 20444, 20448, 20450, 20464, 20466, 20476, 20477, 20479, 20480, 20481, 20484, 20487, 20490, 20492, 20494, 20496, 20499, 20503, 20504, 20507, 20508, 20509, 20510, 20514, 20519, 20526, 20528, 20530, 20531, 20533, 20544, 20545, 20546, 20549, 20550, 20554, 20556, 20558, 20561, 20562, 20563, 20567, 20569, 20575, 20576, 20578, 20579, 20582, 20583, 20586, 20589, 20592, 20593, 20539, 20609, 20611, 20612, 20614, 20618, 20622, 20623, 20624, 20626, 20627, 20628, 20630, 20635, 20636, 20638, 20639, 20640, 20641, 20642, 20650, 20655, 20656, 20665, 20666, 20669, 20672, 20675, 20676, 20679, 20684, 20686, 20688, 20691, 20692, 20696, 20700, 20701, 20703, 20706, 20708, 20710, 20712, 20713, 20719, 20721, 20726, 20730, 20734, 20739, 20742, 20743, 20744, 20747, 20748, 20749, 20750, 20722, 20752, 20759, 20761, 20763, 20764, 20765, 20766, 20771, 20775, 20776, 20780, 20781, 20783, 20785, 20787, 20788, 20789, 20792, 20793, 20802, 20810, 20815, 20819, 20821, 20823, 20824, 20831, 20836, 20838, 20862, 20867, 20868, 20875, 20878, 20888, 20893, 20897, 20899, 20909, 20920, 20922, 20924, 20926, 20927, 20930, 20936, 20943, 20945, 20946, 20947, 20949, 20952, 20958, 20962, 20965, 20974, 20978, 20979, 20980, 20983, 20993, 20994, 20997, 21010, 21011, 21013, 21014, 21016, 21026, 21032, 21041, 21042, 21045, 21052, 21061, 21065, 21077, 21079, 21080, 21082, 21084, 21087, 21088, 21089, 21094, 21102, 21111, 21112, 21113, 21120, 21122, 21125, 21130, 21132, 21139, 21141, 21142, 21143, 21144, 21146, 21148, 21156, 21157, 21158, 21159, 21167, 21168, 21174, 21175, 21176, 21178, 21179, 21181, 21184, 21188, 21190, 21192, 21196, 21199, 21201, 21204, 21206, 21211, 21212, 21217, 21221, 21224, 21225, 21226, 21228, 21232, 21233, 21236, 21238, 21239, 21248, 21251, 21258, 21259, 21260, 21265, 21267, 21272, 21275, 21276, 21278, 21279, 21285, 21287, 21288, 21289, 21291, 21292, 21293, 21296, 21298, 21301, 21308, 21309, 21310, 21314, 21324, 21323, 21337, 21339, 21345, 21347, 21349, 21356, 21357, 21362, 21369, 21374, 21379, 21383, 21384, 21390, 21395, 21396, 21401, 21405, 21409, 21412, 21418, 21419, 21423, 21426, 21428, 21429, 21431, 21432, 21434, 21437, 21440, 21445, 21455, 21458, 21459, 21461, 21466, 21469, 21470, 21472, 21478, 21479, 21493, 21506, 21523, 21530, 21537, 21543, 21544, 21546, 21551, 21553, 21556, 21557, 21571, 21572, 21575, 21581, 21583, 21598, 21602, 21604, 21606, 21607, 21609, 21611, 21613, 21614, 21620, 21631, 21633, 21635, 21637, 21640, 21641, 21645, 21649, 21653, 21654, 21660, 21663, 21665, 21670, 21671, 21673, 21674, 21677, 21678, 21681, 21687, 21689, 21690, 21691, 21695, 21702, 21706, 21709, 21710, 21728, 21738, 21740, 21743, 21750, 21756, 21758, 21759, 21760, 21761, 21765, 21768, 21769, 21772, 21773, 21774, 21781, 21802, 21803, 21810, 21813, 21814, 21819, 21820, 21821, 21825, 21831, 21833, 21834, 21837, 21840, 21841, 21848, 21850, 21851, 21854, 21856, 21857, 21860, 21862, 21887, 21889, 21890, 21894, 21896, 21902, 21903, 21905, 21906, 21907, 21908, 21911, 21923, 21924, 21933, 21938, 21951, 21953, 21955, 21958, 21961, 21963, 21964, 21966, 21969, 21970, 21971, 21975, 21976, 21979, 21982, 21986, 21993, 22006, 22015, 22021, 22024, 22026, 22029, 22030, 22031, 22032, 22033, 22034, 22041, 22060, 22064, 22067, 22069, 22071, 22073, 22075, 22076, 22077, 22079, 22080, 22081, 22083, 22084, 22086, 22089, 22091, 22093, 22095, 22100, 22110, 22112, 22113, 22114, 22115, 22118, 22121, 22125, 22127, 22129, 22130, 22133, 22148, 22149, 22152, 22155, 22156, 22165, 22169, 22170, 22173, 22174, 22175, 22182, 22183, 22184, 22185, 22187, 22188, 22189, 22193, 22195, 22199, 22206, 22213, 22217, 22218, 22219, 22223, 22224, 22220, 22221, 22233, 22236, 22237, 22239, 22241, 22244, 22245, 22246, 22247, 22248, 22257, 22251, 22253, 22262, 22263, 22273, 22274, 22279, 22282, 22284, 22289, 22293, 22298, 22299, 22301, 22304, 22306, 22307, 22308, 22309, 22313, 22314, 22316, 22318, 22319, 22323, 22324, 22333, 22334, 22335, 22341, 22342, 22348, 22349, 22354, 22370, 22373, 22375, 22376, 22379, 22381, 22382, 22383, 22384, 22385, 22387, 22388, 22389, 22391, 22393, 22394, 22395, 22396, 22398, 22401, 22403, 22412, 22420, 22423, 22425, 22426, 22428, 22429, 22430, 22431, 22433, 22421, 22439, 22440, 22441, 22444, 22456, 22461, 22471, 22472, 22476, 22479, 22485, 22493, 22494, 22500, 22502, 22503, 22505, 22509, 22512, 22517, 22518, 22520, 22525, 22526, 22527, 22531, 22532, 22536, 22537, 22497, 22540, 22541, 22555, 22558, 22559, 22560, 22566, 22567, 22573, 22578, 22585, 22591, 22601, 22604, 22605, 22607, 22608, 22613, 22623, 22625, 22628, 22631, 22632, 22648, 22652, 22655, 22656, 22657, 22663, 22664, 22665, 22666, 22668, 22669, 22671, 22672, 22676, 22678, 22685, 22688, 22689, 22690, 22694, 22697, 22705, 22706, 22724, 22716, 22722, 22728, 22733, 22734, 22736, 22738, 22740, 22742, 22746, 22749, 22753, 22754, 22761, 22771, 22789, 22790, 22795, 22796, 22802, 22803, 22804, 34369, 22813, 22817, 22819, 22820, 22824, 22831, 22832, 22835, 22837, 22838, 22847, 22851, 22854, 22866, 22867, 22873, 22875, 22877, 22878, 22879, 22881, 22883, 22891, 22893, 22895, 22898, 22901, 22902, 22905, 22907, 22908, 22923, 22924, 22926, 22930, 22933, 22935, 22943, 22948, 22951, 22957, 22958, 22959, 22960, 22963, 22967, 22970, 22972, 22977, 22979, 22980, 22984, 22986, 22989, 22994, 23005, 23006, 23007, 23011, 23012, 23015, 23022, 23023, 23025, 23026, 23028, 23031, 23040, 23044, 23052, 23053, 23054, 23058, 23059, 23070, 23075, 23076, 23079, 23080, 23082, 23085, 23088, 23108, 23109, 23111, 23112, 23116, 23120, 23125, 23134, 23139, 23141, 23143, 23149, 23159, 23162, 23163, 23166, 23179, 23184, 23187, 23190, 23193, 23196, 23198, 23199, 23200, 23202, 23207, 23212, 23217, 23218, 23219, 23221, 23224, 23226, 23227, 23231, 23236, 23238, 23240, 23247, 23258, 23260, 23264, 23269, 23274, 23278, 23285, 23286, 23293, 23296, 23297, 23304, 23319, 23348, 23321, 23323, 23325, 23329, 23333, 23341, 23352, 23361, 23371, 23372, 23378, 23382, 23390, 23400, 23406, 23407, 23420, 23421, 23422, 23423, 23425, 23428, 23430, 23434, 23438, 23440, 23441, 23443, 23444, 23446, 23464, 23465, 23468, 23469, 23471, 23473, 23474, 23479, 23482, 23484, 23488, 23489, 23501, 23503, 23510, 23511, 23512, 23513, 23514, 23520, 23535, 23537, 23540, 23549, 23564, 23575, 23582, 23583, 23587, 23590, 23593, 23595, 23596, 23598, 23600, 23602, 23605, 23606, 23641, 23642, 23644, 23650, 23651, 23655, 23656, 23657, 23661, 23664, 23668, 23669, 23674, 23675, 23676, 23677, 23687, 23688, 23690, 23695, 23698, 23709, 23711, 23712, 23714, 23715, 23718, 23722, 23730, 23732, 23733, 23738, 23753, 23755, 23762, 23773, 23767, 23790, 23793, 23794, 23796, 23809, 23814, 23821, 23826, 23851, 23843, 23844, 23846, 23847, 23857, 23860, 23865, 23869, 23871, 23874, 23875, 23878, 23880, 23893, 23889, 23897, 23882, 23903, 23904, 23905, 23906, 23908, 23914, 23917, 23920, 23929, 23930, 23934, 23935, 23937, 23939, 23944, 23946, 23954, 23955, 23956, 23957, 23961, 23963, 23967, 23968, 23975, 23979, 23984, 23988, 23992, 23993, 24003, 24007, 24011, 24016, 24014, 24024, 24025, 24032, 24036, 24041, 24056, 24057, 24064, 24071, 24077, 24082, 24084, 24085, 24088, 24095, 24096, 24110, 24104, 24114, 24117, 24126, 24139, 24144, 24137, 24145, 24150, 24152, 24155, 24156, 24158, 24168, 24170, 24171, 24172, 24173, 24174, 24176, 24192, 24203, 24206, 24226, 24228, 24229, 24232, 24234, 24236, 24241, 24243, 24253, 24254, 24255, 24262, 24268, 24267, 24270, 24273, 24274, 24276, 24277, 24284, 24286, 24293, 24299, 24322, 24326, 24327, 24328, 24334, 24345, 24348, 24349, 24353, 24354, 24355, 24356, 24360, 24363, 24364, 24366, 24368, 24372, 24374, 24379, 24381, 24383, 24384, 24388, 24389, 24391, 24397, 24400, 24404, 24408, 24411, 24416, 24419, 24420, 24423, 24431, 24434, 24436, 24437, 24440, 24442, 24445, 24446, 24457, 24461, 24463, 24470, 24476, 24477, 24482, 24487, 24491, 24484, 24492, 24495, 24496, 24497, 24504, 24516, 24519, 24520, 24521, 24523, 24528, 24529, 24530, 24531, 24532, 24542, 24545, 24546, 24552, 24553, 24554, 24556, 24557, 24558, 24559, 24562, 24563, 24566, 24570, 24572, 24583, 24586, 24589, 24595, 24596, 24599, 24600, 24602, 24607, 24612, 24621, 24627, 24629, 24640, 24647, 24648, 24649, 24652, 24657, 24660, 24662, 24663, 24669, 24673, 24679, 24689, 24702, 24703, 24706, 24710, 24712, 24714, 24718, 24721, 24723, 24725, 24728, 24733, 24734, 24738, 24740, 24741, 24744, 24752, 24753, 24759, 24763, 24766, 24770, 24772, 24776, 24777, 24778, 24779, 24782, 24783, 24788, 24789, 24793, 24795, 24797, 24798, 24802, 24805, 24818, 24821, 24824, 24828, 24829, 24834, 24839, 24842, 24844, 24848, 24849, 24850, 24851, 24852, 24854, 24855, 24857, 24860, 24862, 24866, 24874, 24875, 24880, 24881, 24885, 24886, 24887, 24889, 24897, 24901, 24902, 24905, 24926, 24928, 24940, 24946, 24952, 24955, 24956, 24959, 24960, 24961, 24963, 24964, 24971, 24973, 24978, 24979, 24983, 24984, 24988, 24989, 24991, 24992, 24997, 25e3, 25002, 25005, 25016, 25017, 25020, 25024, 25025, 25026, 25038, 25039, 25045, 25052, 25053, 25054, 25055, 25057, 25058, 25063, 25065, 25061, 25068, 25069, 25071, 25089, 25091, 25092, 25095, 25107, 25109, 25116, 25120, 25122, 25123, 25127, 25129, 25131, 25145, 25149, 25154, 25155, 25156, 25158, 25164, 25168, 25169, 25170, 25172, 25174, 25178, 25180, 25188, 25197, 25199, 25203, 25210, 25213, 25229, 25230, 25231, 25232, 25254, 25256, 25267, 25270, 25271, 25274, 25278, 25279, 25284, 25294, 25301, 25302, 25306, 25322, 25330, 25332, 25340, 25341, 25347, 25348, 25354, 25355, 25357, 25360, 25363, 25366, 25368, 25385, 25386, 25389, 25397, 25398, 25401, 25404, 25409, 25410, 25411, 25412, 25414, 25418, 25419, 25422, 25426, 25427, 25428, 25432, 25435, 25445, 25446, 25452, 25453, 25457, 25460, 25461, 25464, 25468, 25469, 25471, 25474, 25476, 25479, 25482, 25488, 25492, 25493, 25497, 25498, 25502, 25508, 25510, 25517, 25518, 25519, 25533, 25537, 25541, 25544, 25550, 25553, 25555, 25556, 25557, 25564, 25568, 25573, 25578, 25580, 25586, 25587, 25589, 25592, 25593, 25609, 25610, 25616, 25618, 25620, 25624, 25630, 25632, 25634, 25636, 25637, 25641, 25642, 25647, 25648, 25653, 25661, 25663, 25675, 25679, 25681, 25682, 25683, 25684, 25690, 25691, 25692, 25693, 25695, 25696, 25697, 25699, 25709, 25715, 25716, 25723, 25725, 25733, 25735, 25743, 25744, 25745, 25752, 25753, 25755, 25757, 25759, 25761, 25763, 25766, 25768, 25772, 25779, 25789, 25790, 25791, 25796, 25801, 25802, 25803, 25804, 25806, 25808, 25809, 25813, 25815, 25828, 25829, 25833, 25834, 25837, 25840, 25845, 25847, 25851, 25855, 25857, 25860, 25864, 25865, 25866, 25871, 25875, 25876, 25878, 25881, 25883, 25886, 25887, 25890, 25894, 25897, 25902, 25905, 25914, 25916, 25917, 25923, 25927, 25929, 25936, 25938, 25940, 25951, 25952, 25959, 25963, 25978, 25981, 25985, 25989, 25994, 26002, 26005, 26008, 26013, 26016, 26019, 26022, 26030, 26034, 26035, 26036, 26047, 26050, 26056, 26057, 26062, 26064, 26068, 26070, 26072, 26079, 26096, 26098, 26100, 26101, 26105, 26110, 26111, 26112, 26116, 26120, 26121, 26125, 26129, 26130, 26133, 26134, 26141, 26142, 26145, 26146, 26147, 26148, 26150, 26153, 26154, 26155, 26156, 26158, 26160, 26161, 26163, 26169, 26167, 26176, 26181, 26182, 26186, 26188, 26193, 26190, 26199, 26200, 26201, 26203, 26204, 26208, 26209, 26363, 26218, 26219, 26220, 26238, 26227, 26229, 26239, 26231, 26232, 26233, 26235, 26240, 26236, 26251, 26252, 26253, 26256, 26258, 26265, 26266, 26267, 26268, 26271, 26272, 26276, 26285, 26289, 26290, 26293, 26299, 26303, 26304, 26306, 26307, 26312, 26316, 26318, 26319, 26324, 26331, 26335, 26344, 26347, 26348, 26350, 26362, 26373, 26375, 26382, 26387, 26393, 26396, 26400, 26402, 26419, 26430, 26437, 26439, 26440, 26444, 26452, 26453, 26461, 26470, 26476, 26478, 26484, 26486, 26491, 26497, 26500, 26510, 26511, 26513, 26515, 26518, 26520, 26521, 26523, 26544, 26545, 26546, 26549, 26555, 26556, 26557, 26617, 26560, 26562, 26563, 26565, 26568, 26569, 26578, 26583, 26585, 26588, 26593, 26598, 26608, 26610, 26614, 26615, 26706, 26644, 26649, 26653, 26655, 26664, 26663, 26668, 26669, 26671, 26672, 26673, 26675, 26683, 26687, 26692, 26693, 26698, 26700, 26709, 26711, 26712, 26715, 26731, 26734, 26735, 26736, 26737, 26738, 26741, 26745, 26746, 26747, 26748, 26754, 26756, 26758, 26760, 26774, 26776, 26778, 26780, 26785, 26787, 26789, 26793, 26794, 26798, 26802, 26811, 26821, 26824, 26828, 26831, 26832, 26833, 26835, 26838, 26841, 26844, 26845, 26853, 26856, 26858, 26859, 26860, 26861, 26864, 26865, 26869, 26870, 26875, 26876, 26877, 26886, 26889, 26890, 26896, 26897, 26899, 26902, 26903, 26929, 26931, 26933, 26936, 26939, 26946, 26949, 26953, 26958, 26967, 26971, 26979, 26980, 26981, 26982, 26984, 26985, 26988, 26992, 26993, 26994, 27002, 27003, 27007, 27008, 27021, 27026, 27030, 27032, 27041, 27045, 27046, 27048, 27051, 27053, 27055, 27063, 27064, 27066, 27068, 27077, 27080, 27089, 27094, 27095, 27106, 27109, 27118, 27119, 27121, 27123, 27125, 27134, 27136, 27137, 27139, 27151, 27153, 27157, 27162, 27165, 27168, 27172, 27176, 27184, 27186, 27188, 27191, 27195, 27198, 27199, 27205, 27206, 27209, 27210, 27214, 27216, 27217, 27218, 27221, 27222, 27227, 27236, 27239, 27242, 27249, 27251, 27262, 27265, 27267, 27270, 27271, 27273, 27275, 27281, 27291, 27293, 27294, 27295, 27301, 27307, 27311, 27312, 27313, 27316, 27325, 27326, 27327, 27334, 27337, 27336, 27340, 27344, 27348, 27349, 27350, 27356, 27357, 27364, 27367, 27372, 27376, 27377, 27378, 27388, 27389, 27394, 27395, 27398, 27399, 27401, 27407, 27408, 27409, 27415, 27419, 27422, 27428, 27432, 27435, 27436, 27439, 27445, 27446, 27451, 27455, 27462, 27466, 27469, 27474, 27478, 27480, 27485, 27488, 27495, 27499, 27502, 27504, 27509, 27517, 27518, 27522, 27525, 27543, 27547, 27551, 27552, 27554, 27555, 27560, 27561, 27564, 27565, 27566, 27568, 27576, 27577, 27581, 27582, 27587, 27588, 27593, 27596, 27606, 27610, 27617, 27619, 27622, 27623, 27630, 27633, 27639, 27641, 27647, 27650, 27652, 27653, 27657, 27661, 27662, 27664, 27666, 27673, 27679, 27686, 27687, 27688, 27692, 27694, 27699, 27701, 27702, 27706, 27707, 27711, 27722, 27723, 27725, 27727, 27730, 27732, 27737, 27739, 27740, 27755, 27757, 27759, 27764, 27766, 27768, 27769, 27771, 27781, 27782, 27783, 27785, 27796, 27797, 27799, 27800, 27804, 27807, 27824, 27826, 27828, 27842, 27846, 27853, 27855, 27856, 27857, 27858, 27860, 27862, 27866, 27868, 27872, 27879, 27881, 27883, 27884, 27886, 27890, 27892, 27908, 27911, 27914, 27918, 27919, 27921, 27923, 27930, 27942, 27943, 27944, 27751, 27950, 27951, 27953, 27961, 27964, 27967, 27991, 27998, 27999, 28001, 28005, 28007, 28015, 28016, 28028, 28034, 28039, 28049, 28050, 28052, 28054, 28055, 28056, 28074, 28076, 28084, 28087, 28089, 28093, 28095, 28100, 28104, 28106, 28110, 28111, 28118, 28123, 28125, 28127, 28128, 28130, 28133, 28137, 28143, 28144, 28148, 28150, 28156, 28160, 28164, 28190, 28194, 28199, 28210, 28214, 28217, 28219, 28220, 28228, 28229, 28232, 28233, 28235, 28239, 28241, 28242, 28243, 28244, 28247, 28252, 28253, 28254, 28258, 28259, 28264, 28275, 28283, 28285, 28301, 28307, 28313, 28320, 28327, 28333, 28334, 28337, 28339, 28347, 28351, 28352, 28353, 28355, 28359, 28360, 28362, 28365, 28366, 28367, 28395, 28397, 28398, 28409, 28411, 28413, 28420, 28424, 28426, 28428, 28429, 28438, 28440, 28442, 28443, 28454, 28457, 28458, 28463, 28464, 28467, 28470, 28475, 28476, 28461, 28495, 28497, 28498, 28499, 28503, 28505, 28506, 28509, 28510, 28513, 28514, 28520, 28524, 28541, 28542, 28547, 28551, 28552, 28555, 28556, 28557, 28560, 28562, 28563, 28564, 28566, 28570, 28575, 28576, 28581, 28582, 28583, 28584, 28590, 28591, 28592, 28597, 28598, 28604, 28613, 28615, 28616, 28618, 28634, 28638, 28648, 28649, 28656, 28661, 28665, 28668, 28669, 28672, 28677, 28678, 28679, 28685, 28695, 28704, 28707, 28719, 28724, 28727, 28729, 28732, 28739, 28740, 28744, 28745, 28746, 28747, 28756, 28757, 28765, 28766, 28750, 28772, 28773, 28780, 28782, 28789, 28790, 28798, 28801, 28805, 28806, 28820, 28821, 28822, 28823, 28824, 28827, 28836, 28843, 28848, 28849, 28852, 28855, 28874, 28881, 28883, 28884, 28885, 28886, 28888, 28892, 28900, 28922, 28931, 28932, 28933, 28934, 28935, 28939, 28940, 28943, 28958, 28960, 28971, 28973, 28975, 28976, 28977, 28984, 28993, 28997, 28998, 28999, 29002, 29003, 29008, 29010, 29015, 29018, 29020, 29022, 29024, 29032, 29049, 29056, 29061, 29063, 29068, 29074, 29082, 29083, 29088, 29090, 29103, 29104, 29106, 29107, 29114, 29119, 29120, 29121, 29124, 29131, 29132, 29139, 29142, 29145, 29146, 29148, 29176, 29182, 29184, 29191, 29192, 29193, 29203, 29207, 29210, 29213, 29215, 29220, 29227, 29231, 29236, 29240, 29241, 29249, 29250, 29251, 29253, 29262, 29263, 29264, 29267, 29269, 29270, 29274, 29276, 29278, 29280, 29283, 29288, 29291, 29294, 29295, 29297, 29303, 29304, 29307, 29308, 29311, 29316, 29321, 29325, 29326, 29331, 29339, 29352, 29357, 29358, 29361, 29364, 29374, 29377, 29383, 29385, 29388, 29397, 29398, 29400, 29407, 29413, 29427, 29428, 29434, 29435, 29438, 29442, 29444, 29445, 29447, 29451, 29453, 29458, 29459, 29464, 29465, 29470, 29474, 29476, 29479, 29480, 29484, 29489, 29490, 29493, 29498, 29499, 29501, 29507, 29517, 29520, 29522, 29526, 29528, 29533, 29534, 29535, 29536, 29542, 29543, 29545, 29547, 29548, 29550, 29551, 29553, 29559, 29561, 29564, 29568, 29569, 29571, 29573, 29574, 29582, 29584, 29587, 29589, 29591, 29592, 29596, 29598, 29599, 29600, 29602, 29605, 29606, 29610, 29611, 29613, 29621, 29623, 29625, 29628, 29629, 29631, 29637, 29638, 29641, 29643, 29644, 29647, 29650, 29651, 29654, 29657, 29661, 29665, 29667, 29670, 29671, 29673, 29684, 29685, 29687, 29689, 29690, 29691, 29693, 29695, 29696, 29697, 29700, 29703, 29706, 29713, 29722, 29723, 29732, 29734, 29736, 29737, 29738, 29739, 29740, 29741, 29742, 29743, 29744, 29745, 29753, 29760, 29763, 29764, 29766, 29767, 29771, 29773, 29777, 29778, 29783, 29789, 29794, 29798, 29799, 29800, 29803, 29805, 29806, 29809, 29810, 29824, 29825, 29829, 29830, 29831, 29833, 29839, 29840, 29841, 29842, 29848, 29849, 29850, 29852, 29855, 29856, 29857, 29859, 29862, 29864, 29865, 29866, 29867, 29870, 29871, 29873, 29874, 29877, 29881, 29883, 29887, 29896, 29897, 29900, 29904, 29907, 29912, 29914, 29915, 29918, 29919, 29924, 29928, 29930, 29931, 29935, 29940, 29946, 29947, 29948, 29951, 29958, 29970, 29974, 29975, 29984, 29985, 29988, 29991, 29993, 29994, 29999, 30006, 30009, 30013, 30014, 30015, 30016, 30019, 30023, 30024, 30030, 30032, 30034, 30039, 30046, 30047, 30049, 30063, 30065, 30073, 30074, 30075, 30076, 30077, 30078, 30081, 30085, 30096, 30098, 30099, 30101, 30105, 30108, 30114, 30116, 30132, 30138, 30143, 30144, 30145, 30148, 30150, 30156, 30158, 30159, 30167, 30172, 30175, 30176, 30177, 30180, 30183, 30188, 30190, 30191, 30193, 30201, 30208, 30210, 30211, 30212, 30215, 30216, 30218, 30220, 30223, 30226, 30227, 30229, 30230, 30233, 30235, 30236, 30237, 30238, 30243, 30245, 30246, 30249, 30253, 30258, 30259, 30261, 30264, 30265, 30266, 30268, 30282, 30272, 30273, 30275, 30276, 30277, 30281, 30283, 30293, 30297, 30303, 30308, 30309, 30317, 30318, 30319, 30321, 30324, 30337, 30341, 30348, 30349, 30357, 30363, 30364, 30365, 30367, 30368, 30370, 30371, 30372, 30373, 30374, 30375, 30376, 30378, 30381, 30397, 30401, 30405, 30409, 30411, 30412, 30414, 30420, 30425, 30432, 30438, 30440, 30444, 30448, 30449, 30454, 30457, 30460, 30464, 30470, 30474, 30478, 30482, 30484, 30485, 30487, 30489, 30490, 30492, 30498, 30504, 30509, 30510, 30511, 30516, 30517, 30518, 30521, 30525, 30526, 30530, 30533, 30534, 30538, 30541, 30542, 30543, 30546, 30550, 30551, 30556, 30558, 30559, 30560, 30562, 30564, 30567, 30570, 30572, 30576, 30578, 30579, 30580, 30586, 30589, 30592, 30596, 30604, 30605, 30612, 30613, 30614, 30618, 30623, 30626, 30631, 30634, 30638, 30639, 30641, 30645, 30654, 30659, 30665, 30673, 30674, 30677, 30681, 30686, 30687, 30688, 30692, 30694, 30698, 30700, 30704, 30705, 30708, 30712, 30715, 30725, 30726, 30729, 30733, 30734, 30737, 30749, 30753, 30754, 30755, 30765, 30766, 30768, 30773, 30775, 30787, 30788, 30791, 30792, 30796, 30798, 30802, 30812, 30814, 30816, 30817, 30819, 30820, 30824, 30826, 30830, 30842, 30846, 30858, 30863, 30868, 30872, 30881, 30877, 30878, 30879, 30884, 30888, 30892, 30893, 30896, 30897, 30898, 30899, 30907, 30909, 30911, 30919, 30920, 30921, 30924, 30926, 30930, 30931, 30933, 30934, 30948, 30939, 30943, 30944, 30945, 30950, 30954, 30962, 30963, 30976, 30966, 30967, 30970, 30971, 30975, 30982, 30988, 30992, 31002, 31004, 31006, 31007, 31008, 31013, 31015, 31017, 31021, 31025, 31028, 31029, 31035, 31037, 31039, 31044, 31045, 31046, 31050, 31051, 31055, 31057, 31060, 31064, 31067, 31068, 31079, 31081, 31083, 31090, 31097, 31099, 31100, 31102, 31115, 31116, 31121, 31123, 31124, 31125, 31126, 31128, 31131, 31132, 31137, 31144, 31145, 31147, 31151, 31153, 31156, 31160, 31163, 31170, 31172, 31175, 31176, 31178, 31183, 31188, 31190, 31194, 31197, 31198, 31200, 31202, 31205, 31210, 31211, 31213, 31217, 31224, 31228, 31234, 31235, 31239, 31241, 31242, 31244, 31249, 31253, 31259, 31262, 31265, 31271, 31275, 31277, 31279, 31280, 31284, 31285, 31288, 31289, 31290, 31300, 31301, 31303, 31304, 31308, 31317, 31318, 31321, 31324, 31325, 31327, 31328, 31333, 31335, 31338, 31341, 31349, 31352, 31358, 31360, 31362, 31365, 31366, 31370, 31371, 31376, 31377, 31380, 31390, 31392, 31395, 31404, 31411, 31413, 31417, 31419, 31420, 31430, 31433, 31436, 31438, 31441, 31451, 31464, 31465, 31467, 31468, 31473, 31476, 31483, 31485, 31486, 31495, 31508, 31519, 31523, 31527, 31529, 31530, 31531, 31533, 31534, 31535, 31536, 31537, 31540, 31549, 31551, 31552, 31553, 31559, 31566, 31573, 31584, 31588, 31590, 31593, 31594, 31597, 31599, 31602, 31603, 31607, 31620, 31625, 31630, 31632, 31633, 31638, 31643, 31646, 31648, 31653, 31660, 31663, 31664, 31666, 31669, 31670, 31674, 31675, 31676, 31677, 31682, 31685, 31688, 31690, 31700, 31702, 31703, 31705, 31706, 31707, 31720, 31722, 31730, 31732, 31733, 31736, 31737, 31738, 31740, 31742, 31745, 31746, 31747, 31748, 31750, 31753, 31755, 31756, 31758, 31759, 31769, 31771, 31776, 31781, 31782, 31784, 31788, 31793, 31795, 31796, 31798, 31801, 31802, 31814, 31818, 31829, 31825, 31826, 31827, 31833, 31834, 31835, 31836, 31837, 31838, 31841, 31843, 31847, 31849, 31853, 31854, 31856, 31858, 31865, 31868, 31869, 31878, 31879, 31887, 31892, 31902, 31904, 31910, 31920, 31926, 31927, 31930, 31931, 31932, 31935, 31940, 31943, 31944, 31945, 31949, 31951, 31955, 31956, 31957, 31959, 31961, 31962, 31965, 31974, 31977, 31979, 31989, 32003, 32007, 32008, 32009, 32015, 32017, 32018, 32019, 32022, 32029, 32030, 32035, 32038, 32042, 32045, 32049, 32060, 32061, 32062, 32064, 32065, 32071, 32072, 32077, 32081, 32083, 32087, 32089, 32090, 32092, 32093, 32101, 32103, 32106, 32112, 32120, 32122, 32123, 32127, 32129, 32130, 32131, 32133, 32134, 32136, 32139, 32140, 32141, 32145, 32150, 32151, 32157, 32158, 32166, 32167, 32170, 32179, 32182, 32183, 32185, 32194, 32195, 32196, 32197, 32198, 32204, 32205, 32206, 32215, 32217, 32256, 32226, 32229, 32230, 32234, 32235, 32237, 32241, 32245, 32246, 32249, 32250, 32264, 32272, 32273, 32277, 32279, 32284, 32285, 32288, 32295, 32296, 32300, 32301, 32303, 32307, 32310, 32319, 32324, 32325, 32327, 32334, 32336, 32338, 32344, 32351, 32353, 32354, 32357, 32363, 32366, 32367, 32371, 32376, 32382, 32385, 32390, 32391, 32394, 32397, 32401, 32405, 32408, 32410, 32413, 32414, 32572, 32571, 32573, 32574, 32575, 32579, 32580, 32583, 32591, 32594, 32595, 32603, 32604, 32605, 32609, 32611, 32612, 32613, 32614, 32621, 32625, 32637, 32638, 32639, 32640, 32651, 32653, 32655, 32656, 32657, 32662, 32663, 32668, 32673, 32674, 32678, 32682, 32685, 32692, 32700, 32703, 32704, 32707, 32712, 32718, 32719, 32731, 32735, 32739, 32741, 32744, 32748, 32750, 32751, 32754, 32762, 32765, 32766, 32767, 32775, 32776, 32778, 32781, 32782, 32783, 32785, 32787, 32788, 32790, 32797, 32798, 32799, 32800, 32804, 32806, 32812, 32814, 32816, 32820, 32821, 32823, 32825, 32826, 32828, 32830, 32832, 32836, 32864, 32868, 32870, 32877, 32881, 32885, 32897, 32904, 32910, 32924, 32926, 32934, 32935, 32939, 32952, 32953, 32968, 32973, 32975, 32978, 32980, 32981, 32983, 32984, 32992, 33005, 33006, 33008, 33010, 33011, 33014, 33017, 33018, 33022, 33027, 33035, 33046, 33047, 33048, 33052, 33054, 33056, 33060, 33063, 33068, 33072, 33077, 33082, 33084, 33093, 33095, 33098, 33100, 33106, 33111, 33120, 33121, 33127, 33128, 33129, 33133, 33135, 33143, 33153, 33168, 33156, 33157, 33158, 33163, 33166, 33174, 33176, 33179, 33182, 33186, 33198, 33202, 33204, 33211, 33227, 33219, 33221, 33226, 33230, 33231, 33237, 33239, 33243, 33245, 33246, 33249, 33252, 33259, 33260, 33264, 33265, 33266, 33269, 33270, 33272, 33273, 33277, 33279, 33280, 33283, 33295, 33299, 33300, 33305, 33306, 33309, 33313, 33314, 33320, 33330, 33332, 33338, 33347, 33348, 33349, 33350, 33355, 33358, 33359, 33361, 33366, 33372, 33376, 33379, 33383, 33389, 33396, 33403, 33405, 33407, 33408, 33409, 33411, 33412, 33415, 33417, 33418, 33422, 33425, 33428, 33430, 33432, 33434, 33435, 33440, 33441, 33443, 33444, 33447, 33448, 33449, 33450, 33454, 33456, 33458, 33460, 33463, 33466, 33468, 33470, 33471, 33478, 33488, 33493, 33498, 33504, 33506, 33508, 33512, 33514, 33517, 33519, 33526, 33527, 33533, 33534, 33536, 33537, 33543, 33544, 33546, 33547, 33620, 33563, 33565, 33566, 33567, 33569, 33570, 33580, 33581, 33582, 33584, 33587, 33591, 33594, 33596, 33597, 33602, 33603, 33604, 33607, 33613, 33614, 33617, 33621, 33622, 33623, 33648, 33656, 33661, 33663, 33664, 33666, 33668, 33670, 33677, 33682, 33684, 33685, 33688, 33689, 33691, 33692, 33693, 33702, 33703, 33705, 33708, 33726, 33727, 33728, 33735, 33737, 33743, 33744, 33745, 33748, 33757, 33619, 33768, 33770, 33782, 33784, 33785, 33788, 33793, 33798, 33802, 33807, 33809, 33813, 33817, 33709, 33839, 33849, 33861, 33863, 33864, 33866, 33869, 33871, 33873, 33874, 33878, 33880, 33881, 33882, 33884, 33888, 33892, 33893, 33895, 33898, 33904, 33907, 33908, 33910, 33912, 33916, 33917, 33921, 33925, 33938, 33939, 33941, 33950, 33958, 33960, 33961, 33962, 33967, 33969, 33972, 33978, 33981, 33982, 33984, 33986, 33991, 33992, 33996, 33999, 34003, 34012, 34023, 34026, 34031, 34032, 34033, 34034, 34039, 34098, 34042, 34043, 34045, 34050, 34051, 34055, 34060, 34062, 34064, 34076, 34078, 34082, 34083, 34084, 34085, 34087, 34090, 34091, 34095, 34099, 34100, 34102, 34111, 34118, 34127, 34128, 34129, 34130, 34131, 34134, 34137, 34140, 34141, 34142, 34143, 34144, 34145, 34146, 34148, 34155, 34159, 34169, 34170, 34171, 34173, 34175, 34177, 34181, 34182, 34185, 34187, 34188, 34191, 34195, 34200, 34205, 34207, 34208, 34210, 34213, 34215, 34228, 34230, 34231, 34232, 34236, 34237, 34238, 34239, 34242, 34247, 34250, 34251, 34254, 34221, 34264, 34266, 34271, 34272, 34278, 34280, 34285, 34291, 34294, 34300, 34303, 34304, 34308, 34309, 34317, 34318, 34320, 34321, 34322, 34328, 34329, 34331, 34334, 34337, 34343, 34345, 34358, 34360, 34362, 34364, 34365, 34368, 34370, 34374, 34386, 34387, 34390, 34391, 34392, 34393, 34397, 34400, 34401, 34402, 34403, 34404, 34409, 34412, 34415, 34421, 34422, 34423, 34426, 34445, 34449, 34454, 34456, 34458, 34460, 34465, 34470, 34471, 34472, 34477, 34481, 34483, 34484, 34485, 34487, 34488, 34489, 34495, 34496, 34497, 34499, 34501, 34513, 34514, 34517, 34519, 34522, 34524, 34528, 34531, 34533, 34535, 34440, 34554, 34556, 34557, 34564, 34565, 34567, 34571, 34574, 34575, 34576, 34579, 34580, 34585, 34590, 34591, 34593, 34595, 34600, 34606, 34607, 34609, 34610, 34617, 34618, 34620, 34621, 34622, 34624, 34627, 34629, 34637, 34648, 34653, 34657, 34660, 34661, 34671, 34673, 34674, 34683, 34691, 34692, 34693, 34694, 34695, 34696, 34697, 34699, 34700, 34704, 34707, 34709, 34711, 34712, 34713, 34718, 34720, 34723, 34727, 34732, 34733, 34734, 34737, 34741, 34750, 34751, 34753, 34760, 34761, 34762, 34766, 34773, 34774, 34777, 34778, 34780, 34783, 34786, 34787, 34788, 34794, 34795, 34797, 34801, 34803, 34808, 34810, 34815, 34817, 34819, 34822, 34825, 34826, 34827, 34832, 34841, 34834, 34835, 34836, 34840, 34842, 34843, 34844, 34846, 34847, 34856, 34861, 34862, 34864, 34866, 34869, 34874, 34876, 34881, 34883, 34885, 34888, 34889, 34890, 34891, 34894, 34897, 34901, 34902, 34904, 34906, 34908, 34911, 34912, 34916, 34921, 34929, 34937, 34939, 34944, 34968, 34970, 34971, 34972, 34975, 34976, 34984, 34986, 35002, 35005, 35006, 35008, 35018, 35019, 35020, 35021, 35022, 35025, 35026, 35027, 35035, 35038, 35047, 35055, 35056, 35057, 35061, 35063, 35073, 35078, 35085, 35086, 35087, 35093, 35094, 35096, 35097, 35098, 35100, 35104, 35110, 35111, 35112, 35120, 35121, 35122, 35125, 35129, 35130, 35134, 35136, 35138, 35141, 35142, 35145, 35151, 35154, 35159, 35162, 35163, 35164, 35169, 35170, 35171, 35179, 35182, 35184, 35187, 35189, 35194, 35195, 35196, 35197, 35209, 35213, 35216, 35220, 35221, 35227, 35228, 35231, 35232, 35237, 35248, 35252, 35253, 35254, 35255, 35260, 35284, 35285, 35286, 35287, 35288, 35301, 35305, 35307, 35309, 35313, 35315, 35318, 35321, 35325, 35327, 35332, 35333, 35335, 35343, 35345, 35346, 35348, 35349, 35358, 35360, 35362, 35364, 35366, 35371, 35372, 35375, 35381, 35383, 35389, 35390, 35392, 35395, 35397, 35399, 35401, 35405, 35406, 35411, 35414, 35415, 35416, 35420, 35421, 35425, 35429, 35431, 35445, 35446, 35447, 35449, 35450, 35451, 35454, 35455, 35456, 35459, 35462, 35467, 35471, 35472, 35474, 35478, 35479, 35481, 35487, 35495, 35497, 35502, 35503, 35507, 35510, 35511, 35515, 35518, 35523, 35526, 35528, 35529, 35530, 35537, 35539, 35540, 35541, 35543, 35549, 35551, 35564, 35568, 35572, 35573, 35574, 35580, 35583, 35589, 35590, 35595, 35601, 35612, 35614, 35615, 35594, 35629, 35632, 35639, 35644, 35650, 35651, 35652, 35653, 35654, 35656, 35666, 35667, 35668, 35673, 35661, 35678, 35683, 35693, 35702, 35704, 35705, 35708, 35710, 35713, 35716, 35717, 35723, 35725, 35727, 35732, 35733, 35740, 35742, 35743, 35896, 35897, 35901, 35902, 35909, 35911, 35913, 35915, 35919, 35921, 35923, 35924, 35927, 35928, 35931, 35933, 35929, 35939, 35940, 35942, 35944, 35945, 35949, 35955, 35957, 35958, 35963, 35966, 35974, 35975, 35979, 35984, 35986, 35987, 35993, 35995, 35996, 36004, 36025, 36026, 36037, 36038, 36041, 36043, 36047, 36054, 36053, 36057, 36061, 36065, 36072, 36076, 36079, 36080, 36082, 36085, 36087, 36088, 36094, 36095, 36097, 36099, 36105, 36114, 36119, 36123, 36197, 36201, 36204, 36206, 36223, 36226, 36228, 36232, 36237, 36240, 36241, 36245, 36254, 36255, 36256, 36262, 36267, 36268, 36271, 36274, 36277, 36279, 36281, 36283, 36288, 36293, 36294, 36295, 36296, 36298, 36302, 36305, 36308, 36309, 36311, 36313, 36324, 36325, 36327, 36332, 36336, 36284, 36337, 36338, 36340, 36349, 36353, 36356, 36357, 36358, 36363, 36369, 36372, 36374, 36384, 36385, 36386, 36387, 36390, 36391, 36401, 36403, 36406, 36407, 36408, 36409, 36413, 36416, 36417, 36427, 36429, 36430, 36431, 36436, 36443, 36444, 36445, 36446, 36449, 36450, 36457, 36460, 36461, 36463, 36464, 36465, 36473, 36474, 36475, 36482, 36483, 36489, 36496, 36498, 36501, 36506, 36507, 36509, 36510, 36514, 36519, 36521, 36525, 36526, 36531, 36533, 36538, 36539, 36544, 36545, 36547, 36548, 36551, 36559, 36561, 36564, 36572, 36584, 36590, 36592, 36593, 36599, 36601, 36602, 36589, 36608, 36610, 36615, 36616, 36623, 36624, 36630, 36631, 36632, 36638, 36640, 36641, 36643, 36645, 36647, 36648, 36652, 36653, 36654, 36660, 36661, 36662, 36663, 36666, 36672, 36673, 36675, 36679, 36687, 36689, 36690, 36691, 36692, 36693, 36696, 36701, 36702, 36709, 36765, 36768, 36769, 36772, 36773, 36774, 36789, 36790, 36792, 36798, 36800, 36801, 36806, 36810, 36811, 36813, 36816, 36818, 36819, 36821, 36832, 36835, 36836, 36840, 36846, 36849, 36853, 36854, 36859, 36862, 36866, 36868, 36872, 36876, 36888, 36891, 36904, 36905, 36911, 36906, 36908, 36909, 36915, 36916, 36919, 36927, 36931, 36932, 36940, 36955, 36957, 36962, 36966, 36967, 36972, 36976, 36980, 36985, 36997, 37e3, 37003, 37004, 37006, 37008, 37013, 37015, 37016, 37017, 37019, 37024, 37025, 37026, 37029, 37040, 37042, 37043, 37044, 37046, 37053, 37068, 37054, 37059, 37060, 37061, 37063, 37064, 37077, 37079, 37080, 37081, 37084, 37085, 37087, 37093, 37074, 37110, 37099, 37103, 37104, 37108, 37118, 37119, 37120, 37124, 37125, 37126, 37128, 37133, 37136, 37140, 37142, 37143, 37144, 37146, 37148, 37150, 37152, 37157, 37154, 37155, 37159, 37161, 37166, 37167, 37169, 37172, 37174, 37175, 37177, 37178, 37180, 37181, 37187, 37191, 37192, 37199, 37203, 37207, 37209, 37210, 37211, 37217, 37220, 37223, 37229, 37236, 37241, 37242, 37243, 37249, 37251, 37253, 37254, 37258, 37262, 37265, 37267, 37268, 37269, 37272, 37278, 37281, 37286, 37288, 37292, 37293, 37294, 37296, 37297, 37298, 37299, 37302, 37307, 37308, 37309, 37311, 37314, 37315, 37317, 37331, 37332, 37335, 37337, 37338, 37342, 37348, 37349, 37353, 37354, 37356, 37357, 37358, 37359, 37360, 37361, 37367, 37369, 37371, 37373, 37376, 37377, 37380, 37381, 37382, 37383, 37385, 37386, 37388, 37392, 37394, 37395, 37398, 37400, 37404, 37405, 37411, 37412, 37413, 37414, 37416, 37422, 37423, 37424, 37427, 37429, 37430, 37432, 37433, 37434, 37436, 37438, 37440, 37442, 37443, 37446, 37447, 37450, 37453, 37454, 37455, 37457, 37464, 37465, 37468, 37469, 37472, 37473, 37477, 37479, 37480, 37481, 37486, 37487, 37488, 37493, 37494, 37495, 37496, 37497, 37499, 37500, 37501, 37503, 37512, 37513, 37514, 37517, 37518, 37522, 37527, 37529, 37535, 37536, 37540, 37541, 37543, 37544, 37547, 37551, 37554, 37558, 37560, 37562, 37563, 37564, 37565, 37567, 37568, 37569, 37570, 37571, 37573, 37574, 37575, 37576, 37579, 37580, 37581, 37582, 37584, 37587, 37589, 37591, 37592, 37593, 37596, 37597, 37599, 37600, 37601, 37603, 37605, 37607, 37608, 37612, 37614, 37616, 37625, 37627, 37631, 37632, 37634, 37640, 37645, 37649, 37652, 37653, 37660, 37661, 37662, 37663, 37665, 37668, 37669, 37671, 37673, 37674, 37683, 37684, 37686, 37687, 37703, 37704, 37705, 37712, 37713, 37714, 37717, 37719, 37720, 37722, 37726, 37732, 37733, 37735, 37737, 37738, 37741, 37743, 37744, 37745, 37747, 37748, 37750, 37754, 37757, 37759, 37760, 37761, 37762, 37768, 37770, 37771, 37773, 37775, 37778, 37781, 37784, 37787, 37790, 37793, 37795, 37796, 37798, 37800, 37803, 37812, 37813, 37814, 37818, 37801, 37825, 37828, 37829, 37830, 37831, 37833, 37834, 37835, 37836, 37837, 37843, 37849, 37852, 37854, 37855, 37858, 37862, 37863, 37881, 37879, 37880, 37882, 37883, 37885, 37889, 37890, 37892, 37896, 37897, 37901, 37902, 37903, 37909, 37910, 37911, 37919, 37934, 37935, 37937, 37938, 37939, 37940, 37947, 37951, 37949, 37955, 37957, 37960, 37962, 37964, 37973, 37977, 37980, 37983, 37985, 37987, 37992, 37995, 37997, 37998, 37999, 38001, 38002, 38020, 38019, 38264, 38265, 38270, 38276, 38280, 38284, 38285, 38286, 38301, 38302, 38303, 38305, 38310, 38313, 38315, 38316, 38324, 38326, 38330, 38333, 38335, 38342, 38344, 38345, 38347, 38352, 38353, 38354, 38355, 38361, 38362, 38365, 38366, 38367, 38368, 38372, 38374, 38429, 38430, 38434, 38436, 38437, 38438, 38444, 38449, 38451, 38455, 38456, 38457, 38458, 38460, 38461, 38465, 38482, 38484, 38486, 38487, 38488, 38497, 38510, 38516, 38523, 38524, 38526, 38527, 38529, 38530, 38531, 38532, 38537, 38545, 38550, 38554, 38557, 38559, 38564, 38565, 38566, 38569, 38574, 38575, 38579, 38586, 38602, 38610, 23986, 38616, 38618, 38621, 38622, 38623, 38633, 38639, 38641, 38650, 38658, 38659, 38661, 38665, 38682, 38683, 38685, 38689, 38690, 38691, 38696, 38705, 38707, 38721, 38723, 38730, 38734, 38735, 38741, 38743, 38744, 38746, 38747, 38755, 38759, 38762, 38766, 38771, 38774, 38775, 38776, 38779, 38781, 38783, 38784, 38793, 38805, 38806, 38807, 38809, 38810, 38814, 38815, 38818, 38828, 38830, 38833, 38834, 38837, 38838, 38840, 38841, 38842, 38844, 38846, 38847, 38849, 38852, 38853, 38855, 38857, 38858, 38860, 38861, 38862, 38864, 38865, 38868, 38871, 38872, 38873, 38877, 38878, 38880, 38875, 38881, 38884, 38895, 38897, 38900, 38903, 38904, 38906, 38919, 38922, 38937, 38925, 38926, 38932, 38934, 38940, 38942, 38944, 38947, 38950, 38955, 38958, 38959, 38960, 38962, 38963, 38965, 38949, 38974, 38980, 38983, 38986, 38993, 38994, 38995, 38998, 38999, 39001, 39002, 39010, 39011, 39013, 39014, 39018, 39020, 39083, 39085, 39086, 39088, 39092, 39095, 39096, 39098, 39099, 39103, 39106, 39109, 39112, 39116, 39137, 39139, 39141, 39142, 39143, 39146, 39155, 39158, 39170, 39175, 39176, 39185, 39189, 39190, 39191, 39194, 39195, 39196, 39199, 39202, 39206, 39207, 39211, 39217, 39218, 39219, 39220, 39221, 39225, 39226, 39227, 39228, 39232, 39233, 39238, 39239, 39240, 39245, 39246, 39252, 39256, 39257, 39259, 39260, 39262, 39263, 39264, 39323, 39325, 39327, 39334, 39344, 39345, 39346, 39349, 39353, 39354, 39357, 39359, 39363, 39369, 39379, 39380, 39385, 39386, 39388, 39390, 39399, 39402, 39403, 39404, 39408, 39412, 39413, 39417, 39421, 39422, 39426, 39427, 39428, 39435, 39436, 39440, 39441, 39446, 39454, 39456, 39458, 39459, 39460, 39463, 39469, 39470, 39475, 39477, 39478, 39480, 39495, 39489, 39492, 39498, 39499, 39500, 39502, 39505, 39508, 39510, 39517, 39594, 39596, 39598, 39599, 39602, 39604, 39605, 39606, 39609, 39611, 39614, 39615, 39617, 39619, 39622, 39624, 39630, 39632, 39634, 39637, 39638, 39639, 39643, 39644, 39648, 39652, 39653, 39655, 39657, 39660, 39666, 39667, 39669, 39673, 39674, 39677, 39679, 39680, 39681, 39682, 39683, 39684, 39685, 39688, 39689, 39691, 39692, 39693, 39694, 39696, 39698, 39702, 39705, 39707, 39708, 39712, 39718, 39723, 39725, 39731, 39732, 39733, 39735, 39737, 39738, 39741, 39752, 39755, 39756, 39765, 39766, 39767, 39771, 39774, 39777, 39779, 39781, 39782, 39784, 39786, 39787, 39788, 39789, 39790, 39795, 39797, 39799, 39800, 39801, 39807, 39808, 39812, 39813, 39814, 39815, 39817, 39818, 39819, 39821, 39823, 39824, 39828, 39834, 39837, 39838, 39846, 39847, 39849, 39852, 39856, 39857, 39858, 39863, 39864, 39867, 39868, 39870, 39871, 39873, 39879, 39880, 39886, 39888, 39895, 39896, 39901, 39903, 39909, 39911, 39914, 39915, 39919, 39923, 39927, 39928, 39929, 39930, 39933, 39935, 39936, 39938, 39947, 39951, 39953, 39958, 39960, 39961, 39962, 39964, 39966, 39970, 39971, 39974, 39975, 39976, 39977, 39978, 39985, 39989, 39990, 39991, 39997, 40001, 40003, 40004, 40005, 40009, 40010, 40014, 40015, 40016, 40019, 40020, 40022, 40024, 40027, 40029, 40030, 40031, 40035, 40041, 40042, 40028, 40043, 40040, 40046, 40048, 40050, 40053, 40055, 40059, 40166, 40178, 40183, 40185, 40203, 40194, 40209, 40215, 40216, 40220, 40221, 40222, 40239, 40240, 40242, 40243, 40244, 40250, 40252, 40261, 40253, 40258, 40259, 40263, 40266, 40275, 40276, 40287, 40291, 40290, 40293, 40297, 40298, 40299, 40304, 40310, 40311, 40315, 40316, 40318, 40323, 40324, 40326, 40330, 40333, 40334, 40338, 40339, 40341, 40342, 40343, 40344, 40353, 40362, 40364, 40366, 40369, 40373, 40377, 40380, 40383, 40387, 40391, 40393, 40394, 40404, 40405, 40406, 40407, 40410, 40414, 40415, 40416, 40421, 40423, 40425, 40427, 40430, 40432, 40435, 40436, 40446, 40458, 40450, 40455, 40462, 40464, 40465, 40466, 40469, 40470, 40473, 40476, 40477, 40570, 40571, 40572, 40576, 40578, 40579, 40580, 40581, 40583, 40590, 40591, 40598, 40600, 40603, 40606, 40612, 40616, 40620, 40622, 40623, 40624, 40627, 40628, 40629, 40646, 40648, 40651, 40661, 40671, 40676, 40679, 40684, 40685, 40686, 40688, 40689, 40690, 40693, 40696, 40703, 40706, 40707, 40713, 40719, 40720, 40721, 40722, 40724, 40726, 40727, 40729, 40730, 40731, 40735, 40738, 40742, 40746, 40747, 40751, 40753, 40754, 40756, 40759, 40761, 40762, 40764, 40765, 40767, 40769, 40771, 40772, 40773, 40774, 40775, 40787, 40789, 40790, 40791, 40792, 40794, 40797, 40798, 40808, 40809, 40813, 40814, 40815, 40816, 40817, 40819, 40821, 40826, 40829, 40847, 40848, 40849, 40850, 40852, 40854, 40855, 40862, 40865, 40866, 40867, 40869, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],
                    ibm866: [1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 9617, 9618, 9619, 9474, 9508, 9569, 9570, 9558, 9557, 9571, 9553, 9559, 9565, 9564, 9563, 9488, 9492, 9524, 9516, 9500, 9472, 9532, 9566, 9567, 9562, 9556, 9577, 9574, 9568, 9552, 9580, 9575, 9576, 9572, 9573, 9561, 9560, 9554, 9555, 9579, 9578, 9496, 9484, 9608, 9604, 9612, 9616, 9600, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1025, 1105, 1028, 1108, 1031, 1111, 1038, 1118, 176, 8729, 183, 8730, 8470, 164, 9632, 160],
                    "iso-8859-2": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 260, 728, 321, 164, 317, 346, 167, 168, 352, 350, 356, 377, 173, 381, 379, 176, 261, 731, 322, 180, 318, 347, 711, 184, 353, 351, 357, 378, 733, 382, 380, 340, 193, 194, 258, 196, 313, 262, 199, 268, 201, 280, 203, 282, 205, 206, 270, 272, 323, 327, 211, 212, 336, 214, 215, 344, 366, 218, 368, 220, 221, 354, 223, 341, 225, 226, 259, 228, 314, 263, 231, 269, 233, 281, 235, 283, 237, 238, 271, 273, 324, 328, 243, 244, 337, 246, 247, 345, 367, 250, 369, 252, 253, 355, 729],
                    "iso-8859-3": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 294, 728, 163, 164, null, 292, 167, 168, 304, 350, 286, 308, 173, null, 379, 176, 295, 178, 179, 180, 181, 293, 183, 184, 305, 351, 287, 309, 189, null, 380, 192, 193, 194, null, 196, 266, 264, 199, 200, 201, 202, 203, 204, 205, 206, 207, null, 209, 210, 211, 212, 288, 214, 215, 284, 217, 218, 219, 220, 364, 348, 223, 224, 225, 226, null, 228, 267, 265, 231, 232, 233, 234, 235, 236, 237, 238, 239, null, 241, 242, 243, 244, 289, 246, 247, 285, 249, 250, 251, 252, 365, 349, 729],
                    "iso-8859-4": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 260, 312, 342, 164, 296, 315, 167, 168, 352, 274, 290, 358, 173, 381, 175, 176, 261, 731, 343, 180, 297, 316, 711, 184, 353, 275, 291, 359, 330, 382, 331, 256, 193, 194, 195, 196, 197, 198, 302, 268, 201, 280, 203, 278, 205, 206, 298, 272, 325, 332, 310, 212, 213, 214, 215, 216, 370, 218, 219, 220, 360, 362, 223, 257, 225, 226, 227, 228, 229, 230, 303, 269, 233, 281, 235, 279, 237, 238, 299, 273, 326, 333, 311, 244, 245, 246, 247, 248, 371, 250, 251, 252, 361, 363, 729],
                    "iso-8859-5": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 173, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 8470, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 167, 1118, 1119],
                    "iso-8859-6": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, null, null, null, 164, null, null, null, null, null, null, null, 1548, 173, null, null, null, null, null, null, null, null, null, null, null, null, null, 1563, null, null, null, 1567, null, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, null, null, null, null, null, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, null, null, null, null, null, null, null, null, null, null, null, null, null],
                    "iso-8859-7": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 8216, 8217, 163, 8364, 8367, 166, 167, 168, 169, 890, 171, 172, 173, null, 8213, 176, 177, 178, 179, 900, 901, 902, 183, 904, 905, 906, 187, 908, 189, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, null, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, null],
                    "iso-8859-8": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, null, 162, 163, 164, 165, 166, 167, 168, 169, 215, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 247, 187, 188, 189, 190, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 8215, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, null, null, 8206, 8207, null],
                    "iso-8859-10": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 260, 274, 290, 298, 296, 310, 167, 315, 272, 352, 358, 381, 173, 362, 330, 176, 261, 275, 291, 299, 297, 311, 183, 316, 273, 353, 359, 382, 8213, 363, 331, 256, 193, 194, 195, 196, 197, 198, 302, 268, 201, 280, 203, 278, 205, 206, 207, 208, 325, 332, 211, 212, 213, 214, 360, 216, 370, 218, 219, 220, 221, 222, 223, 257, 225, 226, 227, 228, 229, 230, 303, 269, 233, 281, 235, 279, 237, 238, 239, 240, 326, 333, 243, 244, 245, 246, 361, 248, 371, 250, 251, 252, 253, 254, 312],
                    "iso-8859-13": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 8221, 162, 163, 164, 8222, 166, 167, 216, 169, 342, 171, 172, 173, 174, 198, 176, 177, 178, 179, 8220, 181, 182, 183, 248, 185, 343, 187, 188, 189, 190, 230, 260, 302, 256, 262, 196, 197, 280, 274, 268, 201, 377, 278, 290, 310, 298, 315, 352, 323, 325, 211, 332, 213, 214, 215, 370, 321, 346, 362, 220, 379, 381, 223, 261, 303, 257, 263, 228, 229, 281, 275, 269, 233, 378, 279, 291, 311, 299, 316, 353, 324, 326, 243, 333, 245, 246, 247, 371, 322, 347, 363, 252, 380, 382, 8217],
                    "iso-8859-14": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 7682, 7683, 163, 266, 267, 7690, 167, 7808, 169, 7810, 7691, 7922, 173, 174, 376, 7710, 7711, 288, 289, 7744, 7745, 182, 7766, 7809, 7767, 7811, 7776, 7923, 7812, 7813, 7777, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 372, 209, 210, 211, 212, 213, 214, 7786, 216, 217, 218, 219, 220, 221, 374, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 373, 241, 242, 243, 244, 245, 246, 7787, 248, 249, 250, 251, 252, 253, 375, 255],
                    "iso-8859-15": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 8364, 165, 352, 167, 353, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 381, 181, 182, 183, 382, 185, 186, 187, 338, 339, 376, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255],
                    "iso-8859-16": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 260, 261, 321, 8364, 8222, 352, 167, 353, 169, 536, 171, 377, 173, 378, 379, 176, 177, 268, 322, 381, 8221, 182, 183, 382, 269, 537, 187, 338, 339, 376, 380, 192, 193, 194, 258, 196, 262, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 272, 323, 210, 211, 212, 336, 214, 346, 368, 217, 218, 219, 220, 280, 538, 223, 224, 225, 226, 259, 228, 263, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 273, 324, 242, 243, 244, 337, 246, 347, 369, 249, 250, 251, 252, 281, 539, 255],
                    "koi8-r": [9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 8992, 9632, 8729, 8730, 8776, 8804, 8805, 160, 8993, 176, 178, 183, 247, 9552, 9553, 9554, 1105, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 1025, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 169, 1102, 1072, 1073, 1094, 1076, 1077, 1092, 1075, 1093, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1103, 1088, 1089, 1090, 1091, 1078, 1074, 1100, 1099, 1079, 1096, 1101, 1097, 1095, 1098, 1070, 1040, 1041, 1062, 1044, 1045, 1060, 1043, 1061, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1071, 1056, 1057, 1058, 1059, 1046, 1042, 1068, 1067, 1047, 1064, 1069, 1065, 1063, 1066],
                    "koi8-u": [9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 8992, 9632, 8729, 8730, 8776, 8804, 8805, 160, 8993, 176, 178, 183, 247, 9552, 9553, 9554, 1105, 1108, 9556, 1110, 1111, 9559, 9560, 9561, 9562, 9563, 1169, 1118, 9566, 9567, 9568, 9569, 1025, 1028, 9571, 1030, 1031, 9574, 9575, 9576, 9577, 9578, 1168, 1038, 169, 1102, 1072, 1073, 1094, 1076, 1077, 1092, 1075, 1093, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1103, 1088, 1089, 1090, 1091, 1078, 1074, 1100, 1099, 1079, 1096, 1101, 1097, 1095, 1098, 1070, 1040, 1041, 1062, 1044, 1045, 1060, 1043, 1061, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1071, 1056, 1057, 1058, 1059, 1046, 1042, 1068, 1067, 1047, 1064, 1069, 1065, 1063, 1066],
                    macintosh: [196, 197, 199, 201, 209, 214, 220, 225, 224, 226, 228, 227, 229, 231, 233, 232, 234, 235, 237, 236, 238, 239, 241, 243, 242, 244, 246, 245, 250, 249, 251, 252, 8224, 176, 162, 163, 167, 8226, 182, 223, 174, 169, 8482, 180, 168, 8800, 198, 216, 8734, 177, 8804, 8805, 165, 181, 8706, 8721, 8719, 960, 8747, 170, 186, 937, 230, 248, 191, 161, 172, 8730, 402, 8776, 8710, 171, 187, 8230, 160, 192, 195, 213, 338, 339, 8211, 8212, 8220, 8221, 8216, 8217, 247, 9674, 255, 376, 8260, 8364, 8249, 8250, 64257, 64258, 8225, 183, 8218, 8222, 8240, 194, 202, 193, 203, 200, 205, 206, 207, 204, 211, 212, 63743, 210, 218, 219, 217, 305, 710, 732, 175, 728, 729, 730, 184, 733, 731, 711],
                    "windows-874": [8364, 129, 130, 131, 132, 8230, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 152, 153, 154, 155, 156, 157, 158, 159, 160, 3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3642, null, null, null, null, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3674, 3675, null, null, null, null],
                    "windows-1250": [8364, 129, 8218, 131, 8222, 8230, 8224, 8225, 136, 8240, 352, 8249, 346, 356, 381, 377, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 152, 8482, 353, 8250, 347, 357, 382, 378, 160, 711, 728, 321, 164, 260, 166, 167, 168, 169, 350, 171, 172, 173, 174, 379, 176, 177, 731, 322, 180, 181, 182, 183, 184, 261, 351, 187, 317, 733, 318, 380, 340, 193, 194, 258, 196, 313, 262, 199, 268, 201, 280, 203, 282, 205, 206, 270, 272, 323, 327, 211, 212, 336, 214, 215, 344, 366, 218, 368, 220, 221, 354, 223, 341, 225, 226, 259, 228, 314, 263, 231, 269, 233, 281, 235, 283, 237, 238, 271, 273, 324, 328, 243, 244, 337, 246, 247, 345, 367, 250, 369, 252, 253, 355, 729],
                    "windows-1251": [1026, 1027, 8218, 1107, 8222, 8230, 8224, 8225, 8364, 8240, 1033, 8249, 1034, 1036, 1035, 1039, 1106, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 152, 8482, 1113, 8250, 1114, 1116, 1115, 1119, 160, 1038, 1118, 1032, 164, 1168, 166, 167, 1025, 169, 1028, 171, 172, 173, 174, 1031, 176, 177, 1030, 1110, 1169, 181, 182, 183, 1105, 8470, 1108, 187, 1112, 1029, 1109, 1111, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103],
                    "windows-1252": [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, 141, 381, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, 157, 382, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255],
                    "windows-1253": [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 136, 8240, 138, 8249, 140, 141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 152, 8482, 154, 8250, 156, 157, 158, 159, 160, 901, 902, 163, 164, 165, 166, 167, 168, 169, null, 171, 172, 173, 174, 8213, 176, 177, 178, 179, 900, 181, 182, 183, 904, 905, 906, 187, 908, 189, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, null, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, null],
                    "windows-1254": [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, 141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, 157, 158, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 286, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 304, 350, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 287, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 305, 351, 255],
                    "windows-1255": [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 138, 8249, 140, 141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 154, 8250, 156, 157, 158, 159, 160, 161, 162, 163, 8362, 165, 166, 167, 168, 169, 215, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 247, 187, 188, 189, 190, 191, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1520, 1521, 1522, 1523, 1524, null, null, null, null, null, null, null, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, null, null, 8206, 8207, null],
                    "windows-1256": [8364, 1662, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 1657, 8249, 338, 1670, 1688, 1672, 1711, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 1705, 8482, 1681, 8250, 339, 8204, 8205, 1722, 160, 1548, 162, 163, 164, 165, 166, 167, 168, 169, 1726, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1563, 187, 188, 189, 190, 1567, 1729, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 215, 1591, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 224, 1604, 226, 1605, 1606, 1607, 1608, 231, 232, 233, 234, 235, 1609, 1610, 238, 239, 1611, 1612, 1613, 1614, 244, 1615, 1616, 247, 1617, 249, 1618, 251, 252, 8206, 8207, 1746],
                    "windows-1257": [8364, 129, 8218, 131, 8222, 8230, 8224, 8225, 136, 8240, 138, 8249, 140, 168, 711, 184, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 152, 8482, 154, 8250, 156, 175, 731, 159, 160, null, 162, 163, 164, null, 166, 167, 216, 169, 342, 171, 172, 173, 174, 198, 176, 177, 178, 179, 180, 181, 182, 183, 248, 185, 343, 187, 188, 189, 190, 230, 260, 302, 256, 262, 196, 197, 280, 274, 268, 201, 377, 278, 290, 310, 298, 315, 352, 323, 325, 211, 332, 213, 214, 215, 370, 321, 346, 362, 220, 379, 381, 223, 261, 303, 257, 263, 228, 229, 281, 275, 269, 233, 378, 279, 291, 311, 299, 316, 353, 324, 326, 243, 333, 245, 246, 247, 371, 322, 347, 363, 252, 380, 382, 729],
                    "windows-1258": [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 138, 8249, 338, 141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 154, 8250, 339, 157, 158, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 258, 196, 197, 198, 199, 200, 201, 202, 203, 768, 205, 206, 207, 272, 209, 777, 211, 212, 416, 214, 215, 216, 217, 218, 219, 220, 431, 771, 223, 224, 225, 226, 259, 228, 229, 230, 231, 232, 233, 234, 235, 769, 237, 238, 239, 273, 241, 803, 243, 244, 417, 246, 247, 248, 249, 250, 251, 252, 432, 8363, 255],
                    "x-mac-cyrillic": [1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 8224, 176, 1168, 163, 167, 8226, 182, 1030, 174, 169, 8482, 1026, 1106, 8800, 1027, 1107, 8734, 177, 8804, 8805, 1110, 181, 1169, 1032, 1028, 1108, 1031, 1111, 1033, 1113, 1034, 1114, 1112, 1029, 172, 8730, 402, 8776, 8710, 171, 187, 8230, 160, 1035, 1115, 1036, 1116, 1109, 8211, 8212, 8220, 8221, 8216, 8217, 247, 8222, 1038, 1118, 1039, 1119, 8470, 1025, 1105, 1103, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 8364]
                }
            })(pg || {})
        });
        var yg = Mn((hg, d6) => {
            "use strict";
            (function (n) {
                "use strict";
                typeof d6 < "u" && d6.exports && !n["encoding-indexes"] && (n["encoding-indexes"] = mg()["encoding-indexes"]);

                function e(Q, E2, s2) {
                    return E2 <= Q && Q <= s2
                }

                function r(Q, E2) {
                    return Q.indexOf(E2) !== -1
                }

                var l = Math.floor;

                function i(Q) {
                    if (Q === void 0) return {};
                    if (Q === Object(Q)) return Q;
                    throw TypeError("Could not convert argument to dictionary")
                }

                function o(Q) {
                    for (var E2 = String(Q), s2 = E2.length, Y = 0, K = []; Y < s2;) {
                        var d2 = E2.charCodeAt(Y);
                        if (d2 < 55296 || d2 > 57343) K.push(d2); else if (56320 <= d2 && d2 <= 57343) K.push(65533); else if (55296 <= d2 && d2 <= 56319) if (Y === s2 - 1) K.push(65533); else {
                            var N2 = E2.charCodeAt(Y + 1);
                            if (56320 <= N2 && N2 <= 57343) {
                                var c3 = d2 & 1023, B2 = N2 & 1023;
                                K.push(65536 + (c3 << 10) + B2), Y += 1
                            } else K.push(65533)
                        }
                        Y += 1
                    }
                    return K
                }

                function f(Q) {
                    for (var E2 = "", s2 = 0; s2 < Q.length; ++s2) {
                        var Y = Q[s2];
                        Y <= 65535 ? E2 += String.fromCharCode(Y) : (Y -= 65536, E2 += String.fromCharCode((Y >> 10) + 55296, (Y & 1023) + 56320))
                    }
                    return E2
                }

                function s(Q) {
                    return 0 <= Q && Q <= 127
                }

                var a = s, g = -1;

                function b(Q) {
                    this.tokens = [].slice.call(Q), this.tokens.reverse()
                }

                b.prototype = {
                    endOfStream: function () {
                        return !this.tokens.length
                    }, read: function () {
                        return this.tokens.length ? this.tokens.pop() : g
                    }, prepend: function (Q) {
                        if (Array.isArray(Q)) for (var E2 = Q; E2.length;) this.tokens.push(E2.pop()); else this.tokens.push(Q)
                    }, push: function (Q) {
                        if (Array.isArray(Q)) for (var E2 = Q; E2.length;) this.tokens.unshift(E2.shift()); else this.tokens.unshift(Q)
                    }
                };
                var B = -1;

                function w(Q, E2) {
                    if (Q) throw TypeError("Decoder error");
                    return E2 || 65533
                }

                function P(Q) {
                    throw TypeError("The code point " + Q + " could not be encoded.")
                }

                function D() {
                }

                D.prototype = {
                    handler: function (Q, E2) {
                    }
                };

                function T() {
                }

                T.prototype = {
                    handler: function (Q, E2) {
                    }
                };

                function k(Q) {
                    return Q = String(Q).trim().toLowerCase(), Object.prototype.hasOwnProperty.call(G, Q) ? G[Q] : null
                }

                var R = [{
                    encodings: [{labels: ["unicode-1-1-utf-8", "utf-8", "utf8"], name: "UTF-8"}],
                    heading: "The Encoding"
                }, {
                    encodings: [{
                        labels: ["866", "cp866", "csibm866", "ibm866"],
                        name: "IBM866"
                    }, {
                        labels: ["csisolatin2", "iso-8859-2", "iso-ir-101", "iso8859-2", "iso88592", "iso_8859-2", "iso_8859-2:1987", "l2", "latin2"],
                        name: "ISO-8859-2"
                    }, {
                        labels: ["csisolatin3", "iso-8859-3", "iso-ir-109", "iso8859-3", "iso88593", "iso_8859-3", "iso_8859-3:1988", "l3", "latin3"],
                        name: "ISO-8859-3"
                    }, {
                        labels: ["csisolatin4", "iso-8859-4", "iso-ir-110", "iso8859-4", "iso88594", "iso_8859-4", "iso_8859-4:1988", "l4", "latin4"],
                        name: "ISO-8859-4"
                    }, {
                        labels: ["csisolatincyrillic", "cyrillic", "iso-8859-5", "iso-ir-144", "iso8859-5", "iso88595", "iso_8859-5", "iso_8859-5:1988"],
                        name: "ISO-8859-5"
                    }, {
                        labels: ["arabic", "asmo-708", "csiso88596e", "csiso88596i", "csisolatinarabic", "ecma-114", "iso-8859-6", "iso-8859-6-e", "iso-8859-6-i", "iso-ir-127", "iso8859-6", "iso88596", "iso_8859-6", "iso_8859-6:1987"],
                        name: "ISO-8859-6"
                    }, {
                        labels: ["csisolatingreek", "ecma-118", "elot_928", "greek", "greek8", "iso-8859-7", "iso-ir-126", "iso8859-7", "iso88597", "iso_8859-7", "iso_8859-7:1987", "sun_eu_greek"],
                        name: "ISO-8859-7"
                    }, {
                        labels: ["csiso88598e", "csisolatinhebrew", "hebrew", "iso-8859-8", "iso-8859-8-e", "iso-ir-138", "iso8859-8", "iso88598", "iso_8859-8", "iso_8859-8:1988", "visual"],
                        name: "ISO-8859-8"
                    }, {
                        labels: ["csiso88598i", "iso-8859-8-i", "logical"],
                        name: "ISO-8859-8-I"
                    }, {
                        labels: ["csisolatin6", "iso-8859-10", "iso-ir-157", "iso8859-10", "iso885910", "l6", "latin6"],
                        name: "ISO-8859-10"
                    }, {
                        labels: ["iso-8859-13", "iso8859-13", "iso885913"],
                        name: "ISO-8859-13"
                    }, {
                        labels: ["iso-8859-14", "iso8859-14", "iso885914"],
                        name: "ISO-8859-14"
                    }, {
                        labels: ["csisolatin9", "iso-8859-15", "iso8859-15", "iso885915", "iso_8859-15", "l9"],
                        name: "ISO-8859-15"
                    }, {
                        labels: ["iso-8859-16"],
                        name: "ISO-8859-16"
                    }, {
                        labels: ["cskoi8r", "koi", "koi8", "koi8-r", "koi8_r"],
                        name: "KOI8-R"
                    }, {
                        labels: ["koi8-ru", "koi8-u"],
                        name: "KOI8-U"
                    }, {
                        labels: ["csmacintosh", "mac", "macintosh", "x-mac-roman"],
                        name: "macintosh"
                    }, {
                        labels: ["dos-874", "iso-8859-11", "iso8859-11", "iso885911", "tis-620", "windows-874"],
                        name: "windows-874"
                    }, {
                        labels: ["cp1250", "windows-1250", "x-cp1250"],
                        name: "windows-1250"
                    }, {
                        labels: ["cp1251", "windows-1251", "x-cp1251"],
                        name: "windows-1251"
                    }, {
                        labels: ["ansi_x3.4-1968", "ascii", "cp1252", "cp819", "csisolatin1", "ibm819", "iso-8859-1", "iso-ir-100", "iso8859-1", "iso88591", "iso_8859-1", "iso_8859-1:1987", "l1", "latin1", "us-ascii", "windows-1252", "x-cp1252"],
                        name: "windows-1252"
                    }, {
                        labels: ["cp1253", "windows-1253", "x-cp1253"],
                        name: "windows-1253"
                    }, {
                        labels: ["cp1254", "csisolatin5", "iso-8859-9", "iso-ir-148", "iso8859-9", "iso88599", "iso_8859-9", "iso_8859-9:1989", "l5", "latin5", "windows-1254", "x-cp1254"],
                        name: "windows-1254"
                    }, {
                        labels: ["cp1255", "windows-1255", "x-cp1255"],
                        name: "windows-1255"
                    }, {
                        labels: ["cp1256", "windows-1256", "x-cp1256"],
                        name: "windows-1256"
                    }, {
                        labels: ["cp1257", "windows-1257", "x-cp1257"],
                        name: "windows-1257"
                    }, {
                        labels: ["cp1258", "windows-1258", "x-cp1258"],
                        name: "windows-1258"
                    }, {labels: ["x-mac-cyrillic", "x-mac-ukrainian"], name: "x-mac-cyrillic"}],
                    heading: "Legacy single-byte encodings"
                }, {
                    encodings: [{
                        labels: ["chinese", "csgb2312", "csiso58gb231280", "gb2312", "gb_2312", "gb_2312-80", "gbk", "iso-ir-58", "x-gbk"],
                        name: "GBK"
                    }, {labels: ["gb18030"], name: "gb18030"}],
                    heading: "Legacy multi-byte Chinese (simplified) encodings"
                }, {
                    encodings: [{labels: ["big5", "big5-hkscs", "cn-big5", "csbig5", "x-x-big5"], name: "Big5"}],
                    heading: "Legacy multi-byte Chinese (traditional) encodings"
                }, {
                    encodings: [{
                        labels: ["cseucpkdfmtjapanese", "euc-jp", "x-euc-jp"],
                        name: "EUC-JP"
                    }, {
                        labels: ["csiso2022jp", "iso-2022-jp"],
                        name: "ISO-2022-JP"
                    }, {
                        labels: ["csshiftjis", "ms932", "ms_kanji", "shift-jis", "shift_jis", "sjis", "windows-31j", "x-sjis"],
                        name: "Shift_JIS"
                    }], heading: "Legacy multi-byte Japanese encodings"
                }, {
                    encodings: [{
                        labels: ["cseuckr", "csksc56011987", "euc-kr", "iso-ir-149", "korean", "ks_c_5601-1987", "ks_c_5601-1989", "ksc5601", "ksc_5601", "windows-949"],
                        name: "EUC-KR"
                    }], heading: "Legacy multi-byte Korean encodings"
                }, {
                    encodings: [{
                        labels: ["csiso2022kr", "hz-gb-2312", "iso-2022-cn", "iso-2022-cn-ext", "iso-2022-kr"],
                        name: "replacement"
                    }, {labels: ["utf-16be"], name: "UTF-16BE"}, {
                        labels: ["utf-16", "utf-16le"],
                        name: "UTF-16LE"
                    }, {labels: ["x-user-defined"], name: "x-user-defined"}], heading: "Legacy miscellaneous encodings"
                }], G = {};
                R.forEach(function (Q) {
                    Q.encodings.forEach(function (E2) {
                        E2.labels.forEach(function (s2) {
                            G[s2] = E2
                        })
                    })
                });
                var Z = {}, S2 = {};

                function D2(Q, E2) {
                    return E2 && E2[Q] || null
                }

                function T2(Q, E2) {
                    var s2 = E2.indexOf(Q);
                    return s2 === -1 ? null : s2
                }

                function l2(Q) {
                    if (!("encoding-indexes" in n)) throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");
                    return n["encoding-indexes"][Q]
                }

                function b2(Q) {
                    if (Q > 39419 && Q < 189e3 || Q > 1237575) return null;
                    if (Q === 7457) return 59335;
                    var E2 = 0, s2 = 0, Y = l2("gb18030-ranges"), K;
                    for (K = 0; K < Y.length; ++K) {
                        var d2 = Y[K];
                        if (d2[0] <= Q) E2 = d2[0], s2 = d2[1]; else break
                    }
                    return s2 + Q - E2
                }

                function g2(Q) {
                    if (Q === 59335) return 7457;
                    var E2 = 0, s2 = 0, Y = l2("gb18030-ranges"), K;
                    for (K = 0; K < Y.length; ++K) {
                        var d2 = Y[K];
                        if (d2[1] <= Q) E2 = d2[1], s2 = d2[0]; else break
                    }
                    return s2 + Q - E2
                }

                function p2(Q) {
                    O = O || l2("jis0208").map(function (s2, Y) {
                        return e(Y, 8272, 8835) ? null : s2
                    });
                    var E2 = O;
                    return E2.indexOf(Q)
                }

                var O;

                function J(Q) {
                    h2 = h2 || l2("big5").map(function (s2, Y) {
                        return Y < (161 - 129) * 157 ? null : s2
                    });
                    var E2 = h2;
                    return Q === 9552 || Q === 9566 || Q === 9569 || Q === 9578 || Q === 21313 || Q === 21317 ? E2.lastIndexOf(Q) : T2(Q, E2)
                }

                var h2, y2 = "utf-8";

                function k2(Q, E2) {
                    if (!(this instanceof k2)) throw TypeError("Called as a function. Did you forget 'new'?");
                    Q = Q !== void 0 ? String(Q) : y2, E2 = i(E2), this._encoding = null, this._decoder = null, this._ignoreBOM = !1, this._BOMseen = !1, this._error_mode = "replacement", this._do_not_flush = !1;
                    var s2 = k(Q);
                    if (s2 === null || s2.name === "replacement") throw RangeError("Unknown encoding: " + Q);
                    if (!S2[s2.name]) throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");
                    var Y = this;
                    return Y._encoding = s2, E2.fatal && (Y._error_mode = "fatal"), E2.ignoreBOM && (Y._ignoreBOM = !0), Object.defineProperty || (this.encoding = Y._encoding.name.toLowerCase(), this.fatal = Y._error_mode === "fatal", this.ignoreBOM = Y._ignoreBOM), Y
                }

                Object.defineProperty && (Object.defineProperty(k2.prototype, "encoding", {
                    get: function () {
                        return this._encoding.name.toLowerCase()
                    }
                }), Object.defineProperty(k2.prototype, "fatal", {
                    get: function () {
                        return this._error_mode === "fatal"
                    }
                }), Object.defineProperty(k2.prototype, "ignoreBOM", {
                    get: function () {
                        return this._ignoreBOM
                    }
                })), k2.prototype.decode = function (E2, s2) {
                    var Y;
                    typeof E2 == "object" && E2 instanceof ArrayBuffer ? Y = new Uint8Array(E2) : typeof E2 == "object" && "buffer" in E2 && E2.buffer instanceof ArrayBuffer ? Y = new Uint8Array(E2.buffer, E2.byteOffset, E2.byteLength) : Y = new Uint8Array(0), s2 = i(s2), this._do_not_flush || (this._decoder = S2[this._encoding.name]({fatal: this._error_mode === "fatal"}), this._BOMseen = !1), this._do_not_flush = !!s2.stream;
                    for (var K = new b(Y), d2 = [], N2; ;) {
                        var c3 = K.read();
                        if (c3 === g || (N2 = this._decoder.handler(K, c3), N2 === B)) break;
                        N2 !== null && (Array.isArray(N2) ? d2.push.apply(d2, N2) : d2.push(N2))
                    }
                    if (!this._do_not_flush) {
                        do {
                            if (N2 = this._decoder.handler(K, K.read()), N2 === B) break;
                            N2 !== null && (Array.isArray(N2) ? d2.push.apply(d2, N2) : d2.push(N2))
                        } while (!K.endOfStream());
                        this._decoder = null
                    }

                    function B2(En) {
                        return r(["UTF-8", "UTF-16LE", "UTF-16BE"], this._encoding.name) && !this._ignoreBOM && !this._BOMseen && (En.length > 0 && En[0] === 65279 ? (this._BOMseen = !0, En.shift()) : En.length > 0 && (this._BOMseen = !0)), f(En)
                    }

                    return B2.call(this, d2)
                };

                function Z2(Q, E2) {
                    if (!(this instanceof Z2)) throw TypeError("Called as a function. Did you forget 'new'?");
                    E2 = i(E2), this._encoding = null, this._encoder = null, this._do_not_flush = !1, this._fatal = E2.fatal ? "fatal" : "replacement";
                    var s2 = this;
                    if (E2.NONSTANDARD_allowLegacyEncoding) {
                        Q = Q !== void 0 ? String(Q) : y2;
                        var Y = k(Q);
                        if (Y === null || Y.name === "replacement") throw RangeError("Unknown encoding: " + Q);
                        if (!Z[Y.name]) throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");
                        s2._encoding = Y
                    } else s2._encoding = k("utf-8"), Q !== void 0 && "console" in n && console.warn("TextEncoder constructor called with encoding label, which is ignored.");
                    return Object.defineProperty || (this.encoding = s2._encoding.name.toLowerCase()), s2
                }

                Object.defineProperty && Object.defineProperty(Z2.prototype, "encoding", {
                    get: function () {
                        return this._encoding.name.toLowerCase()
                    }
                }), Z2.prototype.encode = function (E2, s2) {
                    E2 = E2 === void 0 ? "" : String(E2), s2 = i(s2), this._do_not_flush || (this._encoder = Z[this._encoding.name]({fatal: this._fatal === "fatal"})), this._do_not_flush = !!s2.stream;
                    for (var Y = new b(o(E2)), K = [], d2; ;) {
                        var N2 = Y.read();
                        if (N2 === g || (d2 = this._encoder.handler(Y, N2), d2 === B)) break;
                        Array.isArray(d2) ? K.push.apply(K, d2) : K.push(d2)
                    }
                    if (!this._do_not_flush) {
                        for (; d2 = this._encoder.handler(Y, Y.read()), d2 !== B;) Array.isArray(d2) ? K.push.apply(K, d2) : K.push(d2);
                        this._encoder = null
                    }
                    return new Uint8Array(K)
                };

                function g3(Q) {
                    var E2 = Q.fatal, s2 = 0, Y = 0, K = 0, d2 = 128, N2 = 191;
                    this.handler = function (c3, B2) {
                        if (B2 === g && K !== 0) return K = 0, w(E2);
                        if (B2 === g) return B;
                        if (K === 0) {
                            if (e(B2, 0, 127)) return B2;
                            if (e(B2, 194, 223)) K = 1, s2 = B2 & 31; else if (e(B2, 224, 239)) B2 === 224 && (d2 = 160), B2 === 237 && (N2 = 159), K = 2, s2 = B2 & 15; else if (e(B2, 240, 244)) B2 === 240 && (d2 = 144), B2 === 244 && (N2 = 143), K = 3, s2 = B2 & 7; else return w(E2);
                            return null
                        }
                        if (!e(B2, d2, N2)) return s2 = K = Y = 0, d2 = 128, N2 = 191, c3.prepend(B2), w(E2);
                        if (d2 = 128, N2 = 191, s2 = s2 << 6 | B2 & 63, Y += 1, Y !== K) return null;
                        var En = s2;
                        return s2 = K = Y = 0, En
                    }
                }

                function P3(Q) {
                    var E2 = Q.fatal;
                    this.handler = function (s2, Y) {
                        if (Y === g) return B;
                        if (a(Y)) return Y;
                        var K, d2;
                        e(Y, 128, 2047) ? (K = 1, d2 = 192) : e(Y, 2048, 65535) ? (K = 2, d2 = 224) : e(Y, 65536, 1114111) && (K = 3, d2 = 240);
                        for (var N2 = [(Y >> 6 * K) + d2]; K > 0;) {
                            var c3 = Y >> 6 * (K - 1);
                            N2.push(128 | c3 & 63), K -= 1
                        }
                        return N2
                    }
                }

                Z["UTF-8"] = function (Q) {
                    return new P3(Q)
                }, S2["UTF-8"] = function (Q) {
                    return new g3(Q)
                };

                function U3(Q, E2) {
                    var s2 = E2.fatal;
                    this.handler = function (Y, K) {
                        if (K === g) return B;
                        if (s(K)) return K;
                        var d2 = Q[K - 128];
                        return d2 === null ? w(s2) : d2
                    }
                }

                function C3(Q, E2) {
                    var s2 = E2.fatal;
                    this.handler = function (Y, K) {
                        if (K === g) return B;
                        if (a(K)) return K;
                        var d2 = T2(K, Q);
                        return d2 === null && P(K), d2 + 128
                    }
                }

                (function () {
                    "encoding-indexes" in n && R.forEach(function (Q) {
                        Q.heading === "Legacy single-byte encodings" && Q.encodings.forEach(function (E2) {
                            var s2 = E2.name, Y = l2(s2.toLowerCase());
                            S2[s2] = function (K) {
                                return new U3(Y, K)
                            }, Z[s2] = function (K) {
                                return new C3(Y, K)
                            }
                        })
                    })
                })(), S2.GBK = function (Q) {
                    return new N3(Q)
                }, Z.GBK = function (Q) {
                    return new R3(Q, !0)
                };

                function N3(Q) {
                    var E2 = Q.fatal, s2 = 0, Y = 0, K = 0;
                    this.handler = function (d2, N2) {
                        if (N2 === g && s2 === 0 && Y === 0 && K === 0) return B;
                        N2 === g && (s2 !== 0 || Y !== 0 || K !== 0) && (s2 = 0, Y = 0, K = 0, w(E2));
                        var c3;
                        if (K !== 0) {
                            c3 = null, e(N2, 48, 57) && (c3 = b2((((s2 - 129) * 10 + Y - 48) * 126 + K - 129) * 10 + N2 - 48));
                            var B2 = [Y, K, N2];
                            return s2 = 0, Y = 0, K = 0, c3 === null ? (d2.prepend(B2), w(E2)) : c3
                        }
                        if (Y !== 0) return e(N2, 129, 254) ? (K = N2, null) : (d2.prepend([Y, N2]), s2 = 0, Y = 0, w(E2));
                        if (s2 !== 0) {
                            if (e(N2, 48, 57)) return Y = N2, null;
                            var En = s2, Zn = null;
                            s2 = 0;
                            var de = N2 < 127 ? 64 : 65;
                            return (e(N2, 64, 126) || e(N2, 128, 254)) && (Zn = (En - 129) * 190 + (N2 - de)), c3 = Zn === null ? null : D2(Zn, l2("gb18030")), c3 === null && s(N2) && d2.prepend(N2), c3 === null ? w(E2) : c3
                        }
                        return s(N2) ? N2 : N2 === 128 ? 8364 : e(N2, 129, 254) ? (s2 = N2, null) : w(E2)
                    }
                }

                function R3(Q, E2) {
                    var s2 = Q.fatal;
                    this.handler = function (Y, K) {
                        if (K === g) return B;
                        if (a(K)) return K;
                        if (K === 58853) return P(K);
                        if (E2 && K === 8364) return 128;
                        var d2 = T2(K, l2("gb18030"));
                        if (d2 !== null) {
                            var N2 = l(d2 / 190) + 129, c3 = d2 % 190, B2 = c3 < 63 ? 64 : 65;
                            return [N2, c3 + B2]
                        }
                        if (E2) return P(K);
                        d2 = g2(K);
                        var En = l(d2 / 10 / 126 / 10);
                        d2 = d2 - En * 10 * 126 * 10;
                        var Zn = l(d2 / 10 / 126);
                        d2 = d2 - Zn * 10 * 126;
                        var de = l(d2 / 10), ee = d2 - de * 10;
                        return [En + 129, Zn + 48, de + 129, ee + 48]
                    }
                }

                Z.gb18030 = function (Q) {
                    return new R3(Q)
                }, S2.gb18030 = function (Q) {
                    return new N3(Q)
                };

                function un(Q) {
                    var E2 = Q.fatal, s2 = 0;
                    this.handler = function (Y, K) {
                        if (K === g && s2 !== 0) return s2 = 0, w(E2);
                        if (K === g && s2 === 0) return B;
                        if (s2 !== 0) {
                            var d2 = s2, N2 = null;
                            s2 = 0;
                            var c3 = K < 127 ? 64 : 98;
                            switch ((e(K, 64, 126) || e(K, 161, 254)) && (N2 = (d2 - 129) * 157 + (K - c3)), N2) {
                                case 1133:
                                    return [202, 772];
                                case 1135:
                                    return [202, 780];
                                case 1164:
                                    return [234, 772];
                                case 1166:
                                    return [234, 780]
                            }
                            var B2 = N2 === null ? null : D2(N2, l2("big5"));
                            return B2 === null && s(K) && Y.prepend(K), B2 === null ? w(E2) : B2
                        }
                        return s(K) ? K : e(K, 129, 254) ? (s2 = K, null) : w(E2)
                    }
                }

                function F3(Q) {
                    var E2 = Q.fatal;
                    this.handler = function (s2, Y) {
                        if (Y === g) return B;
                        if (a(Y)) return Y;
                        var K = J(Y);
                        if (K === null) return P(Y);
                        var d2 = l(K / 157) + 129;
                        if (d2 < 161) return P(Y);
                        var N2 = K % 157, c3 = N2 < 63 ? 64 : 98;
                        return [d2, N2 + c3]
                    }
                }

                Z.Big5 = function (Q) {
                    return new F3(Q)
                }, S2.Big5 = function (Q) {
                    return new un(Q)
                };

                function Dn(Q) {
                    var E2 = Q.fatal, s2 = !1, Y = 0;
                    this.handler = function (K, d2) {
                        if (d2 === g && Y !== 0) return Y = 0, w(E2);
                        if (d2 === g && Y === 0) return B;
                        if (Y === 142 && e(d2, 161, 223)) return Y = 0, 65377 - 161 + d2;
                        if (Y === 143 && e(d2, 161, 254)) return s2 = !0, Y = d2, null;
                        if (Y !== 0) {
                            var N2 = Y;
                            Y = 0;
                            var c3 = null;
                            return e(N2, 161, 254) && e(d2, 161, 254) && (c3 = D2((N2 - 161) * 94 + (d2 - 161), l2(s2 ? "jis0212" : "jis0208"))), s2 = !1, e(d2, 161, 254) || K.prepend(d2), c3 === null ? w(E2) : c3
                        }
                        return s(d2) ? d2 : d2 === 142 || d2 === 143 || e(d2, 161, 254) ? (Y = d2, null) : w(E2)
                    }
                }

                function o2(Q) {
                    var E2 = Q.fatal;
                    this.handler = function (s2, Y) {
                        if (Y === g) return B;
                        if (a(Y)) return Y;
                        if (Y === 165) return 92;
                        if (Y === 8254) return 126;
                        if (e(Y, 65377, 65439)) return [142, Y - 65377 + 161];
                        Y === 8722 && (Y = 65293);
                        var K = T2(Y, l2("jis0208"));
                        if (K === null) return P(Y);
                        var d2 = l(K / 94) + 161, N2 = K % 94 + 161;
                        return [d2, N2]
                    }
                }

                Z["EUC-JP"] = function (Q) {
                    return new o2(Q)
                }, S2["EUC-JP"] = function (Q) {
                    return new Dn(Q)
                };

                function P2(Q) {
                    var E2 = Q.fatal,
                        s2 = {ASCII: 0, Roman: 1, Katakana: 2, LeadByte: 3, TrailByte: 4, EscapeStart: 5, Escape: 6},
                        Y = s2.ASCII, K = s2.ASCII, d2 = 0, N2 = !1;
                    this.handler = function (c3, B2) {
                        switch (Y) {
                            default:
                            case s2.ASCII:
                                return B2 === 27 ? (Y = s2.EscapeStart, null) : e(B2, 0, 127) && B2 !== 14 && B2 !== 15 && B2 !== 27 ? (N2 = !1, B2) : B2 === g ? B : (N2 = !1, w(E2));
                            case s2.Roman:
                                return B2 === 27 ? (Y = s2.EscapeStart, null) : B2 === 92 ? (N2 = !1, 165) : B2 === 126 ? (N2 = !1, 8254) : e(B2, 0, 127) && B2 !== 14 && B2 !== 15 && B2 !== 27 && B2 !== 92 && B2 !== 126 ? (N2 = !1, B2) : B2 === g ? B : (N2 = !1, w(E2));
                            case s2.Katakana:
                                return B2 === 27 ? (Y = s2.EscapeStart, null) : e(B2, 33, 95) ? (N2 = !1, 65377 - 33 + B2) : B2 === g ? B : (N2 = !1, w(E2));
                            case s2.LeadByte:
                                return B2 === 27 ? (Y = s2.EscapeStart, null) : e(B2, 33, 126) ? (N2 = !1, d2 = B2, Y = s2.TrailByte, null) : B2 === g ? B : (N2 = !1, w(E2));
                            case s2.TrailByte:
                                if (B2 === 27) return Y = s2.EscapeStart, w(E2);
                                if (e(B2, 33, 126)) {
                                    Y = s2.LeadByte;
                                    var En = (d2 - 33) * 94 + B2 - 33, Zn = D2(En, l2("jis0208"));
                                    return Zn === null ? w(E2) : Zn
                                }
                                return B2 === g ? (Y = s2.LeadByte, c3.prepend(B2), w(E2)) : (Y = s2.LeadByte, w(E2));
                            case s2.EscapeStart:
                                return B2 === 36 || B2 === 40 ? (d2 = B2, Y = s2.Escape, null) : (c3.prepend(B2), N2 = !1, Y = K, w(E2));
                            case s2.Escape:
                                var de = d2;
                                d2 = 0;
                                var ee = null;
                                if (de === 40 && B2 === 66 && (ee = s2.ASCII), de === 40 && B2 === 74 && (ee = s2.Roman), de === 40 && B2 === 73 && (ee = s2.Katakana), de === 36 && (B2 === 64 || B2 === 66) && (ee = s2.LeadByte), ee !== null) {
                                    Y = Y = ee;
                                    var wl = N2;
                                    return N2 = !0, wl ? w(E2) : null
                                }
                                return c3.prepend([de, B2]), N2 = !1, Y = K, w(E2)
                        }
                    }
                }

                function I2(Q) {
                    var E2 = Q.fatal, s2 = {ASCII: 0, Roman: 1, jis0208: 2}, Y = s2.ASCII;
                    this.handler = function (K, d2) {
                        if (d2 === g && Y !== s2.ASCII) return K.prepend(d2), Y = s2.ASCII, [27, 40, 66];
                        if (d2 === g && Y === s2.ASCII) return B;
                        if ((Y === s2.ASCII || Y === s2.Roman) && (d2 === 14 || d2 === 15 || d2 === 27)) return P(65533);
                        if (Y === s2.ASCII && a(d2)) return d2;
                        if (Y === s2.Roman && (a(d2) && d2 !== 92 && d2 !== 126 || d2 == 165 || d2 == 8254)) {
                            if (a(d2)) return d2;
                            if (d2 === 165) return 92;
                            if (d2 === 8254) return 126
                        }
                        if (a(d2) && Y !== s2.ASCII) return K.prepend(d2), Y = s2.ASCII, [27, 40, 66];
                        if ((d2 === 165 || d2 === 8254) && Y !== s2.Roman) return K.prepend(d2), Y = s2.Roman, [27, 40, 74];
                        d2 === 8722 && (d2 = 65293);
                        var N2 = T2(d2, l2("jis0208"));
                        if (N2 === null) return P(d2);
                        if (Y !== s2.jis0208) return K.prepend(d2), Y = s2.jis0208, [27, 36, 66];
                        var c3 = l(N2 / 94) + 33, B2 = N2 % 94 + 33;
                        return [c3, B2]
                    }
                }

                Z["ISO-2022-JP"] = function (Q) {
                    return new I2(Q)
                }, S2["ISO-2022-JP"] = function (Q) {
                    return new P2(Q)
                };

                function $(Q) {
                    var E2 = Q.fatal, s2 = 0;
                    this.handler = function (Y, K) {
                        if (K === g && s2 !== 0) return s2 = 0, w(E2);
                        if (K === g && s2 === 0) return B;
                        if (s2 !== 0) {
                            var d2 = s2, N2 = null;
                            s2 = 0;
                            var c3 = K < 127 ? 64 : 65, B2 = d2 < 160 ? 129 : 193;
                            if ((e(K, 64, 126) || e(K, 128, 252)) && (N2 = (d2 - B2) * 188 + K - c3), e(N2, 8836, 10715)) return 57344 - 8836 + N2;
                            var En = N2 === null ? null : D2(N2, l2("jis0208"));
                            return En === null && s(K) && Y.prepend(K), En === null ? w(E2) : En
                        }
                        return s(K) || K === 128 ? K : e(K, 161, 223) ? 65377 - 161 + K : e(K, 129, 159) || e(K, 224, 252) ? (s2 = K, null) : w(E2)
                    }
                }

                function f2(Q) {
                    var E2 = Q.fatal;
                    this.handler = function (s2, Y) {
                        if (Y === g) return B;
                        if (a(Y) || Y === 128) return Y;
                        if (Y === 165) return 92;
                        if (Y === 8254) return 126;
                        if (e(Y, 65377, 65439)) return Y - 65377 + 161;
                        Y === 8722 && (Y = 65293);
                        var K = p2(Y);
                        if (K === null) return P(Y);
                        var d2 = l(K / 188), N2 = d2 < 31 ? 129 : 193, c3 = K % 188, B2 = c3 < 63 ? 64 : 65;
                        return [d2 + N2, c3 + B2]
                    }
                }

                Z.Shift_JIS = function (Q) {
                    return new f2(Q)
                }, S2.Shift_JIS = function (Q) {
                    return new $(Q)
                };

                function l3(Q) {
                    var E2 = Q.fatal, s2 = 0;
                    this.handler = function (Y, K) {
                        if (K === g && s2 !== 0) return s2 = 0, w(E2);
                        if (K === g && s2 === 0) return B;
                        if (s2 !== 0) {
                            var d2 = s2, N2 = null;
                            s2 = 0, e(K, 65, 254) && (N2 = (d2 - 129) * 190 + (K - 65));
                            var c3 = N2 === null ? null : D2(N2, l2("euc-kr"));
                            return N2 === null && s(K) && Y.prepend(K), c3 === null ? w(E2) : c3
                        }
                        return s(K) ? K : e(K, 129, 254) ? (s2 = K, null) : w(E2)
                    }
                }

                function D3(Q) {
                    var E2 = Q.fatal;
                    this.handler = function (s2, Y) {
                        if (Y === g) return B;
                        if (a(Y)) return Y;
                        var K = T2(Y, l2("euc-kr"));
                        if (K === null) return P(Y);
                        var d2 = l(K / 190) + 129, N2 = K % 190 + 65;
                        return [d2, N2]
                    }
                }

                Z["EUC-KR"] = function (Q) {
                    return new D3(Q)
                }, S2["EUC-KR"] = function (Q) {
                    return new l3(Q)
                };

                function Q3(Q, E2) {
                    var s2 = Q >> 8, Y = Q & 255;
                    return E2 ? [s2, Y] : [Y, s2]
                }

                function pn(Q, E2) {
                    var s2 = E2.fatal, Y = null, K = null;
                    this.handler = function (d2, N2) {
                        if (N2 === g && (Y !== null || K !== null)) return w(s2);
                        if (N2 === g && Y === null && K === null) return B;
                        if (Y === null) return Y = N2, null;
                        var c3;
                        if (Q ? c3 = (Y << 8) + N2 : c3 = (N2 << 8) + Y, Y = null, K !== null) {
                            var B2 = K;
                            return K = null, e(c3, 56320, 57343) ? 65536 + (B2 - 55296) * 1024 + (c3 - 56320) : (d2.prepend(Q3(c3, Q)), w(s2))
                        }
                        return e(c3, 55296, 56319) ? (K = c3, null) : e(c3, 56320, 57343) ? w(s2) : c3
                    }
                }

                function Fl(Q, E2) {
                    var s2 = E2.fatal;
                    this.handler = function (Y, K) {
                        if (K === g) return B;
                        if (e(K, 0, 65535)) return Q3(K, Q);
                        var d2 = Q3((K - 65536 >> 10) + 55296, Q), N2 = Q3((K - 65536 & 1023) + 56320, Q);
                        return d2.concat(N2)
                    }
                }

                Z["UTF-16BE"] = function (Q) {
                    return new Fl(!0, Q)
                }, S2["UTF-16BE"] = function (Q) {
                    return new pn(!0, Q)
                }, Z["UTF-16LE"] = function (Q) {
                    return new Fl(!1, Q)
                }, S2["UTF-16LE"] = function (Q) {
                    return new pn(!1, Q)
                };

                function ie(Q) {
                    var E2 = Q.fatal;
                    this.handler = function (s2, Y) {
                        return Y === g ? B : s(Y) ? Y : 63360 + Y - 128
                    }
                }

                function ct(Q) {
                    var E2 = Q.fatal;
                    this.handler = function (s2, Y) {
                        return Y === g ? B : a(Y) ? Y : e(Y, 63360, 63487) ? Y - 63360 + 128 : P(Y)
                    }
                }

                Z["x-user-defined"] = function (Q) {
                    return new ct(Q)
                }, S2["x-user-defined"] = function (Q) {
                    return new ie(Q)
                }, n.TextEncoder || (n.TextEncoder = Z2), n.TextDecoder || (n.TextDecoder = k2), typeof d6 < "u" && d6.exports && (d6.exports = {
                    TextEncoder: n.TextEncoder,
                    TextDecoder: n.TextDecoder,
                    EncodingIndexes: n["encoding-indexes"]
                })
            })(hg || {})
        });
        var bg = Mn((pL, xg) => {
            "use strict";
            var gg = yg();
            xg.exports = {TextEncoder: gg.TextEncoder, TextDecoder: gg.TextDecoder}
        });
        var wg = Mn((Ar, Sg) => {
            "use strict";
            (function (n, e) {
                typeof Ar == "object" && typeof Sg < "u" ? e(Ar) : typeof define == "function" && define.amd ? define("eth-connect", ["exports"], e) : e((n = typeof globalThis < "u" ? globalThis : n || self).ethconnect = {})
            })(Ar, function (n) {
                "use strict";

                function e(m) {
                    if (m.jsonrpc = "2.0", !m.id || typeof m.id != "number" || Math.floor(m.id) !== m.id) throw new Error(`Invalid RPC message(invalid id) message: ${JSON.stringify(m)}`);
                    if (!m.method || typeof m.method != "string" || m.method.trim().length === 0) throw new Error(`Invalid RPC message(invalid method) message: ${JSON.stringify(m)}`);
                    if (!m.params || typeof m.params != "object") throw new Error(`Invalid RPC message(invalid params) message: ${JSON.stringify(m)}`);
                    return m
                }

                var r = {};

                function l() {
                    let m, y, E = new Promise((I, z) => {
                        m = j => {
                            I(j), E.isPending = !1
                        }, y = j => {
                            z(j), E.isPending = !1
                        }
                    }).catch(I => Promise.reject(I));
                    return E.resolve = m, E.reject = y, "finally" in E || (E.finally = I => {
                        E.then(I), E.catch(I)
                    }), E.isPending = !0, E
                }

                Object.defineProperty(r, "__esModule", {value: !0});
                var i = r.future = l;
                r.default = l;
                var o = {exports: {}};
                (function (m) {
                    (function () {
                        var y = "input is invalid type", E = !1, I = E ? void 0 : {};
                        I.JS_SHA3_NO_WINDOW && (E = !1);
                        var z = !E && typeof self == "object";
                        !I.JS_SHA3_NO_NODE_JS && typeof process == "object" && process.versions && process.versions.node ? I = global : z && (I = self);
                        var j = !I.JS_SHA3_NO_COMMON_JS && m.exports,
                            _2 = !I.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u",
                            J2 = "0123456789abcdef".split(""), f3 = [4, 1024, 262144, 67108864], d3 = [0, 8, 16, 24],
                            _e = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648],
                            _n = [224, 256, 384, 512], O2 = [128, 256],
                            ae = ["hex", "buffer", "arrayBuffer", "array", "digest"], mn = {128: 168, 256: 136};
                        !I.JS_SHA3_NO_NODE_JS && Array.isArray || (Array.isArray = function (h) {
                            return Object.prototype.toString.call(h) === "[object Array]"
                        }), !_2 || !I.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function (h) {
                            return typeof h == "object" && h.buffer && h.buffer.constructor === ArrayBuffer
                        });
                        for (var Sn = function (h, v, U) {
                            return function (A) {
                                return new nn(h, v, h).update(A)[U]()
                            }
                        }, Ee = function (h, v, U) {
                            return function (A, W) {
                                return new nn(h, v, W).update(A)[U]()
                            }
                        }, Hl = function (h, v, U) {
                            return function (A, W, H, V) {
                                return Pe["cshake" + h].update(A, W, H, V)[U]()
                            }
                        }, Pn = function (h, v, U) {
                            return function (A, W, H, V) {
                                return Pe["kmac" + h].update(A, W, H, V)[U]()
                            }
                        }, Te = function (h, v, U, A) {
                            for (var W = 0; W < ae.length; ++W) {
                                var H = ae[W];
                                h[H] = v(U, A, H)
                            }
                            return h
                        }, mt = function (h, v) {
                            var U = Sn(h, v, "hex");
                            return U.create = function () {
                                return new nn(h, v, h)
                            }, U.update = function (A) {
                                return U.create().update(A)
                            }, Te(U, Sn, h, v)
                        }, ht = [{
                            name: "keccak",
                            padding: [1, 256, 65536, 16777216],
                            bits: _n,
                            createMethod: mt
                        }, {
                            name: "sha3",
                            padding: [6, 1536, 393216, 100663296],
                            bits: _n,
                            createMethod: mt
                        }, {
                            name: "shake",
                            padding: [31, 7936, 2031616, 520093696],
                            bits: O2,
                            createMethod: function (h, v) {
                                var U = Ee(h, v, "hex");
                                return U.create = function (A) {
                                    return new nn(h, v, A)
                                }, U.update = function (A, W) {
                                    return U.create(W).update(A)
                                }, Te(U, Ee, h, v)
                            }
                        }, {
                            name: "cshake", padding: f3, bits: O2, createMethod: function (h, v) {
                                var U = mn[h], A = Hl(h, 0, "hex");
                                return A.create = function (W, H, V) {
                                    return H || V ? new nn(h, v, W).bytepad([H, V], U) : Pe["shake" + h].create(W)
                                }, A.update = function (W, H, V, r2) {
                                    return A.create(H, V, r2).update(W)
                                }, Te(A, Hl, h, v)
                            }
                        }, {
                            name: "kmac", padding: f3, bits: O2, createMethod: function (h, v) {
                                var U = mn[h], A = Pn(h, 0, "hex");
                                return A.create = function (W, H, V) {
                                    return new Ze(h, v, H).bytepad(["KMAC", V], U).bytepad([W], U)
                                }, A.update = function (W, H, V, r2) {
                                    return A.create(W, V, r2).update(H)
                                }, Te(A, Pn, h, v)
                            }
                        }], Pe = {}, _l = [], zn = 0; zn < ht.length; ++zn) for (var yt = ht[zn], z2 = yt.bits, me = 0; me < z2.length; ++me) {
                            var Ke = yt.name + "_" + z2[me];
                            if (_l.push(Ke), Pe[Ke] = yt.createMethod(z2[me], yt.padding), yt.name !== "sha3") {
                                var zt = yt.name + z2[me];
                                _l.push(zt), Pe[zt] = Pe[Ke]
                            }
                        }

                        function nn(h, v, U) {
                            this.blocks = [], this.s = [], this.padding = v, this.outputBits = U, this.reset = !0, this.finalized = !1, this.block = 0, this.start = 0, this.blockCount = 1600 - (h << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = U >> 5, this.extraBytes = (31 & U) >> 3;
                            for (var A = 0; A < 50; ++A) this.s[A] = 0
                        }

                        function Ze(h, v, U) {
                            nn.call(this, h, v, U)
                        }

                        nn.prototype.update = function (h) {
                            if (this.finalized) throw new Error("finalize already called");
                            var v, U = typeof h;
                            if (U !== "string") {
                                if (U !== "object") throw new Error(y);
                                if (h === null) throw new Error(y);
                                if (_2 && h.constructor === ArrayBuffer) h = new Uint8Array(h); else if (!(Array.isArray(h) || _2 && ArrayBuffer.isView(h))) throw new Error(y);
                                v = !0
                            }
                            for (var A, W, H = this.blocks, V = this.byteCount, r2 = h.length, c2 = this.blockCount, i2 = 0, V2 = this.s; i2 < r2;) {
                                if (this.reset) for (this.reset = !1, H[0] = this.block, A = 1; A < c2 + 1; ++A) H[A] = 0;
                                if (v) for (A = this.start; i2 < r2 && A < V; ++i2) H[A >> 2] |= h[i2] << d3[3 & A++]; else for (A = this.start; i2 < r2 && A < V; ++i2) (W = h.charCodeAt(i2)) < 128 ? H[A >> 2] |= W << d3[3 & A++] : W < 2048 ? (H[A >> 2] |= (192 | W >> 6) << d3[3 & A++], H[A >> 2] |= (128 | 63 & W) << d3[3 & A++]) : W < 55296 || W >= 57344 ? (H[A >> 2] |= (224 | W >> 12) << d3[3 & A++], H[A >> 2] |= (128 | W >> 6 & 63) << d3[3 & A++], H[A >> 2] |= (128 | 63 & W) << d3[3 & A++]) : (W = 65536 + ((1023 & W) << 10 | 1023 & h.charCodeAt(++i2)), H[A >> 2] |= (240 | W >> 18) << d3[3 & A++], H[A >> 2] |= (128 | W >> 12 & 63) << d3[3 & A++], H[A >> 2] |= (128 | W >> 6 & 63) << d3[3 & A++], H[A >> 2] |= (128 | 63 & W) << d3[3 & A++]);
                                if (this.lastByteIndex = A, A >= V) {
                                    for (this.start = A - V, this.block = H[c2], A = 0; A < c2; ++A) V2[A] ^= H[A];
                                    _(V2), this.reset = !0
                                } else this.start = A
                            }
                            return this
                        }, nn.prototype.encode = function (h, v) {
                            var U = 255 & h, A = 1, W = [U];
                            for (U = 255 & (h >>= 8); U > 0;) W.unshift(U), U = 255 & (h >>= 8), ++A;
                            return v ? W.push(A) : W.unshift(A), this.update(W), W.length
                        }, nn.prototype.encodeString = function (h) {
                            var v, U = typeof h;
                            if (U !== "string") {
                                if (U !== "object") throw new Error(y);
                                if (h === null) throw new Error(y);
                                if (_2 && h.constructor === ArrayBuffer) h = new Uint8Array(h); else if (!(Array.isArray(h) || _2 && ArrayBuffer.isView(h))) throw new Error(y);
                                v = !0
                            }
                            var A = 0, W = h.length;
                            if (v) A = W; else for (var H = 0; H < h.length; ++H) {
                                var V = h.charCodeAt(H);
                                V < 128 ? A += 1 : V < 2048 ? A += 2 : V < 55296 || V >= 57344 ? A += 3 : (V = 65536 + ((1023 & V) << 10 | 1023 & h.charCodeAt(++H)), A += 4)
                            }
                            return A += this.encode(8 * A), this.update(h), A
                        }, nn.prototype.bytepad = function (h, v) {
                            for (var U = this.encode(v), A = 0; A < h.length; ++A) U += this.encodeString(h[A]);
                            var W = v - U % v, H = [];
                            return H.length = W, this.update(H), this
                        }, nn.prototype.finalize = function () {
                            if (!this.finalized) {
                                this.finalized = !0;
                                var h = this.blocks, v = this.lastByteIndex, U = this.blockCount, A = this.s;
                                if (h[v >> 2] |= this.padding[3 & v], this.lastByteIndex === this.byteCount) for (h[0] = h[U], v = 1; v < U + 1; ++v) h[v] = 0;
                                for (h[U - 1] |= 2147483648, v = 0; v < U; ++v) A[v] ^= h[v];
                                _(A)
                            }
                        }, nn.prototype.toString = nn.prototype.hex = function () {
                            this.finalize();
                            for (var h, v = this.blockCount, U = this.s, A = this.outputBlocks, W = this.extraBytes, H = 0, V = 0, r2 = ""; V < A;) {
                                for (H = 0; H < v && V < A; ++H, ++V) h = U[H], r2 += J2[h >> 4 & 15] + J2[15 & h] + J2[h >> 12 & 15] + J2[h >> 8 & 15] + J2[h >> 20 & 15] + J2[h >> 16 & 15] + J2[h >> 28 & 15] + J2[h >> 24 & 15];
                                V % v == 0 && (_(U), H = 0)
                            }
                            return W && (h = U[H], r2 += J2[h >> 4 & 15] + J2[15 & h], W > 1 && (r2 += J2[h >> 12 & 15] + J2[h >> 8 & 15]), W > 2 && (r2 += J2[h >> 20 & 15] + J2[h >> 16 & 15])), r2
                        }, nn.prototype.arrayBuffer = function () {
                            this.finalize();
                            var h, v = this.blockCount, U = this.s, A = this.outputBlocks, W = this.extraBytes, H = 0,
                                V = 0, r2 = this.outputBits >> 3;
                            h = W ? new ArrayBuffer(A + 1 << 2) : new ArrayBuffer(r2);
                            for (var c2 = new Uint32Array(h); V < A;) {
                                for (H = 0; H < v && V < A; ++H, ++V) c2[V] = U[H];
                                V % v == 0 && _(U)
                            }
                            return W && (c2[H] = U[H], h = h.slice(0, r2)), h
                        }, nn.prototype.buffer = nn.prototype.arrayBuffer, nn.prototype.digest = nn.prototype.array = function () {
                            this.finalize();
                            for (var h, v, U = this.blockCount, A = this.s, W = this.outputBlocks, H = this.extraBytes, V = 0, r2 = 0, c2 = []; r2 < W;) {
                                for (V = 0; V < U && r2 < W; ++V, ++r2) h = r2 << 2, v = A[V], c2[h] = 255 & v, c2[h + 1] = v >> 8 & 255, c2[h + 2] = v >> 16 & 255, c2[h + 3] = v >> 24 & 255;
                                r2 % U == 0 && _(A)
                            }
                            return H && (h = r2 << 2, v = A[V], c2[h] = 255 & v, H > 1 && (c2[h + 1] = v >> 8 & 255), H > 2 && (c2[h + 2] = v >> 16 & 255)), c2
                        }, Ze.prototype = new nn, Ze.prototype.finalize = function () {
                            return this.encode(this.outputBits, !0), nn.prototype.finalize.call(this)
                        };
                        var _ = function (h) {
                            var v, U, A, W, H, V, r2, c2, i2, V2, m3, v3, X3, q3, en, p3, K3, cn, gt, Wt, xt, Ae, Vl,
                                se, le, an, e1, V5, k4, G5, Qe, I4, N4, Ht, l1, t1, q1, r1, u1, Vt, je, bt, o1, Y1, ml,
                                Gl, i1, J1, Pl, jl, R4, X1, M4, K1, Z1, a1, O4, Q1, $1, n5, s1, o4, D4;
                            for (A = 0; A < 48; A += 2) W = h[0] ^ h[10] ^ h[20] ^ h[30] ^ h[40], H = h[1] ^ h[11] ^ h[21] ^ h[31] ^ h[41], V = h[2] ^ h[12] ^ h[22] ^ h[32] ^ h[42], r2 = h[3] ^ h[13] ^ h[23] ^ h[33] ^ h[43], c2 = h[4] ^ h[14] ^ h[24] ^ h[34] ^ h[44], i2 = h[5] ^ h[15] ^ h[25] ^ h[35] ^ h[45], V2 = h[6] ^ h[16] ^ h[26] ^ h[36] ^ h[46], m3 = h[7] ^ h[17] ^ h[27] ^ h[37] ^ h[47], v = (v3 = h[8] ^ h[18] ^ h[28] ^ h[38] ^ h[48]) ^ (V << 1 | r2 >>> 31), U = (X3 = h[9] ^ h[19] ^ h[29] ^ h[39] ^ h[49]) ^ (r2 << 1 | V >>> 31), h[0] ^= v, h[1] ^= U, h[10] ^= v, h[11] ^= U, h[20] ^= v, h[21] ^= U, h[30] ^= v, h[31] ^= U, h[40] ^= v, h[41] ^= U, v = W ^ (c2 << 1 | i2 >>> 31), U = H ^ (i2 << 1 | c2 >>> 31), h[2] ^= v, h[3] ^= U, h[12] ^= v, h[13] ^= U, h[22] ^= v, h[23] ^= U, h[32] ^= v, h[33] ^= U, h[42] ^= v, h[43] ^= U, v = V ^ (V2 << 1 | m3 >>> 31), U = r2 ^ (m3 << 1 | V2 >>> 31), h[4] ^= v, h[5] ^= U, h[14] ^= v, h[15] ^= U, h[24] ^= v, h[25] ^= U, h[34] ^= v, h[35] ^= U, h[44] ^= v, h[45] ^= U, v = c2 ^ (v3 << 1 | X3 >>> 31), U = i2 ^ (X3 << 1 | v3 >>> 31), h[6] ^= v, h[7] ^= U, h[16] ^= v, h[17] ^= U, h[26] ^= v, h[27] ^= U, h[36] ^= v, h[37] ^= U, h[46] ^= v, h[47] ^= U, v = V2 ^ (W << 1 | H >>> 31), U = m3 ^ (H << 1 | W >>> 31), h[8] ^= v, h[9] ^= U, h[18] ^= v, h[19] ^= U, h[28] ^= v, h[29] ^= U, h[38] ^= v, h[39] ^= U, h[48] ^= v, h[49] ^= U, q3 = h[0], en = h[1], Gl = h[11] << 4 | h[10] >>> 28, i1 = h[10] << 4 | h[11] >>> 28, V5 = h[20] << 3 | h[21] >>> 29, k4 = h[21] << 3 | h[20] >>> 29, n5 = h[31] << 9 | h[30] >>> 23, s1 = h[30] << 9 | h[31] >>> 23, bt = h[40] << 18 | h[41] >>> 14, o1 = h[41] << 18 | h[40] >>> 14, Ht = h[2] << 1 | h[3] >>> 31, l1 = h[3] << 1 | h[2] >>> 31, p3 = h[13] << 12 | h[12] >>> 20, K3 = h[12] << 12 | h[13] >>> 20, J1 = h[22] << 10 | h[23] >>> 22, Pl = h[23] << 10 | h[22] >>> 22, G5 = h[33] << 13 | h[32] >>> 19, Qe = h[32] << 13 | h[33] >>> 19, o4 = h[42] << 2 | h[43] >>> 30, D4 = h[43] << 2 | h[42] >>> 30, K1 = h[5] << 30 | h[4] >>> 2, Z1 = h[4] << 30 | h[5] >>> 2, t1 = h[14] << 6 | h[15] >>> 26, q1 = h[15] << 6 | h[14] >>> 26, cn = h[25] << 11 | h[24] >>> 21, gt = h[24] << 11 | h[25] >>> 21, jl = h[34] << 15 | h[35] >>> 17, R4 = h[35] << 15 | h[34] >>> 17, I4 = h[45] << 29 | h[44] >>> 3, N4 = h[44] << 29 | h[45] >>> 3, se = h[6] << 28 | h[7] >>> 4, le = h[7] << 28 | h[6] >>> 4, a1 = h[17] << 23 | h[16] >>> 9,O4 = h[16] << 23 | h[17] >>> 9,r1 = h[26] << 25 | h[27] >>> 7,u1 = h[27] << 25 | h[26] >>> 7,Wt = h[36] << 21 | h[37] >>> 11,xt = h[37] << 21 | h[36] >>> 11,X1 = h[47] << 24 | h[46] >>> 8,M4 = h[46] << 24 | h[47] >>> 8,Y1 = h[8] << 27 | h[9] >>> 5,ml = h[9] << 27 | h[8] >>> 5,an = h[18] << 20 | h[19] >>> 12,e1 = h[19] << 20 | h[18] >>> 12,Q1 = h[29] << 7 | h[28] >>> 25,$1 = h[28] << 7 | h[29] >>> 25,Vt = h[38] << 8 | h[39] >>> 24,je = h[39] << 8 | h[38] >>> 24,Ae = h[48] << 14 | h[49] >>> 18,Vl = h[49] << 14 | h[48] >>> 18,h[0] = q3 ^ ~p3 & cn,h[1] = en ^ ~K3 & gt,h[10] = se ^ ~an & V5,h[11] = le ^ ~e1 & k4,h[20] = Ht ^ ~t1 & r1,h[21] = l1 ^ ~q1 & u1,h[30] = Y1 ^ ~Gl & J1,h[31] = ml ^ ~i1 & Pl,h[40] = K1 ^ ~a1 & Q1,h[41] = Z1 ^ ~O4 & $1,h[2] = p3 ^ ~cn & Wt,h[3] = K3 ^ ~gt & xt,h[12] = an ^ ~V5 & G5,h[13] = e1 ^ ~k4 & Qe,h[22] = t1 ^ ~r1 & Vt,h[23] = q1 ^ ~u1 & je,h[32] = Gl ^ ~J1 & jl,h[33] = i1 ^ ~Pl & R4,h[42] = a1 ^ ~Q1 & n5,h[43] = O4 ^ ~$1 & s1,h[4] = cn ^ ~Wt & Ae,h[5] = gt ^ ~xt & Vl,h[14] = V5 ^ ~G5 & I4,h[15] = k4 ^ ~Qe & N4,h[24] = r1 ^ ~Vt & bt,h[25] = u1 ^ ~je & o1,h[34] = J1 ^ ~jl & X1,h[35] = Pl ^ ~R4 & M4,h[44] = Q1 ^ ~n5 & o4,h[45] = $1 ^ ~s1 & D4,h[6] = Wt ^ ~Ae & q3,h[7] = xt ^ ~Vl & en,h[16] = G5 ^ ~I4 & se,h[17] = Qe ^ ~N4 & le,h[26] = Vt ^ ~bt & Ht,h[27] = je ^ ~o1 & l1,h[36] = jl ^ ~X1 & Y1,h[37] = R4 ^ ~M4 & ml,h[46] = n5 ^ ~o4 & K1,h[47] = s1 ^ ~D4 & Z1,h[8] = Ae ^ ~q3 & p3,h[9] = Vl ^ ~en & K3,h[18] = I4 ^ ~se & an,h[19] = N4 ^ ~le & e1,h[28] = bt ^ ~Ht & t1,h[29] = o1 ^ ~l1 & q1,h[38] = X1 ^ ~Y1 & Gl,h[39] = M4 ^ ~ml & i1,h[48] = o4 ^ ~K1 & a1,h[49] = D4 ^ ~Z1 & O4,h[0] ^= _e[A],h[1] ^= _e[A + 1]
                        };
                        if (j) m.exports = Pe; else for (zn = 0; zn < _l.length; ++zn) I[_l[zn]] = Pe[_l[zn]]
                    })()
                })(o);
                var f = o.exports, s = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, a = Math.ceil, g = Math.floor,
                    b = "[BigNumber Error] ", B = b + "Number primitive has more than 15 significant digits: ",
                    w = 1e14, P = 14, D = 9007199254740991,
                    T = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], k = 1e7, R = 1e9;

                function G(m) {
                    var y = 0 | m;
                    return m > 0 || m === y ? y : y - 1
                }

                function Z(m) {
                    for (var y, E, I = 1, z = m.length, j = m[0] + ""; I < z;) {
                        for (y = m[I++] + "", E = P - y.length; E--; y = "0" + y) ;
                        j += y
                    }
                    for (z = j.length; j.charCodeAt(--z) === 48;) ;
                    return j.slice(0, z + 1 || 1)
                }

                function S2(m, y) {
                    var E, I, z = m.c, j = y.c, _2 = m.s, J2 = y.s, f3 = m.e, d3 = y.e;
                    if (!_2 || !J2) return null;
                    if (E = z && !z[0], I = j && !j[0], E || I) return E ? I ? 0 : -J2 : _2;
                    if (_2 != J2) return _2;
                    if (E = _2 < 0, I = f3 == d3, !z || !j) return I ? 0 : !z ^ E ? 1 : -1;
                    if (!I) return f3 > d3 ^ E ? 1 : -1;
                    for (J2 = (f3 = z.length) < (d3 = j.length) ? f3 : d3, _2 = 0; _2 < J2; _2++) if (z[_2] != j[_2]) return z[_2] > j[_2] ^ E ? 1 : -1;
                    return f3 == d3 ? 0 : f3 > d3 ^ E ? 1 : -1
                }

                function D2(m, y, E, I) {
                    if (m < y || m > E || m !== g(m)) throw Error(b + (I || "Argument") + (typeof m == "number" ? m < y || m > E ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(m))
                }

                function T2(m) {
                    var y = m.c.length - 1;
                    return G(m.e / P) == y && m.c[y] % 2 != 0
                }

                function l2(m, y) {
                    return (m.length > 1 ? m.charAt(0) + "." + m.slice(1) : m) + (y < 0 ? "e" : "e+") + y
                }

                function b2(m, y, E) {
                    var I, z;
                    if (y < 0) {
                        for (z = E + "."; ++y; z += E) ;
                        m = z + m
                    } else if (++y > (I = m.length)) {
                        for (z = E, y -= I; --y; z += E) ;
                        m += z
                    } else y < I && (m = m.slice(0, y) + "." + m.slice(y));
                    return m
                }

                var g2 = function m(y) {
                    var E, I, z, j, _2, J2, f3, d3, _e, _n,
                        O2 = z2.prototype = {constructor: z2, toString: null, valueOf: null}, ae = new z2(1), mn = 20,
                        Sn = 4, Ee = -7, Hl = 21, Pn = -1e7, Te = 1e7, mt = !1, ht = 1, Pe = 0, _l = {
                            prefix: "",
                            groupSize: 3,
                            secondaryGroupSize: 0,
                            groupSeparator: ",",
                            decimalSeparator: ".",
                            fractionGroupSize: 0,
                            fractionGroupSeparator: "\xA0",
                            suffix: ""
                        }, zn = "0123456789abcdefghijklmnopqrstuvwxyz", yt = !0;

                    function z2(_, h) {
                        var v, U, A, W, H, V, r2, c2, i2 = this;
                        if (!(i2 instanceof z2)) return new z2(_, h);
                        if (h == null) {
                            if (_ && _._isBigNumber === !0) return i2.s = _.s, void (!_.c || _.e > Te ? i2.c = i2.e = null : _.e < Pn ? i2.c = [i2.e = 0] : (i2.e = _.e, i2.c = _.c.slice()));
                            if ((V = typeof _ == "number") && 0 * _ == 0) {
                                if (i2.s = 1 / _ < 0 ? (_ = -_, -1) : 1, _ === ~~_) {
                                    for (W = 0, H = _; H >= 10; H /= 10, W++) ;
                                    return void (W > Te ? i2.c = i2.e = null : (i2.e = W, i2.c = [_]))
                                }
                                c2 = String(_)
                            } else {
                                if (!s.test(c2 = String(_))) return z(i2, c2, V);
                                i2.s = c2.charCodeAt(0) == 45 ? (c2 = c2.slice(1), -1) : 1
                            }
                            (W = c2.indexOf(".")) > -1 && (c2 = c2.replace(".", "")), (H = c2.search(/e/i)) > 0 ? (W < 0 && (W = H), W += +c2.slice(H + 1), c2 = c2.substring(0, H)) : W < 0 && (W = c2.length)
                        } else {
                            if (D2(h, 2, zn.length, "Base"), h == 10 && yt) return nn(i2 = new z2(_), mn + i2.e + 1, Sn);
                            if (c2 = String(_), V = typeof _ == "number") {
                                if (0 * _ != 0) return z(i2, c2, V, h);
                                if (i2.s = 1 / _ < 0 ? (c2 = c2.slice(1), -1) : 1, z2.DEBUG && c2.replace(/^0\.0*|\./, "").length > 15) throw Error(B + _)
                            } else i2.s = c2.charCodeAt(0) === 45 ? (c2 = c2.slice(1), -1) : 1;
                            for (v = zn.slice(0, h), W = H = 0, r2 = c2.length; H < r2; H++) if (v.indexOf(U = c2.charAt(H)) < 0) {
                                if (U == ".") {
                                    if (H > W) {
                                        W = r2;
                                        continue
                                    }
                                } else if (!A && (c2 == c2.toUpperCase() && (c2 = c2.toLowerCase()) || c2 == c2.toLowerCase() && (c2 = c2.toUpperCase()))) {
                                    A = !0, H = -1, W = 0;
                                    continue
                                }
                                return z(i2, String(_), V, h)
                            }
                            V = !1, (W = (c2 = I(c2, h, 10, i2.s)).indexOf(".")) > -1 ? c2 = c2.replace(".", "") : W = c2.length
                        }
                        for (H = 0; c2.charCodeAt(H) === 48; H++) ;
                        for (r2 = c2.length; c2.charCodeAt(--r2) === 48;) ;
                        if (c2 = c2.slice(H, ++r2)) {
                            if (r2 -= H, V && z2.DEBUG && r2 > 15 && (_ > D || _ !== g(_))) throw Error(B + i2.s * _);
                            if ((W = W - H - 1) > Te) i2.c = i2.e = null; else if (W < Pn) i2.c = [i2.e = 0]; else {
                                if (i2.e = W, i2.c = [], H = (W + 1) % P, W < 0 && (H += P), H < r2) {
                                    for (H && i2.c.push(+c2.slice(0, H)), r2 -= P; H < r2;) i2.c.push(+c2.slice(H, H += P));
                                    H = P - (c2 = c2.slice(H)).length
                                } else H -= r2;
                                for (; H--; c2 += "0") ;
                                i2.c.push(+c2)
                            }
                        } else i2.c = [i2.e = 0]
                    }

                    function me(_, h, v, U) {
                        var A, W, H, V, r2;
                        if (v == null ? v = Sn : D2(v, 0, 8), !_.c) return _.toString();
                        if (A = _.c[0], H = _.e, h == null) r2 = Z(_.c), r2 = U == 1 || U == 2 && (H <= Ee || H >= Hl) ? l2(r2, H) : b2(r2, H, "0"); else if (W = (_ = nn(new z2(_), h, v)).e, V = (r2 = Z(_.c)).length, U == 1 || U == 2 && (h <= W || W <= Ee)) {
                            for (; V < h; r2 += "0", V++) ;
                            r2 = l2(r2, W)
                        } else if (h -= H, r2 = b2(r2, W, "0"), W + 1 > V) {
                            if (--h > 0) for (r2 += "."; h--; r2 += "0") ;
                        } else if ((h += W - V) > 0) for (W + 1 == V && (r2 += "."); h--; r2 += "0") ;
                        return _.s < 0 && A ? "-" + r2 : r2
                    }

                    function Ke(_, h) {
                        for (var v, U = 1, A = new z2(_[0]); U < _.length; U++) {
                            if (!(v = new z2(_[U])).s) {
                                A = v;
                                break
                            }
                            h.call(A, v) && (A = v)
                        }
                        return A
                    }

                    function zt(_, h, v) {
                        for (var U = 1, A = h.length; !h[--A]; h.pop()) ;
                        for (A = h[0]; A >= 10; A /= 10, U++) ;
                        return (v = U + v * P - 1) > Te ? _.c = _.e = null : v < Pn ? _.c = [_.e = 0] : (_.e = v, _.c = h), _
                    }

                    function nn(_, h, v, U) {
                        var A, W, H, V, r2, c2, i2, V2 = _.c, m3 = T;
                        if (V2) {
                            n:{
                                for (A = 1, V = V2[0]; V >= 10; V /= 10, A++) ;
                                if ((W = h - A) < 0) W += P, H = h, i2 = (r2 = V2[c2 = 0]) / m3[A - H - 1] % 10 | 0; else if ((c2 = a((W + 1) / P)) >= V2.length) {
                                    if (!U) break n;
                                    for (; V2.length <= c2; V2.push(0)) ;
                                    r2 = i2 = 0, A = 1, H = (W %= P) - P + 1
                                } else {
                                    for (r2 = V = V2[c2], A = 1; V >= 10; V /= 10, A++) ;
                                    i2 = (H = (W %= P) - P + A) < 0 ? 0 : r2 / m3[A - H - 1] % 10 | 0
                                }
                                if (U = U || h < 0 || V2[c2 + 1] != null || (H < 0 ? r2 : r2 % m3[A - H - 1]), U = v < 4 ? (i2 || U) && (v == 0 || v == (_.s < 0 ? 3 : 2)) : i2 > 5 || i2 == 5 && (v == 4 || U || v == 6 && (W > 0 ? H > 0 ? r2 / m3[A - H] : 0 : V2[c2 - 1]) % 10 & 1 || v == (_.s < 0 ? 8 : 7)), h < 1 || !V2[0]) return V2.length = 0, U ? (h -= _.e + 1, V2[0] = m3[(P - h % P) % P], _.e = -h || 0) : V2[0] = _.e = 0, _;
                                if (W == 0 ? (V2.length = c2, V = 1, c2--) : (V2.length = c2 + 1, V = m3[P - W], V2[c2] = H > 0 ? g(r2 / m3[A - H] % m3[H]) * V : 0), U) for (; ;) {
                                    if (c2 == 0) {
                                        for (W = 1, H = V2[0]; H >= 10; H /= 10, W++) ;
                                        for (H = V2[0] += V, V = 1; H >= 10; H /= 10, V++) ;
                                        W != V && (_.e++, V2[0] == w && (V2[0] = 1));
                                        break
                                    }
                                    if (V2[c2] += V, V2[c2] != w) break;
                                    V2[c2--] = 0, V = 1
                                }
                                for (W = V2.length; V2[--W] === 0; V2.pop()) ;
                            }
                            _.e > Te ? _.c = _.e = null : _.e < Pn && (_.c = [_.e = 0])
                        }
                        return _
                    }

                    function Ze(_) {
                        var h, v = _.e;
                        return v === null ? _.toString() : (h = Z(_.c), h = v <= Ee || v >= Hl ? l2(h, v) : b2(h, v, "0"), _.s < 0 ? "-" + h : h)
                    }

                    return z2.clone = m, z2.ROUND_UP = 0, z2.ROUND_DOWN = 1, z2.ROUND_CEIL = 2, z2.ROUND_FLOOR = 3, z2.ROUND_HALF_UP = 4, z2.ROUND_HALF_DOWN = 5, z2.ROUND_HALF_EVEN = 6, z2.ROUND_HALF_CEIL = 7, z2.ROUND_HALF_FLOOR = 8, z2.EUCLID = 9, z2.config = z2.set = function (_) {
                        var h, v;
                        if (_ != null) {
                            if (typeof _ != "object") throw Error(b + "Object expected: " + _);
                            if (_.hasOwnProperty(h = "DECIMAL_PLACES") && (D2(v = _[h], 0, R, h), mn = v), _.hasOwnProperty(h = "ROUNDING_MODE") && (D2(v = _[h], 0, 8, h), Sn = v), _.hasOwnProperty(h = "EXPONENTIAL_AT") && ((v = _[h]) && v.pop ? (D2(v[0], -R, 0, h), D2(v[1], 0, R, h), Ee = v[0], Hl = v[1]) : (D2(v, -R, R, h), Ee = -(Hl = v < 0 ? -v : v))), _.hasOwnProperty(h = "RANGE")) if ((v = _[h]) && v.pop) D2(v[0], -R, -1, h), D2(v[1], 1, R, h), Pn = v[0], Te = v[1]; else {
                                if (D2(v, -R, R, h), !v) throw Error(b + h + " cannot be zero: " + v);
                                Pn = -(Te = v < 0 ? -v : v)
                            }
                            if (_.hasOwnProperty(h = "CRYPTO")) {
                                if ((v = _[h]) !== !!v) throw Error(b + h + " not true or false: " + v);
                                if (v) {
                                    if (typeof crypto > "u" || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw mt = !v, Error(b + "crypto unavailable");
                                    mt = v
                                } else mt = v
                            }
                            if (_.hasOwnProperty(h = "MODULO_MODE") && (D2(v = _[h], 0, 9, h), ht = v), _.hasOwnProperty(h = "POW_PRECISION") && (D2(v = _[h], 0, R, h), Pe = v), _.hasOwnProperty(h = "FORMAT")) {
                                if (typeof (v = _[h]) != "object") throw Error(b + h + " not an object: " + v);
                                _l = v
                            }
                            if (_.hasOwnProperty(h = "ALPHABET")) {
                                if (typeof (v = _[h]) != "string" || /^.?$|[+\-.\s]|(.).*\1/.test(v)) throw Error(b + h + " invalid: " + v);
                                yt = v.slice(0, 10) == "0123456789", zn = v
                            }
                        }
                        return {
                            DECIMAL_PLACES: mn,
                            ROUNDING_MODE: Sn,
                            EXPONENTIAL_AT: [Ee, Hl],
                            RANGE: [Pn, Te],
                            CRYPTO: mt,
                            MODULO_MODE: ht,
                            POW_PRECISION: Pe,
                            FORMAT: _l,
                            ALPHABET: zn
                        }
                    }, z2.isBigNumber = function (_) {
                        if (!_ || _._isBigNumber !== !0) return !1;
                        if (!z2.DEBUG) return !0;
                        var h, v, U = _.c, A = _.e, W = _.s;
                        n:if ({}.toString.call(U) == "[object Array]") {
                            if ((W === 1 || W === -1) && A >= -R && A <= R && A === g(A)) {
                                if (U[0] === 0) {
                                    if (A === 0 && U.length === 1) return !0;
                                    break n
                                }
                                if ((h = (A + 1) % P) < 1 && (h += P), String(U[0]).length == h) {
                                    for (h = 0; h < U.length; h++) if ((v = U[h]) < 0 || v >= w || v !== g(v)) break n;
                                    if (v !== 0) return !0
                                }
                            }
                        } else if (U === null && A === null && (W === null || W === 1 || W === -1)) return !0;
                        throw Error(b + "Invalid BigNumber: " + _)
                    }, z2.maximum = z2.max = function () {
                        return Ke(arguments, O2.lt)
                    }, z2.minimum = z2.min = function () {
                        return Ke(arguments, O2.gt)
                    }, z2.random = (j = 9007199254740992, _2 = Math.random() * j & 2097151 ? function () {
                        return g(Math.random() * j)
                    } : function () {
                        return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0)
                    }, function (_) {
                        var h, v, U, A, W, H = 0, V = [], r2 = new z2(ae);
                        if (_ == null ? _ = mn : D2(_, 0, R), A = a(_ / P), mt) if (crypto.getRandomValues) {
                            for (h = crypto.getRandomValues(new Uint32Array(A *= 2)); H < A;) (W = 131072 * h[H] + (h[H + 1] >>> 11)) >= 9e15 ? (v = crypto.getRandomValues(new Uint32Array(2)), h[H] = v[0], h[H + 1] = v[1]) : (V.push(W % 1e14), H += 2);
                            H = A / 2
                        } else {
                            if (!crypto.randomBytes) throw mt = !1, Error(b + "crypto unavailable");
                            for (h = crypto.randomBytes(A *= 7); H < A;) (W = 281474976710656 * (31 & h[H]) + 1099511627776 * h[H + 1] + 4294967296 * h[H + 2] + 16777216 * h[H + 3] + (h[H + 4] << 16) + (h[H + 5] << 8) + h[H + 6]) >= 9e15 ? crypto.randomBytes(7).copy(h, H) : (V.push(W % 1e14), H += 7);
                            H = A / 7
                        }
                        if (!mt) for (; H < A;) (W = _2()) < 9e15 && (V[H++] = W % 1e14);
                        for (A = V[--H], _ %= P, A && _ && (W = T[P - _], V[H] = g(A / W) * W); V[H] === 0; V.pop(), H--) ;
                        if (H < 0) V = [U = 0]; else {
                            for (U = -1; V[0] === 0; V.splice(0, 1), U -= P) ;
                            for (H = 1, W = V[0]; W >= 10; W /= 10, H++) ;
                            H < P && (U -= P - H)
                        }
                        return r2.e = U, r2.c = V, r2
                    }), z2.sum = function () {
                        for (var _ = 1, h = arguments, v = new z2(h[0]); _ < h.length;) v = v.plus(h[_++]);
                        return v
                    }, I = function () {
                        var _ = "0123456789";

                        function h(v, U, A, W) {
                            for (var H, V, r2 = [0], c2 = 0, i2 = v.length; c2 < i2;) {
                                for (V = r2.length; V--; r2[V] *= U) ;
                                for (r2[0] += W.indexOf(v.charAt(c2++)), H = 0; H < r2.length; H++) r2[H] > A - 1 && (r2[H + 1] == null && (r2[H + 1] = 0), r2[H + 1] += r2[H] / A | 0, r2[H] %= A)
                            }
                            return r2.reverse()
                        }

                        return function (v, U, A, W, H) {
                            var V, r2, c2, i2, V2, m3, v3, X3, q3 = v.indexOf("."), en = mn, p3 = Sn;
                            for (q3 >= 0 && (i2 = Pe, Pe = 0, v = v.replace(".", ""), m3 = (X3 = new z2(U)).pow(v.length - q3), Pe = i2, X3.c = h(b2(Z(m3.c), m3.e, "0"), 10, A, _), X3.e = X3.c.length), c2 = i2 = (v3 = h(v, U, A, H ? (V = zn, _) : (V = _, zn))).length; v3[--i2] == 0; v3.pop()) ;
                            if (!v3[0]) return V.charAt(0);
                            if (q3 < 0 ? --c2 : (m3.c = v3, m3.e = c2, m3.s = W, v3 = (m3 = E(m3, X3, en, p3, A)).c, V2 = m3.r, c2 = m3.e), q3 = v3[r2 = c2 + en + 1], i2 = A / 2, V2 = V2 || r2 < 0 || v3[r2 + 1] != null, V2 = p3 < 4 ? (q3 != null || V2) && (p3 == 0 || p3 == (m3.s < 0 ? 3 : 2)) : q3 > i2 || q3 == i2 && (p3 == 4 || V2 || p3 == 6 && 1 & v3[r2 - 1] || p3 == (m3.s < 0 ? 8 : 7)), r2 < 1 || !v3[0]) v = V2 ? b2(V.charAt(1), -en, V.charAt(0)) : V.charAt(0); else {
                                if (v3.length = r2, V2) for (--A; ++v3[--r2] > A;) v3[r2] = 0, r2 || (++c2, v3 = [1].concat(v3));
                                for (i2 = v3.length; !v3[--i2];) ;
                                for (q3 = 0, v = ""; q3 <= i2; v += V.charAt(v3[q3++])) ;
                                v = b2(v, c2, V.charAt(0))
                            }
                            return v
                        }
                    }(), E = function () {
                        function _(U, A, W) {
                            var H, V, r2, c2, i2 = 0, V2 = U.length, m3 = A % k, v3 = A / k | 0;
                            for (U = U.slice(); V2--;) i2 = ((V = m3 * (r2 = U[V2] % k) + (H = v3 * r2 + (c2 = U[V2] / k | 0) * m3) % k * k + i2) / W | 0) + (H / k | 0) + v3 * c2, U[V2] = V % W;
                            return i2 && (U = [i2].concat(U)), U
                        }

                        function h(U, A, W, H) {
                            var V, r2;
                            if (W != H) r2 = W > H ? 1 : -1; else for (V = r2 = 0; V < W; V++) if (U[V] != A[V]) {
                                r2 = U[V] > A[V] ? 1 : -1;
                                break
                            }
                            return r2
                        }

                        function v(U, A, W, H) {
                            for (var V = 0; W--;) U[W] -= V, V = U[W] < A[W] ? 1 : 0, U[W] = V * H + U[W] - A[W];
                            for (; !U[0] && U.length > 1; U.splice(0, 1)) ;
                        }

                        return function (U, A, W, H, V) {
                            var r2, c2, i2, V2, m3, v3, X3, q3, en, p3, K3, cn, gt, Wt, xt, Ae, Vl,
                                se = U.s == A.s ? 1 : -1, le = U.c, an = A.c;
                            if (!(le && le[0] && an && an[0])) return new z2(U.s && A.s && (le ? !an || le[0] != an[0] : an) ? le && le[0] == 0 || !an ? 0 * se : se / 0 : NaN);
                            for (en = (q3 = new z2(se)).c = [], se = W + (c2 = U.e - A.e) + 1, V || (V = w, c2 = G(U.e / P) - G(A.e / P), se = se / P | 0), i2 = 0; an[i2] == (le[i2] || 0); i2++) ;
                            if (an[i2] > (le[i2] || 0) && c2--, se < 0) en.push(1), V2 = !0; else {
                                for (Wt = le.length, Ae = an.length, i2 = 0, se += 2, (m3 = g(V / (an[0] + 1))) > 1 && (an = _(an, m3, V), le = _(le, m3, V), Ae = an.length, Wt = le.length), gt = Ae, K3 = (p3 = le.slice(0, Ae)).length; K3 < Ae; p3[K3++] = 0) ;
                                Vl = an.slice(), Vl = [0].concat(Vl), xt = an[0], an[1] >= V / 2 && xt++;
                                do {
                                    if (m3 = 0, (r2 = h(an, p3, Ae, K3)) < 0) {
                                        if (cn = p3[0], Ae != K3 && (cn = cn * V + (p3[1] || 0)), (m3 = g(cn / xt)) > 1) for (m3 >= V && (m3 = V - 1), X3 = (v3 = _(an, m3, V)).length, K3 = p3.length; h(v3, p3, X3, K3) == 1;) m3--, v(v3, Ae < X3 ? Vl : an, X3, V), X3 = v3.length, r2 = 1; else m3 == 0 && (r2 = m3 = 1), X3 = (v3 = an.slice()).length;
                                        if (X3 < K3 && (v3 = [0].concat(v3)), v(p3, v3, K3, V), K3 = p3.length, r2 == -1) for (; h(an, p3, Ae, K3) < 1;) m3++, v(p3, Ae < K3 ? Vl : an, K3, V), K3 = p3.length
                                    } else r2 === 0 && (m3++, p3 = [0]);
                                    en[i2++] = m3, p3[0] ? p3[K3++] = le[gt] || 0 : (p3 = [le[gt]], K3 = 1)
                                } while ((gt++ < Wt || p3[0] != null) && se--);
                                V2 = p3[0] != null, en[0] || en.splice(0, 1)
                            }
                            if (V == w) {
                                for (i2 = 1, se = en[0]; se >= 10; se /= 10, i2++) ;
                                nn(q3, W + (q3.e = i2 + c2 * P - 1) + 1, H, V2)
                            } else q3.e = c2, q3.r = +V2;
                            return q3
                        }
                    }(), J2 = /^(-?)0([xbo])(?=\w[\w.]*$)/i, f3 = /^([^.]+)\.$/, d3 = /^\.([^.]+)$/, _e = /^-?(Infinity|NaN)$/, _n = /^\s*\+(?=[\w.])|^\s+|\s+$/g, z = function (_, h, v, U) {
                        var A, W = v ? h : h.replace(_n, "");
                        if (_e.test(W)) _.s = isNaN(W) ? null : W < 0 ? -1 : 1; else {
                            if (!v && (W = W.replace(J2, function (H, V, r2) {
                                return A = (r2 = r2.toLowerCase()) == "x" ? 16 : r2 == "b" ? 2 : 8, U && U != A ? H : V
                            }), U && (A = U, W = W.replace(f3, "$1").replace(d3, "0.$1")), h != W)) return new z2(W, A);
                            if (z2.DEBUG) throw Error(b + "Not a" + (U ? " base " + U : "") + " number: " + h);
                            _.s = null
                        }
                        _.c = _.e = null
                    }, O2.absoluteValue = O2.abs = function () {
                        var _ = new z2(this);
                        return _.s < 0 && (_.s = 1), _
                    }, O2.comparedTo = function (_, h) {
                        return S2(this, new z2(_, h))
                    }, O2.decimalPlaces = O2.dp = function (_, h) {
                        var v, U, A, W = this;
                        if (_ != null) return D2(_, 0, R), h == null ? h = Sn : D2(h, 0, 8), nn(new z2(W), _ + W.e + 1, h);
                        if (!(v = W.c)) return null;
                        if (U = ((A = v.length - 1) - G(this.e / P)) * P, A = v[A]) for (; A % 10 == 0; A /= 10, U--) ;
                        return U < 0 && (U = 0), U
                    }, O2.dividedBy = O2.div = function (_, h) {
                        return E(this, new z2(_, h), mn, Sn)
                    }, O2.dividedToIntegerBy = O2.idiv = function (_, h) {
                        return E(this, new z2(_, h), 0, 1)
                    }, O2.exponentiatedBy = O2.pow = function (_, h) {
                        var v, U, A, W, H, V, r2, c2, i2 = this;
                        if ((_ = new z2(_)).c && !_.isInteger()) throw Error(b + "Exponent not an integer: " + Ze(_));
                        if (h != null && (h = new z2(h)), H = _.e > 14, !i2.c || !i2.c[0] || i2.c[0] == 1 && !i2.e && i2.c.length == 1 || !_.c || !_.c[0]) return c2 = new z2(Math.pow(+Ze(i2), H ? _.s * (2 - T2(_)) : +Ze(_))), h ? c2.mod(h) : c2;
                        if (V = _.s < 0, h) {
                            if (h.c ? !h.c[0] : !h.s) return new z2(NaN);
                            (U = !V && i2.isInteger() && h.isInteger()) && (i2 = i2.mod(h))
                        } else {
                            if (_.e > 9 && (i2.e > 0 || i2.e < -1 || (i2.e == 0 ? i2.c[0] > 1 || H && i2.c[1] >= 24e7 : i2.c[0] < 8e13 || H && i2.c[0] <= 9999975e7))) return W = i2.s < 0 && T2(_) ? -0 : 0, i2.e > -1 && (W = 1 / W), new z2(V ? 1 / W : W);
                            Pe && (W = a(Pe / P + 2))
                        }
                        for (H ? (v = new z2(.5), V && (_.s = 1), r2 = T2(_)) : r2 = (A = Math.abs(+Ze(_))) % 2, c2 = new z2(ae); ;) {
                            if (r2) {
                                if (!(c2 = c2.times(i2)).c) break;
                                W ? c2.c.length > W && (c2.c.length = W) : U && (c2 = c2.mod(h))
                            }
                            if (A) {
                                if ((A = g(A / 2)) === 0) break;
                                r2 = A % 2
                            } else if (nn(_ = _.times(v), _.e + 1, 1), _.e > 14) r2 = T2(_); else {
                                if ((A = +Ze(_)) == 0) break;
                                r2 = A % 2
                            }
                            i2 = i2.times(i2), W ? i2.c && i2.c.length > W && (i2.c.length = W) : U && (i2 = i2.mod(h))
                        }
                        return U ? c2 : (V && (c2 = ae.div(c2)), h ? c2.mod(h) : W ? nn(c2, Pe, Sn, void 0) : c2)
                    }, O2.integerValue = function (_) {
                        var h = new z2(this);
                        return _ == null ? _ = Sn : D2(_, 0, 8), nn(h, h.e + 1, _)
                    }, O2.isEqualTo = O2.eq = function (_, h) {
                        return S2(this, new z2(_, h)) === 0
                    }, O2.isFinite = function () {
                        return !!this.c
                    }, O2.isGreaterThan = O2.gt = function (_, h) {
                        return S2(this, new z2(_, h)) > 0
                    }, O2.isGreaterThanOrEqualTo = O2.gte = function (_, h) {
                        return (h = S2(this, new z2(_, h))) === 1 || h === 0
                    }, O2.isInteger = function () {
                        return !!this.c && G(this.e / P) > this.c.length - 2
                    }, O2.isLessThan = O2.lt = function (_, h) {
                        return S2(this, new z2(_, h)) < 0
                    }, O2.isLessThanOrEqualTo = O2.lte = function (_, h) {
                        return (h = S2(this, new z2(_, h))) === -1 || h === 0
                    }, O2.isNaN = function () {
                        return !this.s
                    }, O2.isNegative = function () {
                        return this.s < 0
                    }, O2.isPositive = function () {
                        return this.s > 0
                    }, O2.isZero = function () {
                        return !!this.c && this.c[0] == 0
                    }, O2.minus = function (_, h) {
                        var v, U, A, W, H = this, V = H.s;
                        if (h = (_ = new z2(_, h)).s, !V || !h) return new z2(NaN);
                        if (V != h) return _.s = -h, H.plus(_);
                        var r2 = H.e / P, c2 = _.e / P, i2 = H.c, V2 = _.c;
                        if (!r2 || !c2) {
                            if (!i2 || !V2) return i2 ? (_.s = -h, _) : new z2(V2 ? H : NaN);
                            if (!i2[0] || !V2[0]) return V2[0] ? (_.s = -h, _) : new z2(i2[0] ? H : Sn == 3 ? -0 : 0)
                        }
                        if (r2 = G(r2), c2 = G(c2), i2 = i2.slice(), V = r2 - c2) {
                            for ((W = V < 0) ? (V = -V, A = i2) : (c2 = r2, A = V2), A.reverse(), h = V; h--; A.push(0)) ;
                            A.reverse()
                        } else for (U = (W = (V = i2.length) < (h = V2.length)) ? V : h, V = h = 0; h < U; h++) if (i2[h] != V2[h]) {
                            W = i2[h] < V2[h];
                            break
                        }
                        if (W && (A = i2, i2 = V2, V2 = A, _.s = -_.s), (h = (U = V2.length) - (v = i2.length)) > 0) for (; h--; i2[v++] = 0) ;
                        for (h = w - 1; U > V;) {
                            if (i2[--U] < V2[U]) {
                                for (v = U; v && !i2[--v]; i2[v] = h) ;
                                --i2[v], i2[U] += w
                            }
                            i2[U] -= V2[U]
                        }
                        for (; i2[0] == 0; i2.splice(0, 1), --c2) ;
                        return i2[0] ? zt(_, i2, c2) : (_.s = Sn == 3 ? -1 : 1, _.c = [_.e = 0], _)
                    }, O2.modulo = O2.mod = function (_, h) {
                        var v, U, A = this;
                        return _ = new z2(_, h), !A.c || !_.s || _.c && !_.c[0] ? new z2(NaN) : !_.c || A.c && !A.c[0] ? new z2(A) : (ht == 9 ? (U = _.s, _.s = 1, v = E(A, _, 0, 3), _.s = U, v.s *= U) : v = E(A, _, 0, ht), (_ = A.minus(v.times(_))).c[0] || ht != 1 || (_.s = A.s), _)
                    }, O2.multipliedBy = O2.times = function (_, h) {
                        var v, U, A, W, H, V, r2, c2, i2, V2, m3, v3, X3, q3, en, p3 = this, K3 = p3.c,
                            cn = (_ = new z2(_, h)).c;
                        if (!(K3 && cn && K3[0] && cn[0])) return !p3.s || !_.s || K3 && !K3[0] && !cn || cn && !cn[0] && !K3 ? _.c = _.e = _.s = null : (_.s *= p3.s, K3 && cn ? (_.c = [0], _.e = 0) : _.c = _.e = null), _;
                        for (U = G(p3.e / P) + G(_.e / P), _.s *= p3.s, (r2 = K3.length) < (V2 = cn.length) && (X3 = K3, K3 = cn, cn = X3, A = r2, r2 = V2, V2 = A), A = r2 + V2, X3 = []; A--; X3.push(0)) ;
                        for (q3 = w, en = k, A = V2; --A >= 0;) {
                            for (v = 0, m3 = cn[A] % en, v3 = cn[A] / en | 0, W = A + (H = r2); W > A;) v = ((c2 = m3 * (c2 = K3[--H] % en) + (V = v3 * c2 + (i2 = K3[H] / en | 0) * m3) % en * en + X3[W] + v) / q3 | 0) + (V / en | 0) + v3 * i2, X3[W--] = c2 % q3;
                            X3[W] = v
                        }
                        return v ? ++U : X3.splice(0, 1), zt(_, X3, U)
                    }, O2.negated = function () {
                        var _ = new z2(this);
                        return _.s = -_.s || null, _
                    }, O2.plus = function (_, h) {
                        var v, U = this, A = U.s;
                        if (h = (_ = new z2(_, h)).s, !A || !h) return new z2(NaN);
                        if (A != h) return _.s = -h, U.minus(_);
                        var W = U.e / P, H = _.e / P, V = U.c, r2 = _.c;
                        if (!W || !H) {
                            if (!V || !r2) return new z2(A / 0);
                            if (!V[0] || !r2[0]) return r2[0] ? _ : new z2(V[0] ? U : 0 * A)
                        }
                        if (W = G(W), H = G(H), V = V.slice(), A = W - H) {
                            for (A > 0 ? (H = W, v = r2) : (A = -A, v = V), v.reverse(); A--; v.push(0)) ;
                            v.reverse()
                        }
                        for ((A = V.length) - (h = r2.length) < 0 && (v = r2, r2 = V, V = v, h = A), A = 0; h;) A = (V[--h] = V[h] + r2[h] + A) / w | 0, V[h] = w === V[h] ? 0 : V[h] % w;
                        return A && (V = [A].concat(V), ++H), zt(_, V, H)
                    }, O2.precision = O2.sd = function (_, h) {
                        var v, U, A, W = this;
                        if (_ != null && _ !== !!_) return D2(_, 1, R), h == null ? h = Sn : D2(h, 0, 8), nn(new z2(W), _, h);
                        if (!(v = W.c)) return null;
                        if (U = (A = v.length - 1) * P + 1, A = v[A]) {
                            for (; A % 10 == 0; A /= 10, U--) ;
                            for (A = v[0]; A >= 10; A /= 10, U++) ;
                        }
                        return _ && W.e + 1 > U && (U = W.e + 1), U
                    }, O2.shiftedBy = function (_) {
                        return D2(_, -9007199254740991, D), this.times("1e" + _)
                    }, O2.squareRoot = O2.sqrt = function () {
                        var _, h, v, U, A, W = this, H = W.c, V = W.s, r2 = W.e, c2 = mn + 4, i2 = new z2("0.5");
                        if (V !== 1 || !H || !H[0]) return new z2(!V || V < 0 && (!H || H[0]) ? NaN : H ? W : 1 / 0);
                        if ((V = Math.sqrt(+Ze(W))) == 0 || V == 1 / 0 ? (((h = Z(H)).length + r2) % 2 == 0 && (h += "0"), V = Math.sqrt(+h), r2 = G((r2 + 1) / 2) - (r2 < 0 || r2 % 2), v = new z2(h = V == 1 / 0 ? "5e" + r2 : (h = V.toExponential()).slice(0, h.indexOf("e") + 1) + r2)) : v = new z2(V + ""), v.c[0]) {
                            for ((V = (r2 = v.e) + c2) < 3 && (V = 0); ;) if (A = v, v = i2.times(A.plus(E(W, A, c2, 1))), Z(A.c).slice(0, V) === (h = Z(v.c)).slice(0, V)) {
                                if (v.e < r2 && --V, (h = h.slice(V - 3, V + 1)) != "9999" && (U || h != "4999")) {
                                    +h && (+h.slice(1) || h.charAt(0) != "5") || (nn(v, v.e + mn + 2, 1), _ = !v.times(v).eq(W));
                                    break
                                }
                                if (!U && (nn(A, A.e + mn + 2, 0), A.times(A).eq(W))) {
                                    v = A;
                                    break
                                }
                                c2 += 4, V += 4, U = 1
                            }
                        }
                        return nn(v, v.e + mn + 1, Sn, _)
                    }, O2.toExponential = function (_, h) {
                        return _ != null && (D2(_, 0, R), _++), me(this, _, h, 1)
                    }, O2.toFixed = function (_, h) {
                        return _ != null && (D2(_, 0, R), _ = _ + this.e + 1), me(this, _, h)
                    }, O2.toFormat = function (_, h, v) {
                        var U, A = this;
                        if (v == null) _ != null && h && typeof h == "object" ? (v = h, h = null) : _ && typeof _ == "object" ? (v = _, _ = h = null) : v = _l; else if (typeof v != "object") throw Error(b + "Argument not an object: " + v);
                        if (U = A.toFixed(_, h), A.c) {
                            var W, H = U.split("."), V = +v.groupSize, r2 = +v.secondaryGroupSize,
                                c2 = v.groupSeparator || "", i2 = H[0], V2 = H[1], m3 = A.s < 0,
                                v3 = m3 ? i2.slice(1) : i2, X3 = v3.length;
                            if (r2 && (W = V, V = r2, r2 = W, X3 -= W), V > 0 && X3 > 0) {
                                for (W = X3 % V || V, i2 = v3.substr(0, W); W < X3; W += V) i2 += c2 + v3.substr(W, V);
                                r2 > 0 && (i2 += c2 + v3.slice(W)), m3 && (i2 = "-" + i2)
                            }
                            U = V2 ? i2 + (v.decimalSeparator || "") + ((r2 = +v.fractionGroupSize) ? V2.replace(new RegExp("\\d{" + r2 + "}\\B", "g"), "$&" + (v.fractionGroupSeparator || "")) : V2) : i2
                        }
                        return (v.prefix || "") + U + (v.suffix || "")
                    }, O2.toFraction = function (_) {
                        var h, v, U, A, W, H, V, r2, c2, i2, V2, m3, v3 = this, X3 = v3.c;
                        if (_ != null && (!(V = new z2(_)).isInteger() && (V.c || V.s !== 1) || V.lt(ae))) throw Error(b + "Argument " + (V.isInteger() ? "out of range: " : "not an integer: ") + Ze(V));
                        if (!X3) return new z2(v3);
                        for (h = new z2(ae), c2 = v = new z2(ae), U = r2 = new z2(ae), m3 = Z(X3), W = h.e = m3.length - v3.e - 1, h.c[0] = T[(H = W % P) < 0 ? P + H : H], _ = !_ || V.comparedTo(h) > 0 ? W > 0 ? h : c2 : V, H = Te, Te = 1 / 0, V = new z2(m3), r2.c[0] = 0; i2 = E(V, h, 0, 1), (A = v.plus(i2.times(U))).comparedTo(_) != 1;) v = U, U = A, c2 = r2.plus(i2.times(A = c2)), r2 = A, h = V.minus(i2.times(A = h)), V = A;
                        return A = E(_.minus(v), U, 0, 1), r2 = r2.plus(A.times(c2)), v = v.plus(A.times(U)), r2.s = c2.s = v3.s, V2 = E(c2, U, W *= 2, Sn).minus(v3).abs().comparedTo(E(r2, v, W, Sn).minus(v3).abs()) < 1 ? [c2, U] : [r2, v], Te = H, V2
                    }, O2.toNumber = function () {
                        return +Ze(this)
                    }, O2.toPrecision = function (_, h) {
                        return _ != null && D2(_, 1, R), me(this, _, h, 2)
                    }, O2.toString = function (_) {
                        var h, v = this, U = v.s, A = v.e;
                        return A === null ? U ? (h = "Infinity", U < 0 && (h = "-" + h)) : h = "NaN" : (_ == null ? h = A <= Ee || A >= Hl ? l2(Z(v.c), A) : b2(Z(v.c), A, "0") : _ === 10 && yt ? h = b2(Z((v = nn(new z2(v), mn + A + 1, Sn)).c), v.e, "0") : (D2(_, 2, zn.length, "Base"), h = I(b2(Z(v.c), A, "0"), 10, _, U, !0)), U < 0 && v.c[0] && (h = "-" + h)), h
                    }, O2.valueOf = O2.toJSON = function () {
                        return Ze(this)
                    }, O2._isBigNumber = !0, O2[Symbol.toStringTag] = "BigNumber", O2[Symbol.for("nodejs.util.inspect.custom")] = O2.valueOf, y != null && z2.set(y), z2
                }();
                let p2 = {ROUNDING_MODE: g2.ROUND_DOWN};

                function O(m) {
                    return new TextEncoder().encode(m)
                }

                function J(m) {
                    return typeof m == "string" ? J(Z2(m)) : new TextDecoder().decode(m)
                }

                g2.config(p2);
                let h2 = "UNKNOWN_ERROR", y2 = "INVALID_ARGUMENT";

                function k2(m, y = h2, E = {}) {
                    let I = [];
                    Object.keys(E).forEach(_2 => {
                        try {
                            I.push(_2 + "=" + JSON.stringify(E[_2]))
                        } catch {
                            I.push(_2 + "=" + JSON.stringify(E[_2].toString()))
                        }
                    });
                    let z = m;
                    I.length && (m += " (" + I.join(", ") + ")");
                    let j = new Error(m);
                    return j.reason = z, j.code = y, Object.keys(E).forEach(function (_2) {
                        j[_2] = E[_2]
                    }), j
                }

                function Z2(m) {
                    if (typeof m != "string") throw new Error("hexToBytes only accept strings, got: " + typeof m);
                    if (m.substr(0, 2) === "0x") return Z2(m.substr(2));
                    let y = new Uint8Array(Math.ceil(m.length / 2)), E = 0;
                    for (let I = 0; I < m.length; I += 2) {
                        let z = parseInt(m.substr(I, 2), 16);
                        if (isNaN(z)) throw new Error("Cannot read hex string:" + JSON.stringify(m));
                        y[E] = z, E++
                    }
                    return y
                }

                function g3(m) {
                    return Array.from(m).map(y => y.toString(16).padStart(2, "0")).join("")
                }

                function P3(m, y) {
                    if (typeof m == "string") {
                        if (y && y.encoding === "hex" && typeof m == "string") {
                            let E = m;
                            E.length > 2 && E.substr(0, 2) === "0x" && (E = E.substr(2));
                            let I = Z2(E);
                            return f.keccak256(I)
                        }
                        return f.keccak256(O(m))
                    }
                    return f.keccak256(m)
                }

                let U3 = {
                    noether: "0",
                    wei: "1",
                    kwei: "1000",
                    Kwei: "1000",
                    babbage: "1000",
                    femtoether: "1000",
                    mwei: "1000000",
                    Mwei: "1000000",
                    lovelace: "1000000",
                    picoether: "1000000",
                    gwei: "1000000000",
                    Gwei: "1000000000",
                    shannon: "1000000000",
                    nanoether: "1000000000",
                    nano: "1000000000",
                    szabo: "1000000000000",
                    microether: "1000000000000",
                    micro: "1000000000000",
                    finney: "1000000000000000",
                    milliether: "1000000000000000",
                    milli: "1000000000000000",
                    ether: "1000000000000000000",
                    kether: "1000000000000000000000",
                    grand: "1000000000000000000000",
                    mether: "1000000000000000000000000",
                    gether: "1000000000000000000000000000",
                    tether: "1000000000000000000000000000000"
                };

                function C3(m, y, E) {
                    return new Array(y - m.length + 1).join(E || "0") + m
                }

                function N3(m) {
                    let y = "", E = 0, I = m.length;
                    for (m.substring(0, 2) === "0x" && (E = 2); E < I; E += 2) {
                        let z = parseInt(m.substr(E, 2), 16);
                        y += String.fromCharCode(z)
                    }
                    return y
                }

                function R3(m) {
                    return ee(m) && m.name && m.name.indexOf("(") !== -1 ? m.name : m.name + "(" + F3(!1, m.inputs || []).join(",") + ")"
                }

                function un(...m) {
                    let y = m.reduce((z, j) => z + j.length, 0), E = new Uint8Array(y), I = 0;
                    for (let z of m) E.set(z, I), I += z.length;
                    return E
                }

                function F3(m, y) {
                    let E = [];
                    return y.forEach(function (I) {
                        if (typeof I.components == "object") {
                            if (I.type.substring(0, 5) !== "tuple") throw new Error("components found but type is not tuple; report on GitHub");
                            let z = "", j = I.type.indexOf("[");
                            j >= 0 && (z = I.type.substring(j));
                            let _2 = F3(m, I.components);
                            Xe(_2) && m ? E.push("tuple(" + _2.join(",") + ")" + z) : m ? E.push("(" + _2 + ")") : E.push("(" + _2.join(",") + ")" + z)
                        } else E.push(I.type)
                    }), E
                }

                function Dn(m) {
                    let y = m.indexOf("("), E = m.indexOf(")");
                    return y !== -1 && E !== -1 ? m.substr(0, y) : m
                }

                function o2(m) {
                    let y = m.indexOf("("), E = m.indexOf(")");
                    return y !== -1 && E !== -1 ? m.substr(y + 1, E - y - 1).replace(" ", "") : ""
                }

                function P2(m) {
                    return m == null ? m : ie(m).toNumber()
                }

                function I2(m) {
                    return ie(m).toNumber()
                }

                function $(m) {
                    return Zn(m) ? m.toString(10) : "" + m
                }

                function f2(m) {
                    return typeof m == "string" && !m.startsWith("0x") && /^[A-Za-z0-9]+$/.test(m) ? "0x" + m : pn(m)
                }

                function l3(m) {
                    if (typeof m == "string") return m.startsWith("0x") && /^[A-Za-z0-9]+$/.test(m) ? pn(m) : "0x" + g3(O(m));
                    if (m instanceof Uint8Array) return "0x" + g3(m);
                    throw new Error(`toStringData: Error trying to convert ${m} (${typeof m}) to a hex string.`)
                }

                function D3(m) {
                    return typeof m == "boolean" ? m : ie(m).toNumber() !== 0
                }

                function Q3(m) {
                    let y = ie(m), E = y.toString(16);
                    return y.isLessThan(0) ? "-0x" + E.substr(1) : "0x" + E
                }

                function pn(m) {
                    if (wl(m)) return Q3(+m);
                    if (Zn(m)) return Q3(m);
                    if (de(m)) {
                        let y = m;
                        if (y.indexOf("-0x") === 0) return Q3(y);
                        if (y.indexOf("0x") === 0) return y;
                        if (!isFinite(y)) return g3(O(y))
                    }
                    if (m instanceof Uint8Array) return "0x" + g3(m);
                    if (Xe(m) || ee(m)) throw new Error("toHex can only be called with scalar values, not objects or arrays");
                    return Q3(m)
                }

                function Fl(m) {
                    let y = m ? m.toLowerCase() : "ether", E = U3[y];
                    if (E === void 0) throw new Error("This unit doesn't exists, please use the one of the following units" + JSON.stringify(U3, null, 2));
                    return new g2(E, 10)
                }

                function ie(m) {
                    let y = m || 0;
                    return Zn(y) ? y : (typeof y == "string" && (y = y.trim()), typeof y != "string" || y.indexOf("0x") !== 0 && y.indexOf("-0x") !== 0 ? y instanceof Uint8Array ? new g2(g3(y), 16) : new g2(y, 10) : new g2(y.replace("0x", "").toLowerCase(), 16))
                }

                function ct(m) {
                    return new g2(new Array(m).fill("1").join(""), 2)
                }

                function Q(m, y = 256) {
                    let E = ie(m).integerValue();
                    return E.isLessThan(0) ? ct(y).plus(E).plus(1) : E
                }

                function E2(m, y) {
                    return C3(m.toString(2), y, "0")[0] === "1"
                }

                function s2(m) {
                    if (typeof m != "string") throw k2("invalid address", y2, {arg: "address", value: m});
                    if (m.trim().match(/^(0x)?[0-9a-fA-F]{40}$/)) return m.trim().substring(0, 2) !== "0x" && (m = "0x" + m), c3(m);
                    throw k2("invalid address", y2, {arg: "address", value: m})
                }

                function Y(m, y = 256) {
                    if (E2(m, y)) {
                        let E = ct(y);
                        return m.minus(E).minus(1)
                    }
                    return m
                }

                function K(m) {
                    return /^0x[0-9a-f]{40}$/i.test(m)
                }

                function d2(m) {
                    return !!/^(0x)?[0-9a-f]{40}$/i.test(m) && (!(!/^(0x)?[0-9a-f]{40}$/.test(m) && !/^(0x)?[0-9A-F]{40}$/.test(m)) || N2(m))
                }

                function N2(m) {
                    let y = m.replace("0x", ""), E = P3(y.toLowerCase());
                    for (let I = 0; I < 40; I++) if (parseInt(E[I], 16) > 7 && y[I].toUpperCase() !== y[I] || parseInt(E[I], 16) <= 7 && y[I].toLowerCase() !== y[I]) return !1;
                    return !0
                }

                function c3(m) {
                    if (m === void 0) return "";
                    let y = m.toLowerCase().replace("0x", ""), E = P3(y), I = "0x";
                    for (let z = 0; z < y.length; z++) parseInt(E[z], 16) > 7 ? I += y[z].toUpperCase() : I += y[z];
                    return I
                }

                function B2(m) {
                    if (!Array.isArray(m)) throw new Error(`Value was not an array: ${JSON.stringify(m)}`);
                    return m
                }

                function En(m) {
                    return K(m) ? m : /^[0-9a-f]{40}$/.test(m) ? "0x" + m : "0x" + C3(pn(m).substr(2), 40)
                }

                function Zn(m) {
                    return m instanceof g2
                }

                function de(m) {
                    return typeof m == "string" || m && m.constructor && m.constructor.name === "String"
                }

                function ee(m) {
                    return m !== null && !Array.isArray(m) && typeof m == "object"
                }

                function wl(m) {
                    return typeof m == "boolean"
                }

                function Xe(m) {
                    return Array.isArray(m)
                }

                var Ft, ft;

                function C4(m, y) {
                    if (!m) throw new Error("jsonrpc method should be specified!");
                    if (typeof m != "string") throw new Error(`jsonrpc must be a string, got ${typeof m}!`);
                    return n.messageId++, {jsonrpc: "2.0", id: n.messageId, method: m, params: y || []}
                }

                function _4(m) {
                    return Array.isArray(m) ? m.every(y) : y(m);

                    function y(E) {
                        return !!E && (E.error === void 0 || E.error === null) && E.jsonrpc === "2.0" && E.id !== null && "result" in E && E.result !== void 0
                    }
                }

                n.TransactionStatus = void 0, (Ft = n.TransactionStatus || (n.TransactionStatus = {})).pending = "pending", Ft.confirmed = "confirmed", Ft.failed = "failed", n.TransactionType = void 0, (ft = n.TransactionType || (n.TransactionType = {})).queued = "queued", ft.dropped = "dropped", ft.replaced = "replaced", ft.pending = "pending", ft.reverted = "reverted", ft.confirmed = "confirmed", n.messageId = 0;

                function Ut(m) {
                    return ie(m)
                }

                function n1(m) {
                    return m === "latest" || m === "pending" || m === "earliest"
                }

                function Ul(m) {
                    return m === void 0 ? "latest" : N(m)
                }

                function N(m) {
                    return m == null ? null : n1(m) ? m : pn(m)
                }

                function X(m) {
                    return m.from && (m.from = on(m.from)), m.to && (m.to = on(m.to)), m.gasPrice !== void 0 && (m.gasPrice = Q3(m.gasPrice)), m.gas !== void 0 && (m.gas = Q3(m.gas)), m.value !== void 0 && (m.value = Q3(m.value)), m.nonce !== void 0 && (m.nonce = Q3(m.nonce)), m.data && !m.data.startsWith("0x") && /^[A-Za-z0-9]+$/.test(m.data) && (m.data = "0x" + m.data), m
                }

                function a2(m) {
                    if (typeof m != "string") throw new Error("The provided input for transactionId is not a string, got: " + JSON.stringify(m));
                    if (m.indexOf("0x") !== 0) throw new Error("TransactionID must start with 0x, got: " + JSON.stringify(m));
                    if (m.length !== 66) throw new Error("TransactionID must be a 32 byte hex, got: " + JSON.stringify(m));
                    return m
                }

                function K2(m) {
                    if (typeof m != "object") throw new Error("Did not provide transaction options");
                    if (!m.from) throw new Error('Missing "from" in transaction options');
                    return m.from = on(m.from), m.to && (m.to = on(m.to)), m.gasPrice !== void 0 && (m.gasPrice = Q3(m.gasPrice)), m.gas !== void 0 && (m.gas = Q3(m.gas)), m.value !== void 0 && (m.value = Q3(m.value)), m.nonce !== void 0 && (m.nonce = Q3(m.nonce)), m.data && !m.data.startsWith("0x") && /^[A-Za-z0-9]+$/.test(m.data) && (m.data = "0x" + m.data), m
                }

                function G2(m) {
                    return m ? (m.blockNumber !== null && (m.blockNumber = I2(m.blockNumber)), m.transactionIndex !== null && (m.transactionIndex = I2(m.transactionIndex)), m.nonce = I2(m.nonce), m.gas = I2(m.gas), m.gasPrice = ie(m.gasPrice), m.value = ie(m.value), m) : null
                }

                function o3(m) {
                    return m ? (m.blockNumber !== null && (m.blockNumber = I2(m.blockNumber)), m.transactionIndex !== null && (m.transactionIndex = I2(m.transactionIndex)), m.cumulativeGasUsed = I2(m.cumulativeGasUsed), m.gasUsed = I2(m.gasUsed), m.logs && Xe(m.logs) && (m.logs = m.logs.map(function (y) {
                        return Cn(y)
                    })), m.status = I2(m.status || ""), m) : null
                }

                function x3(m) {
                    return m ? (m.gasLimit = I2(m.gasLimit), m.gasUsed = I2(m.gasUsed), m.size = I2(m.size), m.timestamp = I2(m.timestamp), m.number !== null && (m.number = I2(m.number)), m.difficulty = ie(m.difficulty), m.totalDifficulty = ie(m.totalDifficulty), Xe(m.transactions) && m.transactions.forEach(function (y, E) {
                        de(y) || (m.transactions[E] = G2(y) || m.transactions[E])
                    }), m) : null
                }

                function Cn(m) {
                    return m && (m.blockNumber && (m.blockNumber = I2(m.blockNumber)), m.transactionIndex && (m.transactionIndex = I2(m.transactionIndex)), m.logIndex && (m.logIndex = I2(m.logIndex)), m)
                }

                function on(m) {
                    if (K(m)) return m;
                    if (d2(m)) return "0x" + m;
                    throw new Error(`Invalid address: ${JSON.stringify(m)}`)
                }

                function Bn(m) {
                    return m
                }

                function vl(m) {
                    return m && (m.startingBlock = I2(m.startingBlock), m.currentBlock = I2(m.currentBlock), m.highestBlock = I2(m.highestBlock), m.knownStates && (m.knownStates = I2(m.knownStates), m.pulledStates = I2(m.pulledStates)), m)
                }

                function Ll(m) {
                    if (m === null) throw k2("cannot convert null value to array", y2, {arg: "value", value: m});
                    if (m instanceof Uint8Array) return new Uint8Array(m);
                    if (typeof m == "string") {
                        let y = m.match(/^(0x)?[0-9a-fA-F]*$/);
                        if (!y) throw k2("invalid hexidecimal string", y2, {arg: "value", value: m});
                        if (y[1] !== "0x") throw k2("hex string must have 0x prefix", y2, {arg: "value", value: m});
                        (m = m.substring(2)).length % 2 && (m = "0" + m);
                        let E = [];
                        for (let I = 0; I < m.length; I += 2) E.push(parseInt(m.substr(I, 2), 16));
                        return new Uint8Array(E)
                    }
                    if (function (y) {
                        if (!y || parseInt(String(y.length)) !== y.length || typeof y == "string") return !1;
                        for (let E = 0; E < y.length; E++) {
                            let I = y[E];
                            if (I < 0 || I >= 256 || parseInt(String(I)) !== I) return !1
                        }
                        return !0
                    }(m)) return new Uint8Array(m);
                    throw k2("invalid arrayify value", void 0, {arg: "value", value: m, type: typeof m})
                }

                function zl(m, y, E) {
                    Object.defineProperty(m, y, {enumerable: !0, value: E, writable: !1})
                }

                let dt = new g2(-1), G1 = new g2(0), E6 = new g2(1),
                    j1 = new g2("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");

                function P4(m) {
                    return function (y, E) {
                        function I(_2) {
                            return new Error('unexpected character "' + y[_2] + '" at position ' + _2 + ' in "' + y + '"')
                        }

                        let z = {type: "", name: "", state: {allowType: !0}}, j = z;
                        for (let _2 = 0; _2 < y.length; _2++) {
                            let J2 = y[_2];
                            switch (J2) {
                                case"(":
                                    if (!j.state.allowParams) throw I(_2);
                                    j.state.allowType = !1, j.type = A4(j.type), j.components = [{
                                        type: "",
                                        name: "",
                                        parent: j,
                                        state: {allowType: !0}
                                    }], j = j.components[0];
                                    break;
                                case")":
                                    delete j.state, E && j.name === "indexed" && (j.indexed = !0, j.name = ""), j.type = A4(j.type);
                                    let f3 = j;
                                    if (j = j.parent, !j) throw I(_2);
                                    delete f3.parent, j.state.allowParams = !1, j.state.allowName = !0, j.state.allowArray = !0;
                                    break;
                                case",":
                                    delete j.state, E && j.name === "indexed" && (j.indexed = !0, j.name = ""), j.type = A4(j.type);
                                    let d3 = {type: "", name: "", parent: j.parent, state: {allowType: !0}};
                                    j.parent.components.push(d3), delete j.parent, j = d3;
                                    break;
                                case" ":
                                    j.state.allowType && j.type !== "" && (j.type = A4(j.type), delete j.state.allowType, j.state.allowName = !0, j.state.allowParams = !0), j.state.allowName && j.name !== "" && (E && j.name === "indexed" ? (j.indexed = !0, j.name = "") : j.state.allowName = !1);
                                    break;
                                case"[":
                                    if (!j.state.allowArray) throw I(_2);
                                    j.type += J2, j.state.allowArray = !1, j.state.allowName = !1, j.state.readArray = !0;
                                    break;
                                case"]":
                                    if (!j.state.readArray) throw I(_2);
                                    j.type += J2, j.state.readArray = !1, j.state.allowArray = !0, j.state.allowName = !0;
                                    break;
                                default:
                                    if (j.state.allowType) j.type += J2, j.state.allowParams = !0, j.state.allowArray = !0; else if (j.state.allowName) j.name += J2, delete j.state.allowArray; else {
                                        if (!j.state.readArray) throw I(_2);
                                        j.type += J2
                                    }
                            }
                        }
                        if (j.parent) throw new Error("unexpected eof");
                        return delete z.state, E && j.name === "indexed" && (j.indexed = !0, j.name = ""), z.type = A4(z.type), z
                    }(m, !0)
                }

                function A4(m) {
                    return m.match(/^uint($|[^1-9])/) ? m = "uint256" + m.substring(4) : m.match(/^int($|[^1-9])/) && (m = "int256" + m.substring(3)), m
                }

                let pe = new RegExp(/^bytes([0-9]*)$/), S = new RegExp(/^(u?int)([0-9]*)$/),
                    M = new RegExp(/^(.*)\[([0-9]*)\]$/), L = function (m, y) {
                        let E = m.match(S);
                        return E && parseInt(E[2]) <= 48 ? y.toNumber() : y
                    };

                class F {
                    constructor(y, E, I, z = "", j) {
                        this.coerceFunc = y, this.name = E, this.type = I, this.localName = z, this.dynamic = j
                    }
                }

                class e2 extends F {
                    constructor(y) {
                        super(y.coerceFunc, y.name, y.type, void 0, y.dynamic), zl(this, "coder", y)
                    }

                    encode(y) {
                        return this.coder.encode(y)
                    }

                    decode(y, E) {
                        return this.coder.decode(y, E)
                    }
                }

                class R2 extends F {
                    constructor(y, E) {
                        super(y, "null", "", E, !1)
                    }

                    encode(y) {
                        return Ll([])
                    }

                    decode(y, E) {
                        if (E > y.length) throw new Error("invalid null");
                        return {consumed: 0, value: this.coerceFunc("null", void 0)}
                    }
                }

                function w2(m, y) {
                    return new g2(m.toString(2).substr(-y), 2)
                }

                class j2 extends F {
                    constructor(y, E, I, z) {
                        let j = (I ? "int" : "uint") + 8 * E;
                        super(y, j, j, z, !1), this.size = E, this.signed = I
                    }

                    encode(y) {
                        try {
                            let E = ie(y);
                            if (this.signed) {
                                let z = w2(j1, 8 * this.size - 1);
                                if (E.gt(z)) throw new Error("out-of-bounds");
                                if (z = z.plus(E6).multipliedBy(dt), E.lt(z)) throw new Error("out-of-bounds")
                            } else if (E.lt(G1) || E.gt(w2(j1, 8 * this.size))) throw new Error("out-of-bounds");
                            E = w2(Q(E, 8 * this.size), 8 * this.size), this.signed && (E = Q(Y(E, 8 * this.size), 256));
                            let I = C3(Q(E).toString(16), 64);
                            if (I.indexOf("NaN") !== -1) throw k2("invalid number value, NaN", y2, {
                                arg: this.localName,
                                coderType: this.name,
                                value: y,
                                v: E,
                                twosComplement: Q(E),
                                twosComplement16: Q(E).toString(16),
                                pad: C3(Q(E).toString(16), 64),
                                size: this.size
                            });
                            return Z2(I)
                        } catch (E) {
                            throw k2("invalid number value", y2, {
                                arg: this.localName,
                                coderType: this.name,
                                value: y,
                                message: E.toString()
                            })
                        }
                    }

                    decode(y, E) {
                        if (y.length < E + 32) throw k2("insufficient data for " + this.name + " type", y2, {
                            arg: this.localName,
                            coderType: this.name,
                            value: pn(y.slice(E, E + 32))
                        });
                        let I = 32 - this.size, z = new g2(g3(y.slice(E + I, E + 32)), 16);
                        return z = this.signed ? Y(z, 8 * this.size) : w2(z, 8 * this.size), {
                            consumed: 32,
                            value: this.coerceFunc(this.name, z)
                        }
                    }
                }

                let $2 = new j2(function (m, y) {
                    return y
                }, 32, !1, "none");

                class S3 extends F {
                    constructor(y, E, I) {
                        let z = "bytes" + E;
                        super(y, z, z, I, !1), this.length = E
                    }

                    encode(y) {
                        let E = new Uint8Array(32);
                        try {
                            if (typeof y == "string" && y.length % 2 != 0) throw new Error("hex string cannot be odd-length");
                            let I = Ll(y);
                            if (I.length > this.length) throw new Error("incorrect data length");
                            E.set(I)
                        } catch (I) {
                            throw k2("invalid " + this.name + " value. Use hex strings or Uint8Array", y2, {
                                arg: this.localName,
                                coderType: this.name,
                                value: I.value || y,
                                details: I.message
                            })
                        }
                        return E
                    }

                    decode(y, E) {
                        if (y.length < E + 32) throw k2("insufficient data for " + this.name + " type", y2, {
                            arg: this.localName,
                            coderType: this.name,
                            value: pn(y.slice(E, E + 32))
                        });
                        return {consumed: 32, value: this.coerceFunc(this.name, y.slice(E, E + this.length))}
                    }
                }

                function k3(m) {
                    let y = 32 * Math.ceil(m.length / 32), E = new Uint8Array(y - m.length);
                    return un($2.encode(m.length), m, E)
                }

                function tn(m, y, E) {
                    if (m.length < y + 32) throw k2("insufficient data for dynamicBytes length", y2, {
                        arg: E,
                        coderType: "dynamicBytes",
                        value: pn(m.slice(y, y + 32))
                    });
                    let I = $2.decode(m, y).value;
                    try {
                        I = I.toNumber()
                    } catch (z) {
                        throw z("dynamic bytes count too large", y2, {
                            arg: E,
                            coderType: "dynamicBytes",
                            value: I.toString()
                        })
                    }
                    if (m.length < y + 32 + I) throw k2("insufficient data for dynamicBytes type", y2, {
                        arg: E,
                        coderType: "dynamicBytes",
                        value: pn(m.slice(y, y + 32 + I))
                    });
                    return {consumed: 32 + 32 * Math.ceil(I / 32), value: m.slice(y + 32, y + 32 + I)}
                }

                function w3(m) {
                    return 32 * Math.ceil(m / 32)
                }

                function wn(m, y) {
                    if (!Array.isArray(y)) {
                        if (!y || typeof y != "object") throw k2("invalid tuple value", y2, {
                            coderType: "tuple",
                            value: y
                        });
                        {
                            let f3 = [];
                            m.forEach(function (d3) {
                                f3.push(y[d3.localName])
                            }), y = f3
                        }
                    }
                    if (m.length !== y.length) throw k2("types/value length mismatch", y2, {
                        coderType: "tuple",
                        value: y
                    });
                    let E = [];
                    m.forEach(function (f3, d3) {
                        E.push({dynamic: f3.dynamic, value: f3.encode(y[d3])})
                    });
                    let I = 0, z = 0;
                    E.forEach(function (f3) {
                        f3.dynamic ? (I += 32, z += w3(f3.value.length)) : I += w3(f3.value.length)
                    });
                    let j = 0, _2 = I, J2 = new Uint8Array(I + z);
                    return E.forEach(function (f3) {
                        f3.dynamic ? (J2.set($2.encode(_2), j), j += 32, J2.set(f3.value, _2), _2 += w3(f3.value.length)) : (J2.set(f3.value, j), j += w3(f3.value.length))
                    }), J2
                }

                class Fn extends Array {
                }

                class Yn extends F {
                    constructor(y, E, I, z) {
                        super(y, "array", E.type + "[" + (I >= 0 ? I : "") + "]", z, I === -1 || E.dynamic), this.coder = E, this.length = I
                    }

                    encode(y) {
                        if (!Array.isArray(y)) throw k2("expected array value", y2, {
                            arg: this.localName,
                            coderType: "array",
                            value: y
                        });
                        let E = this.length, I = new Uint8Array(0);
                        E === -1 && (E = y.length, I = $2.encode(E)), function (j, _2, J2) {
                            if (J2 || (J2 = ""), j < _2) throw k2("missing argument" + J2, "MISSING_ARGUMENT", {
                                count: j,
                                expectedCount: _2
                            });
                            if (j > _2) throw k2("too many arguments" + J2, "UNEXPECTED_ARGUMENT", {
                                count: j,
                                expectedCount: _2
                            })
                        }(E, y.length, "in coder array" + (this.localName ? " " + this.localName : ""));
                        let z = [];
                        for (let j = 0; j < y.length; j++) z.push(this.coder);
                        return un(I, wn(z, y))
                    }

                    decode(y, E) {
                        let I = 0, z = this.length;
                        if (z === -1) {
                            let J2;
                            try {
                                J2 = $2.decode(y, E)
                            } catch (f3) {
                                throw k2("insufficient data for dynamic array length", y2, {
                                    arg: this.localName,
                                    coderType: "array",
                                    value: f3.value
                                })
                            }
                            try {
                                z = J2.value.toNumber()
                            } catch {
                                throw k2("array count too large", y2, {
                                    arg: this.localName,
                                    coderType: "array",
                                    value: J2.value.toString()
                                })
                            }
                            I += J2.consumed, E += J2.consumed
                        }
                        let j = [];
                        for (let J2 = 0; J2 < z; J2++) j.push(new e2(this.coder));
                        let _2 = function (J2, f3, d3) {
                            let _e = d3, _n = 0, O2 = [];
                            return J2.forEach(function (ae) {
                                let mn;
                                if (ae.dynamic) {
                                    let Sn = $2.decode(f3, d3);
                                    mn = ae.decode(f3, _e + Sn.value.toNumber()), mn.consumed = Sn.consumed
                                } else mn = ae.decode(f3, d3);
                                mn.value !== void 0 && O2.push(mn.value), d3 += mn.consumed, _n += mn.consumed
                            }), {value: O2, consumed: _n}
                        }(j, y, E);
                        return _2.consumed += I, _2.value = this.coerceFunc(this.type, _2.value), _2
                    }
                }

                class Rn extends F {
                    constructor(y, E, I) {
                        let z = !1, j = [];
                        E.forEach(function (_2) {
                            _2.dynamic && (z = !0), j.push(_2.type)
                        }), super(y, "tuple", "tuple(" + j.join(",") + ")", I, z), this.coders = E
                    }

                    encode(y) {
                        return wn(this.coders, y)
                    }

                    decode(y, E) {
                        let I = function (z, j, _2) {
                            let J2 = _2, f3 = 0, d3 = new Fn;
                            return z.forEach(function (_e) {
                                let _n;
                                if (_e.dynamic) {
                                    let O2 = $2.decode(j, _2);
                                    _n = _e.decode(j, J2 + O2.value.toNumber()), _n.consumed = O2.consumed
                                } else _n = _e.decode(j, _2);
                                _n.value !== void 0 && d3.push(_n.value), _2 += _n.consumed, f3 += _n.consumed
                            }), z.forEach(function (_e, _n) {
                                let O2 = _e.localName;
                                O2 && (O2 === "length" && (O2 = "_length"), d3[O2] !== null && d3[O2] !== void 0 || (d3[O2] = d3[_n]))
                            }), {value: d3, consumed: f3}
                        }(this.coders, y, E);
                        return I.value = this.coerceFunc(this.type, I.value), I
                    }
                }

                let E3 = {
                    address: class extends F {
                        constructor(m, y) {
                            super(m, "address", "address", y, !1)
                        }

                        encode(m) {
                            let y = new Uint8Array(32), E = m.trim();
                            if (!d2(E)) throw k2("invalid address format", y2, {
                                arg: this.localName,
                                coderType: "address",
                                value: m
                            });
                            try {
                                y.set(Z2(on(E)), 12)
                            } catch (I) {
                                throw k2(`invalid address (${I.message})`, y2, {
                                    arg: this.localName,
                                    coderType: "address",
                                    value: m
                                })
                            }
                            return y
                        }

                        decode(m, y) {
                            if (m.length < y + 32) throw k2("insufficuent data for address type", y2, {
                                arg: this.localName,
                                coderType: "address",
                                value: pn(m.slice(y, y + 32)),
                                missingBytes: y + 32 - m.length
                            });
                            return {consumed: 32, value: this.coerceFunc("address", s2(pn(m.slice(y + 12, y + 32))))}
                        }
                    }, bool: class extends F {
                        constructor(m, y) {
                            super(m, "bool", "bool", y, !1)
                        }

                        encode(m) {
                            return $2.encode(m ? 1 : 0)
                        }

                        decode(m, y) {
                            try {
                                let E = $2.decode(m, y);
                                return {consumed: E.consumed, value: this.coerceFunc("bool", !E.value.isZero())}
                            } catch (E) {
                                throw E.reason === "insufficient data for uint256 type" ? k2("insufficient data for boolean type", y2, {
                                    arg: this.localName,
                                    coderType: "boolean",
                                    value: E.value
                                }) : E
                            }
                        }
                    }, string: class extends F {
                        constructor(m, y) {
                            super(m, "string", "string", y, !0)
                        }

                        encode(m) {
                            if (typeof m != "string") throw k2("invalid string value", y2, {
                                arg: this.localName,
                                coderType: "string",
                                value: m
                            });
                            return k3(O(m))
                        }

                        decode(m, y) {
                            let E = tn(m, y, this.localName);
                            return E.value = this.coerceFunc("string", J(E.value)), E
                        }
                    }, bytes: class extends F {
                        constructor(m, y) {
                            super(m, "bytes", "bytes", y, !0)
                        }

                        encode(m) {
                            try {
                                return k3(Ll(m))
                            } catch (y) {
                                throw y("invalid bytes value", y2, {
                                    arg: this.localName,
                                    coderType: "bytes",
                                    value: y.value
                                })
                            }
                        }

                        decode(m, y) {
                            let E = tn(m, y, this.localName);
                            return E.value = this.coerceFunc("bytes", E.value), E
                        }
                    }, function: class extends S3 {
                        constructor(m, y) {
                            super(m, 24, y)
                        }
                    }
                };

                function Vn(m, y) {
                    let E = E3[y.type];
                    if (E) return new E(m, y.name);
                    let I = y.type.match(S);
                    if (I) {
                        let z = parseInt(I[2] || "256");
                        if (z === 0 || z > 256 || z % 8 != 0) throw k2("invalid " + I[1] + " bit length", y2, {
                            arg: "param",
                            value: y
                        });
                        return new j2(m, z / 8, I[1] === "int", y.name)
                    }
                    if (I = y.type.match(pe), I) {
                        let z = parseInt(I[1]);
                        if (z === 0 || z > 32) throw k2("invalid bytes length", y2, {arg: "param", value: y});
                        return new S3(m, z, y.name)
                    }
                    if (I = y.type.match(M), I) {
                        let z = Object.assign({}, y), j = parseInt(I[2] || "-1");
                        return z.type = I[1], new Yn(m, Vn(m, z), j, y.name)
                    }
                    if (y.type.substring(0, 5) === "tuple") return function (z, j, _2) {
                        j || (j = []);
                        let J2 = j.map(f3 => Vn(z, f3));
                        return new Rn(z, J2, _2)
                    }(m, y.components, y.name);
                    if (y.type === "") return new R2(m, y.name);
                    throw k2("invalid type", y2, {arg: "type", value: y.type, fullType: y})
                }

                class Jn {
                    constructor(y) {
                        (function (E, I) {
                            if (!(E instanceof I)) throw k2("missing new", "MISSING_NEW", {name: I.name})
                        })(this, Jn), y || (y = L), zl(this, "coerceFunc", y)
                    }

                    encode(y, E) {
                        if (y.length !== E.length) throw k2("types/values length mismatch", y2, {
                            count: {
                                types: y.length,
                                values: E.length
                            }, value: {types: y, values: E}
                        });
                        let I = y.map(z => typeof z == "string" ? P4(z) : z).map(z => Vn(this.coerceFunc, z));
                        return new Rn(this.coerceFunc, I, "_").encode(E)
                    }

                    decode(y, E) {
                        let I = y.map(z => typeof z == "string" ? P4(z) : z).map(z => Vn(this.coerceFunc, z));
                        return new Rn(this.coerceFunc, I, "_").decode(E, 0).value
                    }
                }

                let G3 = new Jn;
                var V3, q2;

                function F2(m, y, E, I) {
                    var z, j = arguments.length,
                        _2 = j < 3 ? y : I === null ? I = Object.getOwnPropertyDescriptor(y, E) : I;
                    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") _2 = Reflect.decorate(m, y, E, I); else for (var J2 = m.length - 1; J2 >= 0; J2--) (z = m[J2]) && (_2 = (j < 3 ? z(_2) : j > 3 ? z(y, E, _2) : z(y, E)) || _2);
                    return j > 3 && _2 && Object.defineProperty(y, E, _2), _2
                }

                function W2(m, y) {
                    if (typeof Reflect == "object" && typeof Reflect.metadata == "function") return Reflect.metadata(m, y)
                }

                n.coder = void 0, (V3 = n.coder || (n.coder = {})).encodeParams = function (m, y) {
                    return g3(G3.encode(m, y))
                }, V3.decodeParams = function (m, y) {
                    if (m.length > 0 && (!y || y === "0x" || y === "0X")) throw new Error("Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.");
                    return G3.decode(m, Z2("0x" + y.replace(/0x/i, "")))
                }, typeof SuppressedError == "function" && SuppressedError;

                class r3 {
                    constructor(y) {
                        this.callName = y.callName, this.params = y.params || 0, this.inputFormatter = y.inputFormatter || null, this.outputFormatter = y.outputFormatter
                    }

                    validateArgs(y) {
                        if (y.length !== this.params) throw E = this.callName, I = y.length, z = this.params, new Error(`Invalid number of input parameters to RPC method "${E}" given: ${I}, expected: ${z}`);
                        var E, I, z
                    }

                    formatInput(y) {
                        return this.inputFormatter ? this.inputFormatter.map(function (E, I) {
                            return E ? E(y[I]) : y[I]
                        }) : y
                    }

                    formatOutput(y) {
                        return y !== null ? this.outputFormatter(y) : null
                    }

                    toPayload(y) {
                        let E = this.formatInput(y);
                        return this.validateArgs(E), {method: this.callName, params: E}
                    }

                    async execute(y, ...E) {
                        let I = this.toPayload(E);
                        if (!y) throw new Error("Missing RequestManager in method#exec");
                        let z = await y.sendAsync(I);
                        return this.formatOutput(z)
                    }
                }

                class Tn {
                    constructor(y) {
                        this.getter = y.getter, this.outputFormatter = y.outputFormatter
                    }

                    formatOutput(y) {
                        return this.outputFormatter(y)
                    }

                    async execute(y, ...E) {
                        let I = await y.sendAsync({method: this.getter, params: []});
                        return this.formatOutput(I)
                    }
                }

                function Un(m) {
                    return new Promise(y => setTimeout(y, m))
                }

                n.eth = void 0, (q2 = n.eth || (n.eth = {})).eth_getBalance = new r3({
                    callName: "eth_getBalance",
                    params: 2,
                    inputFormatter: [on, Ul],
                    outputFormatter: Ut
                }), q2.eth_getStorageAt = new r3({
                    callName: "eth_getStorageAt",
                    params: 3,
                    inputFormatter: [on, pn, Ul],
                    outputFormatter: f2
                }), q2.eth_getCode = new r3({
                    callName: "eth_getCode",
                    params: 2,
                    inputFormatter: [on, Ul],
                    outputFormatter: f2
                }), q2.eth_getBlockByHash = new r3({
                    callName: "eth_getBlockByHash",
                    params: 2,
                    inputFormatter: [N, function (m) {
                        return !!m
                    }],
                    outputFormatter: x3
                }), q2.eth_getBlockByNumber = new r3({
                    callName: "eth_getBlockByNumber",
                    params: 2,
                    inputFormatter: [N, function (m) {
                        return !!m
                    }],
                    outputFormatter: x3
                }), q2.eth_getUncleByBlockHashAndIndex = new r3({
                    callName: "eth_getUncleByBlockHashAndIndex",
                    params: 2,
                    inputFormatter: [N, pn],
                    outputFormatter: x3
                }), q2.eth_getUncleByBlockNumberAndIndex = new r3({
                    callName: "eth_getUncleByBlockNumberAndIndex",
                    params: 2,
                    inputFormatter: [N, pn],
                    outputFormatter: x3
                }), q2.eth_getBlockTransactionCountByHash = new r3({
                    callName: "eth_getBlockTransactionCountByHash",
                    params: 1,
                    inputFormatter: [N],
                    outputFormatter: I2
                }), q2.eth_getBlockTransactionCountByNumber = new r3({
                    callName: "eth_getBlockTransactionCountByNumber",
                    params: 1,
                    inputFormatter: [N],
                    outputFormatter: I2
                }), q2.eth_getUncleCountByBlockHash = new r3({
                    callName: "eth_getUncleCountByBlockHash",
                    params: 1,
                    inputFormatter: [N],
                    outputFormatter: I2
                }), q2.eth_getUncleCountByBlockNumber = new r3({
                    callName: "eth_getUncleCountByBlockNumber",
                    params: 1,
                    inputFormatter: [N],
                    outputFormatter: I2
                }), q2.eth_getTransactionByHash = new r3({
                    callName: "eth_getTransactionByHash",
                    params: 1,
                    inputFormatter: [a2],
                    outputFormatter: G2
                }), q2.eth_getTransactionByBlockHashAndIndex = new r3({
                    callName: "eth_getTransactionByBlockHashAndIndex",
                    params: 2,
                    inputFormatter: [N, pn],
                    outputFormatter: G2
                }), q2.eth_getTransactionByBlockNumberAndIndex = new r3({
                    callName: "eth_getTransactionByBlockNumberAndIndex",
                    params: 2,
                    inputFormatter: [N, pn],
                    outputFormatter: G2
                }), q2.eth_getTransactionReceipt = new r3({
                    callName: "eth_getTransactionReceipt",
                    params: 1,
                    inputFormatter: [a2],
                    outputFormatter: o3
                }), q2.eth_getTransactionCount = new r3({
                    callName: "eth_getTransactionCount",
                    params: 2,
                    inputFormatter: [on, Ul],
                    outputFormatter: I2
                }), q2.eth_sendRawTransaction = new r3({
                    callName: "eth_sendRawTransaction",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: f2
                }), q2.web3_sha3 = new r3({
                    callName: "web3_sha3",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: f2
                }), q2.eth_sendTransaction = new r3({
                    callName: "eth_sendTransaction",
                    params: 1,
                    inputFormatter: [K2],
                    outputFormatter: f2
                }), q2.eth_sign = new r3({
                    callName: "eth_sign",
                    params: 2,
                    inputFormatter: [on, null],
                    outputFormatter: f2
                }), q2.eth_call = new r3({
                    callName: "eth_call",
                    params: 2,
                    inputFormatter: [X, Ul],
                    outputFormatter: f2
                }), q2.eth_estimateGas = new r3({
                    callName: "eth_estimateGas",
                    params: 1,
                    inputFormatter: [X],
                    outputFormatter: I2
                }), q2.eth_submitWork = new r3({
                    callName: "eth_submitWork",
                    params: 3,
                    inputFormatter: [null, null, null],
                    outputFormatter: D3
                }), q2.eth_getWork = new r3({
                    callName: "eth_getWork",
                    params: 0,
                    inputFormatter: [],
                    outputFormatter: B2
                }), q2.eth_coinbase = new Tn({
                    getter: "eth_coinbase",
                    outputFormatter: En
                }), q2.eth_mining = new Tn({
                    getter: "eth_mining",
                    outputFormatter: D3
                }), q2.eth_hashrate = new Tn({
                    getter: "eth_hashrate",
                    outputFormatter: I2
                }), q2.eth_syncing = new Tn({
                    getter: "eth_syncing",
                    outputFormatter: vl
                }), q2.eth_gasPrice = new Tn({
                    getter: "eth_gasPrice",
                    outputFormatter: Ut
                }), q2.eth_accounts = new Tn({
                    getter: "eth_accounts",
                    outputFormatter: B2
                }), q2.eth_blockNumber = new Tn({
                    getter: "eth_blockNumber",
                    outputFormatter: I2
                }), q2.eth_protocolVersion = new Tn({
                    getter: "eth_protocolVersion",
                    outputFormatter: I2
                }), q2.web3_clientVersion = new Tn({
                    getter: "web3_clientVersion",
                    outputFormatter: $
                }), q2.net_version = new Tn({
                    getter: "net_version",
                    outputFormatter: $
                }), q2.shh_version = new r3({
                    callName: "shh_version",
                    params: 0,
                    inputFormatter: [],
                    outputFormatter: I2
                }), q2.shh_post = new r3({
                    callName: "shh_post",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: D3
                }), q2.personal_newAccount = new r3({
                    callName: "personal_newAccount",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: En
                }), q2.personal_importRawKey = new r3({
                    callName: "personal_importRawKey",
                    params: 2,
                    inputFormatter: [null, null],
                    outputFormatter: En
                }), q2.personal_sign = new r3({
                    callName: "personal_sign",
                    params: 3,
                    inputFormatter: [l3, on, null],
                    outputFormatter: f2
                }), q2.personal_ecRecover = new r3({
                    callName: "personal_ecRecover",
                    params: 2,
                    inputFormatter: [l3, null],
                    outputFormatter: En
                }), q2.personal_unlockAccount = new r3({
                    callName: "personal_unlockAccount",
                    params: 3,
                    inputFormatter: [on, null, P2],
                    outputFormatter: D3
                }), q2.personal_sendTransaction = new r3({
                    callName: "personal_sendTransaction",
                    params: 2,
                    inputFormatter: [K2, null],
                    outputFormatter: f2
                }), q2.personal_lockAccount = new r3({
                    callName: "personal_lockAccount",
                    params: 1,
                    inputFormatter: [on],
                    outputFormatter: D3
                }), q2.personal_listAccounts = new Tn({
                    getter: "personal_listAccounts",
                    outputFormatter: B2
                }), q2.net_listening = new Tn({
                    getter: "net_listening",
                    outputFormatter: D3
                }), q2.net_peerCount = new Tn({
                    getter: "net_peerCount",
                    outputFormatter: I2
                }), q2.eth_newFilter = new r3({
                    callName: "eth_newFilter",
                    params: 1,
                    inputFormatter: [Bn],
                    outputFormatter: pn
                }), q2.eth_getLogs = new r3({
                    callName: "eth_getLogs",
                    params: 1,
                    inputFormatter: [B2],
                    outputFormatter: B2
                }), q2.eth_newBlockFilter = new r3({
                    callName: "eth_newBlockFilter",
                    params: 0,
                    inputFormatter: [],
                    outputFormatter: pn
                }), q2.eth_newPendingTransactionFilter = new r3({
                    callName: "eth_newPendingTransactionFilter",
                    params: 0,
                    inputFormatter: [],
                    outputFormatter: pn
                }), q2.eth_uninstallFilter = new r3({
                    callName: "eth_uninstallFilter",
                    params: 1,
                    inputFormatter: [pn],
                    outputFormatter: D3
                }), q2.eth_getFilterLogs = new r3({
                    callName: "eth_getFilterLogs",
                    params: 1,
                    inputFormatter: [pn],
                    outputFormatter: B2
                }), q2.eth_getFilterChanges = new r3({
                    callName: "eth_getFilterChanges",
                    params: 1,
                    inputFormatter: [pn],
                    outputFormatter: B2
                }), q2.eth_submitHashrate = new r3({
                    callName: "eth_submitHashrate",
                    params: 2,
                    inputFormatter: [null, null],
                    outputFormatter: D3
                }), q2.shh_newIdentity = new r3({
                    callName: "shh_newIdentity",
                    params: 0,
                    inputFormatter: [],
                    outputFormatter: f2
                }), q2.shh_hasIdentity = new r3({
                    callName: "shh_hasIdentity",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: D3
                }), q2.shh_newGroup = new r3({
                    callName: "shh_newGroup",
                    params: 0,
                    inputFormatter: [],
                    outputFormatter: f2
                }), q2.shh_addToGroup = new r3({
                    callName: "shh_addToGroup",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: D3
                }), q2.shh_newFilter = new r3({
                    callName: "shh_newFilter",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: pn
                }), q2.shh_uninstallFilter = new r3({
                    callName: "shh_uninstallFilter",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: D3
                }), q2.shh_getLogs = new r3({
                    callName: "shh_getLogs",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: B2
                }), q2.shh_getFilterMessages = new r3({
                    callName: "shh_getFilterMessages",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: B2
                }), q2.shh_getFilterChanges = new r3({
                    callName: "shh_getFilterChanges",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: B2
                }), q2.shh_getMessages = new r3({
                    callName: "shh_getMessages",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: B2
                });

                function n3(m, y) {
                    let E = n.eth[y];
                    if (!E) throw new Error(`Could not find the method/property named ${y.toString()}`);
                    Object.defineProperty(m, y, {
                        value: function (...I) {
                            return E.execute(this, ...I)
                        }
                    })
                }

                class Q2 {
                    constructor(y) {
                        this.provider = y, this.requests = new Map
                    }

                    async sendAsync(y) {
                        let E = await this.provider;
                        if (!E) throw new Error("Provider not set or invalid");
                        let I = C4(y.method, y.params), z = i();
                        return this.requests.set(I.id, z), E.sendAsync(I, (j, _2) => {
                            this.requests.delete(I.id), j ? z.reject(j) : _4(_2) ? z.resolve(_2.result) : z.reject(function (J2) {
                                let f3 = J2 && J2.error && J2.error.message ? J2.error.message : "Invalid JSON RPC response: " + JSON.stringify(J2);
                                return new Error(f3)
                            }(_2))
                        }), z
                    }

                    setProvider(y) {
                        this.provider = y
                    }

                    async getConfirmedTransaction(y) {
                        let E = await this.waitForCompletion(y);
                        if (this.isFailure(E)) throw new Error(`Transaction "${y}" failed`);
                        return E
                    }

                    async waitForCompletion(y, E) {
                        let I = a2(y);
                        if (await this.isTxDropped(I, E)) {
                            let z = await this.getTransactionAndReceipt(I);
                            return Object.assign(Object.assign({}, z), {status: n.TransactionStatus.failed})
                        }
                        for (; ;) {
                            let z = await this.getTransactionAndReceipt(I);
                            if (!this.isPending(z) && z.receipt) return Object.assign(Object.assign({}, z), {status: this.isFailure(z) ? n.TransactionStatus.failed : n.TransactionStatus.confirmed});
                            await Un(2e3)
                        }
                    }

                    async getTransaction(y) {
                        let E, I = null, z = a2(y);
                        try {
                            let _2 = (await this.eth_accounts())[0];
                            _2 && (I = await this.eth_getTransactionCount(_2, "latest"))
                        } catch {
                            I = null
                        }
                        try {
                            if (E = await this.eth_getTransactionByHash(z), E === null) return null
                        } catch {
                            return null
                        }
                        if (E.blockNumber === null) {
                            if (I !== null) {
                                if (E.nonce < I) return {hash: z, type: n.TransactionType.replaced, nonce: E.nonce};
                                if (E.nonce > I) return {hash: z, type: n.TransactionType.queued, nonce: E.nonce}
                            }
                            return Object.assign({type: n.TransactionType.pending}, E)
                        }
                        let j;
                        try {
                            if (j = await this.eth_getTransactionReceipt(z), j === null || j.status === 0) return Object.assign({type: n.TransactionType.reverted}, E)
                        } catch {
                            return null
                        }
                        return Object.assign(Object.assign({type: n.TransactionType.confirmed}, E), {receipt: j})
                    }

                    async isTxDropped(y, E = 15) {
                        let I = E;
                        for (; I > 0;) {
                            if (await this.getTransactionAndReceipt(y) !== null) return !1;
                            I -= 1, await Un(2e3)
                        }
                        return !0
                    }

                    async getTransactionAndReceipt(y) {
                        y = a2(y);
                        let [E, I] = await Promise.all([this.eth_getTransactionByHash(y), this.eth_getTransactionReceipt(y)]);
                        return Object.assign(Object.assign({}, E), {receipt: I})
                    }

                    isPending(y) {
                        return y && y.blockNumber === null
                    }

                    isFailure(y) {
                        return y && (!y.receipt || y.receipt.status === 0)
                    }
                }

                F2([n3, W2("design:type", Function)], Q2.prototype, "web3_clientVersion", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "web3_sha3", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "net_version", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "net_peerCount", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "net_listening", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_protocolVersion", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_syncing", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_coinbase", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_mining", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_hashrate", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_gasPrice", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_accounts", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_blockNumber", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getBalance", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getStorageAt", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getTransactionCount", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getBlockTransactionCountByHash", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getBlockTransactionCountByNumber", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getUncleCountByBlockHash", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getUncleCountByBlockNumber", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getCode", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_sign", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_sendTransaction", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_sendRawTransaction", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_call", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_estimateGas", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getBlockByHash", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getBlockByNumber", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getTransactionByHash", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getTransactionByBlockHashAndIndex", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getTransactionByBlockNumberAndIndex", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getTransactionReceipt", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getUncleByBlockHashAndIndex", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getUncleByBlockNumberAndIndex", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_newFilter", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_newBlockFilter", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_newPendingTransactionFilter", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_uninstallFilter", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getFilterChanges", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getFilterLogs", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getLogs", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_getWork", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_submitWork", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "eth_submitHashrate", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "shh_post", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "shh_version", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "shh_newIdentity", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "shh_hasIdentity", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "shh_newGroup", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "shh_addToGroup", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "shh_newFilter", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "shh_uninstallFilter", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "shh_getFilterChanges", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "shh_getMessages", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "personal_unlockAccount", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "personal_newAccount", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "personal_listAccounts", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "personal_lockAccount", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "personal_importRawKey", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "personal_sendTransaction", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "personal_sign", void 0), F2([n3, W2("design:type", Function)], Q2.prototype, "personal_ecRecover", void 0);

                class Ln {
                    constructor(y) {
                        this.json = y, this._inputTypes = y.inputs || [], this._outputTypes = y.outputs || [], this._constant = !!y.constant, this._payable = !!y.payable || y.stateMutability === "payable", this.needsToBeTransaction = this._payable || "constant" in y && !y.constant || y.stateMutability === "nonpayable", this._name = R3(y)
                    }

                    extractDefaultBlock(y) {
                        return y.length > this._inputTypes.length && !ee(y[y.length - 1]) && Ul(y.pop()) || "latest"
                    }

                    validateArgs(y) {
                        if (y.some(j => j === void 0)) throw new Error("Invalid call, some arguments are undefined");
                        let E = y.filter(function (j) {
                            return !(ee(j) === !0 && Xe(j) === !1 && Zn(j) === !1 && !(j instanceof Uint8Array))
                        });
                        if (E.length !== this._inputTypes.length) throw I = E.length, z = this._inputTypes.length, new Error(`Invalid number of arguments to Solidity function. given: ${I}, expected: ${z}`);
                        var I, z
                    }

                    toPayload(y) {
                        let E = {to: void 0, data: void 0, value: void 0, from: void 0};
                        y.length > this._inputTypes.length && ee(y[y.length - 1]) && (E = y.pop()), this.validateArgs(y);
                        let I = this.signature(), z = n.coder.encodeParams(this._inputTypes, y);
                        return z.indexOf("0x") === 0 && (z = z.substr(2)), E.data = "0x" + I + z, E
                    }

                    signature() {
                        return P3(this._name).slice(0, 8)
                    }

                    unpackOutput(y) {
                        if (!y) return;
                        let E = y.length >= 2 ? y.slice(2) : y, I = n.coder.decodeParams(this._outputTypes, E);
                        return I.length === 1 ? I[0] : I
                    }

                    async execute(y, E, ...I) {
                        if (!y) throw new Error(`Cannot call function ${this.displayName()} because there is no requestManager`);
                        if (this.needsToBeTransaction) {
                            let z = this.toPayload(I);
                            if (z.to = E, z.value > 0 && !this._payable) throw new Error("Cannot send value to non-payable function");
                            if (!z.from) throw new Error('Missing "from" in transaction options');
                            return await y.eth_sendTransaction(z)
                        }
                        {
                            let z = this.extractDefaultBlock(I), j = this.toPayload(I);
                            j.to = E;
                            let _2 = await y.eth_call(j, z);
                            return this.unpackOutput(_2)
                        }
                    }

                    estimateGas(y, E, ...I) {
                        if (!(y instanceof Q2)) throw new Error("estimateGas needs to receive a RequestManager as first argument");
                        let z = this.toPayload(I);
                        return z.to = E, y.eth_estimateGas(z)
                    }

                    displayName() {
                        return Dn(this._name)
                    }

                    typeName() {
                        return o2(this._name) || "void"
                    }

                    attachToContract(y) {
                        let E = this.displayName(),
                            I = Object.assign((...z) => this.execute(y.requestManager, y.address, ...z), {
                                estimateGas: this.estimateGas.bind(this, y.requestManager, y.address),
                                toPayload: (...z) => this.toPayload(z),
                                toRPCMessage: (...z) => {
                                    let j = this.extractDefaultBlock(z), _2 = this.toPayload(z);
                                    return _2.to = y.address, {method: "eth_call", params: [_2, j]}
                                },
                                unpackOutput: z => this.unpackOutput(z)
                            });
                        y[E] || (y[E] = I), y[E][this.typeName()] = I
                    }
                }

                function pl(m) {
                    if (m == null) return null;
                    let y = String(m).toString();
                    return y.indexOf("0x") === 0 ? y : g3(O(y))
                }

                class Cl {
                    constructor(y) {
                        this.requestManager = y, this.isStarted = !1, this.isDisposed = !1, this.formatter = E => E, this.filterId = i(), this.callbacks = [], this.stopSemaphore = i()
                    }

                    async watch(y) {
                        if (this.isDisposed) throw new Error("The filter was disposed");
                        y && (this.callbacks.push(y), this.isStarted || await this.start())
                    }

                    async start() {
                        if (this.isDisposed) throw new Error("The filter was disposed");
                        if (!this.isStarted) {
                            this.isStarted = !0;
                            try {
                                let y = await this.getNewFilter();
                                if (!y) throw new Error("Could not create a filter, response: " + JSON.stringify(y));
                                this.filterId.resolve(y)
                            } catch (y) {
                                throw y
                            }
                            this.stopSemaphore = i(), await this.poll()
                        }
                    }

                    async stop() {
                        if (!this.isStarted || this.isDisposed) return;
                        this.isDisposed = !0;
                        let y = await this.filterId;
                        if (this.isStarted = !1, this.stopSemaphore && await this.stopSemaphore, await this.uninstall() !== !0) throw new Error(`Couldn't stop the eth filter: ${y}`)
                    }

                    async poll() {
                        if (this.isStarted) {
                            if (this.callbacks.length) {
                                let E = await this.getChanges();
                                E && this.callbacks.forEach(I => {
                                    this.formatter ? E.forEach(z => {
                                        I(this.formatter(z))
                                    }) : E.forEach(z => I(z))
                                })
                            }
                            this.stopSemaphore.resolve(1), this.isStarted && (this.stopSemaphore = i(), setTimeout((y = () => this.poll(), function () {
                                y().catch(E => console.error(E))
                            }), 500))
                        } else this.stopSemaphore.resolve(1);
                        var y
                    }
                }

                class Xn extends Cl {
                    constructor(y, E, I = z => z) {
                        super(y), this.requestManager = y, this.options = E, this.formatter = I, this.options = this.options || {}, this.options.topics = this.options.topics || [], this.options.topics = this.options.topics.map(function (z) {
                            return pl(z)
                        }), this.options = {
                            topics: this.options.topics,
                            address: this.options.address ? this.options.address : void 0,
                            fromBlock: typeof this.options.fromBlock == "number" || typeof this.options.fromBlock == "string" ? N(this.options.fromBlock) || void 0 : "latest",
                            toBlock: typeof this.options.toBlock == "number" || typeof this.options.toBlock == "string" ? N(this.options.toBlock) || void 0 : "latest"
                        }
                    }

                    async getLogs() {
                        this.isStarted || await this.start();
                        let y = await this.filterId;
                        return this.requestManager.eth_getFilterLogs(y)
                    }

                    async getNewFilter() {
                        return this.requestManager.eth_newFilter(this.options)
                    }

                    async getChanges() {
                        let y = await this.filterId;
                        return this.requestManager.eth_getFilterChanges(y)
                    }

                    async uninstall() {
                        let y = await this.filterId;
                        return this.requestManager.eth_uninstallFilter(y)
                    }
                }

                class Wl {
                    constructor(y, E, I) {
                        this.requestManager = y, this.address = I, this._anonymous = !1, this._params = E.inputs || [], this._name = R3(E), this._anonymous = E.anonymous || !1
                    }

                    types(y) {
                        return this._params.filter(function (E) {
                            return E.indexed === y
                        })
                    }

                    displayName() {
                        return Dn(this._name)
                    }

                    typeName() {
                        return o2(this._name) || "void"
                    }

                    signature() {
                        return P3(this._name)
                    }

                    encode(y = {}, E = {}) {
                        let I = {topics: [], address: this.address};
                        E.fromBlock !== void 0 && (I.fromBlock = N(E.fromBlock) || void 0), E.toBlock !== void 0 && (I.toBlock = N(E.toBlock) || void 0), I.topics = I.topics || [], this._anonymous || I.topics.push("0x" + this.signature());
                        let z = this._params.filter(function (j) {
                            return j.indexed === !0
                        }).map(function (j) {
                            let _2 = y[j.name];
                            return _2 == null ? null : Xe(_2) ? _2.map(function (J2) {
                                return "0x" + n.coder.encodeParams([j], [J2])
                            }) : "0x" + n.coder.encodeParams([j], [_2])
                        });
                        return I.topics = I.topics.concat(z), I
                    }

                    decode(y) {
                        y.data = y.data || "", y.topics = y.topics || [];
                        let E = (this._anonymous ? y.topics : y.topics.slice(1)).map(function (J2) {
                                return J2.slice(2)
                            }).join(""), I = n.coder.decodeParams(this.types(!0), E), z = y.data.slice(2),
                            j = n.coder.decodeParams(this.types(!1), z), _2 = this._params.reduce(function (J2, f3) {
                                return J2[f3.name] = f3.indexed ? I.shift() : j.shift(), J2
                            }, {});
                        return Object.assign(Object.assign({}, Cn(y)), {
                            event: this.displayName(),
                            address: y.address,
                            args: _2
                        })
                    }

                    async execute(y, E) {
                        let I = this.encode(y, E), z = this.decode.bind(this);
                        return new Xn(this.requestManager, I, z)
                    }

                    attachToContract(y) {
                        let E = this.execute.bind(this), I = this.displayName();
                        y.events[I] || (y.events[I] = E), y.events[I][this.typeName()] = this.execute.bind(this, y)
                    }
                }

                class Lt {
                    constructor(y, E, I) {
                        this._requestManager = y, this._json = E, this._address = I
                    }

                    encode(y = {}) {
                        let E = {address: this._address};
                        return y.fromBlock !== void 0 && (E.fromBlock = N(y.fromBlock) || void 0), y.toBlock !== void 0 && (E.toBlock = N(y.toBlock) || void 0), E
                    }

                    decode(y) {
                        y.data = y.data || "";
                        let E = Xe(y.topics) && de(y.topics[0]) ? y.topics[0].slice(2) : "",
                            I = this._json.filter(function (z) {
                                return E === P3(R3(z))
                            })[0];
                        return I ? new Wl(this._requestManager, I, this._address).decode(y) : Cn(y)
                    }

                    async execute(y) {
                        let E = this.encode(y), I = this.decode.bind(this);
                        return new Xn(this._requestManager, E, I)
                    }

                    getAllEventsFunction() {
                        return this.execute.bind(this)
                    }
                }

                class pt {
                    constructor(y, E, I) {
                        var z;
                        this.requestManager = y, this.abi = E, this.address = I, this.events = {}, this.transactionHash = null, this.address = I, this.abi = E, (z = this).abi.filter(function (j) {
                            return j.type === "function"
                        }).map(function (j) {
                            return new Ln(j)
                        }).forEach(function (j) {
                            j.attachToContract(z)
                        }), this.allEvents = function (j) {
                            let _2 = j.abi.filter(function (f3) {
                                return f3.type === "event"
                            }), J2 = new Lt(j.requestManager, _2, j.address);
                            return _2.map(function (f3) {
                                return new Wl(j.requestManager, f3, j.address)
                            }).forEach(function (f3) {
                                f3.attachToContract(j)
                            }), J2.getAllEventsFunction()
                        }(this)
                    }
                }

                n.AbstractFilter = Cl, n.BigNumber = g2, n.Contract = pt, n.ContractFactory = class {
                    constructor(m, y) {
                        this.requestManager = m, this.abi = y
                    }

                    async deploy(...m) {
                        let y, E = m[m.length - 1];
                        if (ee(E) && !Xe(E) && (y = m.pop()), !y) throw new Error("Missing options object");
                        if (!y.data || typeof y.data != "string") throw new Error("Invalid options.data");
                        if (I2(y.value) > 0 && !(this.abi.filter(function (d3) {
                            return d3.type === "constructor" && d3.inputs.length === m.length
                        })[0] || {}).payable) throw new Error("Cannot send value to non-payable constructor");
                        let I = (z = this.abi, j = m, z.filter(function (d3) {
                            return d3.type === "constructor" && d3.inputs && d3.inputs.length === j.length
                        }).map(function (d3) {
                            return d3.inputs || []
                        }).map(function (d3) {
                            return n.coder.encodeParams(d3, j)
                        })[0] || "");
                        var z, j;
                        y.data += I, y.gas || (y.gas = await this.requestManager.eth_estimateGas(y));
                        let _2 = await this.requestManager.eth_sendTransaction(y);
                        if (!_2) throw new Error("Error while sending contract creation transaction. A TxHash was not retrieved");
                        let J2 = await async function (d3, _e) {
                            let _n = i(), O2 = 0, ae = () => {
                                O2++, O2 > 50 ? _n.reject(new Error("Contract transaction couldn't be found after 50 blocks")) : d3.eth_getTransactionReceipt(_e).then(Ee => {
                                    Ee && Ee.blockHash ? _n.resolve(Ee) : setTimeout(ae, 1e3)
                                }, Ee => _n.reject(Ee))
                            };
                            ae();
                            let mn = await _n, Sn = await d3.eth_getCode(mn.contractAddress, "latest");
                            if (Sn && Sn.length > 3) return mn.contractAddress;
                            throw Object.assign(new Error("The contract code couldn't be stored, please check your gas amount."), {
                                response: Sn,
                                receipt: mn
                            })
                        }(this.requestManager, _2), f3 = await this.at(J2);
                        return f3.transactionHash = _2, f3
                    }

                    async at(m) {
                        if (!d2(m)) throw new TypeError(`Invalid address ${JSON.stringify(m)}`);
                        return new pt(this.requestManager, this.abi, m)
                    }
                }, n.EthBlockFilter = class extends Xn {
                    constructor(m) {
                        super(m, {})
                    }

                    async getNewFilter() {
                        return this.requestManager.eth_newBlockFilter()
                    }
                }, n.EthFilter = Xn, n.EthPendingTransactionFilter = class extends Xn {
                    constructor(m) {
                        super(m, {})
                    }

                    async getNewFilter() {
                        return this.requestManager.eth_newPendingTransactionFilter()
                    }
                }, n.HTTPProvider = class {
                    constructor(m, y = {}) {
                        this.host = m, this.options = y, this.debug = !1, this.host = m || "http://localhost:8545"
                    }

                    send() {
                        throw new Error("Sync requests are deprecated")
                    }

                    sendAsync(m, y) {
                        try {
                            let E = null;
                            E = m instanceof Array ? m.map(j => e(j)) : e(m);
                            let I = this.options.fetch || globalThis.fetch;
                            if (I === void 0) throw new Error("There is no global fetch object nor it was provided. Please install and import isomorphic-fetch");
                            let z = {
                                body: JSON.stringify(E),
                                method: "POST",
                                headers: Object.assign(Object.assign({}, this.options.headers), {"Content-Type": "application/json"})
                            };
                            this.debug && console.log("SEND >> " + z.body), I(this.host, z).then(async j => {
                                if (j.ok) {
                                    let _2 = await j.json();
                                    this.debug && console.log("RECV << " + JSON.stringify(_2)), _2.error ? y(Object.assign(new Error(_2.error.json || _2.error), _2.error)) : y(null, _2)
                                } else this.debug && console.log("ERR << " + JSON.stringify(j)), y(new Error("External error. response code: " + j.status))
                            }, j => {
                                this.debug && console.log("ERR << " + JSON.stringify(j)), y(j)
                            })
                        } catch (E) {
                            this.debug && console.log("ERR << " + JSON.stringify(E)), y(E)
                        }
                    }
                }, n.Method = r3, n.Property = Tn, n.RequestManager = Q2, n.SHHFilter = class extends Cl {
                    constructor(m, y) {
                        super(m), this.requestManager = m, this.options = y, this.options = this.options || {topics: []}, this.options.topics = this.options.topics || [], this.options.topics = this.options.topics.map(function (E) {
                            return pl(E)
                        }), this.options = {topics: this.options.topics, to: this.options.to}
                    }

                    async getMessages() {
                        let m = await this.filterId;
                        return this.requestManager.shh_getMessages(m)
                    }

                    async getNewFilter() {
                        return this.requestManager.shh_newFilter(this.options)
                    }

                    async getChanges() {
                        let m = await this.filterId;
                        return this.requestManager.shh_getFilterChanges(m)
                    }

                    async uninstall() {
                        let m = await this.filterId;
                        return this.requestManager.shh_uninstallFilter(m)
                    }
                }, n.SolidityEvent = Wl, n.SolidityFunction = Ln, n.WebSocketProvider = class {
                    constructor(m, y = {}) {
                        this.url = m, this.options = y, this.isDisposed = !1, this.responseCallbacks = new Map, this.notificationCallbacks = new Set, this.debug = !1, this.lastChunk = "", this.connect()
                    }

                    dispose() {
                        this.isDisposed = !0;
                        let m = this.connection;
                        this.timeout(new Error("Provider disposed.")), m.then(y => y.close()).catch(y => {
                            this.debug && console.error(y)
                        })
                    }

                    send() {
                        throw new Error("Sync requests are deprecated")
                    }

                    sendAsync(m, y) {
                        let E = [], I;
                        if (m instanceof Array) I = Promise.all(m.map(z => {
                            let j = i();
                            try {
                                let _2 = e(z);
                                E.push(_2), this.responseCallbacks.set(_2.id, j)
                            } catch (_2) {
                                j.reject(_2)
                            }
                            return j
                        })); else {
                            let z = i();
                            try {
                                let j = e(m);
                                E.push(j), this.responseCallbacks.set(j.id, z)
                            } catch (j) {
                                z.reject(j)
                            }
                            I = z
                        }
                        I.then(z => y(null, z), z => y(z)), this.connection.then(z => {
                            E.forEach(j => {
                                let _2 = JSON.stringify(j);
                                this.debug && console.log("SEND >> " + _2), z.send(_2)
                            })
                        }, z => {
                            y(z)
                        })
                    }

                    parseResponse(m) {
                        let y = [];
                        return m.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach(E => {
                            let I = E;
                            this.lastChunk && (I = this.lastChunk + I);
                            let z = null;
                            try {
                                z = JSON.parse(I)
                            } catch {
                                return this.lastChunk = I, clearTimeout(this.lastChunkTimeout), void (this.lastChunkTimeout = setTimeout(() => {
                                    this.timeout()
                                }, 15e3))
                            }
                            clearTimeout(this.lastChunkTimeout), this.lastChunk = "", z && y.push(z)
                        }), y
                    }

                    processMessage(m) {
                        if ("id" in m) {
                            let y = m.id, E = this.responseCallbacks.get(y);
                            if (!E) return void console.error("Error: Received a response for an unknown request", m);
                            this.responseCallbacks.delete(y), m.error !== void 0 && m.error !== null ? E.reject(Object.assign(new Error(m.error.message || m.error), m.error)) : "result" in m && E.resolve(m)
                        } else this.notificationCallbacks.forEach(y => y(null, m))
                    }

                    timeout(m) {
                        this.connection && this.connection.isPending || (this.connection = i());
                        let y = m || new Error("Connection timeout");
                        this.responseCallbacks.forEach(E => E.reject(y)), this.responseCallbacks.clear(), this.isDisposed || setTimeout(() => this.connect(), 1e3)
                    }

                    connect() {
                        this.connection && !this.connection.isPending && this.connection.then(E => E.close()).catch(E => {
                            this.debug && console.error(E)
                        }), this.connection && this.connection.isPending || (this.connection = i()), this.lastChunk = "";
                        let m = this.options.WebSocketConstructor || (typeof WebSocket < "u" ? WebSocket : void 0);
                        if (!m) throw new Error("Please provide a WebSocketConstructor");
                        let y = new m(this.url, this.options.protocol);
                        y.onopen = () => {
                            this.connection.resolve(y)
                        }, y.onerror = E => {
                            let I = new Error("Error in web socket");
                            I.data = E, this.timeout(I)
                        }, y.onclose = E => {
                            this.timeout(new Error(`Connection closed (${E && E.reason || "Unknown reason"})`))
                        }, y.onmessage = E => {
                            let I = typeof E.data == "string" ? E.data : "";
                            this.debug && console.log("RECV << " + E.data), this.parseResponse(I).forEach(z => {
                                z instanceof Array ? z.forEach(j => this.processMessage(j)) : this.processMessage(z)
                            })
                        }
                    }
                }, n.bytesToHex = g3, n.bytesToUtf8String = J, n.concatBytes = un, n.default = Q2, n.extractDisplayName = Dn, n.extractTypeName = o2, n.fromAscii = function (m, y = 0) {
                    let E = "";
                    for (let I = 0; I < m.length; I++) {
                        let z = m.charCodeAt(I).toString(16);
                        E += z.length < 2 ? "0" + z : z
                    }
                    return "0x" + E.padEnd(y, "0")
                }, n.fromDecimal = Q3, n.fromTwosComplement = Y, n.fromWei = function (m, y) {
                    let E = ie(m).dividedBy(Fl(y));
                    return Zn(m) ? E : E.toString(10)
                }, n.getAddress = s2, n.getValueOfUnit = Fl, n.hexToBytes = Z2, n.inputAddressFormatter = on, n.inputBlockNumberFormatter = N, n.inputCallFormatter = X, n.inputDefaultBlockNumberFormatter = Ul, n.inputFilterOptions = Bn, n.inputPostFormatter = function (m) {
                    return m ? (m.ttl = Q3(m.ttl), m.workToProve = Q3(m.workToProve), m.priority = Q3(m.priority), Xe(m.topics) || (m.topics = m.topics ? [m.topics] : []), m.topics = m.topics.map(function (y) {
                        return y.indexOf("0x") === 0 ? y : "0x" + g3(O(y))
                    }), m) : null
                }, n.inputTransactionFormatter = K2, n.inputTransactionId = a2, n.isAddress = d2, n.isArray = Xe, n.isBigNumber = Zn, n.isBloom = function (m) {
                    return !!/^(0x)?[0-9a-f]{512}$/i.test(m) && !!/^(0x)?[0-9a-f]{512}$/i.test(m)
                }, n.isBoolean = wl, n.isChecksumAddress = N2, n.isFunction = function (m) {
                    return typeof m == "function"
                }, n.isHex = function (m) {
                    return typeof m == "string" && /^0x[0-9a-fA-F]+$/.test(m)
                }, n.isJson = function (m) {
                    try {
                        return !!JSON.parse(m)
                    } catch {
                        return !1
                    }
                }, n.isObject = ee, n.isPredefinedBlockNumber = n1, n.isStrictAddress = K, n.isString = de, n.isTopic = function (m) {
                    return !!/^(0x)?[0-9a-f]{64}$/i.test(m) && !!/^(0x)?[0-9a-f]{64}$/i.test(m)
                }, n.isValidResponse = _4, n.outputBigNumberFormatter = Ut, n.outputBlockFormatter = x3, n.outputLogFormatter = Cn, n.outputPostFormatter = function (m) {
                    return m ? (m.expiry = I2(m.expiry), m.sent = I2(m.sent), m.ttl = I2(m.ttl), m.workProved = I2(m.workProved), m.topics || (m.topics = []), m.topics = m.topics.map(function (y) {
                        return N3(y)
                    }), m) : null
                }, n.outputSyncingFormatter = vl, n.outputTransactionFormatter = G2, n.outputTransactionReceiptFormatter = o3, n.padLeft = C3, n.padRight = function (m, y, E) {
                    return m + new Array(y - m.length + 1).join(E || "0")
                }, n.sha3 = P3, n.signedIsNegative = E2, n.stringToUtf8Bytes = O, n.toAddress = En, n.toArray = B2, n.toAscii = N3, n.toBatchPayload = function (m) {
                    return m.map(function (y) {
                        return C4(y.method, y.params)
                    })
                }, n.toBigNumber = ie, n.toBoolean = D3, n.toChecksumAddress = c3, n.toData = f2, n.toDecimal = I2, n.toHex = pn, n.toJsonRpcRequest = C4, n.toNullDecimal = P2, n.toString = $, n.toStringData = l3, n.toTwosComplement = Q, n.toWei = function (m, y) {
                    let E = ie(m).times(Fl(y));
                    return Zn(m) ? E : E.toString(10)
                }, n.transformToFullName = R3, Object.defineProperty(n, "__esModule", {value: !0})
            })
        });

        function rx(n) {
            let e = n.getComponent(_1.componentId), r = n.getComponent(Q0.componentId);
            return function (l) {
                let i = l.componentId;
                if ([rh.componentId, th.componentId].includes(i)) return !1;
                let [o] = At.fromEntityId(l.entityId);
                if (o < Ei) return !1;
                let f = e.getOrNull(l.entityId);
                if (l.type === e3.DELETE_ENTITY_NETWORK || f && l.type === e3.DELETE_ENTITY) return !0;
                let s = r.getOrNull(l.entityId);
                return s ? l.timestamp <= 1 ? !0 : i === e.componentId ? !1 : !!(i === $7.componentId || i === r.componentId || i && s.componentIds.includes(i)) : !1
            }
        }

        var ux = t2(() => {
            "use strict";
            g4()
        });

        function ox(n) {
            let e = new kn, r = new kn, l = n.getComponent(Q0.componentId), i = n.getComponent(_1.componentId);
            for (let f of n.componentsIter()) f.dumpCrdtStateToBuffer(e, s => i.has(s) ? i.get(s).networkId ? !0 : l.get(s).componentIds.includes(f.componentId) : !1);
            let o;
            for (; o = we.getHeader(e);) if (o.type === e3.PUT_COMPONENT) {
                let f = Ql.read(e), s = i.getOrNull(f.entityId);
                s ? S1.write(s.entityId, f.timestamp, f.componentId, s.networkId, f.data, r) : Ql.write(f.entityId, f.timestamp, f.componentId, f.data, r)
            } else e.incrementReadOffset(o.length);
            return r.toBinary()
        }

        var ix = t2(() => {
            "use strict";
            G4();
            g4()
        });

        function ax(n) {
            let e = new Map;
            return {
                on: (r, l) => {
                    e.set(r, l)
                }, emit: (r, l) => {
                    n(Bv(r, l))
                }, __processMessages: r => {
                    for (let l of r) {
                        let i = Fv(l);
                        if (!i) continue;
                        let {sender: o, messageType: f, data: s} = i, a = e.get(f);
                        a && a(s, o)
                    }
                }
            }
        }

        function Bv(n, e) {
            let r = new Uint8Array(e.byteLength + 1);
            return r.set([n]), r.set(e, 1), r
        }

        function Fv(n) {
            try {
                let e = 0, r = new Uint8Array(n), l = new DataView(r.buffer), i = l.getUint8(e);
                e += 1;
                let o = Uv(n.subarray(1, i + 1));
                e += i;
                let f = l.getUint8(e);
                e += 1;
                let s = r.subarray(e);
                return {sender: o, messageType: f, data: s}
            } catch (e) {
                console.error("Invalid Comms message", e)
            }
        }

        function Uv(n) {
            let e = new kn;
            return e.writeBuffer(n, !0), e.readUtf8String()
        }

        var $4, sx = t2(() => {
            "use strict";
            G4();
            (function (n) {
                n[n.CRDT = 1] = "CRDT", n[n.REQ_CRDT_STATE = 2] = "REQ_CRDT_STATE", n[n.RES_CRDT_STATE = 3] = "RES_CRDT_STATE"
            })($4 || ($4 = {}))
        });

        function as() {
            Zr = !0
        }

        function fx(n, e) {
            e({}).then(({data: r}) => {
                if (r?.userId) {
                    let l = r.userId, i = Pt(r.userId);
                    n.networkId = i, n.userId = l
                } else throw new Error("Couldn't fetch profile data")
            })
        }

        function dx(n) {
            let e = n.getComponent(Bi.componentId);
            if (!is) {
                let r = e.getOrNull(n.RootEntity);
                r && r.tickNumber > 2 && (is = !0)
            }
            return is
        }

        function px(n, e, r) {
            let l = n.getComponent(Bi.componentId);

            async function i() {
                if ((l.getOrNull(n.RootEntity)?.tickNumber ?? 0) > 100) {
                    as();
                    return
                }
            }

            i()
        }

        var cx, Zr, is, mx = t2(() => {
            "use strict";
            g4();
            $6();
            cx = n => n.defineComponent("players-scene", {timestamp: b3.Number, userId: b3.String}), Zr = !1;
            is = !1
        });

        function hx(n, e) {
            let r = n.getComponent(_1.componentId), l = n.getComponent($7.componentId),
                i = n.getComponent(Y2.componentId), o = n.getComponent(Q0.componentId);

            function f(w, P, D) {
                if (!e?.networkId) throw new Error("Profile not initialized. Called syncEntity inside the main() function.");
                let T = {entityId: w, networkId: e.networkId};
                if (D !== void 0) {
                    T.networkId = 0, T.entityId = D;
                    for (let [k, R] of n.getEntitiesWith(r)) if (R.networkId === T.networkId && R.entityId === T.entityId) throw new Error("syncEntity failed because the id provided is already in use")
                }
                r.createOrReplace(w, T), o.createOrReplace(w, {componentIds: P})
            }

            function* s(w) {
                let P = r.getOrNull(w);
                if (P) for (let [D, T] of n.getEntitiesWith(l)) T.entityId === P.entityId && T.networkId === P.networkId && (yield D)
            }

            function a(w) {
                return Array.from(s(w))[0]
            }

            function g(w) {
                let P = l.getOrNull(w);
                if (P) {
                    for (let [D, T] of n.getEntitiesWith(r)) if (P.networkId === T.networkId && P.entityId === T.entityId) return D
                }
            }

            function b(w, P) {
                let D = r.getOrNull(P);
                if (!D) throw new Error("Entity is not sync. Call syncEntity on the parent.");
                l.createOrReplace(w, D), i.getOrNull(w) ? i.getMutable(w) : i.create(w)
            }

            function B(w) {
                if (!r.getOrNull(w)) throw new Error("Entity is not sync");
                l.deleteFrom(w)
            }

            return {syncEntity: f, getChildren: s, getParent: g, parentEntity: b, removeParent: B, getFirstChild: a}
        }

        var yx = t2(() => {
            "use strict";
            g4()
        });

        function gx(n, e, r) {
            cx(n);
            let l = {};
            fx(l, r);
            let i = hx(n, l), o = [], f = ax(g => o.push(g));

            function s() {
                let g = [...o];
                return o.length = 0, g
            }

            let a = {
                filter: rx(n), send: async g => {
                    dx(n) && g.byteLength && f.emit($4.CRDT, g);
                    let b = s(), B = await e({data: b});
                    f.__processMessages(B.data)
                }, type: "network"
            };
            return n.addTransport(a), n.addSystem(() => px(n, l, i.syncEntity)), f.emit($4.REQ_CRDT_STATE, new Uint8Array), f.on($4.RES_CRDT_STATE, g => {
                Zr || (as(), a.onmessage(g))
            }), f.on($4.REQ_CRDT_STATE, () => {
                Zr && f.emit($4.RES_CRDT_STATE, ox(n))
            }), f.on($4.CRDT, g => {
                a.onmessage(g)
            }), {...i, myProfile: l}
        }

        var xx = t2(() => {
            "use strict";
            ux();
            ix();
            sx();
            mx();
            yx()
        });
        var Tx = {};
        Cc(Tx, {
            getChildren: () => Lv,
            getFirstChild: () => jv,
            getParent: () => Hv,
            myProfile: () => Vv,
            parentEntity: () => Wv,
            removeParent: () => Gv,
            syncEntity: () => zv
        });
        var bx, Ex, Lv, zv, Wv, Hv, Vv, Gv, jv, Sx = t2(() => {
            "use strict";
            bx = require("~system/CommunicationsController");
            g4();
            xx();
            Ex = require("~system/UserIdentity"), {
                getChildren: Lv,
                syncEntity: zv,
                parentEntity: Wv,
                getParent: Hv,
                myProfile: Vv,
                removeParent: Gv,
                getFirstChild: jv
            } = gx(A2, bx.sendBinary, Ex.getUserData)
        });
        var qv = {};
        Cc(qv, {main: () => Kr, onStart: () => PT, onUpdate: () => _T, rendererTransport: () => er});
        module.exports = tb(qv);
        g4();
        var $0 = require("~system/EngineApi");
        $6();

        function vh(n) {
            async function e(l) {
                let i = await n.crdtSendToRenderer({data: new Uint8Array(l)});
                if (i && i.data && i.data.length && r.onmessage) for (let o of i.data) r.onmessage(o)
            }

            let r = {
                async send(l) {
                    try {
                        await e(l)
                    } catch (i) {
                        console.error(i);
                        debugger
                    }
                }, filter(l) {
                    return l.componentId > xi ? !1 : !!l
                }, type: "renderer"
            };
            return r
        }

        var Hi = class {
            constructor(e, r = !1, l, i) {
                this.initalize(e, r, l, i)
            }

            initalize(e, r = !1, l, i) {
                return this.mask = e, this.skipNextObservers = r, this.target = l, this.currentTarget = i, this
            }
        }, Vi = class {
            constructor(e, r, l = null) {
                this.callback = e, this.mask = r, this.scope = l, this.unregisterOnNextCall = !1, this._willBeUnregistered = !1
            }
        }, Dl = class n {
            constructor(e) {
                this._observers = new Array, this._onObserverAdded = null, this._eventState = new Hi(0), e && (this._onObserverAdded = e)
            }

            add(e, r = -1, l = !1, i = null, o = !1) {
                if (!e) return null;
                let f = new Vi(e, r, i);
                return f.unregisterOnNextCall = o, l ? this._observers.unshift(f) : this._observers.push(f), this._onObserverAdded && this._onObserverAdded(f), f
            }

            addOnce(e) {
                return this.add(e, void 0, void 0, void 0, !0)
            }

            remove(e) {
                return e && this._observers.indexOf(e) !== -1 ? (this._deferUnregister(e), !0) : !1
            }

            removeCallback(e, r) {
                for (let l = 0; l < this._observers.length; l++) if (this._observers[l].callback === e && (!r || r === this._observers[l].scope)) return this._deferUnregister(this._observers[l]), !0;
                return !1
            }

            notifyObservers(e, r = -1, l, i) {
                if (!this._observers.length) return !0;
                let o = this._eventState;
                o.mask = r, o.target = l, o.currentTarget = i, o.skipNextObservers = !1, o.lastReturnValue = e;
                for (let f of this._observers) if (!f._willBeUnregistered && (f.mask & r && (f.scope ? o.lastReturnValue = f.callback.apply(f.scope, [e, o]) : o.lastReturnValue = f.callback(e, o), f.unregisterOnNextCall && this._deferUnregister(f)), o.skipNextObservers)) return !1;
                return !0
            }

            notifyObserversWithPromise(e, r = -1, l, i) {
                let o = Promise.resolve(e);
                if (!this._observers.length) return o;
                let f = this._eventState;
                return f.mask = r, f.target = l, f.currentTarget = i, f.skipNextObservers = !1, this._observers.forEach(s => {
                    f.skipNextObservers || s._willBeUnregistered || s.mask & r && (s.scope ? o = o.then(a => (f.lastReturnValue = a, s.callback.apply(s.scope, [e, f]))) : o = o.then(a => (f.lastReturnValue = a, s.callback(e, f))), s.unregisterOnNextCall && this._deferUnregister(s))
                }), o.then(() => e)
            }

            notifyObserver(e, r, l = -1) {
                let i = this._eventState;
                i.mask = l, i.skipNextObservers = !1, e.callback(r, i)
            }

            hasObservers() {
                return this._observers.length > 0
            }

            clear() {
                this._observers = new Array, this._onObserverAdded = null
            }

            clone() {
                let e = new n;
                return e._observers = this._observers.slice(0), e
            }

            hasSpecificMask(e = -1) {
                for (let r of this._observers) if (r.mask & e || r.mask === e) return !0;
                return !1
            }

            _deferUnregister(e) {
                e.unregisterOnNextCall = !1, e._willBeUnregistered = !0, Promise.resolve().then.bind(Promise.resolve())(async () => this._remove(e)).catch(console.error)
            }

            _remove(e) {
                if (!e) return !1;
                let r = this._observers.indexOf(e);
                return r !== -1 ? (this._observers.splice(r, 1), !0) : !1
            }
        };
        var Ch = require("~system/EngineApi"), ST = Ch.subscribe;

        function Zt(n) {
            return () => {
                ST({eventId: n}).catch(console.error)
            }
        }

        var Gi = new Dl(Zt("onEnterScene"));
        var ji = new Dl(Zt("onLeaveScene"));
        var qi = new Dl(Zt("sceneStart")), Yi = new Dl(Zt("playerExpression")), Ji = new Dl(Zt("videoEvent")),
            Xi = new Dl(Zt("profileChanged")), wT = new Dl(Zt("playerConnected")),
            vT = new Dl(Zt("playerDisconnected")), Ki = new Dl(Zt("onRealmChanged")), Zi = new Dl(Zt("playerClicked")),
            CT = new Dl(Zt("comms"));

        async function _h(n) {
            let {events: e} = await n({actions: []});
            for (let r of e) if (r.generic) {
                let l = JSON.parse(r.generic.eventData);
                switch (r.generic.eventId) {
                    case"onEnterScene": {
                        Gi.notifyObservers(l);
                        break
                    }
                    case"onLeaveScene": {
                        ji.notifyObservers(l);
                        break
                    }
                    case"sceneStart": {
                        qi.notifyObservers(l);
                        break
                    }
                    case"playerExpression": {
                        Yi.notifyObservers(l);
                        break
                    }
                    case"videoEvent": {
                        let i = l;
                        Ji.notifyObservers(i);
                        break
                    }
                    case"profileChanged": {
                        Xi.notifyObservers(l);
                        break
                    }
                    case"playerConnected": {
                        wT.notifyObservers(l);
                        break
                    }
                    case"playerDisconnected": {
                        vT.notifyObservers(l);
                        break
                    }
                    case"onRealmChanged": {
                        Ki.notifyObservers(l);
                        break
                    }
                    case"playerClicked": {
                        Zi.notifyObservers(l);
                        break
                    }
                    case"comms": {
                        CT.notifyObservers(l);
                        break
                    }
                }
            }
        }

        var i8 = {
            "assetsscenemain.composite": {
                version: 1,
                components: [{
                    name: "core::Transform",
                    jsonSchema: {
                        type: "object",
                        properties: {
                            position: {
                                type: "object",
                                properties: {x: {type: "number"}, y: {type: "number"}, z: {type: "number"}}
                            },
                            scale: {
                                type: "object",
                                properties: {x: {type: "number"}, y: {type: "number"}, z: {type: "number"}}
                            },
                            rotation: {
                                type: "object",
                                properties: {
                                    x: {type: "number"},
                                    y: {type: "number"},
                                    z: {type: "number"},
                                    w: {type: "number"}
                                }
                            },
                            parent: {type: "integer"}
                        },
                        serializationType: "transform"
                    },
                    data: {
                        512: {
                            json: {
                                position: {x: 8, y: 1, z: 8},
                                scale: {x: 1, y: 1, z: 1},
                                rotation: {x: 0, y: 0, z: 0, w: 1},
                                parent: 0
                            }
                        }
                    }
                }, {
                    name: "core::MeshRenderer",
                    jsonSchema: {
                        type: "object",
                        properties: {},
                        serializationType: "protocol-buffer",
                        protocolBuffer: "PBMeshRenderer"
                    },
                    data: {512: {json: {mesh: {$case: "box", box: {uvs: []}}}}}
                }, {
                    name: "core-schema::Name",
                    jsonSchema: {
                        type: "object",
                        properties: {value: {type: "string", serializationType: "utf8-string"}},
                        serializationType: "map"
                    },
                    data: {512: {json: {value: "Magic Cube"}}}
                }, {
                    name: "inspector::Scene",
                    jsonSchema: {
                        type: "object",
                        properties: {
                            layout: {
                                type: "object",
                                properties: {
                                    base: {
                                        type: "object",
                                        properties: {
                                            x: {type: "integer", serializationType: "int32"},
                                            y: {type: "integer", serializationType: "int32"}
                                        },
                                        serializationType: "map"
                                    },
                                    parcels: {
                                        type: "array",
                                        items: {
                                            type: "object",
                                            properties: {
                                                x: {type: "integer", serializationType: "int32"},
                                                y: {type: "integer", serializationType: "int32"}
                                            },
                                            serializationType: "map"
                                        },
                                        serializationType: "array"
                                    }
                                },
                                serializationType: "map"
                            }
                        },
                        serializationType: "map"
                    },
                    data: {0: {json: {layout: {base: {x: 0, y: 0}, parcels: [{x: 0, y: 0}]}}}}
                }, {
                    name: "inspector::Nodes",
                    jsonSchema: {
                        type: "object",
                        properties: {
                            value: {
                                type: "array",
                                items: {
                                    type: "object",
                                    properties: {
                                        entity: {type: "integer", serializationType: "entity"},
                                        open: {
                                            type: "boolean",
                                            serializationType: "optional",
                                            optionalJsonSchema: {type: "boolean", serializationType: "boolean"}
                                        },
                                        children: {
                                            type: "array",
                                            items: {type: "integer", serializationType: "entity"},
                                            serializationType: "array"
                                        }
                                    },
                                    serializationType: "map"
                                },
                                serializationType: "array"
                            }
                        },
                        serializationType: "map"
                    },
                    data: {0: {json: {value: [{entity: 512, children: [513], open: !0}, {entity: 513, children: []}]}}}
                }, {
                    name: "cube-id",
                    jsonSchema: {type: "object", properties: {}, serializationType: "map"},
                    data: {512: {json: {}}}
                }]
            }
        };
        g4();
        var nr = [], a8 = {
            getCompositeOrNull(n, e) {
                let r = i8[n];
                if (r) {
                    try {
                        if (r instanceof Uint8Array) {
                            let l = C1.fromBinary(r);
                            nr.push({src: n, composite: l})
                        } else if (typeof r == "string") {
                            let l = C1.fromJson(JSON.parse(r));
                            nr.push({src: n, composite: l})
                        } else if (typeof r == "object") {
                            let l = C1.fromJson(r);
                            nr.push({src: n, composite: l})
                        }
                    } catch (l) {
                        console.error(l)
                    }
                    delete i8[n]
                }
                return nr.find(l => l.src === n) || null
            }
        };
        var er = vh({crdtSendToRenderer: $0.crdtSendToRenderer});
        A2.addTransport(er);

        async function _T(n) {
            A2.seal(), await A2.update(n), await _h($0.sendBatch)
        }

        async function PT() {
            let n = await (0, $0.crdtGetState)({data: new Uint8Array});
            if (!n.hasEntities) {
                let e = a8.getCompositeOrNull("main.composite");
                if (e) try {
                    C1.instance(A2, e, a8)
                } catch (r) {
                    console.log("Warning: main.composite couldn't be instanced."), console.error(r)
                }
            }
            if (er.onmessage && n && n.data && n.data.length) for (let e of n.data) er.onmessage(e)
        }

        var P1 = .45454545454545453, A1 = 2.2, Ph = 1e-6, s8 = Math.PI / 180, c8 = 360 / (Math.PI * 2);
        var On;
        (function (n) {
            n.TwoPi = Math.PI * 2;

            function e(T2, l2, b2 = 1401298e-51) {
                let g2 = T2 - l2;
                return -b2 <= g2 && g2 <= b2
            }

            n.withinEpsilon = e;

            function r(T2) {
                let l2 = T2.toString(16);
                return T2 <= 15 ? ("0" + l2).toUpperCase() : l2.toUpperCase()
            }

            n.toHex = r;

            function l(T2) {
                let l2 = +T2;
                return l2 === 0 || isNaN(l2) ? l2 : l2 > 0 ? 1 : -1
            }

            n.sign = l;

            function i(T2, l2 = 0, b2 = 1) {
                return Math.min(b2, Math.max(l2, T2))
            }

            n.clamp = i;

            function o(T2) {
                return Math.log(T2) * Math.LOG2E
            }

            n.log2 = o;

            function f(T2, l2) {
                return T2 - Math.floor(T2 / l2) * l2
            }

            n.repeat = f;

            function s(T2, l2, b2) {
                return (T2 - l2) / (b2 - l2)
            }

            n.normalize = s;

            function a(T2, l2, b2) {
                return T2 * (b2 - l2) + l2
            }

            n.denormalize = a;

            function g(T2, l2) {
                let b2 = f(l2 - T2, 360);
                return b2 > 180 && (b2 -= 360), b2
            }

            n.deltaAngle = g;

            function b(T2, l2) {
                let b2 = f(T2, l2 * 2);
                return l2 - Math.abs(b2 - l2)
            }

            n.pingPong = b;

            function B(T2, l2, b2) {
                let g2 = i(b2);
                return g2 = -2 * g2 * g2 * g2 + 3 * g2 * g2, l2 * g2 + T2 * (1 - g2)
            }

            n.smoothStep = B;

            function w(T2, l2, b2) {
                let g2 = 0;
                return Math.abs(l2 - T2) <= b2 ? g2 = l2 : g2 = T2 + l(l2 - T2) * b2, g2
            }

            n.moveTowards = w;

            function P(T2, l2, b2) {
                let g2 = g(T2, l2), p2 = 0;
                return -b2 < g2 && g2 < b2 ? p2 = l2 : p2 = w(T2, T2 + g2, b2), p2
            }

            n.moveTowardsAngle = P;

            function D(T2, l2, b2) {
                return T2 + (l2 - T2) * b2
            }

            n.lerp = D;

            function T(T2, l2, b2) {
                let g2 = f(l2 - T2, 360);
                return g2 > 180 && (g2 -= 360), T2 + g2 * i(b2)
            }

            n.lerpAngle = T;

            function k(T2, l2, b2) {
                let g2 = 0;
                return T2 !== l2 ? g2 = i((b2 - T2) / (l2 - T2)) : g2 = 0, g2
            }

            n.inverseLerp = k;

            function R(T2, l2, b2, g2, p2) {
                let O = p2 * p2, J = p2 * O, h2 = 2 * J - 3 * O + 1, y2 = -2 * J + 3 * O, k2 = J - 2 * O + p2,
                    Z2 = J - O;
                return T2 * h2 + b2 * y2 + l2 * k2 + g2 * Z2
            }

            n.hermite = R;

            function G(T2, l2) {
                return T2 === l2 ? T2 : Math.random() * (l2 - T2) + T2
            }

            n.randomRange = G;

            function Z(T2, l2, b2) {
                return (T2 - l2) / (b2 - l2)
            }

            n.rangeToPercent = Z;

            function S2(T2, l2, b2) {
                return (b2 - l2) * T2 + l2
            }

            n.percentToRange = S2;

            function D2(T2) {
                return T2 - n.TwoPi * Math.floor((T2 + Math.PI) / n.TwoPi)
            }

            n.normalizeRadians = D2
        })(On || (On = {}));
        var C2;
        (function (n) {
            function e(N) {
                let X = Math.abs(N.x), a2 = Math.abs(N.y);
                if (X !== a2) return !0;
                let K2 = Math.abs(N.z);
                return X !== K2
            }

            n.isNonUniform = e;

            function r(N = 0, X = 0, a2 = 0) {
                return {x: N, y: X, z: a2}
            }

            n.create = r;

            function l(N, X) {
                return {x: N.x + X.x, y: N.y + X.y, z: N.z + X.z}
            }

            n.add = l;

            function i(N, X, a2) {
                a2.x = N.x + X.x, a2.y = N.y + X.y, a2.z = N.z + X.z
            }

            n.addToRef = i;

            function o(N, X) {
                return {x: N.x - X.x, y: N.y - X.y, z: N.z - X.z}
            }

            n.subtract = o;

            function f(N, X, a2) {
                a2.x = N.x - X.x, a2.y = N.y - X.y, a2.z = N.z - X.z
            }

            n.subtractToRef = f;

            function s(N, X, a2, K2, G2) {
                G2.x = N.x - X, G2.y = N.y - a2, G2.z = N.z - K2
            }

            n.subtractFromFloatsToRef = s;

            function a(N) {
                return {x: -N.x, y: -N.y, z: -N.z}
            }

            n.negate = a;

            function g(N, X) {
                X.x = N.x, X.y = N.y, X.z = N.z
            }

            n.copyFrom = g;

            function b(N, X, a2, K2) {
                K2.x = N, K2.y = X, K2.z = a2
            }

            n.copyFromFloats = b;

            function B(N) {
                return r(N.x, N.y, N.z)
            }

            n.clone = B;

            function w(N, X, a2, K2) {
                let G2 = p2(N, a2) - K2, o3 = p2(X, a2) - K2;
                return G2 / (G2 - o3)
            }

            n.getClipFactor = w;

            function P(N, X, a2) {
                let K2 = b2(N), G2 = b2(X), o3 = p2(K2, G2), x3 = r();
                return P3(K2, G2, x3), p2(x3, a2) > 0 ? Math.acos(o3) : -Math.acos(o3)
            }

            n.getAngleBetweenVectors = P;

            function D(N, X = 0) {
                return r(N[X], N[X + 1], N[X + 2])
            }

            n.fromArray = D;

            function T(N, X) {
                return D(N, X)
            }

            n.fromFloatArray = T;

            function k(N, X, a2) {
                a2.x = N[X], a2.y = N[X + 1], a2.z = N[X + 2]
            }

            n.fromArrayToRef = k;

            function R(N, X, a2) {
                return k(N, X, a2)
            }

            n.fromFloatArrayToRef = R;

            function G(N) {
                return Math.sqrt(N.x * N.x + N.y * N.y + N.z * N.z)
            }

            n.length = G;

            function Z(N) {
                return N.x * N.x + N.y * N.y + N.z * N.z
            }

            n.lengthSquared = Z;

            function S2(N, X, a2) {
                a2.x = N.x * X, a2.y = N.y * X, a2.z = N.z * X
            }

            n.scaleToRef = S2;

            function D2(N, X) {
                return r(N.x * X, N.y * X, N.z * X)
            }

            n.scale = D2;

            function T2(N, X) {
                let a2 = r(0, 0, 0);
                return l2(N, X, a2), a2
            }

            n.normalizeFromLength = T2;

            function l2(N, X, a2) {
                if (X === 0 || X === 1) {
                    g(N, a2);
                    return
                }
                S2(N, 1 / X, a2)
            }

            n.normalizeFromLengthToRef = l2;

            function b2(N) {
                return T2(N, G(N))
            }

            n.normalize = b2;

            function g2(N, X) {
                l2(N, G(N), X)
            }

            n.normalizeToRef = g2;

            function p2(N, X) {
                return N.x * X.x + N.y * X.y + N.z * X.z
            }

            n.dot = p2;

            function O(N, X) {
                let a2 = B(N);
                return J(N, X, a2), a2
            }

            n.applyMatrix4 = O;

            function J(N, X, a2) {
                let {x: K2, y: G2, z: o3} = N, x3 = X._m, Cn = 1 / (x3[3] * K2 + x3[7] * G2 + x3[11] * o3 + x3[15]);
                a2.x = (x3[0] * K2 + x3[4] * G2 + x3[8] * o3 + x3[12]) * Cn, a2.y = (x3[1] * K2 + x3[5] * G2 + x3[9] * o3 + x3[13]) * Cn, a2.z = (x3[2] * K2 + x3[6] * G2 + x3[10] * o3 + x3[14]) * Cn
            }

            n.applyMatrix4ToRef = J;

            function h2(N, X) {
                let a2 = r();
                return y2(N, X, a2), a2
            }

            n.rotate = h2;

            function y2(N, X, a2) {
                let {x: K2, y: G2, z: o3} = N, {x: x3, y: Cn, z: on, w: Bn} = X, vl = Bn * K2 + Cn * o3 - on * G2,
                    Ll = Bn * G2 + on * K2 - x3 * o3, zl = Bn * o3 + x3 * G2 - Cn * K2,
                    dt = -x3 * K2 - Cn * G2 - on * o3;
                a2.x = vl * Bn + dt * -x3 + Ll * -on - zl * -Cn, a2.y = Ll * Bn + dt * -Cn + zl * -x3 - vl * -on, a2.z = zl * Bn + dt * -on + vl * -Cn - Ll * -x3
            }

            n.rotateToRef = y2;

            function k2(N, X, a2) {
                let K2 = r(0, 0, 0);
                return Z2(N, X, a2, K2), K2
            }

            n.lerp = k2;

            function Z2(N, X, a2, K2) {
                K2.x = N.x + (X.x - N.x) * a2, K2.y = N.y + (X.y - N.y) * a2, K2.z = N.z + (X.z - N.z) * a2
            }

            n.lerpToRef = Z2;

            function g3(N, X) {
                let a2 = wl();
                return P3(N, X, a2), a2
            }

            n.cross = g3;

            function P3(N, X, a2) {
                a2.x = N.y * X.z - N.z * X.y, a2.y = N.z * X.x - N.x * X.z, a2.z = N.x * X.y - N.y * X.x
            }

            n.crossToRef = P3;

            function U3(N, X) {
                let a2 = wl();
                return C3(N, X, a2), a2
            }

            n.transformCoordinates = U3;

            function C3(N, X, a2) {
                return N3(N.x, N.y, N.z, X, a2)
            }

            n.transformCoordinatesToRef = C3;

            function N3(N, X, a2, K2, G2) {
                let o3 = K2._m, x3 = N * o3[0] + X * o3[4] + a2 * o3[8] + o3[12],
                    Cn = N * o3[1] + X * o3[5] + a2 * o3[9] + o3[13], on = N * o3[2] + X * o3[6] + a2 * o3[10] + o3[14],
                    Bn = 1 / (N * o3[3] + X * o3[7] + a2 * o3[11] + o3[15]);
                G2.x = x3 * Bn, G2.y = Cn * Bn, G2.z = on * Bn
            }

            n.transformCoordinatesFromFloatsToRef = N3;

            function R3(N, X) {
                let a2 = wl();
                return un(N, X, a2), a2
            }

            n.transformNormal = R3;

            function un(N, X, a2) {
                F3(N.x, N.y, N.z, X, a2)
            }

            n.transformNormalToRef = un;

            function F3(N, X, a2, K2, G2) {
                let o3 = K2._m;
                G2.x = N * o3[0] + X * o3[4] + a2 * o3[8], G2.y = N * o3[1] + X * o3[5] + a2 * o3[9], G2.z = N * o3[2] + X * o3[6] + a2 * o3[10]
            }

            n.transformNormalFromFloatsToRef = F3;

            function Dn(N, X, a2, K2, G2) {
                let o3 = G2 * G2, x3 = G2 * o3,
                    Cn = .5 * (2 * X.x + (-N.x + a2.x) * G2 + (2 * N.x - 5 * X.x + 4 * a2.x - K2.x) * o3 + (-N.x + 3 * X.x - 3 * a2.x + K2.x) * x3),
                    on = .5 * (2 * X.y + (-N.y + a2.y) * G2 + (2 * N.y - 5 * X.y + 4 * a2.y - K2.y) * o3 + (-N.y + 3 * X.y - 3 * a2.y + K2.y) * x3),
                    Bn = .5 * (2 * X.z + (-N.z + a2.z) * G2 + (2 * N.z - 5 * X.z + 4 * a2.z - K2.z) * o3 + (-N.z + 3 * X.z - 3 * a2.z + K2.z) * x3);
                return r(Cn, on, Bn)
            }

            n.catmullRom = Dn;

            function o2(N, X, a2) {
                let K2 = r();
                return P2(N, X, a2, K2), K2
            }

            n.clamp = o2;

            function P2(N, X, a2, K2) {
                let G2 = N.x;
                G2 = G2 > a2.x ? a2.x : G2, G2 = G2 < X.x ? X.x : G2;
                let o3 = N.y;
                o3 = o3 > a2.y ? a2.y : o3, o3 = o3 < X.y ? X.y : o3;
                let x3 = N.z;
                x3 = x3 > a2.z ? a2.z : x3, x3 = x3 < X.z ? X.z : x3, b(G2, o3, x3, K2)
            }

            n.clampToRef = P2;

            function I2(N, X, a2, K2, G2) {
                let o3 = G2 * G2, x3 = G2 * o3, Cn = 2 * x3 - 3 * o3 + 1, on = -2 * x3 + 3 * o3, Bn = x3 - 2 * o3 + G2,
                    vl = x3 - o3, Ll = N.x * Cn + a2.x * on + X.x * Bn + K2.x * vl,
                    zl = N.y * Cn + a2.y * on + X.y * Bn + K2.y * vl, dt = N.z * Cn + a2.z * on + X.z * Bn + K2.z * vl;
                return r(Ll, zl, dt)
            }

            n.hermite = I2;

            function $(N, X) {
                let a2 = r();
                return Zn(X, N.x, N.y, N.z, a2), a2
            }

            n.minimize = $;

            function f2(N, X) {
                let a2 = r();
                return En(N, X.x, X.y, X.z, a2), a2
            }

            n.maximize = f2;

            function l3(N, X) {
                return Math.sqrt(D3(N, X))
            }

            n.distance = l3;

            function D3(N, X) {
                let a2 = N.x - X.x, K2 = N.y - X.y, G2 = N.z - X.z;
                return a2 * a2 + K2 * K2 + G2 * G2
            }

            n.distanceSquared = D3;

            function Q3(N, X) {
                let a2 = l(N, X);
                return S2(a2, .5, a2), a2
            }

            n.center = Q3;

            function pn(N, X, a2) {
                let K2 = wl();
                return Fl(N, X, a2, K2), K2
            }

            n.rotationFromAxis = pn;

            function Fl(N, X, a2, K2) {
                let G2 = X2.create();
                X2.fromAxisToRotationQuaternionToRef(N, X, a2, G2), g(X2.toEulerAngles(G2), K2)
            }

            n.rotationFromAxisToRef = Fl;

            function ie(N) {
                return `(${N.x}, ${N.y}, ${N.z})`
            }

            n.toString = ie;

            function ct(N) {
                let X = N.x || 0;
                return X = X * 397 ^ (N.y || 0), X = X * 397 ^ (N.z || 0), X
            }

            n.getHashCode = ct;

            function Q(N, X) {
                return N.x === X.x && N.y === X.y && N.z === X.z
            }

            n.equals = Q;

            function E2(N, X, a2 = Ph) {
                return On.withinEpsilon(N.x, X.x, a2) && On.withinEpsilon(N.y, X.y, a2) && On.withinEpsilon(N.z, X.z, a2)
            }

            n.equalsWithEpsilon = E2;

            function s2(N, X, a2, K2) {
                return N.x === X && N.y === a2 && N.z === K2
            }

            n.equalsToFloats = s2;

            function Y(N, X) {
                let a2 = r();
                return K(N, X, a2), a2
            }

            n.multiply = Y;

            function K(N, X, a2) {
                a2.x = N.x * X.x, a2.y = N.y * X.y, a2.z = N.z * X.z
            }

            n.multiplyToRef = K;

            function d2(N, X, a2, K2, G2) {
                G2.x = N.x * X, G2.y = N.y * a2, G2.z = N.z * K2
            }

            n.multiplyByFloatsToRef = d2;

            function N2(N, X, a2, K2) {
                let G2 = r();
                return d2(N, X, a2, K2, G2), G2
            }

            n.multiplyByFloats = N2;

            function c3(N, X) {
                return {x: N.x / X.x, y: N.y / X.y, z: N.z / X.z}
            }

            n.divide = c3;

            function B2(N, X, a2) {
                a2.x = N.x / X.x, a2.y = N.y / X.y, a2.z = N.z / X.z
            }

            n.divideToRef = B2;

            function En(N, X, a2, K2, G2) {
                X > N.x ? G2.x = X : G2.x = N.x, a2 > N.y ? G2.y = a2 : G2.y = N.y, K2 > N.z ? G2.z = K2 : G2.z = N.z
            }

            n.maximizeInPlaceFromFloatsToRef = En;

            function Zn(N, X, a2, K2, G2) {
                X < N.x ? G2.x = X : G2.x = N.x, a2 < N.y ? G2.y = a2 : G2.y = N.y, K2 < N.z ? G2.z = K2 : G2.z = N.z
            }

            n.minimizeInPlaceFromFloatsToRef = Zn;

            function de(N) {
                return r(Math.floor(N.x), Math.floor(N.y), Math.floor(N.z))
            }

            n.floor = de;

            function ee(N) {
                return r(N.x - Math.floor(N.x), N.y - Math.floor(N.y), N.z - Math.floor(N.z))
            }

            n.fract = ee;

            function wl() {
                return r(0, 0, 0)
            }

            n.Zero = wl;

            function Xe() {
                return r(1, 1, 1)
            }

            n.One = Xe;

            function Ft() {
                return r(0, 1, 0)
            }

            n.Up = Ft;

            function ft() {
                return r(0, -1, 0)
            }

            n.Down = ft;

            function C4() {
                return r(0, 0, 1)
            }

            n.Forward = C4;

            function _4() {
                return r(0, 0, -1)
            }

            n.Backward = _4;

            function Ut() {
                return r(1, 0, 0)
            }

            n.Right = Ut;

            function n1() {
                return r(-1, 0, 0)
            }

            n.Left = n1;

            function Ul() {
                return r(Math.random(), Math.random(), Math.random())
            }

            n.Random = Ul
        })(C2 || (C2 = {}));
        var lr;
        (function (n) {
            function e(T, k, R, G) {
                return {normal: C2.create(T, k, R), d: G}
            }

            n.create = e;

            function r(T) {
                return e(T[0], T[1], T[2], T[3])
            }

            n.fromArray = r;

            function l(T, k, R) {
                return e(0, 0, 0, 0)
            }

            n.fromPoints = l;

            function i(T, k) {
                let R = e(0, 0, 0, 0);
                return R.normal = C2.normalize(k), R.d = -(k.x * T.x + k.y * T.y + k.z * T.z), R
            }

            n.romPositionAndNormal = i;

            function o(T, k, R) {
                let G = -(k.x * T.x + k.y * T.y + k.z * T.z);
                return C2.dot(R, k) + G
            }

            n.signedDistanceToPlaneFromPositionAndNormal = o;

            function f(T) {
                return [T.normal.x, T.normal.y, T.normal.z, T.d]
            }

            n.asArray = f;

            function s(T) {
                return e(T.normal.x, T.normal.y, T.normal.z, T.d)
            }

            n.clone = s;

            function a(T) {
                return 0
            }

            n.getHashCode = a;

            function g(T) {
                let k = e(0, 0, 0, 0),
                    R = Math.sqrt(T.normal.x * T.normal.x + T.normal.y * T.normal.y + T.normal.z * T.normal.z), G = 0;
                return R !== 0 && (G = 1 / R), k.normal.x = T.normal.x * G, k.normal.y = T.normal.y * G, k.normal.z = T.normal.z * G, k.d *= G, T
            }

            n.normalize = g;

            function b(T, k) {
                let R = Qt.create();
                Qt.transposeToRef(k, R);
                let G = R._m, Z = T.normal.x, S2 = T.normal.y, D2 = T.normal.z, T2 = T.d,
                    l2 = Z * G[0] + S2 * G[1] + D2 * G[2] + T2 * G[3],
                    b2 = Z * G[4] + S2 * G[5] + D2 * G[6] + T2 * G[7],
                    g2 = Z * G[8] + S2 * G[9] + D2 * G[10] + T2 * G[11],
                    p2 = Z * G[12] + S2 * G[13] + D2 * G[14] + T2 * G[15];
                return e(l2, b2, g2, p2)
            }

            n.transform = b;

            function B(T, k) {
                return T.normal.x * k.x + T.normal.y * k.y + T.normal.z * k.z + T.d
            }

            n.dotCoordinate = B;

            function w(T, k, R) {
                let G = k.x - T.x, Z = k.y - T.y, S2 = k.z - T.z, D2 = R.x - T.x, T2 = R.y - T.y, l2 = R.z - T.z,
                    b2 = Z * l2 - S2 * T2, g2 = S2 * D2 - G * l2, p2 = G * T2 - Z * D2,
                    O = Math.sqrt(b2 * b2 + g2 * g2 + p2 * p2), J;
                O !== 0 ? J = 1 / O : J = 0;
                let h2 = C2.create(b2 * J, g2 * J, p2 * J);
                return {normal: h2, d: -(h2.x * T.x + h2.y * T.y + h2.z * T.z)}
            }

            n.copyFromPoints = w;

            function P(T, k, R) {
                return C2.dot(T.normal, k) <= R
            }

            n.isFrontFacingTo = P;

            function D(T, k) {
                return C2.dot(k, T.normal) + T.d
            }

            n.signedDistanceTo = D
        })(lr || (lr = {}));
        var Qt;
        (function (n) {
            function e(S) {
                return S._m
            }

            n.m = e;
            let r = 0, l = {};

            function i() {
                return l
            }

            n.IdentityReadonly = i;

            function o() {
                let S = {
                    updateFlag: 0,
                    isIdentity: !1,
                    isIdentity3x2: !0,
                    _isIdentityDirty: !0,
                    _isIdentity3x2Dirty: !0,
                    _m: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
                };
                return pe(S, !1), S
            }

            n.create = o;

            function f(S, M = 0) {
                let L = o();
                return s(S, M, L), L
            }

            n.fromArray = f;

            function s(S, M, L) {
                for (let F = 0; F < 16; F++) L._m[F] = S[F + M];
                K(L)
            }

            n.fromArrayToRef = s;

            function a(S, M, L, F) {
                for (let e2 = 0; e2 < 16; e2++) F._m[e2] = S[e2 + M] * L;
                K(F)
            }

            n.fromFloatArrayToRefScaled = a;

            function g(S, M, L, F, e2, R2, w2, j2, $2, S3, k3, tn, w3, wn, Fn, Yn, Rn) {
                let E3 = Rn._m;
                E3[0] = S, E3[1] = M, E3[2] = L, E3[3] = F, E3[4] = e2, E3[5] = R2, E3[6] = w2, E3[7] = j2, E3[8] = $2, E3[9] = S3, E3[10] = k3, E3[11] = tn, E3[12] = w3, E3[13] = wn, E3[14] = Fn, E3[15] = Yn, K(Rn)
            }

            n.fromValuesToRef = g;

            function b(S, M, L, F, e2, R2, w2, j2, $2, S3, k3, tn, w3, wn, Fn, Yn) {
                let Rn = o(), E3 = Rn._m;
                return E3[0] = S, E3[1] = M, E3[2] = L, E3[3] = F, E3[4] = e2, E3[5] = R2, E3[6] = w2, E3[7] = j2, E3[8] = $2, E3[9] = S3, E3[10] = k3, E3[11] = tn, E3[12] = w3, E3[13] = wn, E3[14] = Fn, E3[15] = Yn, K(Rn), Rn
            }

            n.fromValues = b;

            function B(S, M, L) {
                let F = o();
                return w(S, M, L, F), F
            }

            n.compose = B;

            function w(S, M, L, F) {
                let e2 = [o(), o(), o()];
                O(S.x, S.y, S.z, e2[1]), Y(M, e2[0]), G2(e2[1], e2[0], F), Ut(F, L)
            }

            n.composeToRef = w;

            function P() {
                let S = b(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
                return pe(S, !0), S
            }

            n.Identity = P;

            function D(S) {
                g(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, S), pe(S, !0)
            }

            n.IdentityToRef = D;

            function T() {
                let S = b(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                return pe(S, !1), S
            }

            n.Zero = T;

            function k(S) {
                let M = o();
                return R(S, M), M
            }

            n.RotationX = k;

            function R(S, M) {
                let L = Math.sin(S), F = Math.cos(S);
                g(1, 0, 0, 0, 0, F, L, 0, 0, -L, F, 0, 0, 0, 0, 1, M), pe(M, F === 1 && L === 0)
            }

            n.rotationXToRef = R;

            function G(S) {
                let M = o();
                return Z(S, M), M
            }

            n.rotationY = G;

            function Z(S, M) {
                let L = Math.sin(S), F = Math.cos(S);
                g(F, 0, -L, 0, 0, 1, 0, 0, L, 0, F, 0, 0, 0, 0, 1, M), pe(M, F === 1 && L === 0)
            }

            n.rotationYToRef = Z;

            function S2(S) {
                let M = o();
                return D2(S, M), M
            }

            n.rotationZ = S2;

            function D2(S, M) {
                let L = Math.sin(S), F = Math.cos(S);
                g(F, L, 0, 0, -L, F, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, M), pe(M, F === 1 && L === 0)
            }

            n.rotationZToRef = D2;

            function T2(S, M) {
                let L = o();
                return l2(S, M, L), L
            }

            n.rotationAxis = T2;

            function l2(S, M, L) {
                let F = Math.sin(-M), e2 = Math.cos(-M), R2 = 1 - e2, w2 = C2.normalize(S), j2 = L._m;
                j2[0] = w2.x * w2.x * R2 + e2, j2[1] = w2.x * w2.y * R2 - w2.z * F, j2[2] = w2.x * w2.z * R2 + w2.y * F, j2[3] = 0, j2[4] = w2.y * w2.x * R2 + w2.z * F, j2[5] = w2.y * w2.y * R2 + e2, j2[6] = w2.y * w2.z * R2 - w2.x * F, j2[7] = 0, j2[8] = w2.z * w2.x * R2 - w2.y * F, j2[9] = w2.z * w2.y * R2 + w2.x * F, j2[10] = w2.z * w2.z * R2 + e2, j2[11] = 0, j2[12] = 0, j2[13] = 0, j2[14] = 0, j2[15] = 1, K(L)
            }

            n.rotationAxisToRef = l2;

            function b2(S, M, L) {
                let F = o();
                return g2(S, M, L, F), F
            }

            n.rotationYawPitchRoll = b2;

            function g2(S, M, L, F) {
                let e2 = X2.Zero();
                X2.fromRotationYawPitchRollToRef(S, M, L, e2), Y(e2, F)
            }

            n.rotationYawPitchRollToRef = g2;

            function p2(S, M, L) {
                let F = o();
                return O(S, M, L, F), F
            }

            n.scaling = p2;

            function O(S, M, L, F) {
                g(S, 0, 0, 0, 0, M, 0, 0, 0, 0, L, 0, 0, 0, 0, 1, F), pe(F, S === 1 && M === 1 && L === 1)
            }

            n.scalingToRef = O;

            function J(S, M, L) {
                let F = o();
                return h2(S, M, L, F), F
            }

            n.translation = J;

            function h2(S, M, L, F) {
                g(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, S, M, L, 1, F), pe(F, S === 0 && M === 0 && L === 0)
            }

            n.translationToRef = h2;

            function y2(S, M, L) {
                let F = o();
                return k2(S, M, L, F), F
            }

            n.lerp = y2;

            function k2(S, M, L, F) {
                for (let e2 = 0; e2 < 16; e2++) F._m[e2] = S._m[e2] * (1 - L) + M._m[e2] * L;
                K(F)
            }

            n.lerpToRef = k2;

            function Z2(S, M, L) {
                let F = o();
                return g3(S, M, L, F), F
            }

            n.decomposeLerp = Z2;

            function g3(S, M, L, F) {
                let e2 = C2.Zero(), R2 = X2.Zero(), w2 = C2.Zero();
                Bn(S, e2, R2, w2);
                let j2 = C2.Zero(), $2 = X2.Zero(), S3 = C2.Zero();
                Bn(M, j2, $2, S3);
                let k3 = C2.Zero();
                C2.lerpToRef(e2, j2, L, k3);
                let tn = X2.Zero();
                X2.slerpToRef(R2, $2, L, tn);
                let w3 = C2.Zero();
                C2.lerpToRef(w2, S3, L, w3), w(k3, tn, w3, F)
            }

            n.decomposeLerpToRef = g3;

            function P3(S, M, L) {
                let F = o();
                return U3(S, M, L, F), F
            }

            n.LookAtLH = P3;

            function U3(S, M, L, F) {
                let e2 = C2.Zero(), R2 = C2.Zero(), w2 = C2.Zero();
                C2.subtractToRef(M, S, w2), C2.normalizeToRef(w2, w2), C2.crossToRef(L, w2, e2);
                let j2 = C2.lengthSquared(e2);
                j2 === 0 ? e2.x = 1 : C2.normalizeFromLengthToRef(e2, Math.sqrt(j2), e2), C2.crossToRef(w2, e2, R2), C2.normalizeToRef(R2, R2);
                let $2 = -C2.dot(e2, S), S3 = -C2.dot(R2, S), k3 = -C2.dot(w2, S);
                g(e2.x, R2.x, w2.x, 0, e2.y, R2.y, w2.y, 0, e2.z, R2.z, w2.z, 0, $2, S3, k3, 1, F)
            }

            n.lookAtLHToRef = U3;

            function C3(S, M, L) {
                let F = o();
                return N3(S, M, L, F), F
            }

            n.lookAtRH = C3;

            function N3(S, M, L, F) {
                let e2 = C2.Zero(), R2 = C2.Zero(), w2 = C2.Zero();
                C2.subtractToRef(S, M, w2), C2.normalizeToRef(w2, w2), C2.crossToRef(L, w2, e2);
                let j2 = C2.lengthSquared(e2);
                j2 === 0 ? e2.x = 1 : C2.normalizeFromLengthToRef(e2, Math.sqrt(j2), e2), C2.crossToRef(w2, e2, R2), C2.normalizeToRef(R2, R2);
                let $2 = -C2.dot(e2, S), S3 = -C2.dot(R2, S), k3 = -C2.dot(w2, S);
                g(e2.x, R2.x, w2.x, 0, e2.y, R2.y, w2.y, 0, e2.z, R2.z, w2.z, 0, $2, S3, k3, 1, F)
            }

            n.lookAtRHToRef = N3;

            function R3(S, M, L, F) {
                let e2 = o();
                return un(S, M, L, F, e2), e2
            }

            n.orthoLH = R3;

            function un(S, M, L, F, e2) {
                let R2 = L, w2 = F, j2 = 2 / S, $2 = 2 / M, S3 = 2 / (w2 - R2), k3 = -(w2 + R2) / (w2 - R2);
                g(j2, 0, 0, 0, 0, $2, 0, 0, 0, 0, S3, 0, 0, 0, k3, 1, e2), pe(e2, j2 === 1 && $2 === 1 && S3 === 1 && k3 === 0)
            }

            n.orthoLHToRef = un;

            function F3(S, M, L, F, e2, R2) {
                let w2 = o();
                return Dn(S, M, L, F, e2, R2, w2), w2
            }

            n.OrthoOffCenterLH = F3;

            function Dn(S, M, L, F, e2, R2, w2) {
                let j2 = e2, $2 = R2, S3 = 2 / (M - S), k3 = 2 / (F - L), tn = 2 / ($2 - j2),
                    w3 = -($2 + j2) / ($2 - j2), wn = (S + M) / (S - M), Fn = (F + L) / (L - F);
                g(S3, 0, 0, 0, 0, k3, 0, 0, 0, 0, tn, 0, wn, Fn, w3, 1, w2), K(w2)
            }

            n.orthoOffCenterLHToRef = Dn;

            function o2(S, M, L, F, e2, R2) {
                let w2 = o();
                return P2(S, M, L, F, e2, R2, w2), w2
            }

            n.orthoOffCenterRH = o2;

            function P2(S, M, L, F, e2, R2, w2) {
                Dn(S, M, L, F, e2, R2, w2), w2._m[10] *= -1
            }

            n.orthoOffCenterRHToRef = P2;

            function I2(S, M, L, F) {
                let e2 = o(), R2 = L, w2 = F, j2 = 2 * R2 / S, $2 = 2 * R2 / M, S3 = (w2 + R2) / (w2 - R2),
                    k3 = -2 * w2 * R2 / (w2 - R2);
                return g(j2, 0, 0, 0, 0, $2, 0, 0, 0, 0, S3, 1, 0, 0, k3, 0, e2), pe(e2, !1), e2
            }

            n.perspectiveLH = I2;

            function $(S, M, L, F) {
                let e2 = o();
                return f2(S, M, L, F, e2), e2
            }

            n.perspectiveFovLH = $;

            function f2(S, M, L, F, e2, R2 = !0) {
                let w2 = L, j2 = F, $2 = 1 / Math.tan(S * .5), S3 = R2 ? $2 / M : $2, k3 = R2 ? $2 : $2 * M,
                    tn = (j2 + w2) / (j2 - w2), w3 = -2 * j2 * w2 / (j2 - w2);
                g(S3, 0, 0, 0, 0, k3, 0, 0, 0, 0, tn, 1, 0, 0, w3, 0, e2), pe(e2, !1)
            }

            n.perspectiveFovLHToRef = f2;

            function l3(S, M, L, F) {
                let e2 = o();
                return D3(S, M, L, F, e2), e2
            }

            n.PerspectiveFovRH = l3;

            function D3(S, M, L, F, e2, R2 = !0) {
                let w2 = L, j2 = F, $2 = 1 / Math.tan(S * .5), S3 = R2 ? $2 / M : $2, k3 = R2 ? $2 : $2 * M,
                    tn = -(j2 + w2) / (j2 - w2), w3 = -2 * j2 * w2 / (j2 - w2);
                g(S3, 0, 0, 0, 0, k3, 0, 0, 0, 0, tn, -1, 0, 0, w3, 0, e2), pe(e2, !1)
            }

            n.perspectiveFovRHToRef = D3;

            function Q3(S, M, L, F, e2 = !1) {
                let R2 = e2 ? -1 : 1, w2 = Math.tan(S.upDegrees * Math.PI / 180),
                    j2 = Math.tan(S.downDegrees * Math.PI / 180), $2 = Math.tan(S.leftDegrees * Math.PI / 180),
                    S3 = Math.tan(S.rightDegrees * Math.PI / 180), k3 = 2 / ($2 + S3), tn = 2 / (w2 + j2), w3 = F._m;
                w3[0] = k3, w3[1] = w3[2] = w3[3] = w3[4] = 0, w3[5] = tn, w3[6] = w3[7] = 0, w3[8] = ($2 - S3) * k3 * .5, w3[9] = -((w2 - j2) * tn * .5), w3[10] = -L / (M - L), w3[11] = 1 * R2, w3[12] = w3[13] = w3[15] = 0, w3[14] = -(2 * L * M) / (L - M), K(F)
            }

            n.perspectiveFovWebVRToRef = Q3;

            function pn(S) {
                return [S._m[0], S._m[1], S._m[4], S._m[5]]
            }

            n.GetAsMatrix2x2 = pn;

            function Fl(S) {
                return [S._m[0], S._m[1], S._m[2], S._m[4], S._m[5], S._m[6], S._m[8], S._m[9], S._m[10]]
            }

            n.GetAsMatrix3x3 = Fl;

            function ie(S) {
                let M = o();
                return ct(S, M), M
            }

            n.transpose = ie;

            function ct(S, M) {
                let L = M._m, F = S._m;
                L[0] = F[0], L[1] = F[4], L[2] = F[8], L[3] = F[12], L[4] = F[1], L[5] = F[5], L[6] = F[9], L[7] = F[13], L[8] = F[2], L[9] = F[6], L[10] = F[10], L[11] = F[14], L[12] = F[3], L[13] = F[7], L[14] = F[11], L[15] = F[15], pe(M, S.isIdentity, S._isIdentityDirty)
            }

            n.transposeToRef = ct;

            function Q(S) {
                let M = o();
                return E2(S, M), M
            }

            n.reflection = Q;

            function E2(S, M) {
                let L = lr.normalize(S), F = L.normal.x, e2 = L.normal.y, R2 = L.normal.z, w2 = -2 * F, j2 = -2 * e2,
                    $2 = -2 * R2;
                g(w2 * F + 1, j2 * F, $2 * F, 0, w2 * e2, j2 * e2 + 1, $2 * e2, 0, w2 * R2, j2 * R2, $2 * R2 + 1, 0, w2 * L.d, j2 * L.d, $2 * L.d, 1, M)
            }

            n.reflectionToRef = E2;

            function s2(S, M, L, F) {
                g(S.x, S.y, S.z, 0, M.x, M.y, M.z, 0, L.x, L.y, L.z, 0, 0, 0, 0, 1, F)
            }

            n.fromXYZAxesToRef = s2;

            function Y(S, M) {
                let L = S.x * S.x, F = S.y * S.y, e2 = S.z * S.z, R2 = S.x * S.y, w2 = S.z * S.w, j2 = S.z * S.x,
                    $2 = S.y * S.w, S3 = S.y * S.z, k3 = S.x * S.w;
                M._m[0] = 1 - 2 * (F + e2), M._m[1] = 2 * (R2 + w2), M._m[2] = 2 * (j2 - $2), M._m[3] = 0, M._m[4] = 2 * (R2 - w2), M._m[5] = 1 - 2 * (e2 + L), M._m[6] = 2 * (S3 + k3), M._m[7] = 0, M._m[8] = 2 * (j2 + $2), M._m[9] = 2 * (S3 - k3), M._m[10] = 1 - 2 * (F + L), M._m[11] = 0, M._m[12] = 0, M._m[13] = 0, M._m[14] = 0, M._m[15] = 1, K(M)
            }

            n.fromQuaternionToRef = Y;

            function K(S) {
                S.updateFlag = r++, S.isIdentity = !1, S.isIdentity3x2 = !1, S._isIdentityDirty = !0, S._isIdentity3x2Dirty = !0
            }

            function d2(S) {
                if (S._isIdentityDirty) {
                    S._isIdentityDirty = !1;
                    let M = S._m;
                    S.isIdentity = M[0] === 1 && M[1] === 0 && M[2] === 0 && M[3] === 0 && M[4] === 0 && M[5] === 1 && M[6] === 0 && M[7] === 0 && M[8] === 0 && M[9] === 0 && M[10] === 1 && M[11] === 0 && M[12] === 0 && M[13] === 0 && M[14] === 0 && M[15] === 1
                }
                return S.isIdentity
            }

            n.isIdentityUpdate = d2;

            function N2(S) {
                return S._isIdentity3x2Dirty && (S._isIdentity3x2Dirty = !1, S._m[0] !== 1 || S._m[5] !== 1 || S._m[15] !== 1 || S._m[1] !== 0 || S._m[2] !== 0 || S._m[3] !== 0 || S._m[4] !== 0 || S._m[6] !== 0 || S._m[7] !== 0 || S._m[8] !== 0 || S._m[9] !== 0 || S._m[10] !== 0 || S._m[11] !== 0 || S._m[12] !== 0 || S._m[13] !== 0 || S._m[14] !== 0 ? S.isIdentity3x2 = !1 : S.isIdentity3x2 = !0), S.isIdentity3x2
            }

            n.isIdentityAs3x2Update = N2;

            function c3(S) {
                if (S.isIdentity === !0) return 1;
                let M = S._m, L = M[0], F = M[1], e2 = M[2], R2 = M[3], w2 = M[4], j2 = M[5], $2 = M[6], S3 = M[7],
                    k3 = M[8], tn = M[9], w3 = M[10], wn = M[11], Fn = M[12], Yn = M[13], Rn = M[14], E3 = M[15],
                    Vn = w3 * E3 - Rn * wn, Jn = tn * E3 - Yn * wn, G3 = tn * Rn - Yn * w3, V3 = k3 * E3 - Fn * wn,
                    q2 = k3 * Rn - w3 * Fn, F2 = k3 * Yn - Fn * tn, W2 = +(j2 * Vn - $2 * Jn + S3 * G3),
                    r3 = -(w2 * Vn - $2 * V3 + S3 * q2), Tn = +(w2 * Jn - j2 * V3 + S3 * F2),
                    Un = -(w2 * G3 - j2 * q2 + $2 * F2);
                return L * W2 + F * r3 + e2 * Tn + R2 * Un
            }

            n.determinant = c3;

            function B2(S) {
                return S._m
            }

            n.toArray = B2;

            function En(S) {
                return S._m
            }

            n.asArray = En;

            function Zn(S) {
                g(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, S), pe(S, !1)
            }

            n.reset = Zn;

            function de(S, M) {
                let L = o();
                return ee(S, M, L), L
            }

            n.add = de;

            function ee(S, M, L) {
                for (let F = 0; F < 16; F++) L._m[F] = S._m[F] + M._m[F];
                K(L)
            }

            n.addToRef = ee;

            function wl(S, M) {
                for (let L = 0; L < 16; L++) S._m[L] += M._m[L];
                K(S)
            }

            n.addToSelf = wl;

            function Xe(S) {
                let M = o();
                return Ft(S, M), M
            }

            n.invert = Xe;

            function Ft(S, M) {
                if (S.isIdentity === !0) {
                    a2(S, M);
                    return
                }
                let L = S._m, F = L[0], e2 = L[1], R2 = L[2], w2 = L[3], j2 = L[4], $2 = L[5], S3 = L[6], k3 = L[7],
                    tn = L[8], w3 = L[9], wn = L[10], Fn = L[11], Yn = L[12], Rn = L[13], E3 = L[14], Vn = L[15],
                    Jn = wn * Vn - E3 * Fn, G3 = w3 * Vn - Rn * Fn, V3 = w3 * E3 - Rn * wn, q2 = tn * Vn - Yn * Fn,
                    F2 = tn * E3 - wn * Yn, W2 = tn * Rn - Yn * w3, r3 = +($2 * Jn - S3 * G3 + k3 * V3),
                    Tn = -(j2 * Jn - S3 * q2 + k3 * F2), Un = +(j2 * G3 - $2 * q2 + k3 * W2),
                    n3 = -(j2 * V3 - $2 * F2 + S3 * W2), Q2 = F * r3 + e2 * Tn + R2 * Un + w2 * n3;
                if (Q2 === 0) {
                    a2(S, M);
                    return
                }
                let Ln = 1 / Q2, pl = S3 * Vn - E3 * k3, Cl = $2 * Vn - Rn * k3, Xn = $2 * E3 - Rn * S3,
                    Wl = j2 * Vn - Yn * k3, Lt = j2 * E3 - Yn * S3, pt = j2 * Rn - Yn * $2, m = S3 * Fn - wn * k3,
                    y = $2 * Fn - w3 * k3, E = $2 * wn - w3 * S3, I = j2 * Fn - tn * k3, z = j2 * wn - tn * S3,
                    j = j2 * w3 - tn * $2, _2 = -(e2 * Jn - R2 * G3 + w2 * V3), J2 = +(F * Jn - R2 * q2 + w2 * F2),
                    f3 = -(F * G3 - e2 * q2 + w2 * W2), d3 = +(F * V3 - e2 * F2 + R2 * W2),
                    _e = +(e2 * pl - R2 * Cl + w2 * Xn), _n = -(F * pl - R2 * Wl + w2 * Lt),
                    O2 = +(F * Cl - e2 * Wl + w2 * pt), ae = -(F * Xn - e2 * Lt + R2 * pt),
                    mn = -(e2 * m - R2 * y + w2 * E), Sn = +(F * m - R2 * I + w2 * z), Ee = -(F * y - e2 * I + w2 * j),
                    Hl = +(F * E - e2 * z + R2 * j);
                g(r3 * Ln, _2 * Ln, _e * Ln, mn * Ln, Tn * Ln, J2 * Ln, _n * Ln, Sn * Ln, Un * Ln, f3 * Ln, O2 * Ln, Ee * Ln, n3 * Ln, d3 * Ln, ae * Ln, Hl * Ln, M)
            }

            n.invertToRef = Ft;

            function ft(S, M, L) {
                S._m[M] += L, K(S)
            }

            n.addAtIndex = ft;

            function C4(S, M, L) {
                return S._m[M] *= L, K(S), S
            }

            n.multiplyAtIndex = C4;

            function _4(S, M, L, F) {
                S._m[12] = M, S._m[13] = L, S._m[14] = F, K(S)
            }

            n.setTranslationFromFloats = _4;

            function Ut(S, M) {
                _4(S, M.x, M.y, M.z)
            }

            n.setTranslation = Ut;

            function n1(S) {
                return C2.create(S._m[12], S._m[13], S._m[14])
            }

            n.getTranslation = n1;

            function Ul(S, M) {
                M.x = S._m[12], M.y = S._m[13], M.z = S._m[14]
            }

            n.getTranslationToRef = Ul;

            function N(S) {
                let M = S._m;
                return g(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, M[12], M[13], M[14], M[15], S), pe(S, M[12] === 0 && M[13] === 0 && M[14] === 0 && M[15] === 1), S
            }

            n.removeRotationAndScaling = N;

            function X(S, M) {
                let L = o();
                return G2(S, M, L), L
            }

            n.multiply = X;

            function a2(S, M) {
                K2(S, M._m), pe(M, S.isIdentity, S._isIdentityDirty, S.isIdentity3x2, S._isIdentity3x2Dirty)
            }

            n.copy = a2;

            function K2(S, M, L = 0) {
                for (let F = 0; F < 16; F++) M[L + F] = S._m[F]
            }

            n.copyToArray = K2;

            function G2(S, M, L) {
                if (S.isIdentity) {
                    a2(M, L);
                    return
                }
                if (M.isIdentity) {
                    a2(S, L);
                    return
                }
                o3(S, M, L._m, 0), K(L)
            }

            n.multiplyToRef = G2;

            function o3(S, M, L, F) {
                let e2 = S._m, R2 = M._m, w2 = e2[0], j2 = e2[1], $2 = e2[2], S3 = e2[3], k3 = e2[4], tn = e2[5],
                    w3 = e2[6], wn = e2[7], Fn = e2[8], Yn = e2[9], Rn = e2[10], E3 = e2[11], Vn = e2[12], Jn = e2[13],
                    G3 = e2[14], V3 = e2[15], q2 = R2[0], F2 = R2[1], W2 = R2[2], r3 = R2[3], Tn = R2[4], Un = R2[5],
                    n3 = R2[6], Q2 = R2[7], Ln = R2[8], pl = R2[9], Cl = R2[10], Xn = R2[11], Wl = R2[12], Lt = R2[13],
                    pt = R2[14], m = R2[15];
                L[F] = w2 * q2 + j2 * Tn + $2 * Ln + S3 * Wl, L[F + 1] = w2 * F2 + j2 * Un + $2 * pl + S3 * Lt, L[F + 2] = w2 * W2 + j2 * n3 + $2 * Cl + S3 * pt, L[F + 3] = w2 * r3 + j2 * Q2 + $2 * Xn + S3 * m, L[F + 4] = k3 * q2 + tn * Tn + w3 * Ln + wn * Wl, L[F + 5] = k3 * F2 + tn * Un + w3 * pl + wn * Lt, L[F + 6] = k3 * W2 + tn * n3 + w3 * Cl + wn * pt, L[F + 7] = k3 * r3 + tn * Q2 + w3 * Xn + wn * m, L[F + 8] = Fn * q2 + Yn * Tn + Rn * Ln + E3 * Wl, L[F + 9] = Fn * F2 + Yn * Un + Rn * pl + E3 * Lt, L[F + 10] = Fn * W2 + Yn * n3 + Rn * Cl + E3 * pt, L[F + 11] = Fn * r3 + Yn * Q2 + Rn * Xn + E3 * m, L[F + 12] = Vn * q2 + Jn * Tn + G3 * Ln + V3 * Wl, L[F + 13] = Vn * F2 + Jn * Un + G3 * pl + V3 * Lt, L[F + 14] = Vn * W2 + Jn * n3 + G3 * Cl + V3 * pt, L[F + 15] = Vn * r3 + Jn * Q2 + G3 * Xn + V3 * m
            }

            n.multiplyToArray = o3;

            function x3(S, M) {
                let L = M;
                if (!L) return !1;
                if ((S.isIdentity || L.isIdentity) && !S._isIdentityDirty && !L._isIdentityDirty) return S.isIdentity && L.isIdentity;
                let F = S._m, e2 = L._m;
                return F[0] === e2[0] && F[1] === e2[1] && F[2] === e2[2] && F[3] === e2[3] && F[4] === e2[4] && F[5] === e2[5] && F[6] === e2[6] && F[7] === e2[7] && F[8] === e2[8] && F[9] === e2[9] && F[10] === e2[10] && F[11] === e2[11] && F[12] === e2[12] && F[13] === e2[13] && F[14] === e2[14] && F[15] === e2[15]
            }

            n.equals = x3;

            function Cn(S) {
                let M = o();
                return a2(S, M), M
            }

            n.clone = Cn;

            function on(S) {
                let M = S._m[0] || 0;
                for (let L = 1; L < 16; L++) M = M * 397 ^ (S._m[L] || 0);
                return M
            }

            n.getHashCode = on;

            function Bn(S, M, L, F) {
                if (S.isIdentity) return F && (F.x = 0, F.y = 0, F.z = 0), M && (M.x = 1, M.y = 1, M.z = 1), L && (L.w = 1, L.x = 0, L.y = 0, L.z = 0), !0;
                let e2 = S._m;
                F && (F.x = e2[12], F.y = e2[13], F.z = e2[14]);
                let R2 = M || C2.Zero();
                if (R2.x = Math.sqrt(e2[0] * e2[0] + e2[1] * e2[1] + e2[2] * e2[2]), R2.y = Math.sqrt(e2[4] * e2[4] + e2[5] * e2[5] + e2[6] * e2[6]), R2.z = Math.sqrt(e2[8] * e2[8] + e2[9] * e2[9] + e2[10] * e2[10]), c3(S) <= 0 && (R2.y *= -1), R2.x === 0 || R2.y === 0 || R2.z === 0) return L && (L.w = 1, L.x = 0, L.y = 0, L.z = 0), !1;
                if (L) {
                    let w2 = 1 / R2.x, j2 = 1 / R2.y, $2 = 1 / R2.z, S3 = o();
                    g(e2[0] * w2, e2[1] * w2, e2[2] * w2, 0, e2[4] * j2, e2[5] * j2, e2[6] * j2, 0, e2[8] * $2, e2[9] * $2, e2[10] * $2, 0, 0, 0, 0, 1, S3), X2.fromRotationMatrixToRef(S3, L)
                }
                return !0
            }

            n.decompose = Bn;

            function vl(S, M, L, F, e2, R2) {
                if (M < 0 || M > 3) return;
                let w2 = M * 4;
                S._m[w2 + 0] = L, S._m[w2 + 1] = F, S._m[w2 + 2] = e2, S._m[w2 + 3] = R2, K(S)
            }

            n.setRowFromFloats = vl;

            function Ll(S, M) {
                let L = o();
                return zl(S, M, L), L
            }

            n.scale = Ll;

            function zl(S, M, L) {
                for (let F = 0; F < 16; F++) L._m[F] = S._m[F] * M;
                K(L)
            }

            n.scaleToRef = zl;

            function dt(S, M, L) {
                for (let F = 0; F < 16; F++) L._m[F] += S._m[F] * M;
                K(L)
            }

            n.scaleAndAddToRef = dt;

            function G1(S, M) {
                let L = o();
                Ft(S, L), ct(L, M);
                let F = M._m;
                g(F[0], F[1], F[2], 0, F[4], F[5], F[6], 0, F[8], F[9], F[10], 0, 0, 0, 0, 1, M)
            }

            n.normalMatrixToRef = G1;

            function E6(S) {
                let M = o();
                return j1(S, M), M
            }

            n.getRotationMatrix = E6;

            function j1(S, M) {
                let L = C2.Zero();
                if (!Bn(S, L)) {
                    M = P();
                    return
                }
                let F = S._m, e2 = 1 / L.x, R2 = 1 / L.y, w2 = 1 / L.z;
                g(F[0] * e2, F[1] * e2, F[2] * e2, 0, F[4] * R2, F[5] * R2, F[6] * R2, 0, F[8] * w2, F[9] * w2, F[10] * w2, 0, 0, 0, 0, 1, M)
            }

            n.getRotationMatrixToRef = j1;

            function P4(S) {
                S._m[2] *= -1, S._m[6] *= -1, S._m[8] *= -1, S._m[9] *= -1, S._m[14] *= -1, K(S)
            }

            n.toggleModelMatrixHandInPlace = P4;

            function A4(S) {
                S._m[8] *= -1, S._m[9] *= -1, S._m[10] *= -1, S._m[11] *= -1, K(S)
            }

            n.toggleProjectionMatrixHandInPlace = A4;

            function pe(S, M, L = !1, F = !1, e2 = !0) {
                S.updateFlag = r++, S.isIdentity = M, S.isIdentity3x2 = M || F, S._isIdentityDirty = S.isIdentity ? !1 : L, S._isIdentity3x2Dirty = S.isIdentity3x2 ? !1 : e2
            }
        })(Qt || (Qt = {}));
        var X2;
        (function (n) {
            function e(O = 0, J = 0, h2 = 0, y2 = 1) {
                return {x: O, y: J, z: h2, w: y2}
            }

            n.create = e;

            function r(O, J) {
                return {x: O.x + J.x, y: O.y + J.y, z: O.z + J.z, w: O.w + J.w}
            }

            n.add = r;

            function l(O, J, h2) {
                let y2 = J * .5, k2 = O * .5, Z2 = h2 * .5, g3 = Math.cos(y2), P3 = Math.cos(k2), U3 = Math.cos(Z2),
                    C3 = Math.sin(y2), N3 = Math.sin(k2), R3 = Math.sin(Z2);
                return e(P3 * C3 * U3 + N3 * g3 * R3, N3 * g3 * U3 - P3 * C3 * R3, P3 * g3 * R3 - N3 * C3 * U3, P3 * g3 * U3 + N3 * C3 * R3)
            }

            n.fromRotationYawPitchRoll = l;

            function i(O, J, h2) {
                return l(J * s8, O * s8, h2 * s8)
            }

            n.fromEulerDegrees = i;

            function o(O) {
                return Math.sqrt(f(O))
            }

            n.length = o;

            function f(O) {
                return O.x * O.x + O.y * O.y + O.z * O.z + O.w * O.w
            }

            n.lengthSquared = f;

            function s(O, J) {
                return O.x * J.x + O.y * J.y + O.z * J.z + O.w * J.w
            }

            n.dot = s;

            function a(O, J) {
                let h2 = s(O, J);
                return Math.acos(Math.min(Math.abs(h2), 1)) * 2 * c8
            }

            n.angle = a;

            function g(O, J, h2) {
                let y2 = a(O, J);
                if (y2 === 0) return J;
                let k2 = Math.min(1, h2 / y2);
                return R(O, J, k2)
            }

            n.rotateTowards = g;

            function b(O, J = {x: 0, y: 1, z: 0}) {
                let h2 = C2.normalize(O), y2 = C2.normalize(C2.cross(J, h2)), k2 = C2.cross(h2, y2), Z2 = y2.x,
                    g3 = y2.y, P3 = y2.z, U3 = k2.x, C3 = k2.y, N3 = k2.z, R3 = h2.x, un = h2.y, F3 = h2.z,
                    Dn = Z2 + C3 + F3, o2 = e();
                if (Dn > 0) {
                    let $ = Math.sqrt(Dn + 1);
                    return o2.w = $ * .5, $ = .5 / $, o2.x = (N3 - un) * $, o2.y = (R3 - P3) * $, o2.z = (g3 - U3) * $, o2
                }
                if (Z2 >= C3 && Z2 >= F3) {
                    let $ = Math.sqrt(1 + Z2 - C3 - F3), f2 = .5 / $;
                    return o2.x = .5 * $, o2.y = (g3 + U3) * f2, o2.z = (P3 + R3) * f2, o2.w = (N3 - un) * f2, o2
                }
                if (C3 > F3) {
                    let $ = Math.sqrt(1 + C3 - Z2 - F3), f2 = .5 / $;
                    return o2.x = (U3 + g3) * f2, o2.y = .5 * $, o2.z = (un + N3) * f2, o2.w = (R3 - P3) * f2, o2
                }
                let P2 = Math.sqrt(1 + F3 - Z2 - C3), I2 = .5 / P2;
                return o2.x = (R3 + P3) * I2, o2.y = (un + N3) * I2, o2.z = .5 * P2, o2.w = (g3 - U3) * I2, o2
            }

            n.lookRotation = b;

            function B(O) {
                let J = 1 / o(O);
                return e(O.x * J, O.y * J, O.z * J, O.w * J)
            }

            n.normalize = B;

            function w(O, J, h2 = C2.Up()) {
                let y2 = C2.normalize(O), k2 = C2.normalize(J), Z2 = C2.cross(y2, k2),
                    g3 = Math.sqrt(C2.lengthSquared(y2) * C2.lengthSquared(k2)) + C2.dot(y2, k2);
                return C2.lengthSquared(Z2) < 1e-4 ? Math.abs(g3) < 1e-4 ? B(e(h2.x, h2.y, h2.z, 0)) : P() : B(e(Z2.x, Z2.y, Z2.z, g3))
            }

            n.fromToRotation = w;

            function P() {
                return e(0, 0, 0, 1)
            }

            n.Identity = P;

            function D(O) {
                let J = C2.create(), h2 = O.x * O.x + O.y * O.y + O.z * O.z + O.w * O.w, y2 = O.x * O.w - O.y * O.z;
                return y2 > .4995 * h2 ? (J.x = Math.PI / 2, J.y = 2 * Math.atan2(O.y, O.x), J.z = 0) : y2 < -.4995 * h2 ? (J.x = -Math.PI / 2, J.y = -2 * Math.atan2(O.y, O.x), J.z = 0) : (J.x = Math.asin(2 * (O.w * O.x - O.y * O.z)), J.y = Math.atan2(2 * O.w * O.y + 2 * O.z * O.x, 1 - 2 * (O.x * O.x + O.y * O.y)), J.z = Math.atan2(2 * O.w * O.z + 2 * O.x * O.y, 1 - 2 * (O.z * O.z + O.x * O.x))), J.x *= c8, J.y *= c8, J.z *= c8, J.x = On.repeat(J.x, 360), J.y = On.repeat(J.y, 360), J.z = On.repeat(J.z, 360), J
            }

            n.toEulerAngles = D;

            function T(O, J, h2, y2) {
                let k2 = J * .5, Z2 = O * .5, g3 = h2 * .5, P3 = Math.cos(k2), U3 = Math.cos(Z2), C3 = Math.cos(g3),
                    N3 = Math.sin(k2), R3 = Math.sin(Z2), un = Math.sin(g3);
                y2.x = U3 * N3 * C3 + R3 * P3 * un, y2.y = R3 * P3 * C3 - U3 * N3 * un, y2.z = U3 * P3 * un - R3 * N3 * C3, y2.w = U3 * P3 * C3 + R3 * N3 * un
            }

            n.fromRotationYawPitchRollToRef = T;

            function k(O, J) {
                let h2 = O._m, y2 = h2[0], k2 = h2[4], Z2 = h2[8], g3 = h2[1], P3 = h2[5], U3 = h2[9], C3 = h2[2],
                    N3 = h2[6], R3 = h2[10], un = y2 + P3 + R3, F3;
                un > 0 ? (F3 = .5 / Math.sqrt(un + 1), J.w = .25 / F3, J.x = (N3 - U3) * F3, J.y = (Z2 - C3) * F3, J.z = (g3 - k2) * F3) : y2 > P3 && y2 > R3 ? (F3 = 2 * Math.sqrt(1 + y2 - P3 - R3), J.w = (N3 - U3) / F3, J.x = .25 * F3, J.y = (k2 + g3) / F3, J.z = (Z2 + C3) / F3) : P3 > R3 ? (F3 = 2 * Math.sqrt(1 + P3 - y2 - R3), J.w = (Z2 - C3) / F3, J.x = (k2 + g3) / F3, J.y = .25 * F3, J.z = (U3 + N3) / F3) : (F3 = 2 * Math.sqrt(1 + R3 - y2 - P3), J.w = (g3 - k2) / F3, J.x = (Z2 + C3) / F3, J.y = (U3 + N3) / F3, J.z = .25 * F3)
            }

            n.fromRotationMatrixToRef = k;

            function R(O, J, h2) {
                let y2 = n.Identity();
                return n.slerpToRef(O, J, h2, y2), y2
            }

            n.slerp = R;

            function G(O, J, h2, y2) {
                let k2, Z2, g3 = O.x * J.x + O.y * J.y + O.z * J.z + O.w * J.w, P3 = !1;
                if (g3 < 0 && (P3 = !0, g3 = -g3), g3 > .999999) Z2 = 1 - h2, k2 = P3 ? -h2 : h2; else {
                    let U3 = Math.acos(g3), C3 = 1 / Math.sin(U3);
                    Z2 = Math.sin((1 - h2) * U3) * C3, k2 = P3 ? -Math.sin(h2 * U3) * C3 : Math.sin(h2 * U3) * C3
                }
                y2.x = Z2 * O.x + k2 * J.x, y2.y = Z2 * O.y + k2 * J.y, y2.z = Z2 * O.z + k2 * J.z, y2.w = Z2 * O.w + k2 * J.w
            }

            n.slerpToRef = G;

            function Z(O, J) {
                let h2 = e(0, 0, 0, 1);
                return S2(O, J, h2), h2
            }

            n.multiply = Z;

            function S2(O, J, h2) {
                h2.x = O.x * J.w + O.y * J.z - O.z * J.y + O.w * J.x, h2.y = -O.x * J.z + O.y * J.w + O.z * J.x + O.w * J.y, h2.z = O.x * J.y - O.y * J.x + O.z * J.w + O.w * J.z, h2.w = -O.x * J.x - O.y * J.y - O.z * J.z + O.w * J.w
            }

            n.multiplyToRef = S2;

            function D2(O, J) {
                if (C2.lengthSquared(J) === 0) return n.Identity();
                let h2 = P(), y2 = O * s8;
                y2 *= .5;
                let k2 = C2.normalize(J);
                return C2.scaleToRef(k2, Math.sin(y2), k2), h2.x = k2.x, h2.y = k2.y, h2.z = k2.z, h2.w = Math.cos(y2), B(h2)
            }

            n.fromAngleAxis = D2;

            function T2(O, J, h2) {
                let y2 = n.create(0, 0, 0, 0);
                return l2(O, J, h2, y2), y2
            }

            n.fromAxisToRotationQuaternion = T2;

            function l2(O, J, h2, y2) {
                let k2 = Qt.create();
                Qt.fromXYZAxesToRef(C2.normalize(O), C2.normalize(J), C2.normalize(h2), k2), n.fromRotationMatrixToRef(k2, y2)
            }

            n.fromAxisToRotationQuaternionToRef = l2;

            function b2() {
                return e(0, 0, 0, 0)
            }

            n.Zero = b2;

            function g2(O, J, h2 = C2.Up()) {
                let y2 = n.Identity();
                return p2(O, J, h2, y2), y2
            }

            n.fromLookAt = g2;

            function p2(O, J, h2 = C2.Up(), y2) {
                let k2 = Qt.Identity();
                Qt.lookAtLHToRef(O, J, h2, k2), Qt.invertToRef(k2, k2), n.fromRotationMatrixToRef(k2, y2)
            }

            n.fromLookAtToRef = p2
        })(X2 || (X2 = {}));
        var q;
        (function (n) {
            function e(o2 = 0, P2 = 0, I2 = 0, $ = 1) {
                return {r: o2, g: P2, b: I2, a: $}
            }

            n.create = e;

            function r(o2) {
                if (o2.substring(0, 1) !== "#" || o2.length !== 7 && o2.length !== 9) return e(0, 0, 0, 1);
                let P2 = parseInt(o2.substring(1, 3), 16), I2 = parseInt(o2.substring(3, 5), 16),
                    $ = parseInt(o2.substring(5, 7), 16), f2 = o2.substring(7, 9), l3 = f2 ? parseInt(f2, 16) : 255;
                return n.fromInts(P2, I2, $, l3)
            }

            n.fromHexString = r;

            function l(o2, P2, I2) {
                let $ = e(0, 0, 0, 0);
                return n.lerpToRef(o2, P2, I2, $), $
            }

            n.lerp = l;

            function i(o2, P2, I2, $) {
                $.r = o2.r + (P2.r - o2.r) * I2, $.g = o2.g + (P2.g - o2.g) * I2, $.b = o2.b + (P2.b - o2.b) * I2, $.a = o2.a + (P2.a - o2.a) * I2
            }

            n.lerpToRef = i;

            function o() {
                return e(1, 0, 0, 1)
            }

            n.Red = o;

            function f() {
                return e(0, 1, 0, 1)
            }

            n.Green = f;

            function s() {
                return e(0, 0, 1, 1)
            }

            n.Blue = s;

            function a() {
                return e(0, 0, 0, 1)
            }

            n.Black = a;

            function g() {
                return e(1, 1, 1, 1)
            }

            n.White = g;

            function b() {
                return e(.5, 0, .5, 1)
            }

            n.Purple = b;

            function B() {
                return e(1, 0, 1, 1)
            }

            n.Magenta = B;

            function w() {
                return e(1, 1, 0, 1)
            }

            n.Yellow = w;

            function P() {
                return e(.5, .5, .5, 1)
            }

            n.Gray = P;

            function D() {
                return e(0, 1, 1, 1)
            }

            n.Teal = D;

            function T() {
                return e(0, 0, 0, 0)
            }

            n.Clear = T;

            function k(o2, P2 = 1) {
                return e(o2.r, o2.g, o2.b, P2)
            }

            n.fromColor3 = k;

            function R(o2, P2 = 0) {
                return e(o2[P2], o2[P2 + 1], o2[P2 + 2], o2[P2 + 3])
            }

            n.fromArray = R;

            function G(o2, P2, I2, $) {
                return e(o2 / 255, P2 / 255, I2 / 255, $ / 255)
            }

            n.fromInts = G;

            function Z(o2, P2) {
                if (o2.length === P2 * 3) {
                    let I2 = [];
                    for (let $ = 0; $ < o2.length; $ += 3) {
                        let f2 = $ / 3 * 4;
                        I2[f2] = o2[$], I2[f2 + 1] = o2[$ + 1], I2[f2 + 2] = o2[$ + 2], I2[f2 + 3] = 1
                    }
                    return I2
                }
                return o2
            }

            n.checkColors4 = Z;

            function S2(o2, P2, I2) {
                I2.r = o2.r + P2.r, I2.g = o2.g + P2.g, I2.b = o2.b + P2.b, I2.a = o2.a + P2.a
            }

            n.addToRef = S2;

            function D2(o2, P2, I2 = 0) {
                P2[I2] = o2.r, P2[I2 + 1] = o2.g, P2[I2 + 2] = o2.b, P2[I2 + 3] = o2.a
            }

            n.toArray = D2;

            function T2(o2, P2) {
                let I2 = T();
                return S2(o2, P2, I2), I2
            }

            n.add = T2;

            function l2(o2, P2) {
                let I2 = T();
                return b2(o2, P2, I2), I2
            }

            n.subtract = l2;

            function b2(o2, P2, I2) {
                I2.r = o2.r - P2.r, I2.g = o2.g - P2.g, I2.b = o2.b - P2.b, I2.a = o2.a - P2.a
            }

            n.subtractToRef = b2;

            function g2(o2, P2) {
                return e(o2.r * P2, o2.g * P2, o2.b * P2, o2.a * P2)
            }

            n.scale = g2;

            function p2(o2, P2, I2) {
                I2.r = o2.r * P2, I2.g = o2.g * P2, I2.b = o2.b * P2, I2.a = o2.a * P2
            }

            n.scaleToRef = p2;

            function O(o2, P2, I2) {
                I2.r += o2.r * P2, I2.g += o2.g * P2, I2.b += o2.b * P2, I2.a += o2.a * P2
            }

            n.scaleAndAddToRef = O;

            function J(o2, P2 = 0, I2 = 1, $) {
                $.r = On.clamp(o2.r, P2, I2), $.g = On.clamp(o2.g, P2, I2), $.b = On.clamp(o2.b, P2, I2), $.a = On.clamp(o2.a, P2, I2)
            }

            n.clampToRef = J;

            function h2(o2, P2) {
                return e(o2.r * P2.r, o2.g * P2.g, o2.b * P2.b, o2.a * P2.a)
            }

            n.multiply = h2;

            function y2(o2, P2, I2) {
                I2.r = o2.r * P2.r, I2.g = o2.g * P2.g, I2.b = o2.b * P2.b, I2.a = o2.a * P2.a
            }

            n.multiplyToRef = y2;

            function k2(o2) {
                return "{R: " + o2.r + " G:" + o2.g + " B:" + o2.b + " A:" + o2.a + "}"
            }

            n.toString = k2;

            function Z2(o2) {
                let P2 = o2.r || 0;
                return P2 = P2 * 397 ^ (o2.g || 0), P2 = P2 * 397 ^ (o2.b || 0), P2 = P2 * 397 ^ (o2.a || 0), P2
            }

            n.getHashCode = Z2;

            function g3(o2) {
                return e(o2.r, o2.g, o2.b, o2.a)
            }

            n.clone = g3;

            function P3(o2, P2) {
                P2.r = o2.r, P2.g = o2.g, P2.b = o2.b, P2.a = o2.a
            }

            n.copyFrom = P3;

            function U3(o2, P2, I2, $, f2) {
                f2.r = o2, f2.g = P2, f2.b = I2, f2.a = $
            }

            n.copyFromFloats = U3;

            function C3(o2, P2, I2, $, f2) {
                f2.r = o2, f2.g = P2, f2.b = I2, f2.a = $
            }

            n.set = C3;

            function N3(o2) {
                let P2 = o2.r * 255 | 0, I2 = o2.g * 255 | 0, $ = o2.b * 255 | 0, f2 = o2.a * 255 | 0;
                return "#" + On.toHex(P2) + On.toHex(I2) + On.toHex($) + On.toHex(f2)
            }

            n.toHexString = N3;

            function R3(o2) {
                let P2 = e();
                return un(o2, P2), P2
            }

            n.toLinearSpace = R3;

            function un(o2, P2) {
                P2.r = Math.pow(o2.r, A1), P2.g = Math.pow(o2.g, A1), P2.b = Math.pow(o2.b, A1), P2.a = o2.a
            }

            n.toLinearSpaceToRef = un;

            function F3(o2) {
                let P2 = e();
                return Dn(o2, P2), P2
            }

            n.toGammaSpace = F3;

            function Dn(o2, P2) {
                P2.r = Math.pow(o2.r, P1), P2.g = Math.pow(o2.g, P1), P2.b = Math.pow(o2.b, P1), P2.a = o2.a
            }

            n.toGammaSpaceToRef = Dn
        })(q || (q = {}));
        var x4;
        (function (n) {
            function e($ = 0, f2 = 0, l3 = 0) {
                return {r: $, g: f2, b: l3}
            }

            n.create = e;

            function r($) {
                if ($.substring(0, 1) !== "#" || $.length !== 7) return e(0, 0, 0);
                let f2 = parseInt($.substring(1, 3), 16), l3 = parseInt($.substring(3, 5), 16),
                    D3 = parseInt($.substring(5, 7), 16);
                return i(f2, l3, D3)
            }

            n.fromHexString = r;

            function l($, f2 = 0) {
                return e($[f2], $[f2 + 1], $[f2 + 2])
            }

            n.fromArray = l;

            function i($, f2, l3) {
                return e($ / 255, f2 / 255, l3 / 255)
            }

            n.fromInts = i;

            function o($, f2, l3) {
                let D3 = e(0, 0, 0);
                return n.lerpToRef($, f2, l3, D3), D3
            }

            n.lerp = o;

            function f($, f2, l3, D3) {
                D3.r = $.r + (f2.r - $.r) * l3, D3.g = $.g + (f2.g - $.g) * l3, D3.b = $.b + (f2.b - $.b) * l3
            }

            n.lerpToRef = f;

            function s() {
                return e(1, 0, 0)
            }

            n.Red = s;

            function a() {
                return e(0, 1, 0)
            }

            n.Green = a;

            function g() {
                return e(0, 0, 1)
            }

            n.Blue = g;

            function b() {
                return e(0, 0, 0)
            }

            n.Black = b;

            function B() {
                return e(1, 1, 1)
            }

            n.White = B;

            function w() {
                return e(.5, 0, .5)
            }

            n.Purple = w;

            function P() {
                return e(1, 0, 1)
            }

            n.Magenta = P;

            function D() {
                return e(1, 1, 0)
            }

            n.Yellow = D;

            function T() {
                return e(.5, .5, .5)
            }

            n.Gray = T;

            function k() {
                return e(0, 1, 1)
            }

            n.Teal = k;

            function R() {
                return e(Math.random(), Math.random(), Math.random())
            }

            n.Random = R;

            function G($) {
                return "{R: " + $.r + " G:" + $.g + " B:" + $.b + "}"
            }

            n.toString = G;

            function Z($) {
                let f2 = $.r || 0;
                return f2 = f2 * 397 ^ ($.g || 0), f2 = f2 * 397 ^ ($.b || 0), f2
            }

            n.getHashCode = Z;

            function S2($, f2, l3 = 0) {
                f2[l3] = $.r, f2[l3 + 1] = $.g, f2[l3 + 2] = $.b
            }

            n.toArray = S2;

            function D2($, f2 = 1) {
                return q.create($.r, $.g, $.b, f2)
            }

            n.toColor4 = D2;

            function T2($) {
                let f2 = new Array;
                return S2($, f2, 0), f2
            }

            n.asArray = T2;

            function l2($) {
                return $.r * .3 + $.g * .59 + $.b * .11
            }

            n.toLuminance = l2;

            function b2($, f2) {
                return e($.r * f2.r, $.g * f2.g, $.b * f2.b)
            }

            n.multiply = b2;

            function g2($, f2, l3) {
                l3.r = $.r * f2.r, l3.g = $.g * f2.g, l3.b = $.b * f2.b
            }

            n.multiplyToRef = g2;

            function p2($, f2) {
                return f2 && $.r === f2.r && $.g === f2.g && $.b === f2.b
            }

            n.equals = p2;

            function O($, f2, l3, D3) {
                return $.r === f2 && $.g === l3 && $.b === D3
            }

            n.equalsFloats = O;

            function J($, f2) {
                return e($.r * f2, $.g * f2, $.b * f2)
            }

            n.scale = J;

            function h2($, f2, l3) {
                l3.r = $.r * f2, l3.g = $.g * f2, l3.b = $.b * f2
            }

            n.scaleToRef = h2;

            function y2($, f2, l3) {
                l3.r += $.r * f2, l3.g += $.g * f2, l3.b += $.b * f2
            }

            n.scaleAndAddToRef = y2;

            function k2($, f2 = 0, l3 = 1, D3) {
                D3.r = On.clamp($.r, f2, l3), D3.g = On.clamp($.g, f2, l3), D3.b = On.clamp($.b, f2, l3)
            }

            n.clampToRef = k2;

            function Z2($, f2 = 0, l3 = 1) {
                let D3 = n.Black();
                return k2($, f2, l3, D3), D3
            }

            n.clamp = Z2;

            function g3($, f2) {
                return e($.r + f2.r, $.g + f2.g, $.b + f2.b)
            }

            n.add = g3;

            function P3($, f2, l3) {
                l3.r = $.r + f2.r, l3.g = $.g + f2.g, l3.b = $.b + f2.b
            }

            n.addToRef = P3;

            function U3($, f2) {
                return e($.r - f2.r, $.g - f2.g, $.b - f2.b)
            }

            n.subtract = U3;

            function C3($, f2, l3) {
                l3.r = $.r - f2.r, l3.g = $.g - f2.g, l3.b = $.b - f2.b
            }

            n.subtractToRef = C3;

            function N3($) {
                return e($.r, $.g, $.b)
            }

            n.clone = N3;

            function R3($, f2) {
                f2.r = $.r, f2.g = $.g, f2.b = $.b
            }

            n.copyFrom = R3;

            function un($, f2, l3, D3) {
                $.r = f2, $.g = l3, $.b = D3
            }

            n.set = un;

            function F3($) {
                let f2 = $.r * 255 | 0, l3 = $.g * 255 | 0, D3 = $.b * 255 | 0;
                return "#" + On.toHex(f2) + On.toHex(l3) + On.toHex(D3)
            }

            n.toHexString = F3;

            function Dn($) {
                let f2 = e();
                return o2($, f2), f2
            }

            n.toLinearSpace = Dn;

            function o2($, f2) {
                f2.r = Math.pow($.r, A1), f2.g = Math.pow($.g, A1), f2.b = Math.pow($.b, A1)
            }

            n.toLinearSpaceToRef = o2;

            function P2($) {
                let f2 = e();
                return I2($, f2), f2
            }

            n.toGammaSpace = P2;

            function I2($, f2) {
                f2.r = Math.pow($.r, P1), f2.g = Math.pow($.g, P1), f2.b = Math.pow($.b, P1)
            }

            n.toGammaSpaceToRef = I2
        })(x4 || (x4 = {}));
        g4();
        var u4 = require("~system/RestrictedActions");
        var AT = A2.defineComponent("SpawnerNameComponent", {name: b3.String});

        function yl(n) {
            let e = A2.addEntity();
            return n && n.length > 0 && AT.create(e, {name: n}), e
        }

        function f8(n, e) {
            return [0, 0, n, 0, n, e, 0, e, n, 0, 0, 0, 0, e, n, e]
        }

        function ce(n, e, r, l, i, o, f, s, a, g = "", b) {
            let B = g && g.length > 0 ? yl(g) : A2.addEntity();
            return Y2.create(B, {
                parent: b,
                position: {x: n, y: e, z: r},
                rotation: X2.fromEulerDegrees(l, i, o),
                scale: {x: f, y: s, z: a}
            }), B
        }

        function Ah(n, e, r, l, i, o, f, s, a, g = "", b) {
            let B = ce(n, e, r, l, i, o, f, s, a, g, b);
            return ve.setBox(B), Nt.setBox(B), B
        }

        function il(n, e, r, l, i, o, f, s, a, g, b = "", B, w = !1) {
            let P = ce(e, r, l, i, o, f, s, a, g, b, B);
            return t8.create(P, {src: n, visibleMeshesCollisionMask: w ? L6.CL_POINTER | L6.CL_PHYSICS : 0}), P
        }

        function ge(n, e, r, l, i, o, f, s, a, g = "", b) {
            let B = ce(n, e, r, l, i, o, f, s, a, g, b);
            return ve.setPlane(B), Nt.setPlane(B), B
        }

        function n6(n, e) {
            let r = !1, l = A2.getEntitiesWith(Y2, $l);
            for (let [i, o, f] of l) if (o.parent == n) {
                let s = $l.getMutableOrNull(i);
                s && (s.text = e, r = !0)
            }
            return r
        }

        var kh = .001, kT = 0;

        function al(n, e, r, l, i, o, f, s = 2, a = 2) {
            l < kh && (l = kh);
            let g = yl("ground" + ++kT);
            return Y2.create(g, {
                position: C2.create(n + r / 2, l / 2, e + i / 2),
                rotation: X2.fromEulerDegrees(90, 0, 0),
                scale: C2.create(r, i, 1)
            }), ve.setPlane(g, f8(i / a, r / s)), O3.setPbrMaterial(g, {
                texture: {
                    tex: {
                        $case: "texture",
                        texture: {src: o, wrapMode: y5.TWM_REPEAT, filterMode: P9.TFM_BILINEAR}
                    }
                }, roughness: 1, metallic: 0
            }), g
        }

        function tr(n, e, r, l, i, o, f, s, a, g, b, B = 2, w = 2) {
            let P = (i - o) / 2;
            al(n, e + (r ? P + o : 0), r ? l : P, f, r ? P : l, g, b, w), al(n + (r ? 0 : P), e + (r ? P : 0), r ? l : o, f, r ? o : l, a, b, B), al(n + (r ? 0 : P + o), e + 0, r ? l : P, f, r ? P : l, g, b, w)
        }

        function Qi(n, e, r, l, i, o, f, s, a, g, b, B, w, P = 2, D = 2) {
            let T = (r - l) / 2;
            al(n, e, T, o, T, B, w, D), al(n + T, e, l, o, T, a ? b : B, w, a ? P : D), al(n + T + l, e, T, o, T, B, w, D), al(n, e + T, T, i, l, f ? b : B, w, f ? P : D), al(n + T, e + T, l, i, l, b, w, P), al(n + T + l, e + T, T, i, l, s ? b : B, w, s ? P : D), al(n, e + T + l, T, o, T, B, w, D), al(n + T, e + T + l, l, i, T, g ? b : B, w, g ? P : D), al(n + T + l, e + T + l, T, o, T, B, w, D)
        }

        var rr = "__event_name__", Ih = 0;

        function IT(n) {
            if (Ih++, n.length === 0) throw console.log(`
*** EventManager.ts: newId(type: string): type cannot be empty`), new Error("newId(type: string): type cannot be empty");
            return n + Ih.toString(36)
        }

        var Nh = [];

        function $i(n) {
            if (!(rr in n) || typeof n[rr] != "string") throw console.log(`
*** EventManager ERROR: The EventConstructor is not registered`), new Error("The EventConstructor is not registered");
            return n[rr]
        }

        var Ve = class {
            constructor() {
                this.listeners = {}
            }

            addListener(e, r, l) {
                if (!e || typeof e != "function") throw console.log(`
*** EventManager ERROR: Invalid EventConstructor`), new Error("Invalid EventConstructor");
                let i = $i(e), o = this.listeners[i];
                o || (o = this.listeners[i] = []);
                for (let f = 0; f < o.length; f++) if (o[f].listener === r) throw console.log(`
*** EventManager ERROR: The provided listener is already registered`), new Error("The provided listener is already registered");
                return o.push({listener: r, fn: l}), this
            }

            removeListener(e, r) {
                if (!r || typeof r != "function") throw console.log(`
*** EventManager ERROR: Invalid EventConstructor`), new Error("Invalid EventConstructor");
                let l = $i(r), i = this.listeners[l];
                if (!i) return !1;
                for (let o = 0; o < i.length; o++) if (i[o].listener === e) return i.splice(o, 1), !0;
                return !1
            }

            fireEvent(e) {
                let r = $i(e.constructor), l = this.listeners[r];
                if (l) for (let i = 0; i < l.length; i++) try {
                    let o = l[i];
                    o.fn.call(o.listener, e)
                } catch (o) {
                    console.log("ERROR: ", o)
                }
                return this
            }
        };

        function Oe() {
            let n = IT("EV");
            if (Nh.indexOf(n) !== -1) throw console.log(`
*** EventManager ERROR: The event name ${n} is already taken`), new Error(`The event name ${n} is already taken`);
            return Nh.push(n), e => (e[rr] = n, e)
        }

        var gl = class {
            constructor(e, r, l, i, o, f, s, a, g, b, B) {
                this.rootEntity = A2.addEntity(), Y2.create(this.rootEntity, e != null ? {
                    parent: e,
                    position: {x: r, y: l, z: i},
                    rotation: X2.fromEulerDegrees(o, f, s),
                    scale: {x: 1, y: 1, z: 1}
                } : {
                    position: {x: r, y: l, z: i},
                    rotation: X2.fromEulerDegrees(o, f, s),
                    scale: {x: 1, y: 1, z: 1}
                }), this.panel = A2.addEntity(), Y2.create(this.panel, {
                    parent: this.rootEntity,
                    scale: {x: a, y: g, z: b}
                }), ve.setBox(this.panel), Nt.setBox(this.panel), O3.setPbrMaterial(this.panel, {
                    albedoColor: q.White(),
                    metallic: 0,
                    roughness: 1,
                    specularIntensity: 0,
                    emissiveIntensity: .2,
                    emissiveColor: q.White()
                }), this.text = A2.addEntity(), $l.createOrReplace(this.text, {
                    text: B,
                    font: o8.F_SANS_SERIF,
                    fontSize: 2,
                    fontAutoSize: !1,
                    textAlign: u8.TAM_MIDDLE_CENTER,
                    width: a,
                    textWrapping: !0,
                    textColor: {r: 0, g: 0, b: 0, a: 1}
                }), Y2.create(this.text, {
                    parent: this.rootEntity,
                    position: {x: 0, y: 0, z: b / 2 + .01},
                    rotation: X2.fromEulerDegrees(0, 180, 0)
                })
            }

            setText(e) {
                $l.getMutable(this.text).text = e
            }

            setFontSize(e) {
                $l.getMutable(this.text).fontSize = e
            }

            setTextColor(e) {
                $l.getMutable(this.text).textColor = e
            }

            setFont(e) {
                $l.getMutable(this.text).font = e
            }

            setMaterial(e) {
                O3.setPbrMaterial(this.panel, e)
            }

            setColor(e) {
                O3.setPbrMaterial(this.panel, {albedoColor: e, emissiveColor: e})
            }
        };

        function e6(n, e, r, l, i, o, f, s, a, g, b = null, B = null, w = 1, P = q.Black(), D = q.White(), T = void 0) {
            let k = yl(b);
            Y2.create(k, B != null ? {
                parent: B,
                position: {x: n, y: e, z: r},
                rotation: X2.fromEulerDegrees(l, i, o),
                scale: {x: 1, y: 1, z: 1}
            } : {
                position: {x: n, y: e, z: r},
                rotation: X2.fromEulerDegrees(l, i, o),
                scale: {x: 1, y: 1, z: 1}
            }), T || (T = A2.addEntity()), Y2.create(T, {
                parent: k,
                scale: {x: f, y: s, z: a}
            }), ve.setBox(T), Nt.setBox(T), O3.setPbrMaterial(T, {
                albedoColor: D,
                metallic: 0,
                roughness: 1,
                specularIntensity: 0,
                emissiveIntensity: .2,
                emissiveColor: D
            });
            let R = A2.addEntity();
            return $l.createOrReplace(R, {
                text: g,
                font: o8.F_SANS_SERIF,
                fontSize: w,
                fontAutoSize: !1,
                textAlign: u8.TAM_MIDDLE_CENTER,
                width: f,
                textWrapping: !0,
                textColor: P
            }), Y2.create(R, {
                parent: k,
                position: {x: 0, y: 0, z: a / 2 + .01},
                rotation: X2.fromEulerDegrees(0, 180, 0)
            }), k
        }

        var Z3 = class {
            constructor(e, r, l, i, o, f, s, a, g, b, B, w = q.Black(), P = !0, D = .07, T = !1) {
                this.imageXScale = 1;
                this.imageYScale = 1;
                this.pbrMaterial = {};
                this.rootEntity = A2.addEntity(), Y2.create(this.rootEntity, e != null ? {
                    parent: e,
                    position: {x: r, y: l, z: i},
                    rotation: X2.fromEulerDegrees(o, f, s),
                    scale: {x: a, y: g, z: b}
                } : {
                    position: {x: r, y: l, z: i},
                    rotation: X2.fromEulerDegrees(o, f, s),
                    scale: {x: a, y: g, z: b}
                }), P && (D < 0 ? D = .01 : D > 1 && (D = .99), a > g ? (this.imageYScale = 1 - D, this.imageXScale = 1 - D * g / a) : (this.imageXScale = 1 - D, this.imageYScale = 1 - D * a / g), this.framePanel = A2.addEntity(), Y2.create(this.framePanel, {
                    parent: this.rootEntity,
                    position: {x: 0, y: 0, z: 0},
                    rotation: X2.fromEulerDegrees(-180, 0, 180),
                    scale: {x: 1, y: 1, z: 1}
                }), ve.setBox(this.framePanel), Nt.setBox(this.framePanel), O3.setPbrMaterial(this.framePanel, {albedoColor: w})), this.frontPanel = A2.addEntity();
                let k = .005 / b;
                Y2.create(this.frontPanel, {
                    parent: this.rootEntity,
                    position: {x: 0, y: 0, z: P ? .5 + k / 2 : k / 2},
                    rotation: X2.fromEulerDegrees(-180, 0, 180),
                    scale: {x: this.imageXScale, y: this.imageYScale, z: k}
                }), ve.setBox(this.frontPanel), Nt.setBox(this.frontPanel), this.pbrMaterial = {
                    texture: {
                        tex: {
                            $case: "texture",
                            texture: {src: B, wrapMode: 1, filterMode: 1}
                        }
                    },
                    metallic: 0,
                    roughness: 1,
                    specularIntensity: 0,
                    emissiveIntensity: .4,
                    emissiveColor: x4.White(),
                    emissiveTexture: {tex: {$case: "texture", texture: {src: B, wrapMode: 1, filterMode: 1}}},
                    alphaTexture: {tex: {$case: "texture", texture: {src: B, wrapMode: 1, filterMode: 1}}},
                    transparencyMode: 1,
                    alphaTest: .3
                }, O3.setPbrMaterial(this.frontPanel, this.pbrMaterial), T && (this.backPanel = A2.addEntity(), Y2.create(this.backPanel, {
                    parent: this.rootEntity,
                    position: {x: 0, y: 0, z: -(P ? .5 + k / 2 : k / 2)},
                    rotation: X2.fromEulerDegrees(0, 0, 0),
                    scale: {x: this.imageXScale, y: this.imageYScale, z: k}
                }), ve.setBox(this.backPanel), Nt.setBox(this.backPanel), O3.setPbrMaterial(this.backPanel, this.pbrMaterial))
            }
        };
        var Ua = require("~system/RestrictedActions");
        g4();
        var Gh = _3(ua()), Bl;
        (function (n) {
            n.createElement = Gh.default.createElement
        })(Bl || (Bl = {}));
        Kl();
        var vy = _3(oy());
        var YT = {"sans-serif": 0, serif: 1, monospace: 2};

        function E4(n) {
            if (n) return {font: YT[n]}
        }

        var JT = {
            "top-left": 0,
            "top-center": 1,
            "top-right": 2,
            "middle-left": 3,
            "middle-center": 4,
            "middle-right": 5,
            "bottom-left": 6,
            "bottom-center": 7,
            "bottom-right": 8
        };

        function T4(n) {
            if (n) return {textAlign: JT[n]}
        }

        var XT = {"nine-slices": 0, center: 1, stretch: 2};

        function ay(n) {
            return {textureMode: n ? XT[n] : 1}
        }

        function sy(n) {
            if (n.texture) return {tex: {$case: "texture", texture: iy(n.texture)}};
            if (n.avatarTexture) return {tex: {$case: "avatarTexture", avatarTexture: iy(n.avatarTexture)}}
        }

        function iy(n) {
            return {
                ...n,
                wrapMode: n.wrapMode ? KT[n.wrapMode] : void 0,
                filterMode: n.filterMode ? ZT[n.filterMode] : void 0
            }
        }

        var KT = {repeat: 0, clamp: 1, mirror: 2}, ZT = {point: 0, "bi-linear": 1, "tri-linear": 2};

        function pr(n) {
            if (!n || !Object.keys(n).length) return;
            let e = sy(n);
            return {...n, ...ay(n.textureMode), uvs: n.uvs ?? [], texture: e}
        }

        function cy(n) {
            return `${n[0].toUpperCase()}${n.slice(1, n.length)}`
        }

        function QT(n) {
            return typeof n == "string" && n.endsWith("%")
        }

        function $T(n) {
            return typeof n == "string" && n.endsWith("px")
        }

        function fy(n) {
            function e(r, l) {
                return Number(l.slice(0, l.indexOf(r)))
            }

            return n == null ? [void 0, 0] : n === "auto" ? [0, 3] : typeof n == "number" || typeof n == "string" && !isNaN(Number(n)) ? [Number(n), 1] : QT(n) ? [e("%", n), 2] : $T(n) ? [e("px", n), 1] : [void 0, 0]
        }

        function Y4(n = {}, e) {
            if (typeof n == "object") {
                let s = {};
                for (let a in n) {
                    let g = a, b = `${e}${cy(g)}`, B = `${e}${cy(g)}Unit`, [w, P] = fy(n[g]);
                    w !== void 0 && (s[B] = P, s[b] = w)
                }
                return s
            }
            if (typeof n == "number") return Y4({top: n, left: n, right: n, bottom: n}, e);
            let r = n.split(" ").filter(s => s !== "");
            if (r.length === 1) {
                let [s] = r;
                return Y4({top: s, left: s, right: s, bottom: s}, e)
            }
            if (r.length === 2) {
                let [s, a] = r;
                return Y4({top: s, left: a, right: a, bottom: s}, e)
            }
            if (r.length === 3) {
                let [s, a, g] = r;
                return Y4({top: s, left: a, right: a, bottom: g}, e)
            }
            let [l, i, o, f] = r;
            return Y4({top: l, right: i, bottom: o, left: f}, e)
        }

        function A5(n, e) {
            let r = `${e}Unit`, [l, i] = fy(n);
            return l === void 0 ? {} : {[e]: l, [r]: i}
        }

        function dy(n) {
            return {display: n ? nS[n] : 0}
        }

        var nS = {flex: 0, none: 1};

        function py(n) {
            return {justifyContent: n ? eS[n] : 0}
        }

        var eS = {center: 1, "flex-end": 2, "flex-start": 0, "space-around": 4, "space-between": 3, "space-evenly": 5};

        function mr(n, e) {
            let r = lS[e];
            return {[n]: r}
        }

        var lS = {
            auto: 0,
            baseline: 5,
            center: 2,
            "flex-end": 3,
            "flex-start": 1,
            stretch: 4,
            "space-between": 6,
            "space-around": 7
        };

        function my(n) {
            return {flexDirection: n ? tS[n] : 0}
        }

        var tS = {row: 0, column: 1, "row-reverse": 3, "column-reverse": 2};

        function hy(n) {
            return {flexWrap: rS[n]}
        }

        var rS = {wrap: 1, nowrap: 0, "wrap-reverse": 2};

        function yy(n) {
            return {overflow: n ? uS[n] : 0}
        }

        var uS = {visible: 0, scroll: 2, hidden: 1};

        function gy(n) {
            return {positionType: n ? oS[n] : 0}
        }

        var oS = {relative: 0, absolute: 1};

        function xy(n) {
            return {pointerFilter: n ? iS[n] : 0}
        }

        var iS = {none: 0, block: 1};
        var ha = 0, aS = {
            overflow: 0,
            display: 0,
            justifyContent: 0,
            alignSelf: 0,
            flexDirection: 0,
            positionType: 0,
            parent: ha,
            rightOf: 0,
            flexBasis: 0,
            width: 0,
            height: 0,
            minWidth: 0,
            minHeight: 0,
            maxWidth: 0,
            maxHeight: 0,
            flexGrow: 0,
            marginBottom: 0,
            marginBottomUnit: 0,
            marginLeft: 0,
            marginLeftUnit: 0,
            marginRight: 0,
            marginRightUnit: 0,
            marginTop: 0,
            marginTopUnit: 0,
            maxHeightUnit: 0,
            maxWidthUnit: 0,
            minHeightUnit: 0,
            minWidthUnit: 0,
            paddingBottom: 0,
            paddingBottomUnit: 0,
            paddingLeft: 0,
            paddingLeftUnit: 0,
            paddingTopUnit: 0,
            paddingRight: 0,
            paddingRightUnit: 0,
            paddingTop: 0,
            positionBottom: 0,
            positionBottomUnit: 0,
            positionLeft: 0,
            positionLeftUnit: 0,
            positionRight: 0,
            positionRightUnit: 0,
            positionTop: 0,
            positionTopUnit: 0,
            flexBasisUnit: 0,
            widthUnit: 0,
            heightUnit: 0,
            pointerFilter: 0
        };

        function hr(n = {}) {
            let {
                height: e,
                minHeight: r,
                maxHeight: l,
                width: i,
                minWidth: o,
                maxWidth: f,
                alignItems: s,
                alignContent: a,
                flexWrap: g,
                ...b
            } = n;
            return {...aS, ...b, ...Y4(n.position, "position"), ...Y4(n.margin, "margin"), ...Y4(n.padding, "padding"), ...A5(n.height, "height"), ...A5(n.minHeight, "minHeight"), ...A5(n.maxHeight, "maxHeight"), ...A5(n.width, "width"), ...A5(n.minWidth, "minWidth"), ...A5(n.maxWidth, "maxWidth"), ...dy(n.display), ...mr("alignSelf", n.alignSelf ?? "auto"), ...py(n.justifyContent), ...my(n.flexDirection), ...yy(n.overflow), ...xy(n.pointerFilter), ...gy(n.positionType), ...a && mr("alignContent", a), ...s && mr("alignItems", s), ...g && hy(g)}
        }

        function I1(n) {
            let {uiTransform: e, uiBackground: r, ...l} = n, i = hr(e), o = r ? {uiBackground: pr(r)} : void 0;
            return {...l, uiTransform: i, ...o}
        }

        var sS = {onMouseDown: void 0, onMouseUp: void 0}, cS = Object.keys(sS), y8 = n => cS.includes(n);

        function fS(n) {
            let {textAlign: e, font: r, ...l} = n;
            return {
                acceptEmpty: !1,
                options: [],
                selectedIndex: n.acceptEmpty ? -1 : 0,
                disabled: !1, ...l, ...T4(e), ...E4(r)
            }
        }

        function ya(n) {
            let {uiTransform: e, uiBackground: r, onMouseDown: l, onMouseUp: i, ...o} = n, f = fS(o),
                s = I1({uiTransform: e, uiBackground: r, onMouseDown: l, onMouseUp: i});
            return Bl.createElement("entity", {...s, uiDropdown: f})
        }

        function dS(n) {
            let {textAlign: e, font: r, ...l} = n;
            return {disabled: !1, placeholder: "", ...l, ...T4(e), ...E4(r)}
        }

        function yr(n) {
            let {uiTransform: e, uiBackground: r, onMouseDown: l, onMouseUp: i, ...o} = n, f = dS(o),
                s = I1({uiTransform: e, uiBackground: r, onMouseDown: l, onMouseUp: i});
            return Bl.createElement("entity", {...s, uiInput: f})
        }

        function ue(n) {
            let {uiTransform: e, uiBackground: r, onMouseDown: l, onMouseUp: i, ...o} = n,
                f = I1({uiTransform: e, uiBackground: r, onMouseDown: l, onMouseUp: i}), {
                    font: s,
                    textAlign: a,
                    ...g
                } = o, b = {...g, ...E4(s), ...T4(a)};
            return Bl.createElement("entity", {...f, uiText: b})
        }

        function pS(n) {
            return n.variant === "secondary" ? {
                uiBackground: {color: {r: 1, g: 1, b: 1, a: 1}},
                uiText: {color: {r: .98, g: .17, b: .33, a: 1}}
            } : {uiBackground: {color: {r: .98, g: .17, b: .33, a: 1}}, uiText: {color: {r: 1, g: 1, b: 1, a: 1}}}
        }

        function sn(n) {
            let {uiTransform: e, uiBackground: r, onMouseDown: l, onMouseUp: i, ...o} = n, f = pS(n),
                s = pr({...f.uiBackground, ...r}), {font: a, textAlign: g, ...b} = o,
                B = {...f.uiText, ...b, ...E4(a), ...T4(g)}, w = hr({height: 36, ...e});
            return n.disabled && (B.color && (B.color.a /= 2), s && s.color && (s.color.a /= 2)), Bl.createElement("entity", {
                onMouseDown: n.disabled ? void 0 : l,
                onMouseUp: n.disabled ? void 0 : i,
                uiTransform: w,
                uiText: B,
                uiBackground: s
            })
        }

        function H3(n) {
            let e = n.uiText && {uiText: {...n.uiText, ...E4(n.uiText.font), ...T4(n.uiText.textAlign)}};
            return Bl.createElement("entity", {...I1(n), ...e})
        }

        function by(n, e, r) {
            if (e && !r) return {type: "delete", component: n};
            if (!r) return;
            if (!e && r) return {type: "add", props: r, component: n};
            if (y8(n) && !ga(e, r)) return {type: "put", component: n, props: r};
            let l = {};
            for (let i in e) {
                let o = i;
                ga(e[o], r[o]) || (l[o] = r[o])
            }
            if (Object.keys(l).length) return {type: "put", props: l, component: n}
        }

        var mS = {
            uiText: void 0,
            uiBackground: void 0,
            uiTransform: void 0,
            onMouseDown: void 0,
            onMouseUp: void 0,
            uiInput: void 0,
            uiDropdown: void 0
        }, Ey = Object.keys(mS);

        function ga(n, e) {
            if (!n && !e) return !0;
            if (!n || !e) return n === e;
            if (n === e) return !0;
            if (typeof n != typeof e) return !1;
            if (typeof n != "object") return n === e;
            if (Array.isArray(n) && Array.isArray(e) && n.length !== e.length || Object.keys(n).length !== Object.keys(e).length) return !1;
            if (JSON.stringify(n) === JSON.stringify(e)) return !0;
            for (let r in n) if (!ga(n[r], e[r])) return !1;
            return !0
        }

        var Ty = n => !!n, Sy = {
            supportsMutation: !0,
            supportsPersistence: !1,
            noTimeout: -1,
            isPrimaryRenderer: !0,
            supportsHydration: !1,
            insertInContainerBefore(n, e, r) {
            },
            detachDeletedInstance(n) {
            },
            hideInstance(n) {
            },
            hideTextInstance(n) {
            },
            unhideInstance(n, e) {
            },
            unhideTextInstance(n, e) {
            },
            clearContainer(n) {
            },
            getCurrentEventPriority() {
                return 0
            },
            getInstanceFromNode(n) {
                return null
            },
            beforeActiveInstanceBlur() {
            },
            afterActiveInstanceBlur() {
            },
            prepareScopeUpdate() {
            },
            getInstanceFromScope() {
                return null
            },
            commitMount(n, e, r, l) {
            },
            resetTextContent(n) {
            },
            commitTextUpdate(n, e, r) {
            },
            prepareForCommit(n) {
                return null
            },
            resetAfterCommit(n) {
            },
            preparePortalMount(n) {
            },
            createTextInstance(n, e, r, l) {
                return {}
            },
            scheduleTimeout(n, e) {
            },
            cancelTimeout(n) {
            },
            shouldSetTextContent(n, e) {
                return !1
            },
            getRootHostContext(n) {
                return null
            },
            getChildHostContext(n, e, r) {
                return null
            },
            getPublicInstance(n) {
                return n
            },
            finalizeInitialChildren(n, e, r, l, i) {
                return !1
            }
        };

        function wy(n) {
            return {onMouseDown: 1, onMouseUp: 0}[n]
        }

        function Cy(n, e) {
            let r = new Set, l = new Map, i = new Map, o = C7(n), f = v7(n), s = b7(n), a = S7(n), g = w7(n), b = E7(n),
                B = T7(n), w = {
                    uiTransform: o.componentId,
                    uiText: f.componentId,
                    uiBackground: s.componentId,
                    uiInput: a.componentId,
                    uiDropdown: b.componentId
                };

            function P(p2, O) {
                let J = i.get(p2)?.get(O);
                J && J()
            }

            function D(p2, O) {
                R(p2, O, "uiTransform")
            }

            function T(p2, O) {
                if (O.type === "delete" || !O.props) {
                    i.get(p2.entity)?.delete(wy(O.component)), O.component === "onMouseDown" ? e.removeOnPointerDown(p2.entity) : O.component === "onMouseUp" && e.removeOnPointerUp(p2.entity);
                    return
                }
                if (O.props) {
                    let J = wy(O.component), h2 = i.get(p2.entity) || i.set(p2.entity, new Map).get(p2.entity),
                        y2 = h2.get(J);
                    if (h2.set(J, O.props), y2) return;
                    (O.component === "onMouseDown" ? e.onPointerDown : e.onPointerUp)(p2.entity, () => P(p2.entity, J), {
                        button: 0,
                        showFeedback: !0
                    })
                }
            }

            function k(p2, O) {
                let J = w[O];
                n.getComponent(J).deleteFrom(p2.entity)
            }

            function R(p2, O = {}, J) {
                let h2 = w[J], y2 = "onChange" in O, k2 = "onSubmit" in O, Z2 = l.get(p2.entity)?.get(h2),
                    g3 = y2 ? O.onChange : Z2?.onChangeCallback, P3 = k2 ? O.onSubmit : Z2?.onSubmitCallback;
                if ((y2 || k2) && (D2(p2.entity, h2, {
                    onChangeCallback: g3,
                    onSubmitCallback: P3
                }), delete O.onChange, delete O.onSubmit), !Object.keys(O).length) return;
                let U3 = n.getComponent(h2), C3 = U3.getMutableOrNull(p2.entity) || U3.create(p2.entity);
                for (let N3 in O) {
                    let R3 = N3;
                    C3[R3] = O[R3]
                }
            }

            function G(p2) {
                l.delete(p2.entity), n.removeEntity(p2.entity);
                for (let O of p2._child) G(O)
            }

            function Z(p2, O) {
                if (!O || !Object.keys(p2).length) return;
                if (p2._child.find(h2 => h2.entity === O.entity)) {
                    let h2 = p2._child.find(y2 => y2.rightOf === O.entity);
                    h2 && (h2.rightOf = O.rightOf, p2._child = p2._child.filter(y2 => y2.entity !== O.entity), p2._child.push(O), D(h2, {rightOf: h2.rightOf})), O.rightOf = p2._child[p2._child.length - 2]?.entity
                } else O.rightOf = p2._child[p2._child.length - 1]?.entity, p2._child.push(O);
                O.parent = p2.entity, D(O, {rightOf: O.rightOf, parent: p2.entity})
            }

            function S2(p2, O) {
                let J = p2._child.findIndex(y2 => y2.entity === O.entity), h2 = p2._child[J + 1];
                h2 && (h2.rightOf = O.rightOf, D(h2, {rightOf: O.rightOf})), p2._child.splice(J, 1), G(O)
            }

            function D2(p2, O, J) {
                let h2 = l.get(p2) || l.set(p2, new Map).get(p2), y2 = h2.get(O), k2 = J?.onChangeCallback,
                    Z2 = J?.onSubmitCallback, g3 = J?.value ?? y2?.value, P3 = J?.isSubmit ?? y2?.isSubmit;
                h2.set(O, {onChangeCallback: k2, onSubmitCallback: Z2, value: g3, isSubmit: P3})
            }

            let T2 = {
                ...Sy,
                createInstance(p2, O) {
                    let J = n.addEntity();
                    r.add(J);
                    let h2 = {entity: J, _child: [], parent: ha, rightOf: void 0};
                    for (let y2 in O) {
                        let k2 = y2;
                        k2 === "children" || k2 === "key" || (y8(k2) ? T(h2, {
                            type: "add",
                            props: O[k2],
                            component: k2
                        }) : R(h2, O[k2], k2))
                    }
                    return h2
                },
                appendChild: Z,
                appendChildToContainer: Z,
                appendInitialChild: Z,
                removeChild: S2,
                prepareUpdate(p2, O, J, h2) {
                    return Ey.map(y2 => by(y2, J[y2], h2[y2])).filter(Ty)
                },
                commitUpdate(p2, O, J, h2, y2, k2) {
                    for (let Z2 of O) {
                        if (y8(Z2.component)) {
                            T(p2, Z2);
                            continue
                        }
                        Z2.type === "delete" ? k(p2, Z2.component) : Z2.props && R(p2, Z2.props, Z2.component)
                    }
                },
                insertBefore(p2, O, J) {
                    let h2 = p2._child.findIndex(y2 => y2.entity === J.entity);
                    p2._child = [...p2._child.slice(0, h2), O, ...p2._child.slice(h2)], O.rightOf = J.rightOf, J.rightOf = O.entity, O.parent = p2.entity, D(O, {
                        rightOf: O.rightOf,
                        parent: O.parent
                    }), D(J, {rightOf: J.rightOf})
                },
                removeChildFromContainer(p2, O) {
                    G(O)
                }
            }, l2 = (0, vy.default)(T2), b2 = l2.createContainer({}, 0, null, !1, null, "", function () {
            }, null);

            function g2(p2, O) {
                for (let [J, h2] of n.getEntitiesWith(O)) {
                    let y2 = l.get(J)?.get(p2), k2 = !!h2.isSubmit;
                    y2?.onChangeCallback && h2.value !== y2.value && y2.onChangeCallback(h2.value), y2?.onSubmitCallback && k2 && !y2.isSubmit && y2.onSubmitCallback(h2.value), D2(J, p2, {
                        onChangeCallback: y2?.onChangeCallback,
                        onSubmitCallback: y2?.onSubmitCallback,
                        value: h2.value,
                        isSubmit: k2
                    })
                }
            }

            return {
                update: function (p2) {
                    return l.size && (g2(a.componentId, g), g2(b.componentId, B)), l2.updateContainer(p2, b2, null)
                }, getEntities: () => Array.from(r)
            }
        }

        function _y(n, e) {
            let r = Cy(n, e), l;

            function i() {
                l && r.update(l())
            }

            return n.addSystem(i, 1e5, "@dcl/react-ecs"), {
                destroy() {
                    n.removeSystem(i);
                    for (let o of r.getEntities()) n.removeEntity(o)
                }, setUiRenderer(o) {
                    l = o
                }
            }
        }

        var Py = _y(A2, Hn), Ay = Bl;
        var L2 = Ay;

        function g8(n) {
            let e = Y2.getOrNull(n);
            if (!e) return C2.Zero();
            let r = e.parent;
            if (r) {
                let l = Y2.get(r).rotation;
                return C2.add(g8(r), C2.rotate(e.position, t6(r)))
            } else return e.position
        }

        function t6(n) {
            let e = Y2.getOrNull(n);
            if (!e) return X2.Identity();
            let r = e.parent;
            return r ? X2.multiply(e.rotation, t6(r)) : e.rotation
        }

        var fe;
        (function (n) {
            n.LINEAR = "linear", n.EASEINQUAD = "easeinquad", n.EASEOUTQUAD = "easeoutquad", n.EASEQUAD = "easequad", n.EASEINSINE = "easeinsine", n.EASEOUTSINE = "easeoutsine", n.EASESINE = "easeinoutsine", n.EASEINEXPO = "easeinexpo", n.EASEOUTEXPO = "easeoutexpo", n.EASEEXPO = "easeinoutexpo", n.EASEINELASTIC = "easeinelastic", n.EASEOUTELASTIC = "easeoutelastic", n.EASEELASTIC = "easeinoutelastic", n.EASEINBOUNCE = "easeinbounce", n.EASEOUTEBOUNCE = "easeoutbounce", n.EASEBOUNCE = "easeinoutbounce"
        })(fe || (fe = {}));

        function ky(n, e, r) {
            let l = new Array, i = 1 / e, o = 0;
            if (r) {
                let f = n.length;
                for (let s = 0; s < f; s++) {
                    o = 0;
                    for (let a = 0; a < e; a++) l.push(C2.catmullRom(n[s % f], n[(s + 1) % f], n[(s + 2) % f], n[(s + 3) % f], o)), o += i
                }
                l.push(l[0])
            } else {
                let f = new Array;
                f.push(C2.clone(n[0])), Array.prototype.push.apply(f, n), f.push(C2.clone(n[n.length - 1]));
                let s = 0;
                for (; s < f.length - 3; s++) {
                    o = 0;
                    for (let a = 0; a < e; a++) l.push(C2.catmullRom(f[s], f[s + 1], f[s + 2], f[s + 3], o)), o += i
                }
                s--, l.push(C2.catmullRom(f[s], f[s + 1], f[s + 2], f[s + 3], o))
            }
            return l
        }

        function Iy(n, e, r, l) {
            return n.x <= l.x && e.x >= r.x && n.y <= l.y && e.y >= r.y && n.z <= l.z && e.z >= r.z
        }

        function Ny(n, e, r, l) {
            let i = C2.distanceSquared(n, r), o = e + l;
            return i < o * o
        }

        function xa(n, e, r, l) {
            let i = 0;
            return r.x < n.x && (i += (n.x - r.x) * (n.x - r.x)), r.x > e.x && (i += (r.x - e.x) * (r.x - e.x)), r.y < n.y && (i += (n.y - r.y) * (n.y - r.y)), r.y > e.y && (i += (r.y - e.y) * (r.y - e.y)), r.z < n.z && (i += (n.z - r.z) * (n.z - r.z)), r.z > e.z && (i += (r.z - e.z) * (r.z - e.z)), i < l * l
        }

        var bl;
        (function (n) {
            n.TimerSystemPriority = 1e5 + 256, n.TweenSystemPriority = 1e5 + 192, n.PerpetualMotionSystemPriority = 1e5 + 192, n.PathSystemPriority = 1e5 + 192, n.TriggerSystemPriority = 1e5 + 128, n.ActionSystemPriority = 1e5 + 64
        })(bl || (bl = {}));

        function hS(n) {
            let e = new Map, r = 0;

            function l(i) {
                let o = [], f = [];
                for (let [s, a] of e) a.accumulatedTime += 1e3 * i, !(a.accumulatedTime < a.interval) && (f.push(a.callback), a.recurrent ? a.accumulatedTime -= Math.floor(a.accumulatedTime / a.interval) * a.interval : o.push(s));
                for (let s of o) e.delete(s);
                for (let s of f) s()
            }

            return n.addSystem(l, bl.TimerSystemPriority), {
                setTimeout(i, o) {
                    let f = r++;
                    return e.set(f, {callback: i, interval: o, recurrent: !1, accumulatedTime: 0}), f
                }, clearTimeout(i) {
                    e.delete(i)
                }, setInterval(i, o) {
                    let f = r++;
                    return e.set(f, {callback: i, interval: o, recurrent: !0, accumulatedTime: 0}), f
                }, clearInterval(i) {
                    e.delete(i)
                }
            }
        }

        var x8 = hS(A2);
        var r6;
        (function (n) {
            n[n.Off = 0] = "Off", n[n.On = 1] = "On"
        })(r6 || (r6 = {}));

        function yS(n, e) {
            let r = n.defineComponent("dcl.utils.Toggle", {state: b3.EnumNumber(r6, r6.Off)}), l = new Map;
            return e.setInterval(function () {
                for (let i of l.keys()) (n.getEntityState(i) == ne.Removed || !r.has(i)) && l.delete(i)
            }, 5e3), {
                addToggle(i, o, f) {
                    l.set(i, f), r.createOrReplace(i, {state: o})
                }, removeToggle(i) {
                    l.delete(i), r.deleteFrom(i)
                }, setCallback(i, o) {
                    l.set(i, o)
                }, set(i, o) {
                    if (r.get(i).state != o) {
                        r.getMutable(i).state = o;
                        let s = l.get(i);
                        s && s(o)
                    }
                }, flip(i) {
                    this.set(i, 1 - r.get(i).state)
                }, isOn(i) {
                    return r.get(i).state == r6.On
                }
            }
        }

        var gS = yS(A2, x8);

        function ba(n) {
            switch (n) {
                case fe.LINEAR:
                    return 0;
                case fe.EASEINQUAD:
                    return 1;
                case fe.EASEOUTQUAD:
                    return 2;
                case fe.EASEQUAD:
                    return 3;
                case fe.EASEINSINE:
                    return 4;
                case fe.EASEOUTSINE:
                    return 5;
                case fe.EASESINE:
                    return 6;
                case fe.EASEINEXPO:
                    return 7;
                case fe.EASEOUTEXPO:
                    return 8;
                case fe.EASEEXPO:
                    return 9;
                case fe.EASEINELASTIC:
                    return 10;
                case fe.EASEOUTELASTIC:
                    return 11;
                case fe.EASEELASTIC:
                    return 12;
                case fe.EASEINBOUNCE:
                    return 13;
                case fe.EASEOUTEBOUNCE:
                    return 14;
                case fe.EASEBOUNCE:
                    return 15;
                default:
                    return 0
            }
        }

        function xS(n) {
            let e = new Map;

            function r(f) {
                let s = [];
                for (let [a, g] of e.entries()) {
                    if (n.getEntityState(a) == ne.Removed || !lt.has(a)) {
                        e.delete(a);
                        continue
                    }
                    let b = lt.get(a);
                    g.normalizedTime += f, g.normalizedTime >= b.duration && s.push(a)
                }
                for (let a of s) {
                    let g = e.get(a)?.callback;
                    lt.deleteFrom(a), e.delete(a), g && g()
                }
            }

            function l(f) {
                lt.deleteFrom(f), e.delete(f)
            }

            function i(f) {
                return function (s, a, g, b, B = fe.LINEAR, w) {
                    let P = b === 0 ? 1 : 0;
                    e.set(s, {normalizedTime: P, callback: w}), lt.createOrReplace(s, {
                        duration: b * 1e3,
                        easingFunction: ba(B),
                        currentTime: P,
                        mode: lt.Mode[f]({start: a, end: g})
                    })
                }
            }

            function o(f) {
                if (!e.has(f)) throw new Error(`Entity ${f} is not registered with tweens system`);
                return e.get(f)
            }

            return n.addSystem(r, bl.TweenSystemPriority), {
                startTranslation: i("Move"),
                stopTranslation: l,
                startRotation: i("Rotate"),
                stopRotation: l,
                startScaling: i("Scale"),
                stopScaling: l,
                getTranslationOnFinishCallback: o,
                getRotationOnFinishCallback: o,
                getScalingOnFinishCallback: o
            }
        }

        var bS = xS(A2);
        var b8;
        (function (n) {
            n.X = "x", n.Y = "y", n.Z = "z"
        })(b8 || (b8 = {}));

        function ES(n) {
            let e = n.defineComponent("dcl.utils.PerpetualRotation", {velocity: b3.Quaternion});

            function r(l) {
                for (let [i, o] of n.getEntitiesWith(e, Y2)) {
                    let f = X2.slerp(X2.Identity(), o.velocity, l), s = Y2.getMutable(i);
                    s.rotation = X2.normalize(X2.multiply(s.rotation, f))
                }
            }

            return n.addSystem(r, bl.PerpetualMotionSystemPriority), {
                startRotation(l, i) {
                    e.createOrReplace(l, {velocity: i})
                }, stopRotation(l) {
                    lt.has(l) && lt.deleteFrom(l), J7.has(l) && J7.deleteFrom(l), e.has(l) && e.deleteFrom(l)
                }, smoothRotation(l, i, o) {
                    let f = X2.fromEulerDegrees(0, 180, 0), s = X2.fromEulerDegrees(0, 360, 0);
                    switch (o) {
                        case b8.X:
                            f = X2.fromEulerDegrees(180, 0, 0), s = X2.fromEulerDegrees(360, 0, 0);
                            break;
                        case b8.Y:
                            f = X2.fromEulerDegrees(0, 180, 0), s = X2.fromEulerDegrees(0, 360, 0);
                            break;
                        case b8.Z:
                            f = X2.fromEulerDegrees(0, 0, 180), s = X2.fromEulerDegrees(0, 0, 360);
                            break
                    }
                    lt.createOrReplace(l, {
                        mode: lt.Mode.Rotate({start: X2.fromEulerDegrees(0, 0, 0), end: f}),
                        duration: i / 2,
                        easingFunction: 0
                    }), J7.create(l, {
                        loop: 0,
                        sequence: [{mode: lt.Mode.Rotate({start: f, end: s}), duration: i / 2, easingFunction: 0}]
                    })
                }
            }
        }

        var TS = ES(A2);

        function SS(n) {
            let e = n.defineComponent("dcl.utils.FollowPath", {
                points: b3.Array(b3.Vector3),
                faceDirection: b3.Boolean,
                speed: b3.Number,
                normalizedTime: b3.Number,
                currentIndex: b3.Number,
                segmentTimes: b3.Array(b3.Number),
                curveSegmentCount: b3.Number
            }), r = new Map, l = new Map;

            function i(s) {
                r.delete(s), l.delete(s), e.deleteFrom(s)
            }

            function o(s) {
                let a = [], g = [];
                for (let b of r.keys()) {
                    if (n.getEntityState(b) == ne.Removed || !e.has(b)) {
                        i(b);
                        continue
                    }
                    let B = Y2.getMutable(b), w = e.getMutable(b);
                    for (w.normalizedTime = On.clamp(w.normalizedTime + s * w.speed, 0, 1), w.normalizedTime >= 1 && a.push(b); w.normalizedTime >= w.segmentTimes[w.currentIndex] && w.currentIndex < w.points.length - 1;) {
                        if (w.faceDirection) {
                            let T = C2.subtract(w.points[w.currentIndex + 1], w.points[w.currentIndex]);
                            B.rotation = X2.lookRotation(T)
                        }
                        if (w.currentIndex > 0 && w.currentIndex % w.curveSegmentCount == 0) {
                            let T = w.currentIndex / w.curveSegmentCount, k = w.points[w.currentIndex],
                                R = w.points[w.currentIndex + w.curveSegmentCount];
                            g.push({entity: b, index: T, coords: k, nextCoords: R})
                        }
                        w.currentIndex += 1
                    }
                    let P = w.segmentTimes[w.currentIndex] - w.segmentTimes[w.currentIndex - 1],
                        D = (w.segmentTimes[w.currentIndex] - w.normalizedTime) / P;
                    B.position = C2.lerp(w.points[w.currentIndex], w.points[w.currentIndex - 1], D)
                }
                for (let b of g) {
                    let B = l.get(b.entity);
                    B && B(b.index, b.coords, b.nextCoords)
                }
                for (let b of a) {
                    let B = r.get(b);
                    i(b), B && B()
                }
            }

            n.addSystem(o, bl.PathSystemPriority);

            function f(s, a, g, b, B, w, P) {
                if (a.length < 2) throw new Error("At least 2 points are required to form a path.");
                if (g == 0) throw new Error("Path duration must not be zero");
                if (B) {
                    let R = C2.equals(a[0], a[a.length - 1]);
                    R && (a.pop(), a.unshift(a.pop())), a = ky(a, B, R)
                } else B = 1;
                r.set(s, w), l.set(s, P);
                let D = 0, T = [];
                for (let R = 0; R < a.length - 1; R++) {
                    let G = C2.distance(a[R], a[R + 1]);
                    D += G, T.push(G)
                }
                let k = [0];
                for (let R = 0; R < T.length; R++) k.push(T[R] / D + k[R]);
                e.createOrReplace(s, {
                    points: a,
                    segmentTimes: k,
                    curveSegmentCount: B,
                    speed: 1 / g,
                    normalizedTime: 0,
                    currentIndex: 0,
                    faceDirection: b
                })
            }

            return {
                startStraightPath(s, a, g, b, B, w) {
                    return f(s, a, g, b, 0, B, w)
                }, startSmoothPath(s, a, g, b, B, w, P) {
                    if (b < 2 || !Number.isInteger(b)) throw new Error(`segmentCount must be an integer that is greater than 2, got: ${b}`);
                    return f(s, a, g, B, b, w, P)
                }, stopPath(s) {
                    i(s)
                }, getOnFinishCallback(s) {
                    if (!r.has(s)) throw new Error(`Entity ${s} is not registered in triggers system`);
                    return r.get(s)
                }
            }
        }

        var wS = SS(A2);
        var Ry = 1;
        var J4 = 255, u6 = 0, Ea = Ry;

        function vS(n) {
            let e = A2.defineComponent("dcl.utils.Trigger", {
                active: b3.Boolean,
                layerMask: b3.Int,
                triggeredByMask: b3.Int,
                areas: b3.Array(b3.OneOf({
                    box: b3.Map({position: b3.Vector3, scale: b3.Vector3}),
                    sphere: b3.Map({position: b3.Vector3, radius: b3.Number})
                })),
                debugColor: b3.Color3
            }), r = new Map, l = new Map, i = !1, o = new Map, f = new Map;

            function s(D) {
                if (D) for (let [T, k] of n.getEntitiesWith(e, Y2)) {
                    let R = f.get(T), G = k.areas.length;
                    for (; R.length > G;) n.removeEntity(R.pop());
                    for (; R.length < G;) R.push(n.addEntity());
                    let Z = g8(T), S2 = t6(T);
                    for (let D2 = 0; D2 < G; ++D2) {
                        let T2 = k.areas[D2], l2 = R[D2], b2;
                        if (T2.$case == "box") b2 = T2.value.scale, ve.setBox(l2); else {
                            let p2 = T2.value.radius;
                            b2 = {x: p2, y: p2, z: p2}, ve.setSphere(l2)
                        }
                        Y2.createOrReplace(l2, {position: C2.add(Z, C2.rotate(T2.value.position, S2)), scale: b2});
                        let g2 = k.active ? k.debugColor : x4.Black();
                        O3.setPbrMaterial(l2, {albedoColor: q.fromInts(255 * g2.r, 255 * g2.g, 255 * g2.b, 75)})
                    }
                }
            }

            function a(D, T, k, R) {
                for (let G = 0; G < T.areas.length; ++G) {
                    let Z = D[G], S2 = T.areas[G];
                    if (S2.$case == "box") {
                        let D2 = S2.value, T2 = C2.subtract(Z, C2.scale(D2.scale, .5)), l2 = C2.add(T2, D2.scale);
                        for (let b2 = 0; b2 < R.areas.length; ++b2) {
                            let g2 = k[b2], p2 = R.areas[b2];
                            if (p2.$case == "box") {
                                let O = p2.value, J = C2.subtract(g2, C2.scale(O.scale, .5)), h2 = C2.add(J, O.scale);
                                if (Iy(T2, l2, J, h2)) return !0
                            } else if (xa(T2, l2, g2, p2.value.radius)) return !0
                        }
                    } else {
                        let D2 = S2.value.radius;
                        for (let T2 = 0; T2 < R.areas.length; ++T2) {
                            let l2 = k[T2], b2 = R.areas[T2];
                            if (b2.$case == "box") {
                                let g2 = b2.value, p2 = C2.subtract(l2, C2.scale(g2.scale, .5)),
                                    O = C2.add(p2, g2.scale);
                                if (xa(p2, O, Z, D2)) return !0
                            } else if (Ny(Z, D2, l2, b2.value.radius)) return !0
                        }
                    }
                }
                return !1
            }

            function g(D, T) {
                let k = o6, R = e.get(D);
                if (!R.active) return k;
                if (R.triggeredByMask == Ea) {
                    let G = n.PlayerEntity, Z = e.get(n.PlayerEntity);
                    if (G == D || !Z.active || !(R.triggeredByMask & Z.layerMask)) return k;
                    a(T.get(D), R, T.get(G), Z) && (k === o6 && (k = new Set), k.add(G))
                } else for (let [G, Z] of n.getEntitiesWith(e, Y2)) {
                    if (G == D || !Z.active || !(R.triggeredByMask & Z.layerMask)) continue;
                    a(T.get(D), R, T.get(G), Z) && (k === o6 && (k = new Set), k.add(G))
                }
                return k
            }

            function b() {
                let D = [], T = [], k = new Map;
                for (let R of o.keys()) {
                    if (n.getEntityState(R) == ne.Removed || !e.has(R)) {
                        for (let T2 of f.get(R)) n.removeEntity(T2);
                        for (let T2 of o.values()) T2.has(R) && T2.delete(R);
                        f.delete(R), o.delete(R), r.delete(R), l.delete(R);
                        continue
                    }
                    let G = [], Z = g8(R), S2 = t6(R), D2 = e.get(R);
                    for (let T2 of D2.areas) G.push(C2.add(Z, C2.rotate(T2.value.position, S2)));
                    k.set(R, G)
                }
                for (let R of o.keys()) {
                    let G = g(R, k), Z = o.get(R);
                    for (let S2 of Z) G.has(S2) || T.push([R, S2]);
                    for (let S2 of G) Z.has(S2) || D.push([R, S2]);
                    o.set(R, G)
                }
                for (let [R, G] of D) {
                    let Z = r.get(R);
                    Z && Z(G)
                }
                for (let [R, G] of T) {
                    let Z = l.get(R);
                    Z && Z(G)
                }
            }

            function B(D) {
                b(), s(i)
            }

            n.addSystem(B, bl.TriggerSystemPriority);

            function w(D) {
                D || (D = [{type: "box"}]);
                let T = [];
                for (let k of D) k.type == "box" ? T.push({
                    $case: "box",
                    value: {position: k.position ? k.position : C2.Zero(), scale: k.scale ? k.scale : C2.One()}
                }) : T.push({
                    $case: "sphere",
                    value: {position: k.position ? k.position : C2.Zero(), radius: k.radius ? k.radius : 1}
                });
                return T
            }

            let P = {
                addTrigger(D, T = u6, k = u6, R, G, Z, S2) {
                    if (T < 0 || T > J4 || !Number.isInteger(T)) throw new Error(`Bad layerMask: ${T}. Expected a non-negative integer no greater than ${J4}`);
                    if (k < 0 || k > J4 || !Number.isInteger(k)) throw new Error(`Bad triggeredByMask: ${k}. Expected a non-negative integer no greater than ${J4}`);
                    f.set(D, []), o.set(D, new Set), r.set(D, G), l.set(D, Z), e.createOrReplace(D, {
                        active: !0,
                        layerMask: T,
                        triggeredByMask: k,
                        areas: w(R),
                        debugColor: S2 || x4.Red()
                    })
                }, removeTrigger(D) {
                    let T = o.get(D), k = l.get(D);
                    for (let G of f.get(D)) n.removeEntity(G);
                    f.delete(D), o.delete(D), r.delete(D), l.delete(D), e.deleteFrom(D);
                    let R = [];
                    for (let [G, Z] of o) Z.has(D) && (Z.delete(D), R.push(G));
                    if (k) for (let G of T) k(G);
                    for (let G of R) {
                        let Z = l.get(G);
                        Z && Z(D)
                    }
                }, oneTimeTrigger(D, T = u6, k = u6, R, G, Z) {
                    this.addTrigger(D, T, k, R, function (S2) {
                        My.removeTrigger(D), G && G(S2)
                    }, void 0, Z)
                }, enableTrigger(D, T) {
                    e.getMutable(D).active = T
                }, isTriggerEnabled(D) {
                    return e.get(D).active
                }, getLayerMask(D) {
                    return e.get(D).layerMask
                }, setLayerMask(D, T) {
                    if (T < 0 || T > J4 || !Number.isInteger(T)) throw new Error(`Bad layerMask: ${T}. Expected a non-negative integer no greater than ${J4}`);
                    e.getMutable(D).layerMask = T
                }, getTriggeredByMask(D) {
                    return e.get(D).triggeredByMask
                }, setTriggeredByMask(D, T) {
                    if (T < 0 || T > J4 || !Number.isInteger(T)) throw new Error(`Bad layerMask: ${T}. Expected a non-negative integer no greater than ${J4}`);
                    e.getMutable(D).triggeredByMask = T
                }, getAreas(D) {
                    return e.get(D).areas
                }, setAreas(D, T) {
                    e.getMutable(D).areas = w(T)
                }, setOnEnterCallback(D, T) {
                    r.set(D, T)
                }, setOnExitCallback(D, T) {
                    l.set(D, T)
                }, enableDebugDraw(D) {
                    if (i = D, !D) for (let T of f.values()) {
                        for (let k of T) n.removeEntity(k);
                        T.length = 0
                    }
                }, isDebugDrawEnabled() {
                    return i
                }
            };
            return P.addTrigger(n.PlayerEntity, Ea, u6, [{
                type: "box",
                scale: {x: .65, y: 1.92, z: .65},
                position: {x: 0, y: .15, z: 0}
            }], void 0, void 0, x4.Green()), P
        }

        var My = vS(A2), o6 = new Set;
        o6.add = n => {
            debugger;
            throw new Error("EMPTY_SET is read only")
        };
        o6.delete = n => {
            throw new Error("EMPTY_SET is read only")
        };
        o6.has = n => !1;
        var Ta;
        (function (n) {
            class e {
                constructor(b, B, w) {
                    this.beginSequenceNode = null, this.currentSequenceNode = null, this.running = !1, this.started = !1, this.engine = b, this.systemFn = P => {
                        this.update(P)
                    }, this.engine.addSystem(this.systemFn, bl.ActionSystemPriority), B && this.startSequence(B), w && this.setOnFinishCallback(w)
                }

                startSequence(b) {
                    this.beginSequenceNode = b.beginSequenceNode, this.currentSequenceNode = this.beginSequenceNode, this.running = !0, this.started = !1
                }

                destroy() {
                    this.engine.removeSystem(this.systemFn)
                }

                setOnFinishCallback(b) {
                    this.onFinishCallback = b
                }

                isRunning() {
                    return this.running
                }

                stop() {
                    this.running = !1
                }

                resume() {
                    this.beginSequenceNode != null && (this.running = !0)
                }

                reset() {
                    this.currentSequenceNode = this.beginSequenceNode, this.running = !0, this.started = !1
                }

                getRunningAction() {
                    let b = this.currentSequenceNode;
                    if (this.currentSequenceNode instanceof i) do b = b.currentInnerSequence; while (b instanceof i);
                    return b.action
                }

                update(b) {
                    if (this.running) {
                        if (!this.started) {
                            this.currentSequenceNode.onStart(), this.started = !0;
                            return
                        }
                        if (!this.currentSequenceNode.hasFinish()) {
                            this.currentSequenceNode.update(b);
                            return
                        }
                        this.currentSequenceNode.onFinish(), this.currentSequenceNode = this.currentSequenceNode.next, this.currentSequenceNode ? this.currentSequenceNode.onStart() : (this.running = !1, this.onFinishCallback && this.onFinishCallback())
                    }
                }
            }

            n.SequenceRunner = e;

            class r {
                constructor() {
                    this.currentSequenceNode = null, this.beginSequenceNode = null, this.whileNodeStack = []
                }

                then(b) {
                    if (this.currentSequenceNode == null) this.currentSequenceNode = new l, this.currentSequenceNode.action = b, this.beginSequenceNode = this.currentSequenceNode; else {
                        let B = new l;
                        B.action = b, this.currentSequenceNode = this.currentSequenceNode.then(B)
                    }
                    return this
                }

                if(b) {
                    let B = new o(b);
                    return this.currentSequenceNode == null ? (this.currentSequenceNode = B, this.beginSequenceNode = B) : this.currentSequenceNode = this.currentSequenceNode.then(B), this
                }

                else() {
                    let b = this.currentSequenceNode.getSequence();
                    if (b instanceof o) {
                        b.closed = !0;
                        let B = new f(b);
                        this.currentSequenceNode = this.currentSequenceNode.then(B)
                    } else throw new Error("IF statement is needed to be called before ELSE statement.");
                    return this
                }

                endIf() {
                    let b = this.currentSequenceNode.getSequence();
                    if (b instanceof o || b instanceof f) b.closed = !0; else throw new Error("IF statement is needed to be called before ENDIF statement.");
                    return this
                }

                while(b) {
                    let B = new s(b);
                    return this.currentSequenceNode == null ? (this.currentSequenceNode = B, this.beginSequenceNode = B) : this.currentSequenceNode = this.currentSequenceNode.then(B), this.whileNodeStack.push(B), this
                }

                endWhile() {
                    let b = this.currentSequenceNode.getSequence();
                    if (b instanceof s) b.closed = !0, this.whileNodeStack.length > 0 && this.whileNodeStack.splice(this.whileNodeStack.length - 1, 1); else throw new Error("WHILE statement is needed to be called before ENDWHILE statement.");
                    return this
                }

                breakWhile() {
                    if (this.whileNodeStack.length > 0) this.currentSequenceNode = this.currentSequenceNode.then(new a(this.whileNodeStack[this.whileNodeStack.length - 1])); else throw new Error("WHILE statement is needed to be called before BREAKWHILE statement.");
                    return this
                }
            }

            n.SequenceBuilder = r;

            class l {
                constructor() {
                    this.action = null, this.next = null
                }

                then(b) {
                    return this.next = b, b
                }

                onStart() {
                    this.action && this.action.onStart()
                }

                update(b) {
                    this.action && this.action.update(b)
                }

                onFinish() {
                    this.action && this.action.onFinish()
                }

                hasFinish() {
                    return this.action ? this.action.hasFinished : !0
                }

                getSequence() {
                    return this
                }
            }

            n.SequenceNode = l;

            class i extends l {
                constructor() {
                    super(...arguments), this.currentInnerSequence = null, this.startingInnerSequence = null, this.closed = !1
                }

                then(b) {
                    if (this.currentInnerSequence == null) this.currentInnerSequence = b, this.startingInnerSequence = b; else {
                        if (this.closed) return this.next = b, b;
                        this.currentInnerSequence = this.currentInnerSequence.then(b)
                    }
                    return this
                }

                onStart() {
                    this.currentInnerSequence = this.startingInnerSequence, this.currentInnerSequence && this.currentInnerSequence.onStart()
                }

                update(b) {
                    this.currentInnerSequence && (this.currentInnerSequence.hasFinish() ? (this.currentInnerSequence.onFinish(), this.currentInnerSequence = this.currentInnerSequence.next, this.currentInnerSequence && this.currentInnerSequence.onStart()) : this.currentInnerSequence.update(b))
                }

                onFinish() {
                    this.currentInnerSequence && this.currentInnerSequence.onFinish()
                }

                hasFinish() {
                    return this.currentInnerSequence == null
                }

                getSequence() {
                    if (this.currentInnerSequence) {
                        let b = this.currentInnerSequence.getSequence();
                        if (b instanceof i && !b.closed) return b
                    }
                    return this
                }
            }

            class o extends i {
                constructor(b) {
                    super(), this.result = !1, this.condition = b
                }

                onStart() {
                    this.result = this.condition(), this.result ? super.onStart() : this.currentInnerSequence = null
                }
            }

            class f extends i {
                constructor(b) {
                    super(), this.ifSequence = null, this.ifSequence = b
                }

                onStart() {
                    this.ifSequence && !this.ifSequence.result ? super.onStart() : this.currentInnerSequence = null
                }
            }

            class s extends i {
                constructor(b) {
                    super(), this.breakWhile = !1, this.condition = b
                }

                onStart() {
                    this.breakWhile = !1, this.condition() ? super.onStart() : this.currentInnerSequence = null
                }

                update(b) {
                    this.currentInnerSequence && (this.currentInnerSequence.hasFinish() ? (this.currentInnerSequence.onFinish(), this.currentInnerSequence = this.currentInnerSequence.next, this.currentInnerSequence == null && (this.currentInnerSequence = this.startingInnerSequence), this.currentInnerSequence && this.currentInnerSequence.onStart()) : this.currentInnerSequence.update(b))
                }

                hasFinish() {
                    return this.breakWhile || !this.condition()
                }
            }

            class a extends l {
                constructor(b) {
                    super(), this.whileNode = b
                }

                onStart() {
                    this.whileNode.breakWhile = !0
                }
            }
        })(Ta || (Ta = {}));
        var By = 1;

        function _S(...n) {
            By >= 1 && console.log(...n)
        }

        function rt(...n) {
            By >= 2 && console.log(...n)
        }

        var Oy = 10, I3 = [], gr = 0, Dy = !1, Ot = 0, Mt = !0, tt = "loop", PS = () => {
            let n = null, e = w5.get(A2.RootEntity);
            if (tt == "loop") {
                n = [];
                for (let l of I3) Mt && rt(`
*** loop-compositing managedUi: 
 id:` + l.id + `
 visible:` + l.visible + `
 func:` + l.func), l.visible && n.push(l.func());
                n.length == 0 && (n = null), Mt && rt(`
*** dump uis =
` + JSON.stringify(n)), Mt = !1;
                let r = L2.createElement(H3, {
                    uiTransform: {
                        positionType: "absolute",
                        width: Ot > 0 ? e.width : 0,
                        height: Ot > 0 ? e.height : 0,
                        position: {right: 0, bottom: 0}
                    }
                }, tt == "loop" ? n : null);
                return Mt && rt(`
*** dump ui =
` + JSON.stringify(r)), Mt = !1, r
            } else {
                if (Mt) {
                    rt(`
*** loop-compositing managedUi:`);
                    for (let l of I3) rt(`
 id:` + l.id + `
 visible:` + l.visible + `
 func:` + l.func + `
`)
                }
                let r = L2.createElement(H3, {
                    uiTransform: {
                        positionType: "absolute",
                        width: Ot > 0 ? e.width : 0,
                        height: Ot > 0 ? e.height : 0,
                        position: {right: 0, bottom: 0}
                    }
                }, tt == "list" && I3.length > 0 && I3[0].visible ? I3[0].func() : null, tt == "list" && I3.length > 1 && I3[1].visible ? I3[1].func() : null, tt == "list" && I3.length > 2 && I3[2].visible ? I3[2].func() : null, tt == "list" && I3.length > 3 && I3[3].visible ? I3[3].func() : null, tt == "list" && I3.length > 4 && I3[4].visible ? I3[4].func() : null, tt == "list" && I3.length > 5 && I3[5].visible ? I3[5].func() : null, tt == "list" && I3.length > 6 && I3[6].visible ? I3[6].func() : null, tt == "list" && I3.length > 7 && I3[7].visible ? I3[7].func() : null, tt == "list" && I3.length > 8 && I3[8].visible ? I3[8].func() : null, tt == "list" && I3.length > 9 && I3[9].visible ? I3[9].func() : null);
                return Mt && rt(`
*** dump ui =
` + JSON.stringify(r)), Mt = !1, r
            }
        };

        function Dt(n, e = !1) {
            return tt == "list" && I3.length >= Oy ? (_S(`
*** UiMgr.addUiComponent: too many UIs, max is ` + Oy), 0) : (gr += 1, rt("addUiComponent: latestUiComponentId=" + gr), I3.push({
                id: gr,
                func: n,
                visible: !0,
                blocker: e
            }), e && Ot++, Dy || (Py.setUiRenderer(PS), Dy = !0), rt(`
*** UiMgr.addUiComponent: # uis: ` + I3.length + " #blockers: ", Ot), Mt = !0, gr)
        }

        function Fy(n) {
            for (let e in I3) I3[e].id == n && (I3[e].blocker && Ot++, I3[e].visible = !0);
            rt(`
*** UiMgr.showUiComponent: # uis: ` + I3.length + " #blockers: ", Ot), Mt = !0
        }

        function Uy(n) {
            for (let e in I3) I3[e].id == n && (I3[e].blocker && Ot--, I3[e].visible = !1);
            rt(`
*** UiMgr.hideUiComponent: # uis: ` + I3.length + " #blockers: ", Ot), Mt = !0
        }

        function xr(n) {
            let e = [];
            for (let r in I3) I3[r].id == n ? (rt(`
*** removeUiComponent found UI ` + n + ", removing it"), I3[r].blocker && Ot--) : e.push(I3[r]);
            I3 = e, rt(`
*** UiMgr.removeUiComponent: # uis: ` + I3.length + " #blockers: ", Ot), Mt = !0
        }

        var Sa = class {
            constructor(e, r, l, i, o) {
                this.text = e;
                this.duration = r;
                this.color = l;
                this.size = i;
                this.blocker = o
            }
        }, i6, E8 = 0, Ly = `123456789012345678901234567890123456789012345678
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWCYZ
Provide at least a text param to displayAnnouncement`;

        function AS() {
            i6 == null && (i6 = {text: Ly, duration: 10, color: q.Yellow(), size: 20, blocker: !0});
            let n = w5.get(A2.RootEntity), e = n.width * .75, r = n.height * .333, l = n.width * .16667,
                i = n.height * .333;
            return L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: e,
                    height: r,
                    position: {left: l, top: i}
                }, uiBackground: {color: {r: 0, g: 0, b: 0, a: .5}}
            }, L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: 0,
                    height: 0,
                    position: {left: e / 2, top: r / 2}
                }
            }, L2.createElement(ue, {
                value: i6.text,
                color: i6.color,
                fontSize: i6.size,
                font: "sans-serif",
                textAlign: "middle-center"
            })))
        }

        function kS() {
            rt("removeAnnouncment announcmentUiId = " + E8), xr(E8), E8 = 0
        }

        function zy(n = Ly, e = 3, r = q.Yellow(), l = 32, i = !0) {
            if (E8 == 0) {
                i6 = new Sa(n, e, r, l, i);
                E8 = Dt(AS, i), x8.setTimeout(kS, 3e3)
            }
        }

        var Ma = 1;

        function wr(...n) {
            Ma >= 1 && console.log(...n)
        }

        function e4(...n) {
            Ma >= 2 && console.log(...n)
        }

        var IS = 137, NS = 225, RS = 0, MS = 120, OS = 64, DS = 72, BS = 0, FS = 120, ut = 33, ot = 33, br = 95,
            Er = 54, T8 = 13, wa = 182, va = 141, Wy = 109, Ca = 68, Sr = 27, Jy = 4, US = 69, LS = 60, zS = 48,
            WS = 13, Hy = 24, HS = 10, VS = 60, GS = 20, jS = 0, qS = 33, YS = 15, Vy = 12;
        var K4 = 0, s6 = 0, cl = 1, w4 = 90, S8 = "Position", S4 = "1";
        Ia();
        Na();
        var f6 = "hidden";

        function JS() {
            return L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: IS,
                    height: NS,
                    position: {right: RS, bottom: MS},
                    pointerFilter: "block"
                }, uiBackground: {color: q.Black()}
            }, L2.createElement(sn, {
                value: "Q - Decr",
                onMouseDown: () => {
                    a6("q")
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: ut,
                    height: ot,
                    position: {right: br, bottom: wa},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/left.png"}, textureMode: "stretch"}
            }), L2.createElement(sn, {
                value: "W - Incr up",
                onMouseDown: () => {
                    a6("w")
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: ut,
                    height: ot,
                    position: {right: Er, bottom: wa},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/up.png"}, textureMode: "stretch"}
            }), L2.createElement(sn, {
                value: "E - Incr",
                onMouseDown: () => {
                    a6("e")
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: ut,
                    height: ot,
                    position: {right: T8, bottom: wa},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/right.png"}, textureMode: "stretch"}
            }), L2.createElement(sn, {
                value: "A - Decr",
                onMouseDown: () => {
                    a6("a")
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: ut,
                    height: ot,
                    position: {right: br, bottom: va},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/left.png"}, textureMode: "stretch"}
            }), L2.createElement(sn, {
                value: "S - Decr down",
                onMouseDown: () => {
                    a6("s")
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: ut,
                    height: ot,
                    position: {right: Er, bottom: va},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/down.png"}, textureMode: "stretch"}
            }), L2.createElement(sn, {
                value: "D - Incr",
                onMouseDown: () => {
                    a6("d")
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: ut,
                    height: ot,
                    position: {right: T8, bottom: va},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/right.png"}, textureMode: "stretch"}
            }), L2.createElement(sn, {
                value: S8,
                onMouseDown: () => {
                    K4 += 1, K4 > 2 && (K4 = 0), s6 = 0, Ia(), Na()
                },
                color: q.fromHexString("#FFFFFFFF"),
                fontSize: Vy,
                uiTransform: {
                    positionType: "absolute",
                    width: LS,
                    height: Hy,
                    position: {right: US, bottom: Wy},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/blank.png"}, textureMode: "stretch"}
            }), L2.createElement(sn, {
                value: S4,
                onMouseDown: () => {
                    s6 += 1, s6 > 3 && (s6 = 0), Ia(), Na()
                },
                color: q.fromHexString("#FFFFFFFF"),
                fontSize: Vy,
                uiTransform: {
                    positionType: "absolute",
                    width: zS,
                    height: Hy,
                    position: {right: WS, bottom: Wy},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/blank.png"}, textureMode: "stretch"}
            }), L2.createElement(sn, {
                value: "Previous",
                onMouseDown: () => {
                    ZS()
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: ut,
                    height: ot,
                    position: {right: br, bottom: Ca},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/left.png"}, textureMode: "stretch"}
            }), L2.createElement(sn, {
                value: "Next",
                onMouseDown: () => {
                    QS()
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: ut,
                    height: ot,
                    position: {right: Er, bottom: Ca},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/right.png"}, textureMode: "stretch"}
            }), L2.createElement(sn, {
                value: "Discard",
                onMouseDown: () => {
                    ew()
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: ut,
                    height: ot,
                    position: {right: T8, bottom: Ca},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/trash.png"}, textureMode: "stretch"}
            }), L2.createElement(sn, {
                value: "New",
                onMouseDown: () => {
                    nw()
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: ut,
                    height: ot,
                    position: {right: br, bottom: Sr},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/star.png"}, textureMode: "stretch"}
            }), L2.createElement(sn, {
                value: "Save",
                onMouseDown: () => {
                    Xy()
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: ut,
                    height: ot,
                    position: {right: Er, bottom: Sr},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/save.png"}, textureMode: "stretch"}
            }), L2.createElement(sn, {
                value: "ToggleMode",
                onMouseDown: () => {
                    f6 = "icon", N5 && xr(N5), N5 = Dt(Oa), c6()
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: ut,
                    height: ot,
                    position: {right: T8, bottom: Sr},
                    pointerFilter: "block"
                },
                uiBackground: {
                    color: q.White(),
                    texture: {src: "materials/stock-ui/expand.png"},
                    textureMode: "stretch"
                }
            }), L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: VS,
                    height: GS,
                    position: {right: HS, bottom: Jy},
                    pointerFilter: "block"
                }
            }, L2.createElement(ue, {
                value: "Builder HUD",
                color: q.White(),
                fontSize: 14,
                font: "sans-serif",
                textAlign: "middle-center"
            })))
        }

        function XS() {
            return L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: OS,
                    height: DS,
                    position: {right: BS, bottom: FS},
                    pointerFilter: "block"
                }, uiBackground: {color: q.Black()}
            }, L2.createElement(sn, {
                value: "ToggleMode",
                onMouseDown: () => {
                    f6 = "full", N5 && xr(N5), N5 = Dt(Oa), Ba()
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: ut,
                    height: ot,
                    position: {right: T8, bottom: Sr},
                    pointerFilter: "block"
                },
                uiBackground: {
                    color: q.White(),
                    texture: {src: "materials/stock-ui/expand.png"},
                    textureMode: "stretch"
                }
            }), L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: qS,
                    height: YS,
                    position: {right: jS, bottom: Jy},
                    pointerFilter: "block"
                }
            }, L2.createElement(ue, {
                value: "Builder HUD",
                color: q.White(),
                fontSize: 10,
                font: "sans-serif",
                textAlign: "middle-center"
            })))
        }

        function Oa() {
            switch (f6) {
                case"hidden":
                    return L2.createElement(H3, null);
                case"icon":
                    return XS();
                case"full":
                    return JS()
            }
        }

        var Gy = .88, Tr = null, N5, jy = !1;

        function v8(n = 1) {
            Ma = n, jy || (f6 = "icon", N5 = Dt(Oa), jy = !0, dn.length > 0 && Ba())
        }

        var dn = [], In = -1, n4, _a = .5, KS = 1, Pa = 1;

        function c6() {
            n4 && (rw(n4, 1), A2.removeEntityWithChildren(n4)), n4 = void 0
        }

        var Aa = !1;

        function Da() {
            if (Aa || dn.length == 0) return 0;
            Aa = !0;
            let n = 0, e = dn, r = 0;
            for (; r < e.length;) A2.getEntityState(e[r].entity) == ne.UsedEntity && Y2.getOrNull(e[r].entity) != null ? r++ : (e.splice(r, 1), n++, In >= r && In--);
            return dn = e, In < 0 && dn.length > 0 ? (wr(`
*** BuilderHUD removeInactiveEntites removed ` + n + " entities, leaving " + dn.length + " entities. selectionIndex is now incorrectly " + In + ". Will fix that to 0"), In = 0, c6(), ka()) : dn.length == 0 || In < 0 ? (e4(`
*** BuilderHUD removeInactiveEntites found all ` + n + " entities to be inactive and removed them all"), c6()) : n > 0 && (dn.length > 0 && In < 0 && (In = 0), e4(`
*** BuilderHUD removeInactiveEntites removed ` + n + " entities, leaving " + dn.length + " entities. selectionIndex is now " + In), c6(), ka()), Aa = !1, n
        }

        function ka() {
            if (In < 0 || dn.length == 0 || f6 != "full") {
                c6();
                return
            }
            e4(`
*** renderSelectionPointer  selectionIndex = ` + In + " target Entity = " + dn[In].entity);
            let n = dn[In].entity;
            if (Y2.getOrNull(n) == null) {
                wr(`
*** BuilderHUD renderSelectionPointer: found unexpected null Transform for selected entity`);
                return
            }
            n4 ? e4(`
*** renderSelectionPointer didn't think it needed to get a new pointer entity, keeping ` + n4) : (n4 = A2.addEntity(), e4(`
*** renderSelectionPointer instantiated a new pointer entity ` + n4), t8.create(n4, {src: "models/pointer/pointer.glb"}), tw(n4, 5, 1));
            let r = dn[In].elevation, l = Y2.get(dn[In].entity);
            Y2.createOrReplace(n4, {parent: dn[In].entity, position: {x: 0, y: r, z: 0}, scale: C2.create(_a, _a, _a)})
        }

        function Ba() {
            e4(`
*** setupSelectionPointer 1 selectionIndex = ` + In), Da(), ka()
        }

        function Ia() {
            switch (s6) {
                case 0:
                    cl = 1, w4 = 90;
                    break;
                case 1:
                    cl = .1, w4 = 15;
                    break;
                case 2:
                    cl = .01, w4 = 5;
                    break;
                case 3:
                    cl = .001, w4 = 1;
                    break
            }
        }

        function Na() {
            switch (K4) {
                case 0:
                    S8 = "Position";
                    break;
                case 1:
                    S8 = "Rotation";
                    break;
                case 2:
                    S8 = "Scale";
                    break;
                default:
                    S8 = "Err"
            }
            switch (s6) {
                case 0:
                    K4 == 1 ? S4 = "90" : S4 = "1";
                    break;
                case 1:
                    K4 == 1 ? S4 = "15" : S4 = "0.1";
                    break;
                case 2:
                    K4 == 1 ? S4 = "5" : S4 = "0.01";
                    break;
                case 3:
                    K4 == 1 ? S4 = "1" : S4 = "0.001";
                    break;
                default:
                    S4 = "ERR"
            }
        }

        function w8(n) {
            if (In = n, Da(), dn.length == 0 || In < 0) {
                c6(), In = -1;
                return
            }
            f6 == "full" && Ba()
        }

        function ZS() {
            In > 0 && w8(In - 1)
        }

        function QS() {
            In < dn.length - 1 && w8(In + 1)
        }

        function a6(n) {
            if (In < 0) {
                e4(`
*** BUilderHUD adjustTransform called when selectionIndex < 0`);
                return
            }
            e4(`
*** adjustTransform for selectionIndex=` + In + " while selectables.length=" + dn.length);
            let e = dn[In].entity;
            if (e != null) {
                let r = Y2.getMutable(e);
                switch (K4) {
                    case 0:
                        let l = r.position;
                        switch (n) {
                            case"a":
                                l.x -= cl;
                                break;
                            case"s":
                                l.y -= cl;
                                break;
                            case"d":
                                l.x += cl;
                                break;
                            case"q":
                                l.z -= cl;
                                break;
                            case"w":
                                l.y += cl;
                                break;
                            case"e":
                                l.z += cl;
                                break;
                            default:
                                break
                        }
                        break;
                    case 1:
                        switch (n) {
                            case"q":
                                k5(e, -w4, 2);
                                break;
                            case"w":
                                k5(e, -w4, 0);
                                break;
                            case"e":
                                k5(e, w4, 2);
                                break;
                            case"a":
                                k5(e, -w4, 1);
                                break;
                            case"s":
                                k5(e, w4, 0);
                                break;
                            case"d":
                                k5(e, w4, 1);
                                break;
                            default:
                                break
                        }
                        break;
                    case 2:
                        let i = r.scale;
                        switch (n) {
                            case"a":
                                i.x -= cl;
                                break;
                            case"s":
                                i.y -= cl;
                                break;
                            case"d":
                                i.x += cl;
                                break;
                            case"q":
                                i.z -= cl;
                                break;
                            case"w":
                                i.y += cl;
                                break;
                            case"e":
                                i.z += cl;
                                break;
                            default:
                                break
                        }
                        break;
                    default:
                        break
                }
            }
        }

        function C8(n, e = KS, r = !0) {
            n == null ? wr(`
*** BuilderHUD attachToEntity called with null entity`) : (dn.push({
                entity: n,
                elevation: e,
                preexisting: r
            }), r ? (In = -1) && w8(0) : w8(dn.length - 1), e4(`
*** BuilderHUD.attachToEntity ` + n + " selectionIndex=" + In))
        }

        var Je, qy;

        function $S() {
            Y2.has(A2.PlayerEntity) && Y2.has(A2.CameraEntity) && (Je = Y2.get(A2.PlayerEntity), qy = Y2.get(A2.CameraEntity), e4("playerTransform: ", Je), e4("cameraTransform: ", qy))
        }

        function nw() {
            $S();
            let n, e = {x: 0, y: 0, z: 0}, r, l, i;
            Tr && (r = A2.addEntity(), n = Y2.get(Tr)), Tr && n && r ? (l = n, Ra(l, -X2.toEulerAngles(n.rotation).y, 1), Y2.create(r, l), i = {
                position: {
                    x: (Je.position.x - n.position.x) / n.scale.x,
                    y: (Je.position.y - n.position.y - Gy) / n.scale.y,
                    z: (Je.position.z - n.position.z) / n.scale.z
                },
                rotation: {x: Je.rotation.x, y: Je.rotation.y, z: Je.rotation.z, w: Je.rotation.w},
                scale: {x: 1 / n.scale.x, y: 1 / n.scale.y, z: 1 / n.scale.z},
                parent: r
            }, i.parent = Tr, i.rotation = Je.rotation, A2.removeEntity(r)) : i = {
                position: {
                    x: Je.position.x,
                    y: Je.position.y - Gy,
                    z: Je.position.z
                },
                rotation: {x: Je.rotation.x, y: Je.rotation.y, z: Je.rotation.z, w: Je.rotation.w},
                scale: {x: 1, y: 1, z: 1}
            }, Ra(i, 180, 1);
            let o = A2.addEntity(), f = Y2.create(o, i);
            t8.create(o, {src: "models/xyz/xyzLeftHand.glb"}), C8(o, 1, !1)
        }

        function X4(n) {
            return Math.floor((n + 49e-5) * 1e3) / 1e3
        }

        function Xy() {
            let n = `
--------------- BuilderHUD entities -------------
`;
            for (let e in dn) {
                let r = dn[e].entity, l = dn[e].preexisting;
                if (r != null && l != null) {
                    let i = l ? "Existing" : "New", o = Y2.get(dn[e].entity), f = o.position,
                        s = X2.toEulerAngles(o.rotation), a = o.scale, g = a.x * (dn[e].preexisting ? 1 : 1 / Pa),
                        b = a.y * (dn[e].preexisting ? 1 : 1 / Pa), B = a.z * (dn[e].preexisting ? 1 : 1 / Pa),
                        w = "" + X4(f.x) + "," + X4(f.y) + "," + X4(f.z) + ",  " + X4(s.x) + "," + X4(s.y) + "," + X4(s.z) + ",  " + X4(g) + "," + X4(b) + "," + X4(B);
                    n = n + i + "(" + w + `)
`
                }
            }
            n += "-------------------------------------------------", console.log(n)
        }

        function ew() {
            Xy();
            let n = [];
            for (let e in dn) dn[e].preexisting ? n.push(dn[e]) : A2.removeEntityWithChildren(dn[e].entity);
            dn = n, w8(0)
        }

        function Ra(n, e, r) {
            let l;
            switch (r) {
                case 0:
                    l = C2.Right();
                    break;
                case 1:
                default:
                    l = C2.Up();
                    break;
                case 2:
                    l = C2.Forward();
                    break
            }
            n.rotation = X2.multiply(n.rotation, X2.fromAngleAxis(e, l))
        }

        function k5(n, e, r) {
            let l = Y2.getMutableOrNull(n);
            l ? Ra(l, e, r) : wr(`
***EntityRotator rotateEntity for an entity with no mutable Transform`)
        }

        var I5 = [], Yy = !1;

        function lw() {
            if (Da(), I5.length > 0) for (let n of I5) k5(n.entity, n.degrees, n.axis)
        }

        function tw(n, e = 1, r = 1) {
            A2.getEntityState(n) == ne.UsedEntity && I5.push({
                entity: n,
                degrees: e,
                axis: r
            }), Yy || (A2.addSystem(lw), Yy = !0)
        }

        function rw(n, e = 1) {
            for (let r in I5) if (I5[r].entity == n && I5[r].axis == e) {
                I5.splice(+r, 1);
                return
            }
        }

        var Zy = !1, Fa = 1;
        var R5 = class {
            constructor() {
            }
        };
        R5 = Ne([Oe()], R5);
        var vr = class {
            constructor(e, r = null, l = void 0, i = void 0, o = 1) {
                this.barriersData = e;
                this.parent = r;
                this.externalUrl = l;
                this.eventListener = i;
                this.debugLevel = o;
                this.state = 0;
                this.barriersAndSigns = [];
                this.eventListeners = [];
                this.rootEntity = yl("sceneBarrier"), Fa = this.debugLevel, this.parent ? Y2.create(this.rootEntity, {
                    parent: this.parent,
                    position: C2.create(0, 0, 0),
                    rotation: X2.fromEulerDegrees(0, 0, 0),
                    scale: C2.create(1, 1, 1)
                }) : Y2.create(this.rootEntity, {
                    position: C2.create(0, 0, 0),
                    rotation: X2.fromEulerDegrees(0, 0, 0),
                    scale: C2.create(1, 1, 1)
                }), i && this.addListener(i), this.createBarriersAndSigns(), this.state = 1
            }

            allow(e) {
                e ? (this.state != 3 && this.removeBarriersAndSigns(), this.state = 3) : (this.state == 3 && this.createBarriersAndSigns(), this.state = 2)
            }

            addListener(e) {
                this.eventListeners.push(e)
            }

            fireEvents() {
                for (let e of this.eventListeners) e.fireEvent(new R5)
            }

            createBarriersAndSigns() {
                this.barrierMaterial = {albedoColor: q.create(.5, .5, .5, .3)};
                for (let e of this.barriersData) {
                    let r = e.transform, l = {
                        rootEntity: ce(r[0], r[1], r[2], r[3], r[4], r[5], 1, 1, 1, e.name, this.rootEntity),
                        signs: []
                    }, i = Ah(0, 0, 0, 0, 0, 0, r[6], r[7], r[8], e.name, l.rootEntity);
                    Zy && (v8(Fa), C8(l.rootEntity), C8(i)), O3.setPbrMaterial(i, this.barrierMaterial), this.barriersAndSigns.push(l);
                    for (let o of e.signs) {
                        let f = yl(o.name), s = o.transform,
                            a = e6(s[0], s[1], s[2], s[3], s[4], s[5], s[6], s[7], s[8], o.text, "nameOfSign", l.rootEntity, o.fontSize, q.fromHexString(o.fontColor), q.fromHexString(o.color), f);
                        l.signs.push(a), Zy && (v8(Fa), C8(a)), (o.externalUrlOverride && o.externalUrlOverride.length > 0 || this.externalUrl && this.externalUrl.length > 0 || this.eventListeners.length > 0) && Hn.onPointerDown({
                            entity: f,
                            opts: {
                                button: jn.IA_POINTER,
                                hoverText: o.hoverText,
                                maxDistance: o.maxDistance,
                                showFeedback: !0
                            }
                        }, () => {
                            o.externalUrlOverride && o.externalUrlOverride.length > 0 ? (0, Ua.openExternalUrl)({url: o.externalUrlOverride}) : this.externalUrl && this.externalUrl.length > 0 && (0, Ua.openExternalUrl)({url: this.externalUrl}), this.eventListeners.length > 0 && this.fireEvents()
                        })
                    }
                }
            }

            removeBarriersAndSigns() {
                for (let e in this.barriersAndSigns) A2.removeEntityWithChildren(this.barriersAndSigns[e].rootEntity)
            }

            updateSignsText(e) {
                for (let r of this.barriersAndSigns) for (let l of r.signs) {
                    let i = n6(l, e)
                }
            }
        };
        var Qy = `This venue is hosting a private event,
or is undergoing maintenance.

You may be able to purchase
a ticket at the booth,
or click here to enter your
ticket number or password
or to retest admission by your wallet.`, $y = "Click to enter your code", ng = 2, eg = "#FFFFFFFF", lg = "#000000FF",
            tg = 9, rg = [{
                name: "barrier-Left",
                active: !0,
                transform: [12.016, 2, -2.73, 0, 270, 0, 4, 4.1, .001],
                signs: [{
                    name: "",
                    active: !0,
                    transform: [0, 0, -.01, 0, 180, 0, 4, 4.1, .001],
                    text: Qy,
                    fontSize: ng,
                    fontColor: eg,
                    color: lg,
                    hoverText: $y,
                    maxDistance: tg,
                    externalUrlOverride: ""
                }]
            }, {
                name: "barrier-Right",
                active: !0,
                transform: [12.016, 2, 2.73, 0, 270, 0, 4, 4.1, .001],
                signs: [{
                    name: "",
                    active: !0,
                    transform: [0, 0, -.01, 0, 180, 0, 4, 4.1, .001],
                    text: Qy,
                    fontSize: ng,
                    fontColor: eg,
                    color: lg,
                    hoverText: $y,
                    maxDistance: tg,
                    externalUrlOverride: ""
                }]
            }];
        var ug = {
            source: "default_cfg",
            debugLevel: 1,
            builderHUD: !1,
            winter: !1,
            useScreen: !0,
            screenAspectRatio: 1.777,
            allowLocalAdmission: !0,
            allowLocalAdminPermission: !0,
            sceneAdmins: [{
                address: "0x63F587Fc66d140368bE6F808785937d63b8E6Fc4",
                annotation: "Carl Fravel"
            }, {
                address: "0x9609d68eAB639349e6E9a2eec76839ec8d109C22",
                annotation: "CC Manager"
            }, {address: "0xaf293617a79cCC47958aB781e62fc8c886C8536c", annotation: "CC Operator"}],
            showTicketBooth: "ANY",
            useTestPurchasables: !1,
            allowedTransactionProcesses: [{
                paymentType: "PAYPAL",
                baseCurrency: "USD",
                active: !0,
                payPalControls: {production: !1, payeeEmail: "cfravel-facilitator@applied-talent.com"}
            }, {
                paymentType: "CRYPTO",
                baseCurrency: "USD",
                active: !0,
                cryptoControls: {
                    chainName: "ethereum",
                    coinId: "decentraland",
                    payeeAddress: "0x9609d68eAB639349e6E9a2eec76839ec8d109C22"
                }
            }, {
                paymentType: "CRYPTO",
                baseCurrency: "USD",
                active: !0,
                cryptoControls: {
                    chainName: "goerli",
                    coinId: "decentraland",
                    payeeAddress: "0x9609d68eAB639349e6E9a2eec76839ec8d109C22"
                }
            }, {
                paymentType: "CRYPTO",
                baseCurrency: "USD",
                active: !0,
                cryptoControls: {
                    chainName: "ethereum",
                    coinId: "usd-coin",
                    payeeAddress: "0x9609d68eAB639349e6E9a2eec76839ec8d109C22"
                }
            }, {
                paymentType: "CRYPTO",
                baseCurrency: "USD",
                active: !0,
                cryptoControls: {
                    chainName: "goerli",
                    coinId: "usd-coin",
                    payeeAddress: "0x9609d68eAB639349e6E9a2eec76839ec8d109C22"
                }
            }, {
                paymentType: "CRYPTO",
                baseCurrency: "USD",
                active: !0,
                cryptoControls: {
                    chainName: "ethereum",
                    coinId: "tether",
                    payeeAddress: "0x9609d68eAB639349e6E9a2eec76839ec8d109C22"
                }
            }, {
                paymentType: "CRYPTO",
                baseCurrency: "USD",
                active: !0,
                cryptoControls: {
                    chainName: "goerli",
                    coinId: "tether",
                    payeeAddress: "0x9609d68eAB639349e6E9a2eec76839ec8d109C22"
                }
            }, {
                paymentType: "CRYPTO",
                baseCurrency: "USD",
                active: !0,
                cryptoControls: {
                    chainName: "sepolia",
                    coinId: "tether",
                    payeeAddress: "0x9609d68eAB639349e6E9a2eec76839ec8d109C22"
                }
            }],
            showEventSign0: !0,
            showEventSign1: !0,
            eventSignText0: "",
            eventSignImage0: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/DCLConf/DCLConf-Logo-512x512.jpg",
            eventSignURL0: "https://dclconf.com/",
            eventSignHoverText0: "Click for more info",
            eventSignText1: `You can
host your festival
or movie event
in this theater.

Click here for
more info.`,
            eventSignImage1: "",
            eventSignURL1: "https://dclconf.com/",
            eventSignHoverText1: "Click for more info",
            welcomeSignText: `Welcome to the Star Cinema theater!

Use the  w a s d  keys to walk about.
Type  v  to show/hide your avatar.
Type  h  to learn more keystrokes.
Right click to activate/deactivate the mouse.
Use the  mouse to move the environment
and center the movie screen.
Go into the lobby to see showtimes.
Go to the inner lobby and
follow the signs to the theater.
 Click on the 'movies' button on the
right side to open movie information
and for access to full-screen playback button.
Type  u  to show/hide the User Interface.`,
            welcomeSignWidth: 5,
            welcomeSignHeight: 4,
            outerLobbySignImage: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/DCLConf/DCLConf-Logo-StarCinema-Info-9x16.jpg",
            outerLobbySignAspect: .5625,
            outerLobbySignURL: "https://dclconf.comc",
            outerLobbySignHoverText: "Click for more info",
            showHallwaySigns: !1,
            hallwaySignImage: "",
            hallwaySignUrl: "",
            hallwaySignHoverText: "",
            exteriorPosterL: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/DefaultCatalog/Amelia_s_Letter_Poster_2.jpg",
            exteriorPosterR: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/DefaultCatalog/DragonsDream.jpg",
            outerPosterFront: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/DefaultCatalog/Warrior-Poster_4.jpg",
            outerPoster1: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/DefaultCatalog/Henry_Test_Poster_2.jpg",
            outerPoster2: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/DefaultCatalog/WhiteLily_1024.jpg",
            outerPoster3: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/DefaultCatalog/Liar.jpg",
            outerPoster4: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/DefaultCatalog/PunchLine.jpg",
            innerPoster0: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/Carrie.jpg",
            innerPoster1: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/Alien.jpg",
            innerPoster2: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/Star_Wars.jpg",
            innerPoster3: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/Requiem_for_a_Dream.jpg",
            innerPoster4: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/the-thirteenth-floor.jpg",
            innerPoster5: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/Tron.jpg",
            innerPoster6: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/V_for_Vendetta.jpg",
            innerPoster7: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/Serenity.jpg",
            innerPoster8: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/Vertigo.jpg",
            innerPoster9: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/ready-player-one.jpg",
            innerPoster10: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/Metropolis.jpg",
            innerPoster11: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/Psycho.jpg",
            innerPoster12: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/Grapes_of_wrath.jpg",
            innerPoster13: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/Dune.jpg",
            innerPoster14: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Legacy/Citizen_Kane_1941.jpg"
        };
        var ig = require("~system/UserIdentity"), ag = require("~system/EnvironmentApi"),
            sg = require("~system/Runtime");
        var El = !1, l4 = class {
            constructor(e) {
                this.dclPlayer = e
            }
        };
        l4 = Ne([Oe()], l4);
        var B3;

        async function uw() {
            let n = (await (0, sg.getRealm)({})).realmInfo;
            typeof n < "u" && n != null && (B3.realmInfo = n, (B3.realmInfo.realmName.substr(0, 4) == "127." || B3.realmInfo.realmName.substr(0, 4) == "http" || B3.realmInfo.realmName.substr(0, 5).toLowerCase() == "local") && (B3.realmInfo.realmName = "LocalPreview"));
            let e = (await (0, ig.getUserData)({})).data;
            if (e != null && (B3.userData = e, B3.userData.publicKey == null && (B3.userData.publicKey = "0x0"), El && console.log(`
*** getPlayerData.userData = ` + JSON.stringify(B3.userData))), B3.bootstrapDataResponse = await (0, ag.getBootstrapData)({}), B3.envString = B3.bootstrapDataResponse.entity?.metadataJson, B3.sceneContent = B3.bootstrapDataResponse.entity?.content, El && console.log(`
*** env = `, B3.envString), El && console.log(`
*** content = `, JSON.stringify(B3.sceneContent)), B3.envString) {
                B3.envObject = JSON.parse(B3.envString), El && console.log(`
*** base = `, JSON.stringify(B3.envObject.scene.base));
                let i = B3.envObject.scene.base;
                El && console.log(`
*** base as string = `, i), B3.baseParcel.x = parseInt(i.substring(0, i.indexOf(",")), 10), B3.baseParcel.y = parseInt(i.substring(i.indexOf(",") + 1), 10), El && console.log(`
*** parsed base.x = `, i.substring(0, i.indexOf(","))), El && console.log(`
*** parsed base.y = `, i.substring(i.indexOf(",") + 1))
            }
            let r = Y2.getOrNull(A2.PlayerEntity);
            r ? B3.playerTransform = r : El && console.log(`
*** no playerTransform data yet`);
            let l = Y2.getOrNull(A2.CameraEntity);
            l ? B3.cameraTransform = l : El && console.log(`
*** no cameraTransform data yet`), B3.globalPos.x = B3.baseParcel.x * 16 + B3.playerTransform.position.x, B3.globalPos.z = B3.baseParcel.y * 16 + B3.playerTransform.position.z, El && console.log(`
*** dclPlayer.baseParcelPos =`, JSON.stringify(B3.baseParcel)), El && console.log(`
*** dclPlayer.playerTransform =`, JSON.stringify(B3.playerTransform)), El && console.log(`
*** dclPlayer.cameraTransform =`, JSON.stringify(B3.cameraTransform)), El && console.log(`
*** dclPlayer.globalPos =`, JSON.stringify(B3.globalPos));
            for (let i of B3.eventListeners) El && console.log(`
*** DCLPlayer firing a DCLPlayerUserDataEvent`), i.fireEvent(new l4(B3))
        }

        var og = 0;

        function ow(n) {
            if (!B3) {
                El && console.log(`
* * * dclPlayerUpdate called before singleton dclPlayer has been set`);
                return
            }
            if (B3.totalTimeInScene += n, og < 50) {
                og++;
                return
            }
            B3.polling && (B3.countdown -= n, B3.countdown <= 0 && (B3.iterate || (B3.polling = !1), B3.countdown = B3.period, It(async () => {
                await uw()
            })))
        }

        var Cr = class {
            constructor(e = null, r = 1, l = !0) {
                this.period = r;
                this.iterate = l;
                this.realmInfo = null;
                this.playerTransform = {
                    position: {x: 0, y: 0, z: 0},
                    rotation: X2.fromEulerDegrees(0, 0, 0),
                    scale: {x: 1, y: 1, z: 1}
                };
                this.cameraTransform = {
                    position: {x: 0, y: 0, z: 0},
                    rotation: X2.fromEulerDegrees(0, 0, 0),
                    scale: {x: 1, y: 1, z: 1}
                };
                this.baseParcel = {x: 0, y: 0};
                this.globalPos = {x: 0, z: 0};
                this.polling = !0;
                this.countdown = this.period;
                this.eventListeners = [];
                this.totalTimeInScene = 0;
                e != null && this.eventListeners.push(e), B3 = this, A2.addSystem(ow)
            }

            addListener(e) {
                this.eventListeners.push(e)
            }
        };
        var cg = !1, Ge = class {
            constructor(e, r = 443, l = "") {
                this.host = e;
                this.port = r;
                this.apiBase = l;
                this.urlBase = this.host + (this.port == null || this.port == null || this.port == 80 || this.port == 443 ? "" : ":" + this.port) + (this.apiBase != null ? this.apiBase : "")
            }

            async putDataToService(e, r) {
                let l = !1, i = this.urlBase + e;
                l && console.log(`
===== RestService.putDataToService will PUT:
url =` + i + `
body =` + JSON.stringify(r));
                let o = "PUT", f = {Accept: "application/json", "Content-Type": "application/json"}, s;
                try {
                    s = await fetch(i, {headers: f, method: o, body: JSON.stringify(r)})
                } catch (g) {
                    return console.log(`
===== RestService.putDataToService: fetch catch error.
error code = ` + (g || "none") + `
url =` + i + `
body =` + JSON.stringify(r)), {}
                }
                s.ok || console.log(`
===== RestService.putDataToService: fetch returned failure indication:
response.ok=` + s.ok + ", response.status=" + s.status);
                let a = "";
                try {
                    a = await s.text();
                    let g = JSON.parse(a);
                    return l && console.log(`
===== RestService.putDataToService obtained JSON
data = ` + JSON.stringify(g)), g
                } catch {
                    return l && console.log(`
===== RestService.putDataToService obtained TEXT
text = ` + a), a
                }
            }

            async postDataToService(e, r) {
                let l = cg;
                r == null && (r = "");
                let i = this.urlBase + e;
                l && console.log(`
===== RestService.postDataToService will POST:
url =` + i + `
body =` + JSON.stringify(r));
                let o = "POST", f = {Accept: "application/json", "Content-Type": "application/json"}, s;
                try {
                    s = await fetch(i, {headers: f, method: o, body: JSON.stringify(r)})
                } catch (g) {
                    return console.log(`
===== RestService.postDataToService: fetch catch error.
error code = ` + (g || "none") + `
url =` + i + `
body =` + JSON.stringify(r)), {}
                }
                s.ok || console.log(`
===== RestService.postDataToService: fetch returned failure indication:
response.ok=` + s.ok + ", response.status=" + s.status);
                let a = "";
                try {
                    a = await s.text();
                    let g = JSON.parse(a);
                    return l && console.log(`
===== RestService.postDataToService obtained JSON
data = ` + JSON.stringify(g)), g
                } catch {
                    return l && console.log(`
===== RestService.postDataToService obtained TEXT
text = ` + a), a
                }
            }

            async getDataFromService(e, r = null) {
                let l = cg;
                r != null && console.log(`
===== RestService.getDataFromService called by legacy caller that is sending an needed body which is being ignored.`);
                let i = this.urlBase + e;
                l && console.log(`
===== RestService.getDataFromService will GET:
url =` + i);
                let o;
                try {
                    o = await fetch(i)
                } catch (s) {
                    return console.log(`
===== RestService.getDataFromService: fetch catch error.
error code = ` + (s || "none") + `
url =` + i), {}
                }
                o.ok || console.log(`
===== RestService.getDataFromService: fetch returned failure indication:
response.ok=` + o.ok + ", response.status=" + o.status);
                let f = "";
                try {
                    f = await o.text();
                    let s = JSON.parse(f);
                    return l && console.log(`
===== RestService.getDataFromService obtained JSON
data = ` + JSON.stringify(s)), s
                } catch {
                    return l && console.log(`
===== RestService.getDataFromService obtained TEXT
text = ` + f), f
                }
            }
        };
        var N1 = class {
        };
        N1.url = "https://api2.extraterra.com/scene-configuration", N1.context = "cc-cinema";
        var fl = !1, M5 = class {
            constructor(e) {
                this.sceneConfigurationResponse = e
            }
        };
        M5 = Ne([Oe()], M5);
        var _r = class {
            constructor() {
                this.eventListeners = [];
                this.restService = new Ge(N1.url)
            }

            addListener(e) {
                this.eventListeners.push(e)
            }

            fireAdmissionResult(e) {
                for (let r of this.eventListeners) r.fireEvent(new M5(e))
            }

            async getSceneConfiguration(e) {
                fl && console.log("getSceneConfiguration");
                let r = await this.restService.getDataFromService("/getConfiguration/" + N1.context);
                return fl && console.log("getSceneConfiguration for context: " + N1.context + " returned" + JSON.stringify(r)), r.success == !1 ? (fl && console.log("SceneConfigurationClient: getSceneConfiguraion failed, using default cfg"), this.fireAdmissionResult(r), r) : (e = r.configuration.cfg, fl && console.log("SceneCongurationClient received cfg =", JSON.stringify(e)), this.fireAdmissionResult(r), r)
            }
        };

        function fg(n, e, r) {
            if (n == null || n.userData == null || n.userData.publicKey == null || n.realmInfo == null) return fl && console.log(`
*** isThisPlayerInList called before dclPlayer properly set up`), !1;
            if (n.realmInfo.isPreview && !n.userData.hasConnectedWeb3) return fl && console.log(`
*** isThisPlayerInList: isPreview, so admin controls based on allowLocalAdminPermission=` + r), r;
            if (fl && console.log(`
*** isThisPlayerInList: dclPlayer.realm.realmName=` + n.realmInfo.realmName), n.userData.publicKey == "0x0") return fl && console.log(`
*** isThisPlayerInList: user has no wallet, cannot be an admin`), !1;
            if (e == null) return fl && console.log(`
*** isThisPlayerInList: no such admins list, so allowing administration`), !0;
            if (typeof e != "object") return fl && console.log(`
*** isThisPlayerInList: adminsList not an object, improperly defined, denying administration`), !1;
            if (e.length == 0) return fl && console.log(`
*** isThisPlayerInList: adminsList is an empty array, denying administration`), !1;
            if (fl && console.log(`
*** isThisPlayerInList: not localPreview, and adminsList is a non-empty array`), typeof e[0] == "object" && "address" in e[0]) {
                fl && console.log(`
*** isThisPlayerInList: adminsList is an array of objects, such as ` + JSON.stringify(e[0]));
                for (let l in e) {
                    let i = e[l];
                    if (i.address != null && typeof i.address == "string" && fl && console.log("is address " + i.address + " == " + n.userData.publicKey), i.address.toLowerCase() == n.userData.publicKey.toLowerCase()) return !0
                }
            } else if (typeof e[0] == "string") {
                fl && console.log(`
*** isThisPlayerInList: adminsList is an array of strings`);
                for (let l of e) if (fl && console.log("is addr " + l + " == " + n.userData.publicKey), l.toLowerCase() == n.userData.publicKey.toLowerCase()) return !0
            }
            return !1
        }

        var v4 = class {
        };
        v4.url = "https://api2.extraterra.com/admission", v4.context = "cc-cinema";
        var Ce = class {
        };
        Ce.ADDRESS = "ADDRESS", Ce.TOKEN = "TOKEN", Ce.VOUCHER = "VOUCHER", Ce.PASSCODE = "PASSCODE", Ce.CREDS = "CREDS", Ce.NONE = "NONE";
        var Tg = require("~system/EthereumController");

        function dg(n) {
            async function e(r) {
                let l = await n({id: r.id, method: r.method, jsonParams: JSON.stringify(r.params)});
                return JSON.parse(l.jsonAnyResponse)
            }

            return {
                send(r, l) {
                    if (r && l && l instanceof Function) e(r).then(i => l(null, i)).catch(l); else throw new Error("Decentraland provider only allows async calls")
                }, sendAsync(r, l) {
                    e(r).then(i => l(null, i)).catch(l)
                }
            }
        }

        var La = _3(bg());

        function Eg() {
            globalThis.TextEncoder = globalThis.TextEncoder ?? La.default.TextEncoder, globalThis.TextDecoder = globalThis.TextDecoder ?? La.default.TextDecoder
        }

        function za() {
            return Eg(), dg(Tg.sendAsync)
        }

        var Tl = _3(wg());
        var Wa = [{
            coinId: "decentraland",
            displayName: "MANA",
            chainName: "ethereum",
            chainId: 1,
            contract: "0x0f5d2fb29fb7d3cfee444a200298f468908cc942",
            decimals: 18
        }, {
            coinId: "decentraland",
            displayName: "MANA",
            chainName: "goerli",
            chainId: 5,
            contract: "0xe7fDae84ACaba2A5Ba817B6E6D8A2d415DBFEdbe",
            decimals: 18
        }, {
            coinId: "decentraland",
            displayName: "MANA",
            chainName: "sepolia",
            chainId: 5,
            contract: "0xfa04d2e2ba9aec166c93dfeeba7427b2303befa9",
            decimals: 18
        }, {
            coinId: "decentraland",
            displayName: "MANA",
            chainName: "polygon",
            chainId: 137,
            contract: " 0xA1c57f48F0Deb89f569dFbE6E2B7f46D33606fD4",
            decimals: 18
        }, {
            coinId: "decentraland",
            displayName: "MANA",
            chainName: "mumbai",
            chainId: 80001,
            contract: "0x882Da5967c435eA5cC6b09150d55E8304B838f45",
            decimals: 18
        }, {
            coinId: "usd-coin",
            displayName: "USDC",
            chainName: "ethereum",
            chainId: 1,
            contract: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
            decimals: 6
        }, {
            coinId: "usd-coin",
            displayName: "USDC",
            chainName: "goerli",
            chainId: 5,
            contract: "0xD87Ba7A50B2E7E660f678A895E4B72E7CB4CCd9C",
            decimals: 6
        }, {
            coinId: "usd-coin",
            displayName: "USDC",
            chainName: "sepolia",
            chainId: 5,
            contract: "0x746d7b1dfcD1Cc2f4b7d09F3F1B9A21764FBeB33",
            decimals: 6
        }, {
            coinId: "Tether",
            displayName: "USDT",
            chainName: "ethereum",
            chainId: 1,
            contract: "0xdac17f958d2ee523a2206206994597c13d831ec7",
            decimals: 6
        }, {
            coinId: "Tether",
            displayName: "USDT",
            chainName: "goerli",
            chainId: 5,
            contract: "0xC2C527C0CACF457746Bd31B2a698Fe89de2b6d49",
            decimals: 6
        }, {
            coinId: "Tether",
            displayName: "USDT",
            chainName: "sepolia",
            chainId: 5,
            contract: "0x7169D38820dfd117C3FA1f22a697dBA58d90BA06 ",
            decimals: 6
        }];
        var Ha = {
            version: "2",
            abi: [{
                constant: !0,
                inputs: [],
                name: "mintingFinished",
                outputs: [{name: "", type: "bool"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !0,
                inputs: [],
                name: "name",
                outputs: [{name: "", type: "string"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !1,
                inputs: [{name: "_spender", type: "address"}, {name: "_value", type: "uint256"}],
                name: "approve",
                outputs: [{name: "", type: "bool"}],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !0,
                inputs: [],
                name: "totalSupply",
                outputs: [{name: "", type: "uint256"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !1,
                inputs: [{name: "_from", type: "address"}, {name: "_to", type: "address"}, {
                    name: "_value",
                    type: "uint256"
                }],
                name: "transferFrom",
                outputs: [{name: "", type: "bool"}],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !0,
                inputs: [],
                name: "decimals",
                outputs: [{name: "", type: "uint8"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !1,
                inputs: [],
                name: "unpause",
                outputs: [{name: "", type: "bool"}],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !1,
                inputs: [{name: "_to", type: "address"}, {name: "_amount", type: "uint256"}],
                name: "mint",
                outputs: [{name: "", type: "bool"}],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !1,
                inputs: [{name: "_value", type: "uint256"}],
                name: "burn",
                outputs: [],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !0,
                inputs: [],
                name: "paused",
                outputs: [{name: "", type: "bool"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !0,
                inputs: [{name: "_owner", type: "address"}],
                name: "balanceOf",
                outputs: [{name: "balance", type: "uint256"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !1,
                inputs: [],
                name: "finishMinting",
                outputs: [{name: "", type: "bool"}],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !1,
                inputs: [],
                name: "pause",
                outputs: [{name: "", type: "bool"}],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !0,
                inputs: [],
                name: "owner",
                outputs: [{name: "", type: "address"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !0,
                inputs: [],
                name: "symbol",
                outputs: [{name: "", type: "string"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !1,
                inputs: [{name: "_to", type: "address"}, {name: "_value", type: "uint256"}],
                name: "transfer",
                outputs: [{name: "", type: "bool"}],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !0,
                inputs: [{name: "_owner", type: "address"}, {name: "_spender", type: "address"}],
                name: "allowance",
                outputs: [{name: "remaining", type: "uint256"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !1,
                inputs: [{name: "to", type: "address"}, {name: "amount", type: "uint256"}],
                name: "setBalance",
                outputs: [],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !1,
                inputs: [{name: "newOwner", type: "address"}],
                name: "transferOwnership",
                outputs: [],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                anonymous: !1,
                inputs: [{indexed: !0, name: "to", type: "address"}, {indexed: !1, name: "amount", type: "uint256"}],
                name: "Mint",
                type: "event"
            }, {anonymous: !1, inputs: [], name: "MintFinished", type: "event"}, {
                anonymous: !1,
                inputs: [],
                name: "Pause",
                type: "event"
            }, {anonymous: !1, inputs: [], name: "Unpause", type: "event"}, {
                anonymous: !1,
                inputs: [{indexed: !0, name: "burner", type: "address"}, {indexed: !1, name: "value", type: "uint256"}],
                name: "Burn",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{indexed: !0, name: "owner", type: "address"}, {
                    indexed: !0,
                    name: "spender",
                    type: "address"
                }, {indexed: !1, name: "value", type: "uint256"}],
                name: "Approval",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{indexed: !0, name: "from", type: "address"}, {
                    indexed: !0,
                    name: "to",
                    type: "address"
                }, {indexed: !1, name: "value", type: "uint256"}],
                name: "Transfer",
                type: "event"
            }],
            address: "",
            name: "ERC20",
            chainId: 1
        };
        var vg = {
            version: "2",
            abi: [{
                constant: !0,
                inputs: [{name: "_interfaceId", type: "bytes4"}],
                name: "supportsInterface",
                outputs: [{name: "", type: "bool"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !0,
                inputs: [],
                name: "name",
                outputs: [{name: "", type: "string"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !0,
                inputs: [{name: "_tokenId", type: "uint256"}],
                name: "getApproved",
                outputs: [{name: "", type: "address"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !1,
                inputs: [{name: "_to", type: "address"}, {name: "_tokenId", type: "uint256"}],
                name: "approve",
                outputs: [],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !0,
                inputs: [],
                name: "totalSupply",
                outputs: [{name: "", type: "uint256"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !0,
                inputs: [],
                name: "InterfaceId_ERC165",
                outputs: [{name: "", type: "bytes4"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !1,
                inputs: [{name: "_from", type: "address"}, {name: "_to", type: "address"}, {
                    name: "_tokenId",
                    type: "uint256"
                }],
                name: "transferFrom",
                outputs: [],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !1,
                inputs: [{name: "_to", type: "address"}, {name: "_tokenId", type: "uint256"}],
                name: "transfer",
                outputs: [],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !0,
                inputs: [{name: "_owner", type: "address"}, {name: "_index", type: "uint256"}],
                name: "tokenOfOwnerByIndex",
                outputs: [{name: "", type: "uint256"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !1,
                inputs: [{name: "_from", type: "address"}, {name: "_to", type: "address"}, {
                    name: "_tokenId",
                    type: "uint256"
                }],
                name: "safeTransferFrom",
                outputs: [],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !0,
                inputs: [{name: "_tokenId", type: "uint256"}],
                name: "exists",
                outputs: [{name: "", type: "bool"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !0,
                inputs: [{name: "_index", type: "uint256"}],
                name: "tokenByIndex",
                outputs: [{name: "", type: "uint256"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !0,
                inputs: [{name: "_tokenId", type: "uint256"}],
                name: "ownerOf",
                outputs: [{name: "", type: "address"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !0,
                inputs: [{name: "_owner", type: "address"}],
                name: "balanceOf",
                outputs: [{name: "", type: "uint256"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !0,
                inputs: [],
                name: "symbol",
                outputs: [{name: "", type: "string"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !1,
                inputs: [{name: "_to", type: "address"}, {name: "_approved", type: "bool"}],
                name: "setApprovalForAll",
                outputs: [],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !1,
                inputs: [{name: "_from", type: "address"}, {name: "_to", type: "address"}, {
                    name: "_tokenId",
                    type: "uint256"
                }, {name: "_data", type: "bytes"}],
                name: "safeTransferFrom",
                outputs: [],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !0,
                inputs: [{name: "_tokenId", type: "uint256"}],
                name: "tokenURI",
                outputs: [{name: "", type: "string"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !0,
                inputs: [{name: "_owner", type: "address"}, {name: "_operator", type: "address"}],
                name: "isApprovedForAll",
                outputs: [{name: "", type: "bool"}],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{name: "_name", type: "string"}, {name: "_symbol", type: "string"}],
                payable: !1,
                stateMutability: "nonpayable",
                type: "constructor"
            }, {
                anonymous: !1,
                inputs: [{indexed: !0, name: "_from", type: "address"}, {
                    indexed: !0,
                    name: "_to",
                    type: "address"
                }, {indexed: !0, name: "_tokenId", type: "uint256"}],
                name: "Transfer",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{indexed: !0, name: "_owner", type: "address"}, {
                    indexed: !0,
                    name: "_approved",
                    type: "address"
                }, {indexed: !0, name: "_tokenId", type: "uint256"}],
                name: "Approval",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{indexed: !0, name: "_owner", type: "address"}, {
                    indexed: !0,
                    name: "_operator",
                    type: "address"
                }, {indexed: !1, name: "_approved", type: "bool"}],
                name: "ApprovalForAll",
                type: "event"
            }, {
                constant: !1,
                inputs: [{name: "_to", type: "address"}, {name: "_tokenId", type: "uint256"}, {
                    name: "_tokenURI",
                    type: "string"
                }],
                name: "mintUniqueTokenTo",
                outputs: [],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }],
            address: "",
            name: "ERC271",
            chainId: 1
        };
        var _g = require("~system/UserIdentity"), Ir = 1;

        function O5(...n) {
            Ir >= 1 && console.log(...n)
        }

        function it(...n) {
            Ir >= 2 && console.log(...n)
        }

        function De(...n) {
            Ir >= 3 && console.log(...n)
        }

        var D5 = class {
            constructor(e = 1) {
                this.requestManagers = {};
                this.tokens = {
                    erc20: Ha,
                    erc721: vg,
                    erc1155: {abi: iw, address: "", chainId: 1, name: "", version: "1"}
                };
                this.latestTx = null;
                this.isInitialized = !1;
                this.setDebugLevel(e), this.initialize(!0)
            }

            setDebugLevel(e) {
                Ir = e
            }

            async initialize(e = !1) {
                if (this.isInitialized) it(`
===== CFCryptoManager redundant call to initialize (internal=` + e + ") ignored"); else {
                    this.isInitialized = !0, De(`
====== CFCryptoManager initialize(internal=` + e + ") 0");
                    let r = za(), l = new Tl.RequestManager(r);
                    this.requestManagers.ethereum = l, this.requestManagers.goerli = l, this.requestManagers.sepolia = l, De(`
====== CFCryptoManager  initialize() 1: got Eth Provider`);
                    let i = new Tl.HTTPProvider("https://polygon-rpc.com");
                    De(`
====== CFCryptoManager ctr 2`), this.requestManagers.polygon = new Tl.RequestManager(i), i = new Tl.HTTPProvider("https://rpc.gnosischain.com"), De(`
====== CFCryptoManager ctr 3`), this.requestManagers.gnosis = new Tl.RequestManager(i), i = new Tl.HTTPProvider("https://bsc-dataseed.binance.org/"), De(`
====== CFCryptoManager ctr 4`), this.requestManagers.bsc = new Tl.RequestManager(i), De(`
====== CFCryptoManager requestManagers=` + JSON.stringify(this.requestManagers))
                }
            }

            async whichOfTheseTokensInAccount(e, r) {
                let l = [];
                De(`
==== whichOfTheseTokensInAccount 1: account=` + e);
                for (let i of r) if (i.type == "erc20") {
                    De(`
==== whichOfTheseTokensInAccount 2`);
                    let o = await this.getERC20balance(i.chain, i.contract, e);
                    it(`
==== whichOfTheseTokensInAccount This account has a balance of ` + o + " TOKEN:" + i.annotation), o > 0 && l.push(i)
                } else if (i.type == "erc721") {
                    De(`
==== whichOfTheseTokensInAccount 4`);
                    let o = await this.getERC721balance(i.chain, i.contract, i.tokenId, e);
                    it(`
==== whichOfTheseTokensInAccount This account has a balance of ` + o + " TOKEN:" + i.annotation), o > 0 && l.push(i)
                } else if (i.type == "erc1155") {
                    let o = await this.getERC1155balance(i.chain, i.contract, i.tokenId, e);
                    it(`
==== whichOfTheseTokensInAccount This account has a balance of ` + o + " TOKEN:" + i.annotation), o > 0 && l.push(i)
                }
                return De(`
==== whichOfTheseTokensInAccount newList = ` + JSON.stringify(l)), l
            }

            async getERC20balance(e, r, l) {
                let i = 0, o = aw(r, e);
                if (!o) return O5(`
*** getERC20balance couldn't obtain coinData`), 0;
                try {
                    i = await (await new Tl.ContractFactory(this.requestManagers[e], this.tokens.erc20.abi).at(r)).balanceOf(l) / 10 ** o.decimals
                } catch (f) {
                    it(`
*** getERC20balance error while seeking balance for coin on a different chain
coinId=` + o.coinId + " on chainName=" + o.chainName + `
error=` + f)
                }
                return it(`
*** getERC20balance: chainName=` + o.chainName + " coinId=" + o.coinId + "  balance=" + i), i
            }

            async getERC721balance(e, r, l, i) {
                De(`
===== checkERC721: 1`);
                let o = await new Tl.ContractFactory(this.requestManagers[e], this.tokens.erc721.abi).at(r);
                if (De(`
===== checkERC721: 0 contract=` + JSON.stringify(o)), l == null || l == null || l == "") {
                    De(`
===== checkERC721: 2`);
                    let f = await o.balanceOf(i);
                    return De(`
===== checkERC721: 3`), it(`
===== checkERC721: 4 contractAddress=` + r + ", account=" + i + ", balance=" + f), f
                } else {
                    let f = await o.ownerOf(l);
                    return it(`
===== checkERC721: 5 contractAddress=` + r + ", tokenId=" + l + ", account=" + i + ", owner=", f), f.toString().toLowerCase() == i.toLowerCase() ? 1 : 0
                }
            }

            async getERC1155balance(e, r, l, i) {
                De(`
===== checkERC1155: 1`);
                let o = await new Tl.ContractFactory(this.requestManagers[e], this.tokens.erc1155.abi).at(r);
                De(`
===== checkERC1155: 2`);
                let f = await o.balanceOf(i, l);
                return it(`
===== checkERC1155: 3 contractAddress=` + r + "  account=" + i + "  balance=" + f), f
            }

            async submitErc20Payment(e, r) {
                let l = p6(e.coinId, e.chainName);
                if (l == null) return O5(`
*** CFCryptoManager submitErc20Payment received unknown/invalid coinName and/or chainName`), null;
                {
                    let i = Ha.abi, o = za(), f = new Tl.RequestManager(o),
                        a = await new Tl.ContractFactory(f, i).at(l.contract);
                    De(`
*** submitErc20Payment: contract=` + JSON.stringify(a));
                    try {
                        let g = await (0, _g.getUserData)({});
                        return g.data == null || !g.data.hasConnectedWeb3 ? (O5(`
*** submitErc20Payment failed to get player's wallet info`), null) : (it(`
*** submitErc20Payment calling contract function with waitConfirm=true ...`), this.latestTx = await a.transfer(e.payeeAddress, r * 10 ** l.decimals, {from: g.data.publicKey}), O5(`
*** submitErc20Payment returned from contract function call, now ...`), this.latestTx)
                    } catch (g) {
                        return O5("Crypto Tx failed to submit or was cancelled. Error=" + g.toString()), null
                    }
                }
            }
        }, iw = [{
            inputs: [{internalType: "address", name: "_owner", type: "address"}, {
                internalType: "uint256",
                name: "_id",
                type: "uint256"
            }],
            name: "balanceOf",
            outputs: [{internalType: "uint256", name: "", type: "uint256"}],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{internalType: "address[]", name: "accounts", type: "address[]"}, {
                internalType: "uint256[]",
                name: "ids",
                type: "uint256[]"
            }],
            name: "balanceOfBatch",
            outputs: [{internalType: "uint256[]", name: "", type: "uint256[]"}],
            stateMutability: "view",
            type: "function"
        }];

        function p6(n, e) {
            return Wa.find(l => n.toLowerCase() == l.coinId.toLowerCase() && e.toLowerCase() == l.chainName.toLowerCase())
        }

        function aw(n, e) {
            return Wa.find(l => n.toLowerCase() == l.contract.toLowerCase() && e.toLowerCase() == l.chainName.toLowerCase())
        }

        var R1 = null, Cg = 0, M1 = ["decentraland", "usd-coin", "tether"];

        function sw(n) {
            if (!M1) return !1;
            for (let e of M1) if (n.toLowerCase() == e.toLowerCase()) return De(`
*** doesCoinIdExistInCoinIdsToQuery checking: ` + n + " -- found"), !0;
            return O5(`
*** doesCoinIdExistInCoinIdsToQuery checking: ` + n + " -- NOT found"), !1
        }

        async function cw(n) {
            if (!n || n == "") return;
            let e = !1;
            if (sw(n) || (it(`
*** updateMarketDataCache seems to think we need to add ` + n), M1.push(n), e = !0), e || !R1 || R1.length == 0 || Date.now() - Cg > 12e4) {
                if (R1 && R1.length > 0) for (let f of R1) M1.push(f.id);
                let r = "";
                for (let f in M1) r += M1[f], +f < M1.length - 1 && (r += "%2C");
                let l = "https://api.coingecko.com/api/v3/coins/markets?x_cg_demo_api_key=CG-p2yJYC4p7mjDqNYr4Wtx1M5A&vs_currency=usd&ids=" + r,
                    i = null, o;
                try {
                    o = await fetch(l), i = await o.json(), De(`
*** updateMarketDataCache fetch returned json=` + JSON.stringify(i)), i && i.length >= M1.length && (R1 = i, Cg = Date.now()), it(`
*** updateMarketDataCache got data`)
                } catch (f) {
                    O5(`
*** updateMarketDataCache error ` + JSON.stringify(f))
                }
            }
        }

        async function m6(n) {
            if (it(`
*** getCoinPrice(` + n + ")"), await cw(n), !R1) return null;
            let e = R1.find(r => n.toLowerCase() == r.id.toLowerCase());
            return e && e.current_price ? e.current_price : null
        }

        var kr;

        async function Pg(n = 1) {
            return kr == null && (kr = new D5(n), await kr.initialize()), kr
        }

        var _8 = 1;

        function Va(...n) {
            _8 >= 1 && console.log(...n)
        }

        function O1(...n) {
            _8 >= 2 && console.log(...n)
        }

        function ln(...n) {
            _8 >= 3 && console.log(...n)
        }

        var B5 = class {
            constructor(e) {
                this.context = e
            }
        };
        B5 = Ne([Oe()], B5);
        var h6 = class {
            constructor(e, r) {
                this.cred1 = e;
                this.cred2 = r
            }
        };
        h6 = Ne([Oe()], h6);
        var y6 = class {
            constructor() {
            }
        };
        y6 = Ne([Oe()], y6);

        function fw(n, e, r, l) {
            let i = r * .45, o = i * .18, f = (r - i) / 2, s = (l - o) * .5, a = 24 * e / 1280;
            return n.labels && n.labels.length > 0 && n.labels[0] != null ? (n.labels.length > 1 && n.labels[1] != null && n.labels[1] != "" && (s = (l - o) * .55), L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: i,
                    height: o,
                    position: {right: f, bottom: s},
                    pointerFilter: "block"
                }, uiBackground: {color: q.White()}
            }, L2.createElement(yr, {
                onChange: g => {
                    n.input1 = g
                },
                fontSize: a,
                placeholder: "Click here, enter " + n.labels[0],
                placeholderColor: q.Gray(),
                color: q.Black()
            }))) : null
        }

        function dw(n, e, r, l) {
            let i = r * .45, o = i * .18, f = (r - i) / 2, s = (l - o) * .35, a = 24 * e / 1280;
            return n.labels && n.labels.length > 0 && n.labels[0] != null && n.labels.length > 1 && n.labels[1] != null && n.labels[1] != "" ? L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: i,
                    height: o,
                    position: {right: f, bottom: s},
                    pointerFilter: "block"
                }, uiBackground: {color: q.White()}
            }, L2.createElement(yr, {
                onChange: g => {
                    n.input2 = g
                },
                fontSize: a,
                placeholder: "Click here, enter " + n.labels[1],
                placeholderColor: q.Gray(),
                color: q.Black()
            })) : null
        }

        function pw() {
            let n = w5.get(A2.RootEntity), e = n.width * .67, r = e * 9 / 16, l = (n.width - e) / 2,
                i = (n.height - r) / 2, o = 0, f = 0, s = (e - o) / 2, a = r * .05, g = 32 * n.width / 1280, b = 0,
                B = 0, w = (e - b) / 2, P = r * .22, D = 20 * n.width / 1280, T = e * .45, k = T * .18, R = (e - T) / 2,
                G = (r - k) / 2, Z = 24 * n.width / 1280, S2 = 0, D2 = 0, T2 = (e - S2) / 2, l2 = (r - D2) * .22,
                b2 = 16 * n.width / 1280, g2 = e * .2, p2 = g2 * .25, O = e * 5 / 8 - g2 / 2, J = e * 3 / 8 - g2 / 2,
                h2 = r * .013, y2 = 24 * n.width / 1280;
            return L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: e,
                    height: r,
                    position: {right: l, bottom: i},
                    pointerFilter: "block"
                },
                uiBackground: {
                    texture: {src: "materials/admission-manager/AdmissionManagerTicket.png"},
                    textureMode: "stretch",
                    color: q.White()
                }
            }, L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: o,
                    height: f,
                    position: {right: s, top: a},
                    pointerFilter: "block"
                }
            }, L2.createElement(ue, {
                value: Sl.caption ? Sl.caption : "",
                color: q.Black(),
                fontSize: g,
                font: "sans-serif",
                textAlign: "middle-center"
            })), L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: b,
                    height: B,
                    position: {right: w, top: P},
                    pointerFilter: "block"
                }
            }, L2.createElement(ue, {
                value: Sl.instructions ? Sl.instructions : "",
                color: q.Black(),
                fontSize: D,
                font: "sans-serif",
                textAlign: "middle-center"
            })), fw(Sl, n.width, e, r), dw(Sl, n.width, e, r), L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: S2,
                    height: D2,
                    position: {right: T2, bottom: l2},
                    pointerFilter: "block"
                }
            }, L2.createElement(ue, {
                value: Sl.message ? Sl.message : "",
                color: q.Yellow(),
                fontSize: b2,
                font: "sans-serif",
                textAlign: "middle-center"
            })), L2.createElement(sn, {
                value: "Submit",
                fontSize: y2,
                font: "sans-serif",
                textAlign: "middle-center",
                onMouseDown: () => {
                    Sl.submit(Sl.input1 ? Sl.input1 : "", Sl.input2 ? Sl.input2 : "")
                },
                color: q.Black(),
                uiTransform: {
                    positionType: "absolute",
                    width: g2,
                    height: p2,
                    position: {right: O, bottom: h2},
                    pointerFilter: "block"
                },
                uiBackground: {
                    color: q.White(),
                    texture: {src: "materials/admission-manager/AdmissionManagerTicketButton.png"},
                    textureMode: "stretch"
                }
            }), L2.createElement(sn, {
                value: "Cancel",
                fontSize: y2,
                font: "sans-serif",
                textAlign: "middle-center",
                onMouseDown: () => {
                    Sl.cancel()
                },
                color: q.Black(),
                uiTransform: {
                    positionType: "absolute",
                    width: g2,
                    height: p2,
                    position: {right: J, bottom: h2},
                    pointerFilter: "block"
                },
                uiBackground: {
                    color: q.White(),
                    texture: {src: "materials/admission-manager/AdmissionManagerTicketButton.png"},
                    textureMode: "stretch"
                }
            }))
        }

        var Sl, Ga = class {
            constructor(e) {
                this.eventListener = e;
                this.message = "";
                this.input1 = "";
                this.input2 = "";
                this.ticketUiId = 0;
                Sl = this
            }

            setupAndShow(e, r, l, i) {
                this.caption = e, this.instructions = r, this.errMsg = l, this.labels = i, this.showUI()
            }

            showUI() {
                this.ticketUiId > 0 ? Fy(this.ticketUiId) : this.ticketUiId = Dt(pw)
            }

            hideUI() {
                this.ticketUiId && this.ticketUiId > 0 && Uy(this.ticketUiId)
            }

            setErrMsg() {
                this.message = this.errMsg ? this.errMsg : ""
            }

            submit(e, r) {
                this.eventListener && this.eventListener.fireEvent(new h6(e, r))
            }

            cancel() {
                this.eventListener && this.eventListener.fireEvent(new y6)
            }
        }, Nr = class {
            constructor(e, r, l, i, o = !0, f = !1, s = 1) {
                this.context = e;
                this.eventManager = r;
                this.dclPlayer = l;
                this.allowPreviewWithoutWeb3 = o;
                this.allowIfServerUnresponsive = f;
                this.eventListener = new Ve;
                this.allowed = !1;
                this.availableMethodInfo = null;
                this.availableVoucherMethodInfo = null;
                this.availableCredsMethodInfo = null;
                this.initialized = !1;
                this.setDebugLevel(s), this.restService = new Ge(v4.url), ln("AdmissionManager constructor"), this.uiEventManager = new Ve, i == null ? (ln("Handling a case where UI is needed, and no custom UI was provided, so creating default one"), this.ui = new Ga(this.uiEventManager)) : this.ui = i, this.eventListener.addListener(l4, null, async ({dclPlayer: a}) => {
                    ln(`
======= AdmissionManager's own listener got DCLPlayer event, initializing itself`), await this.initialize(!0), ln(`
======= AdmissionManager.initialize returned at 
` + new Date().toString() + `
` + Date.now().toString() + `
============`)
                }), l.addListener(this.eventListener), this.uiEventManager.addListener(h6, null, async ({
                                                                                                            cred1: a,
                                                                                                            cred2: g
                                                                                                        }) => {
                    let b = "", B = {
                        admission: !0,
                        message: "",
                        context: this.context,
                        event: "uninitialized",
                        permit: "unintialized",
                        method: "uninitialized"
                    };
                    if (this.availableMethodInfo && this.dclPlayer && this.dclPlayer.userData) {
                        switch (a = this.trimSpaces(a), g = this.trimSpaces(g), this.availableMethodInfo[0].method) {
                            case Ce.VOUCHER:
                                if (a == null || a == "") return;
                                let w = this.dclPlayer.userData.userId + "_" + this.dclPlayer.userData.displayName;
                                b = "/isAllowedByVoucher/" + this.context + "/" + a + "/" + w, ln(`
======= AdmissionManager apiEndpoint =`, b);
                                break;
                            case Ce.PASSCODE:
                                if (a == null || a == "") return;
                                b = "/isAllowedByPasscode/" + this.context + "/" + a;
                                break;
                            case Ce.CREDS:
                                if (a == null || a == "" || g == null || g == "") return;
                                b = "/isAllowedByCreds/" + this.context + "/" + a + "/" + g;
                                break;
                            default:
                                return
                        }
                        B = await this.restService.getDataFromService(b), ln(`
*** admissionResponse=` + JSON.stringify(B))
                    } else ln(`
*** admissionResponse set to false`), B.admission = !1;
                    B.admission ? (O1(`
======= AdmissionManager AdmissionManagerSubmitEvent received.  IsAllowed is true because user provided credential(s) that is in a governing event's permit`), this.allowed = !0, this.ui.hideUI(), this.fireAdmissionResult(B)) : this.ui && this.ui.setErrMsg()
                }), this.uiEventManager.addListener(y6, null, ({}) => {
                    let a = {
                        admission: !1,
                        message: "",
                        context: this.context,
                        event: "NONE",
                        permit: "NONE",
                        method: "NONE"
                    };
                    this.allowed = !1, O1(`
======= AdmissionManager AdmissionManagerCancelEvent received.  IsAllowed is false: the user cancelled the input`), this.ui.message = "", this.ui.hideUI(), this.fireAdmissionResult(a)
                }), ln(`
======= AdmissionManager.constructor finished at 
` + new Date().toString() + `
` + Date.now().toString() + `
============`)
            }

            async initialize(e = !1) {
                this.initialized ? O1(`
==== AdmissionManager: extra call to initialize(internal=` + e + ") ignored") : (this.initialized = !0, this.cryptoManager == null && (this.cryptoManager = await Pg(_8)), ln(`
====== AdmissionManager.initialize(internal=` + e + `) start
 --Will use DCLPlayer user = `, this.user, "context =", this.context, "realm =", this.dclPlayer.realmInfo), this.user = this.dclPlayer && this.dclPlayer.userData && this.dclPlayer.userData.publicKey ? this.dclPlayer.userData.publicKey.toLowerCase() : "0x0", await this.getIsAllowed(), ln(`
====== AdmissionManager.initialize(internal=` + e + `) exit
 --returned from getIsAllowed (` + this.allowed + `)at
` + new Date().toString() + `
` + Date.now().toString() + `
==============`))
            }

            setDebugLevel(e) {
                _8 = e
            }

            trimSpaces(e) {
                for (; e.length >= 0 && e[0] == " ";) e = e.substring(1);
                for (; e.length >= 0 && e[e.length - 1] == " ";) e = e.substring(0, e.length - 1);
                return e
            }

            getAnyPermitMethodInfoForMethod(e, r) {
                let l = [];
                for (let i of e) {
                    ln("Event: " + i.name + "  methods: " + JSON.stringify(i.permitMethods));
                    for (let o of i.permitMethods) o.method == r ? (O1("Found a permit of method=" + o.method + "  Permit=" + o.itemName), l.push(o)) : ln(`
====== AdmissionManager.getAnyPermitMethodInfoForMethod: Skipping a permit of method=` + o.method)
                }
                return l.length > 0 ? (ln(`
======= AdmissionManager There are ` + l.length + " permits of method " + r), l) : (ln(`
======= AdmissionManager There are no permits of method ` + r), null)
            }

            postGrant(e) {
                let r = {
                    context: this.context,
                    ethAddress: this.dclPlayer && this.dclPlayer.userData && this.dclPlayer.userData.publicKey ? this.dclPlayer.userData.publicKey : "0x0",
                    displayName: this.dclPlayer && this.dclPlayer.userData && this.dclPlayer.userData.displayName ? this.dclPlayer.userData.displayName : "",
                    eventName: e ? e.event : "unkown Response.event",
                    permitName: e ? e.permit : "unkown Response.permit",
                    method: e ? e.method : "unknown Resoonse.method",
                    admission: e ? e.admission : !1,
                    baseParcelX: this.dclPlayer.baseParcel.x,
                    baseParcelY: this.dclPlayer.baseParcel.y,
                    posX: this.dclPlayer.playerTransform.position.x,
                    posY: this.dclPlayer.playerTransform.position.y,
                    posZ: this.dclPlayer.playerTransform.position.z,
                    rotX: X2.toEulerAngles(this.dclPlayer.playerTransform.rotation).x,
                    rotY: X2.toEulerAngles(this.dclPlayer.playerTransform.rotation).y,
                    rotZ: X2.toEulerAngles(this.dclPlayer.playerTransform.rotation).z,
                    globalPosX: this.dclPlayer.globalPos.x,
                    globalPosZ: this.dclPlayer.globalPos.z,
                    realm: this.dclPlayer && this.dclPlayer.realmInfo && this.dclPlayer.realmInfo.realmName ? this.dclPlayer.realmInfo.realmName : "unknown",
                    timestamp: Date.now().toString(),
                    date: new Date().toString()
                };
                ln(`
==== postGrant will send ` + JSON.stringify(r)), this.restService.postDataToService("/postGrant", r)
            }

            fireAdmissionResult(e) {
                this.eventManager.fireEvent(new B5(this.context)), this.postGrant(e)
            }

            async getIsAllowed() {
                let e = {
                    admission: !0,
                    message: "",
                    context: this.context,
                    event: "uninitialized",
                    permit: "unintialized",
                    method: "uninitialized"
                }, r = !0;
                if (this.dclPlayer && this.dclPlayer.userData && this.dclPlayer.realmInfo && (r = this.dclPlayer.realmInfo.isPreview && !this.dclPlayer.userData.hasConnectedWeb3), ln(`
*** AdmissionManager.getIsAllowed()
 -- this.allowPreviewWithoutWeb3=` + this.allowPreviewWithoutWeb3 + "  isPreviewWithoutWeb3 " + r), r && this.allowPreviewWithoutWeb3) {
                    this.allowed = !0, e.admission = !0, e.event = "LOCAL", e.permit = "LOCAL", e.method = "LOCAL", O1(`
======= AdmissionManager IsAllowed TRUE because local allowed`), this.fireAdmissionResult(e);
                    return
                }
                if (ln("getMethods"), ln(`
======= AdmissionManager getMethods called at 
` + new Date().toString() + `
` + Date.now().toString() + `
============`), this.admissionMethodsResponse = await this.restService.getDataFromService("/getMethods/" + this.context), this.admissionMethodsResponse == null) {
                    Va(`
======= AdmissionManager getMethods server unresponsive, allow user, 
` + new Date().toString() + `
` + Date.now().toString() + `
============`), this.allowed = this.allowIfServerUnresponsive, this.fireAdmissionResult(e);
                    return
                }
                if (ln(`
======= AdmissionManager getMethods returned at 
` + new Date().toString() + `
` + Date.now().toString() + `
============`), ln(`
======= AdmissionManager getMethods returned` + JSON.stringify(this.admissionMethodsResponse)), this.admissionMethodsResponse.success == !1) {
                    this.allowed = !1, e.admission = !1, e.event = "NONE", e.permit = "NONE", e.method = "NONE", ln(`
======= AdmissionManager.getIsAllowed FALSE because server returned success==FALSE
admissionMethodsResponse=` + JSON.stringify(this.admissionMethodsResponse)), this.fireAdmissionResult(e);
                    return
                }
                if (this.admissionMethodsResponse.events.length == 0) {
                    this.allowed = !0, e.admission = !0, e.event = "NONE", e.permit = "NONE", e.method = "NONE", ln(`
======= AdmissionManager.getIsAllowed TRUE because there are no current, governing Events`), this.fireAdmissionResult(e);
                    return
                }
                let l = 0;
                for (let o of this.admissionMethodsResponse.events) l += o.permitMethods.length;
                if (l == 0) {
                    this.allowed = !1, e.admission = !1, e.message = "There are active events, but none of them have valid active permits, so we must be editing, admission = false", ln(`
======= AdmissionManager.getIsAllowed: ` + e.message), this.fireAdmissionResult(e);
                    return
                }
                let i = null;
                if (O1(`
======= AdmissionManager.getIsAllowed: Trying ADDRESS method for this user ` + this.user), i = this.getAnyPermitMethodInfoForMethod(this.admissionMethodsResponse.events, Ce.ADDRESS), i != null && (e = await this.restService.getDataFromService("/isAllowedByAddress/" + this.context + "/" + this.user), e.admission == !0)) {
                    this.allowed = !0, O1(`
======= AdmissionManager.getIsAllowed TRUE user's eth address is in a governing event's permit`), this.fireAdmissionResult(e);
                    return
                }
                if (O1(`
======= AdmissionManager.getIsAllowed: Trying TOKEN method`), this.cryptoManager) if (i = this.getAnyPermitMethodInfoForMethod(this.admissionMethodsResponse.events, Ce.TOKEN), i == null) ln(`
======= AdmissionManager.getIsAllowed: type TOKEN has no admissionMethods`); else if (ln(`
======= AdmissionManager.getIsAllowed: type TOKEN has ` + i.length + " admissionMethods"), ln(`
======= AdmissionManager.getIsAllowed: admissionMethods=` + JSON.stringify(i)), this.dclPlayer.userData && this.dclPlayer.userData.hasConnectedWeb3 && this.dclPlayer.userData.publicKey != null && this.dclPlayer.userData.publicKey != "0x0") {
                    let o = [];
                    for (let f of i) try {
                        if (f.tokenList && f.tokenList.length > 0) {
                            let s = f.tokenList;
                            for (let a of s) o.push(a)
                        }
                    } catch {
                        Va(`
======= AdmissionManager.getIsAllowed: error in handling of admissionMethods.tokenList`)
                    }
                    if (ln(`
======= AdmissionManager.getIsAllowed 9a: permits of type TOKEN have ` + o.length + " tokens to check in player's account"), ln(`
======= AdmissionManager.getIsAllowed 9b: tokensList=` + JSON.stringify(o)), o.length == 0) Va(`
======= AdmissionManager.getIsAllowed: there were TOKEN-method permits, but couldn't extract any TokenLists from them.`); else if ((await this.cryptoManager.whichOfTheseTokensInAccount(this.dclPlayer.userData.publicKey, o)).length > 0) {
                        this.allowed = !0, ln(`
======= AdmissionManager.getIsAllowed TRUE user's eth address has token(s) listed in a governing event's TOKEN permit`), this.fireAdmissionResult(e);
                        return
                    }
                } else ln(`
==== AdmissionManager.getIsAllowed user doesn't have web3 wallet connected, try other permit types...`);
                if (this.availableMethodInfo = this.getAnyPermitMethodInfoForMethod(this.admissionMethodsResponse.events, Ce.VOUCHER), this.availableMethodInfo == null ? this.availableMethodInfo = this.getAnyPermitMethodInfoForMethod(this.admissionMethodsResponse.events, Ce.PASSCODE) : this.availableVoucherMethodInfo = this.availableMethodInfo, this.availableMethodInfo == null ? this.availableMethodInfo = this.getAnyPermitMethodInfoForMethod(this.admissionMethodsResponse.events, Ce.CREDS) : this.availableCredsMethodInfo = this.availableMethodInfo, this.availableMethodInfo == null) {
                    this.allowed = !1, e.admission = !1, ln("@1 admissionResponse.admission=" + e.admission), e.event = r ? "NONE" : "SOME", e.permit = r ? "NONE" : "SOME", e.method = r ? "LOCAL" : "UNKNOWN", ln(`
======= AdmissionManager IsAllowed is FALSE either because local and LocalPreview not allowed, or there were governing events, but none containing applicable permits`), ln(`
======= AdmissionManager for admissionMethodsResponse=` + JSON.stringify(this.admissionMethodsResponse)), this.fireAdmissionResult(e), ln(`
======= AdmissionManager @9 admissionResponse.admission=` + e.admission);
                    return
                }
                ln("IsAllowed: Trying method " + this.availableMethodInfo[0].method), ln(`
*** getIsAllowed should call initialize`), this.ui && (ln(`
*** getIsAllowed calling initialize...`), this.ui.setupAndShow(this.availableMethodInfo[0].caption, this.availableMethodInfo[0].instructions, this.availableMethodInfo[0].errMsg, this.availableMethodInfo[0].labels))
            }

            isAllowed() {
                return this.allowed
            }
        };
        var D1 = class {
        };
        D1.url = "https://api2.extraterra.com/traffic", D1.context = "cc-cinema";
        var ja = !1, mw = {
            context: "test",
            ethAddress: "0x0",
            displayName: "",
            baseParcelX: 0,
            baseParcelY: 0,
            posX: 0,
            posY: 0,
            posZ: 0,
            rotX: 0,
            rotY: 0,
            rotZ: 0,
            globalPosX: 0,
            globalPosZ: 0,
            realm: "unrecorded",
            date: "",
            timestamp: ""
        }, Rr = class {
            constructor(e, r, l = D1.context, i = 0, o = 0) {
                this.dclPlayer = e;
                this.eventListener = new Ve;
                this.traffic = mw;
                ja && console.log(`
=== TrafficMonitor.constructor()`), this.traffic.context = l, this.trafficService = new Ge(D1.url), this.eventListener.addListener(l4, null, ({dclPlayer: f}) => {
                    this.dclPlayer == null && (this.dclPlayer = f), this.post()
                }), e.addListener(this.eventListener)
            }

            post() {
                ja && console.log(`
=== TrafficMonitor.post()`), this.dclPlayer.userData == null || this.dclPlayer.userData.publicKey == null ? (this.traffic.ethAddress = "0x0", this.traffic.displayName = "unknown") : (this.traffic.ethAddress = this.dclPlayer.userData.publicKey, this.dclPlayer.userData.displayName == null ? this.traffic.displayName = "" : this.traffic.displayName = this.dclPlayer.userData.displayName), this.traffic.context = D1.context, this.traffic.baseParcelX = this.dclPlayer.baseParcel.x, this.traffic.baseParcelY = this.dclPlayer.baseParcel.y, this.traffic.posX = this.dclPlayer.playerTransform.position.x, this.traffic.posY = this.dclPlayer.playerTransform.position.y, this.traffic.posZ = this.dclPlayer.playerTransform.position.z, this.traffic.rotX = X2.toEulerAngles(this.dclPlayer.playerTransform.rotation).x, this.traffic.rotY = X2.toEulerAngles(this.dclPlayer.playerTransform.rotation).y, this.traffic.rotZ = X2.toEulerAngles(this.dclPlayer.playerTransform.rotation).z, this.traffic.globalPosX = this.dclPlayer.globalPos.x, this.traffic.globalPosZ = this.dclPlayer.globalPos.z, this.traffic.date = new Date().toString(), this.traffic.timestamp = Date.now().toString(), this.dclPlayer.realmInfo != null ? this.traffic.realm = this.dclPlayer.realmInfo.realmName : this.traffic.realm = "unknown", ja && console.log(`
=== TrafficMonitor will post: ` + JSON.stringify(this.traffic)), this.trafficService.postDataToService("", this.traffic)
            }
        };
        var hw = -2, yw = .1;

        function gw(n) {
            for (let e in n) {
                let r = ge(2 + +e * yw, hw, 2, 0, 0, 0, 1, 1, 1);
                O3.setPbrMaterial(r, {
                    texture: {
                        tex: {
                            $case: "texture",
                            texture: {src: n[e], wrapMode: 1, filterMode: 1}
                        }
                    }
                })
            }
        }

        function Ag() {
            gw(["materials/stock-ui/up.png", "materials/stock-ui/down.png", "materials/stock-ui/exit.png", "materials/stock-ui/start.png", "materials/stock-ui/blank.png", "materials/stock-ui/cinema-SDK6-max.png", "materials/stock-ui/controller.png", "materials/stock-ui/dbl-left.png", "materials/stock-ui/dbl-right.png", "materials/stock-ui/down.png", "materials/stock-ui/exit.png", "materials/stock-ui/expand-corners.png", "materials/stock-ui/expand.png", "materials/stock-ui/game-ui-atlas.png", "materials/stock-ui/gear.png", "materials/stock-ui/info.png", "materials/stock-ui/left.png", "materials/stock-ui/menu.png", "materials/stock-ui/mute.png", "materials/stock-ui/n.png", "materials/stock-ui/pause.png", "materials/stock-ui/play.png", "materials/stock-ui/question.png", "materials/stock-ui/right.png", "materials/stock-ui/save.png", "materials/stock-ui/search.png", "materials/stock-ui/star.png", "materials/stock-ui/start.png", "materials/stock-ui/stop.png", "materials/stock-ui/trash.png", "materials/stock-ui/undo.png", "materials/stock-ui/unmute.png", "materials/stock-ui/up.png", "materials/stock-ui/White.png", "materials/stock-ui/wrench.png", "materials/stock-ui/x.png", "materials/stock-ui/y.png", "materials/stock-ui/pale_green.png", "materials/stock-ui/White.png", "materials/admission-manager/AdmissionManagerTicket.png", "materials/admission-manager/AdmissionManagerTicketButton.png", "materials/cf-shopping-cart/cf-shopping-cart-icon.png", "materials/payment-ui/PayPal.png"])
        }

        var Or = 1;

        function B1(...n) {
            Or >= 1 && console.log(...n)
        }

        function kg(...n) {
            Or >= 2 && console.log(...n)
        }

        function Mr(...n) {
            Or >= 3 && console.log(...n)
        }

        function Ig(n, e, r) {
            Ag(), n.sceneEventManager == null && (n.sceneEventManager = new Ve), n.sceneEventManager.addListener(l4, null, ({dclPlayer: l}) => {
                Mr(`
====== DCLPlayerUserEvent
*** env =` + l.envString + `

*** userData =` + JSON.stringify(l.userData) + `

*** userData.displayName =` + l.userData?.displayName + `

*** userData.publicKey =` + l.userData?.publicKey + `

*** realmInfo =` + JSON.stringify(l.realmInfo) + `

*** playerTransform =` + JSON.stringify(l.playerTransform) + `

*** cameraTransform =` + JSON.stringify(l.cameraTransform) + `

*** globalPos =` + JSON.stringify(l.globalPos) + `

`), n.trafficMonitor = new Rr(l, !1);
                let i = new _r;
                i.addListener(n.sceneEventManager), i.getSceneConfiguration(n.cfg), n.sceneEventManager || (n.sceneEventManager = new Ve)
            }), n.sceneEventManager.addListener(M5, null, ({sceneConfigurationResponse: l}) => {
                kg("========= DCL Scene Configuration Event ========="), l.success ? (n.cfg = l.configuration.cfg, Mr("Configuration  received from service, globals.cfg = " + JSON.stringify(n.cfg))) : (n.cfg = ug, B1("Configuration not received from service, using default globals.cfg = " + JSON.stringify(n.cfg))), "debugLevel" in n.cfg || (n.cfg.debugLevel = "debug" in n.cfg && n.cfg.debug ? 2 : 1), Or = n.cfg.debugLevel, "winter" in n.cfg || (n.cfg.winter = !1), "allowLocalAdminPermission" in n.cfg || (n.cfg.allowLocalAdminPermission = !0), n.allowAdministration = fg(n.dclPlayer, "sceneAdmins" in n.cfg ? n.cfg.sceneAdmins : void 0, n.cfg.allowLocalAdminPermission), "builderHUD" in n.cfg && n.cfg.builderHUD && v8(), "useScreen" in n.cfg || (n.cfg.useScreen = "screen" in n.cfg ? n.cfg.screeen : !1), e?.(), "allowLocalAdmission" in n.cfg && (n.sceneAdmissionManager || (n.sceneAdmissionManager = new Nr(v4.context, n.sceneEventManager, n.dclPlayer, null, n.cfg.allowLocalAdmission, n.cfg.allowIfServerUnresponsive, n.cfg.debugLevel)), n.sceneEventManager.addListener(B5, null, ({context: i}) => {
                    kg("===== scene received AdmissionManagerDataEvent: context=" + i + "   isAllowed =", n.sceneAdmissionManager.isAllowed()), r?.()
                }), n.sceneAdmissionManager.initialize())
            }), n.dclPlayer = new Cr(n.sceneEventManager, 1, !1)
        }

        var Z4 = class {
        };
        Z4.url = "https://api2.extraterra.com/guestbook", Z4.context = "cc-cinema";
        var xw = 1;

        function F1(...n) {
            xw >= 2 && console.log(...n)
        }

        var bw = {
            context: "test",
            ethAddress: "0x0",
            displayName: "TestAvatar",
            baseParcelX: 0,
            baseParcelY: 0,
            posX: 0,
            posY: 0,
            posZ: 0,
            rotX: 0,
            rotY: 0,
            rotZ: 0,
            globalPosX: 0,
            globalPosZ: 0,
            realm: "unrecorded",
            date: "",
            timestamp: "",
            annotation: "",
            data: {}
        };
        var Dr = class {
            constructor(e, r, l, i, o, f, s, a, g, b, B, w, P, D, T, k, R, G, Z, S2, D2, T2, l2, b2, g2, p2, O, J, h2, y2) {
                this.dclPlayer = e;
                this.guest = bw;
                this.guestbookService = new Ge(Z4.url), this.rootEntity = ce(s, a, g, b, B, w, P, D, T, "", r), F1(`
*** GuestBook root Transform = ` + JSON.stringify(Y2.get(this.rootEntity))), l == null && (l = ""), this.sign = new gl(this.rootEntity, Z, S2, D2, T2, l2, b2, g2, p2, O, l), F1(`
*** GuestBook CFBTS.root Transform = ` + JSON.stringify(Y2.get(this.sign.rootEntity))), F1(`
*** GuestBook CFBTS.sign Transform = ` + JSON.stringify(Y2.get(this.sign.panel))), F1(`
*** GuestBook CFBTS.panel Transform = ` + JSON.stringify(Y2.get(this.sign.text))), F1(`
*** GuestBook entities parent= ` + r + "  CFBTS.root=" + this.rootEntity + "   sign.root=" + this.sign.rootEntity + "   sign.panel=" + this.sign.panel + "   sign.text=" + this.sign.text), this.sign.setColor(i), this.sign.setTextColor(o), this.sign.setFontSize(f), Hn.onPointerDown({
                    entity: this.sign.panel,
                    opts: {button: jn.IA_POINTER, hoverText: "Click here to sign", maxDistance: 32}
                }, k2 => {
                    F1(`
*** clicked entity: ` + JSON.stringify(k2)), F1(`
*** e.hit.meshName=` + (k2.hit ? k2.hit.meshName : "no e.hit")), this.post("GuestBookV2", {})
                })
            }

            post(e = "", r = {}) {
                this.guest.ethAddress = this.dclPlayer.userData && this.dclPlayer.userData.publicKey != null ? this.dclPlayer.userData.publicKey : "0x0", this.guest.displayName = this.dclPlayer.userData && this.dclPlayer.userData.displayName != null ? this.dclPlayer.userData.displayName : "unknown", this.guest.context = Z4.context, this.guest.baseParcelX = this.dclPlayer.baseParcel.x, this.guest.baseParcelY = this.dclPlayer.baseParcel.y, this.guest.posX = this.dclPlayer.playerTransform.position.x, this.guest.posY = this.dclPlayer.playerTransform.position.y, this.guest.posZ = this.dclPlayer.playerTransform.position.z, this.guest.rotX = X2.toEulerAngles(this.dclPlayer.playerTransform.rotation).x, this.guest.rotY = X2.toEulerAngles(this.dclPlayer.playerTransform.rotation).y, this.guest.rotZ = X2.toEulerAngles(this.dclPlayer.playerTransform.rotation).z, this.guest.globalPosX = this.dclPlayer.globalPos.x, this.guest.globalPosZ = this.dclPlayer.globalPos.z, this.guest.date = new Date().toString(), this.guest.timestamp = Date.now().toString(), this.guest.realm = this.dclPlayer.realmInfo ? this.dclPlayer.realmInfo.realmName : "unknown", this.guest.annotation = e, this.guest.data = r, F1("postGuest() of ", this.guest), this.guestbookService.postDataToService("/guest", this.guest)
            }
        };
        var g6 = class {
        };
        g6.url = "https://api2.extraterra.com/admission-sales", g6.context = "cc-cinema-test";
        var Ng = !1, Br = class {
            constructor() {
                this.restService = new Ge(g6.url), Ng && console.log("AdmissionSalesManager constructor")
            }

            async getPurchasablePermits(e, r) {
                let l = {contexts: [], includeFuture: r};
                for (let o of e) l.contexts.push(o);
                return await this.restService.postDataToService("/getPurchasablePermits", l)
            }

            async addAddresses(e, r) {
                return await this.restService.postDataToService("/addAddresses/" + e, r)
            }

            async addVouchers(e, r) {
                return Ng && console.log(`
*** AddmissionSalesManager.addVouchers permit=` + e + `  
vouchers=` + JSON.stringify(r)), await this.restService.postDataToService("/addVouchers/" + e, r)
            }

            async addCreds(e, r) {
                return await this.restService.postDataToService("/addCreds/" + e, r)
            }
        };
        var Ug = require("~system/Runtime"), Lg = require("~system/UserIdentity");
        var zg = require("~system/RestrictedActions");
        var L3 = class {
        };
        L3.STOPPED = "STOPPED", L3.PAUSED = "PAUSED", L3.PLAYING = "PLAYING";
        var T3 = class {
        };
        T3.PRIVATE = "PRIVATE", T3.GROUP = "GROUP", T3.ONDEMAND = "ONDEMAND", T3.BROADCAST = "BROADCAST", T3.SCHEDULED = "SCHEDULED", T3.LOOPED = "LOOPED";
        var Q4 = class {
        };
        Q4.url = "https://api2.extraterra.com/cinema", Q4.context = "cc-cinema", Q4.helpURL = "https://dclconf.com/movie-controls/";
        var Rg = {
            context: "cc-test",
            description: "Context for initial testing of a CinemaClient working with the cinema-service",
            mode: "ONDEMAND",
            catalogID: "cc-local",
            scheduledStartTimestamp: "0",
            maxIdleTime: 5e3
        }, Mg = {
            catalogID: "cc-local",
            films: [{
                title: "Crypto Plus Virtual Worlds (Local)",
                slugline: "A talk given Sept 2020 by Carl Fravel for the Crypto College launch of the Decentraland University",
                start: 0,
                duration: 39e4,
                genres: ["Educational"],
                tags: [],
                resource: "https://extraterra-files.nyc3.digitaloceanspaces.com/video/CarlFravel/DCLU_Crypto_College_talk_Carl_Fravel/DCLU_Crypto_College_talk_Carl_Fravel.m3u8"
            }, {
                title: "The Dragon's Dream (Local)",
                slugline: "What a dragon dreamed once upon a time",
                start: 0,
                duration: 178e3,
                genres: ["Fantasy"],
                tags: [],
                resource: "https://extraterra-files.nyc3.digitaloceanspaces.com/video/CarlFravel/TheDragonsDream/TheDragonsDream.m3u8"
            }, {
                title: "The Park (Local)",
                slugline: "A video painted portrait of a young boy.  A film by Carl Fravel",
                start: 0,
                duration: 62e3,
                genres: ["Drama"],
                tags: [],
                resource: "https://extraterra-files.nyc3.digitaloceanspaces.com/video/CarlFravel/The_Park_intro/The_Park_intro.m3u8"
            }]
        }, Og = {
            context: "cc-test",
            realm: "localhost-stub",
            catalogID: "cc-test",
            catalogIndex: 0,
            currentOffset: 0,
            idleTime: 0,
            transportState: L3.STOPPED,
            ethAddress: "0x0",
            displayName: "Guest"
        };

        function Dg(n = "") {
            let e = "NO STACK TRACE";
            try {
                e = Error("Stack Trace").stack
            } catch {
            }
            console.log(`
*** StackTrace(` + n + ") " + e)
        }

        var Ja = 1;

        function xe(...n) {
            Ja >= 1 && console.log(...n)
        }

        function Nn(...n) {
            Ja >= 2 && console.log(...n)
        }

        function L1(...n) {
            Ja >= 3 && console.log(...n)
        }

        var Ew = 39, Tw = 300, Sw = 19;
        var z1 = class {
        };
        z1.STOP = "STOP", z1.PAUSE = "PAUSE", z1.PLAY = "PLAY";
        var Bg = new Ge(Q4.url), ww = 242, vw = 334, Cw = 0, _w = 199, Pw = 40, Aw = 52, kw = 0, Iw = 199, t4 = 29,
            r4 = 29;
        var Fr = 206, Nw = 172, Rw = 138, Mw = 105, Ow = 72, Dw = 38, Wg = 5, Bw = 295, Fw = 285, Uw = 175, Lw = 132,
            zw = 57, U1 = 17, Hg = 1, Ww = 10, Hw = 100, Vw = 25, Gw = 18, jw = 0, qw = 23, Yw = 18, Jw = 70, Xw = 23,
            Kw = 18, Zw = 9, Qw = 5, $w = 194, nv = 228, ev = 40, lv = 87, tv = 140, rv = 188, uv = 9, ov = 38,
            Ur = "min", Fg = 0;

        function F5(n, e) {
            return n ? L2.createElement(sn, {
                value: e.value,
                onMouseDown: e.onMouseDown,
                color: e.color,
                uiTransform: {
                    positionType: e.uiTransform.positionType,
                    width: e.uiTransform.width,
                    height: e.uiTransform.height,
                    position: {right: e.uiTransform.position.right, bottom: e.uiTransform.position.bottom},
                    pointerFilter: "block"
                },
                uiBackground: {
                    color: e.uiBackground.color,
                    texture: {src: e.uiBackground.texture.src},
                    textureMode: e.uiBackground.textureMode
                }
            }) : L2.createElement(H3, null)
        }

        function iv() {
            return bn ? j3 ? j3.videoControls ? bn && j3.videoControls ? L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: ww,
                    height: vw,
                    position: {right: Cw, bottom: _w},
                    pointerFilter: "block"
                }, uiBackground: {color: q.Black()}
            }, L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: Hw,
                    height: Vw,
                    position: {right: Ww, bottom: Bw},
                    pointerFilter: "block"
                }
            }, L2.createElement(ue, {
                value: bn.captionLabel,
                color: q.White(),
                fontSize: Gw,
                font: "sans-serif",
                textAlign: "middle-center"
            })), L2.createElement(sn, {
                value: "",
                onMouseDown: () => {
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: $w,
                    height: nv,
                    position: {right: Qw, bottom: zw},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/blank.png"}, textureMode: "stretch"}
            }), L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: tv,
                    height: rv,
                    position: {right: ev, bottom: lv},
                    pointerFilter: "block"
                }
            }, L2.createElement(ue, {
                value: bn.getCatalogText(),
                color: bn.getCatalogTextColor(),
                fontSize: uv,
                font: "sans-serif",
                textAlign: "top-left"
            })), L2.createElement(sn, {
                value: "",
                onMouseDown: () => {
                    (0, zg.openExternalUrl)({url: Q4.helpURL})
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: t4,
                    height: r4,
                    position: {right: Fr, bottom: Fw},
                    pointerFilter: "block"
                },
                uiBackground: {
                    color: q.White(),
                    texture: {src: "materials/stock-ui/question.png"},
                    textureMode: "stretch"
                }
            }), F5(bn.cinemaClient.enableAdminControls || bn.cinemaClient?.context.mode == T3.ONDEMAND || j3.context.mode == T3.GROUP || j3.context.mode == T3.PRIVATE, {
                value: "",
                onMouseDown: () => {
                    bn.catalogDisplayIndex > 0 && (bn.catalogDisplayIndex--, bn.updateUi())
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: t4,
                    height: r4,
                    position: {right: Fr, bottom: Uw},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/up.png"}, textureMode: "stretch"}
            }), F5(bn.cinemaClient.enableAdminControls || bn.cinemaClient?.context.mode == T3.ONDEMAND || j3.context.mode == T3.GROUP || j3.context.mode == T3.PRIVATE, {
                value: "",
                onMouseDown: () => {
                    bn.catalogDisplayIndex < j3.catalog.films.length - 1 && (bn.catalogDisplayIndex++, console.log(`
*** CinemaControls down/next:
theCinemaControls.catalogDisplayIndex=` + bn.catalogDisplayIndex + `
theCinemaClient.catalog.films.length=` + j3.catalog.films.length), bn.updateUi())
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: t4,
                    height: r4,
                    position: {right: Fr, bottom: Lw},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/down.png"}, textureMode: "stretch"}
            }), F5(bn.cinemaClient.enableAdminControls || bn.cinemaClient?.context.mode == T3.ONDEMAND || j3.context.mode == T3.GROUP || j3.context.mode == T3.PRIVATE, {
                value: "",
                onMouseDown: () => {
                    j3.stopCommand()
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: t4,
                    height: r4,
                    position: {right: Fr, bottom: U1},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/stop.png"}, textureMode: "stretch"}
            }), F5(bn.cinemaClient.enableAdminControls || bn.cinemaClient?.context.mode == T3.ONDEMAND || j3.context.mode == T3.GROUP || j3.context.mode == T3.PRIVATE, {
                value: "",
                onMouseDown: () => {
                    j3.backCommand(bn.catalogDisplayIndex)
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: t4,
                    height: r4,
                    position: {right: Nw, bottom: U1},
                    pointerFilter: "block"
                },
                uiBackground: {
                    color: q.White(),
                    texture: {src: "materials/stock-ui/dbl-left.png"},
                    textureMode: "stretch"
                }
            }), F5(bn.cinemaClient.enableAdminControls || bn.cinemaClient?.context.mode == T3.ONDEMAND || j3.context.mode == T3.GROUP || j3.context.mode == T3.PRIVATE, {
                value: "",
                onMouseDown: () => {
                    j3.pauseCommand()
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: t4,
                    height: r4,
                    position: {right: Rw, bottom: U1},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/pause.png"}, textureMode: "stretch"}
            }), F5(bn.cinemaClient.enableAdminControls || bn.cinemaClient?.context.mode == T3.ONDEMAND || j3.context.mode == T3.GROUP || j3.context.mode == T3.PRIVATE, {
                value: "",
                onMouseDown: () => {
                    j3.playCommand(bn.catalogDisplayIndex)
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: t4,
                    height: r4,
                    position: {right: Mw, bottom: U1},
                    pointerFilter: "block"
                },
                uiBackground: {color: q.White(), texture: {src: "materials/stock-ui/right.png"}, textureMode: "stretch"}
            }), F5(bn.cinemaClient.enableAdminControls || bn.cinemaClient?.context.mode == T3.ONDEMAND || j3.context.mode == T3.GROUP || j3.context.mode == T3.PRIVATE, {
                value: "",
                onMouseDown: () => {
                    j3.forwardCommand(bn.catalogDisplayIndex)
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: t4,
                    height: r4,
                    position: {right: Ow, bottom: U1},
                    pointerFilter: "block"
                },
                uiBackground: {
                    color: q.White(),
                    texture: {src: "materials/stock-ui/dbl-right.png"},
                    textureMode: "stretch"
                }
            }), L2.createElement(sn, {
                value: "",
                onMouseDown: () => {
                    j3.toggleScreenPosition()
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: t4,
                    height: r4,
                    position: {right: Dw, bottom: U1},
                    pointerFilter: "block"
                },
                uiBackground: {
                    color: q.White(),
                    texture: {src: "materials/stock-ui/expand-corners.png"},
                    textureMode: "stretch"
                }
            }), L2.createElement(sn, {
                value: "ToggleMode",
                onMouseDown: () => {
                    Ur = "min"
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: t4,
                    height: r4,
                    position: {right: Wg, bottom: U1},
                    pointerFilter: "block"
                },
                uiBackground: {
                    color: q.White(),
                    texture: {src: "materials/stock-ui/expand.png"},
                    textureMode: "stretch"
                }
            }), L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: Xw,
                    height: Kw,
                    position: {right: Jw, bottom: Hg},
                    pointerFilter: "block"
                }
            }, L2.createElement(ue, {
                value: bn.maximizedLabel,
                color: q.White(),
                fontSize: Zw,
                font: "sans-serif",
                textAlign: "middle-center"
            }))) : L2.createElement(H3, null) : (xe(`
*** renderMaximizedCinemaControls  theCinemaClient.cinemaControls is undefined`), L2.createElement(H3, null)) : (xe(`
*** renderMaximizedCinemaControls  theCinemaClient is undefined`), L2.createElement(H3, null)) : (xe(`
*** renderMaximizedCinemaControls  theCinemaControls is undefined`), L2.createElement(H3, null))
        }

        function av() {
            return L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: Pw,
                    height: Aw,
                    position: {right: kw, bottom: Iw},
                    pointerFilter: "block"
                }, uiBackground: {color: q.Black()}
            }, L2.createElement(sn, {
                value: "ToggleMode",
                onMouseDown: () => {
                    Ur = "max"
                },
                color: q.fromHexString("#FFFFFF00"),
                uiTransform: {
                    positionType: "absolute",
                    width: t4,
                    height: r4,
                    position: {right: Wg, bottom: U1},
                    pointerFilter: "block"
                },
                uiBackground: {
                    color: q.White(),
                    texture: {src: "materials/stock-ui/expand.png"},
                    textureMode: "stretch"
                }
            }), L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: qw,
                    height: Yw,
                    position: {right: jw, bottom: Hg},
                    pointerFilter: "block"
                }
            }, L2.createElement(ue, {
                value: j3.context.mode == T3.BROADCAST ? "Stream" : "Movies",
                color: q.White(),
                fontSize: 9,
                font: "sans-serif",
                textAlign: "middle-center"
            })))
        }

        function sv() {
            switch (Ur) {
                default:
                case"min":
                    return av();
                case"max":
                    return iv()
            }
        }

        var bn, qa = class {
            constructor(e) {
                this.catalogDisplayIndex = 0;
                this.uiMaximized = !1;
                this.maximizedLabel = "Uninitialized";
                this.minimizedLabel = "Uninitialized";
                this.captionLabel = "Uninitialized";
                this.maximizeButton = "materials/stock-ui/expand.png";
                this.minimizeButton = "materials/stock-ui/expand.png";
                this.upButton = "materials/stock-ui/up.png";
                this.upButtonVisible = !1;
                this.downButton = "materials/stock-ui/down.png";
                this.downButtonVisible = !1;
                this.helpButton = "materials/stock-ui/question.png";
                this.backButtonVisible = !1;
                this.forwardButtonVisible = !1;
                this.stopButtonVisible = !1;
                this.pauseButtonVisible = !1;
                this.playButtonVisible = !1;
                this.backButton = "materials/stock-ui/dbl-left.png";
                this.playButton = "materials/stock-ui/right.png";
                this.pauseButton = "materials/stock-ui/pause.png";
                this.stopButton = "materials/stock-ui/stop.png";
                this.forwardButton = "materials/stock-ui/dbl-right.png";
                this.fullscreenButton = "materials/stock-ui/expand-corners.png";
                this.catalogDisplay = "materials/stock-ui/blank.png";
                this.catalogText = "Uninitialized";
                this.catalogTextColor = q.White();
                this.displayCount = 1;
                e && this.setupCinemaClient(e)
            }

            setupCinemaClient(e) {
                this.cinemaClient = e, bn = this, Nn(`
*** CinemaControls ctr: theCinemaControls==` + bn), Fg == 0 && (Fg = Dt(sv))
            }

            setCinemaClient(e) {
                this.setupCinemaClient(e)
            }

            durationString(e) {
                let r = "", l = Math.floor(e / 36e5), i = "0" + l + ":";
                r += i.substr(i.length - 3, 3), e -= 36e5 * l;
                let o = Math.floor(e / 6e4);
                return i = "0" + o + ":", r += i.substr(i.length - 3, 3), e -= 6e4 * o, i = "0" + Math.floor(e / 1e3), r += i.substr(i.length - 2, 2), r
            }

            setupDisplayLabels() {
                if (this.cinemaClient && this.captionLabel && this.maximizedLabel && this.minimizedLabel) switch (this.cinemaClient.context.mode) {
                    case T3.ONDEMAND:
                    case T3.GROUP:
                        this.captionLabel = "Movie Selection", this.maximizedLabel = "Group Movie Controls", this.minimizedLabel = "Movies";
                        break;
                    case T3.PRIVATE:
                        this.captionLabel = "Movie Selection", this.maximizedLabel = "Private Movie Controls", this.minimizedLabel = "Movies";
                        break;
                    case T3.BROADCAST:
                        this.captionLabel = "Currently Playing", this.maximizedLabel = "Currently Streaming", this.minimizedLabel = "Stream";
                        break;
                    case T3.SCHEDULED:
                        this.captionLabel = "Currently Playing", this.maximizedLabel = "Scheduled Movies", this.minimizedLabel = "Movies";
                        break;
                    case T3.LOOPED:
                        this.captionLabel = "Currently Playing", this.maximizedLabel = "Movie Loop", this.minimizedLabel = "Movies";
                        break
                } else xe("setupDisplayLabels called with undefined UI elements")
            }

            updateUi() {
                if (!this.cinemaClient) {
                    xe("updateCinemaControls called before cinemaControls has been set");
                    return
                }
                if (this.catalogDisplayIndex >= this.cinemaClient.catalog.films.length) {
                    xe("updateCinemaControls detects that index is " + this.catalogDisplayIndex + " but # films is " + this.cinemaClient.catalog.films.length);
                    return
                }
                if (this.catalogDisplayIndex < 0) {
                    xe("updateCinemaControls detects that index is negative: " + this.catalogDisplayIndex + " but # films is " + this.catalogDisplayIndex);
                    return
                }
                L1(`
----- 
updateUi()
mode=` + this.cinemaClient.context.mode + "    transport=" + this.cinemaClient.state.transportState + `
index = ` + this.catalogDisplayIndex + " film:=" + this.cinemaClient.catalog.films[this.catalogDisplayIndex].title + `
num films in catalog = ` + this.cinemaClient.catalog.films.length + `
offset = ` + this.durationString(this.cinemaClient.state.currentOffset) + " UTC Timestamp=" + new Date().getTime());
                let e = this.displayCount, r = this.durationString(this.cinemaClient.state.currentOffset);
                if (this.setupDisplayLabels(), this.catalogText && this.catalogText.length > 0) {
                    if (this.cinemaClient.catalog != null && this.cinemaClient.catalog.films.length > 0) {
                        this.catalogText = this.cinemaClient.catalog.films[this.catalogDisplayIndex].title.substr(0, Ew) + `

`, this.catalogText += fv(this.cinemaClient.catalog.films[this.catalogDisplayIndex].slugline.substr(0, Tw), ov) + `

`;
                        let l = "";
                        for (let i of this.cinemaClient.catalog.films[this.catalogDisplayIndex].genres) l = l + i + " ";
                        if (this.catalogText += l.substr(0, Sw) + `
`, this.catalogText += this.durationString(this.cinemaClient.catalog.films[this.catalogDisplayIndex].duration), this.cinemaClient.state.catalogIndex == this.catalogDisplayIndex) switch (this.cinemaClient.state.transportState) {
                            case L3.PLAYING:
                                this.catalogText += `  Playing
` + this.durationString(this.cinemaClient.state.currentOffset) + `
`;
                                break;
                            case L3.PAUSED:
                                this.catalogText += `  Paused
` + this.durationString(this.cinemaClient.state.currentOffset) + `
`;
                                break;
                            case L3.STOPPED:
                                this.catalogText += `  Stopped
`;
                                break;
                            default:
                                break
                        }
                        L1(`
*** CinemaClient.updateUi has prepared the following string for the catalog display for this.catalogDisplayIndex=` + this.catalogDisplayIndex + `
` + this.catalogText)
                    } else this.catalogText = `No catalog has been provided
for this theater.`;
                    if (this.cinemaClient.state.catalogIndex == this.catalogDisplayIndex) switch (this.cinemaClient.state.transportState) {
                        case L3.STOPPED:
                            this.catalogTextColor = q.Red();
                            break;
                        case L3.PAUSED:
                            this.catalogTextColor = q.Yellow();
                            break;
                        case L3.PLAYING:
                            this.catalogTextColor = q.Green();
                            break;
                        default:
                            break
                    } else this.catalogTextColor = q.White()
                } else Nn("updateCinemaControls called with this.catalogText UI element undefined");
                if (this.downButton && this.upButton && this.backButton && this.forwardButton && this.stopButton && this.pauseButton && this.playButton) {
                    this.downButtonVisible = (this.cinemaClient.context.mode == T3.ONDEMAND || this.cinemaClient.context.mode == T3.GROUP || this.cinemaClient.context.mode == T3.PRIVATE || this.cinemaClient.context.mode == T3.SCHEDULED || this.cinemaClient.context.mode == T3.LOOPED || this.cinemaClient.enableAdminControls) && this.catalogDisplayIndex < this.cinemaClient.catalog.films.length - 1, this.upButtonVisible = (this.cinemaClient.context.mode == T3.ONDEMAND || this.cinemaClient.context.mode == T3.GROUP || this.cinemaClient.context.mode == T3.PRIVATE || this.cinemaClient.context.mode == T3.SCHEDULED || this.cinemaClient.context.mode == T3.LOOPED || this.cinemaClient.enableAdminControls) && this.catalogDisplayIndex > 0;
                    let l = (this.cinemaClient.context.mode == T3.ONDEMAND || j3.context.mode == T3.GROUP || j3.context.mode == T3.PRIVATE) && (this.cinemaClient.state.transportState == L3.STOPPED || this.cinemaClient.displayName == this.cinemaClient.state.displayName || this.cinemaClient.state.displayName == "") || (this.cinemaClient.context.mode == T3.BROADCAST || this.cinemaClient.context.mode == T3.SCHEDULED || this.cinemaClient.context.mode == T3.LOOPED) && this.cinemaClient.enableAdminControls;
                    this.backButtonVisible = l, this.forwardButtonVisible = l, this.stopButtonVisible = l, this.pauseButtonVisible = l, this.playButtonVisible = l
                } else xe("updateCinemaControls called with UI buttons undefined");
                this.displayCount++
            }

            getCatalogText() {
                return this.catalogText
            }

            selectPrevious() {
                this.cinemaClient && this.catalogDisplayIndex > 0 && (this.catalogDisplayIndex--, this.cinemaClient.updateUis())
            }

            selectNext() {
                this.cinemaClient && this.catalogDisplayIndex < this.cinemaClient.catalog.films.length - 1 && (this.catalogDisplayIndex++, this.cinemaClient.updateUis())
            }

            getMinimizedLabel() {
                return this.maximizedLabel
            }

            getMaximizedLabel() {
                return this.maximizedLabel
            }

            getCatalogTextColor() {
                return this.catalogTextColor
            }

            getCatalogDisplayIndex() {
                return this.catalogDisplayIndex
            }

            setCatalogDisplayIndex(e) {
                this.catalogDisplayIndex = e
            }
        };
        var U5 = class {
            constructor(e, r, l) {
                this.type = e;
                this.film = r;
                this.offset = l
            }
        };
        U5 = Ne([Oe()], U5);
        var Ya = class {
            constructor(e, r, l = !1, i = null, o = null, f = !0, s = !0) {
                this.screens = e;
                this.mainScreenParent = r;
                this.enableAdminControls = l;
                this.videoControls = i;
                this.setHouseLights = o;
                this.useService = f;
                this.mustClickOnSceneToPlay = s;
                this.firstPoll = !0;
                this.realm = "";
                this.catalogJustLoaded = !1;
                this.enabled = !0;
                this.videoPlayerEntity = void 0;
                this.screenNormalPosition = !0;
                this.processingPoll = !1;
                this.refreshInterval = .3;
                this.refreshTimer = this.refreshInterval;
                this.listeners = [];
                this.auxPlayButton = void 0;
                this.pollCount = 0;
                this.numPolls = 5;
                L1(`
*** CinemaClient instantiated, with enableAdminControls=` + l), this.context = Rg, this.catalog = Mg, this.state = Og, this.context.context = Q4.context, this.screens = e, this.normalTransform = Y2.get(e[0]), this.getRealmInfo(), this.getUserInfo(), j3 = this, (this.videoControls == null || this.videoControls.length == 0) && (this.videoControls = [new qa(this)]), A2.addSystem(cv)
            }

            setScreenPositionNormal() {
                Y2.createOrReplace(this.screens[0], this.normalTransform), this.screenNormalPosition = !0
            }

            setScreenPositionFull() {
                Y2.createOrReplace(this.screens[0], {
                    parent: A2.CameraEntity,
                    position: {x: 0, y: 0, z: 1 / 2 ** .5},
                    rotation: X2.fromEulerDegrees(0, 0, 0),
                    scale: {x: 1.6, y: .9, z: 1}
                }), this.screenNormalPosition = !1
            }

            presentAuxPlayButton() {
                console.log(`
*** CinemaClient: create 3DControls`), this.auxPlayButton && A2.removeEntityWithChildren(this.auxPlayButton), this.auxPlayButton = ge(0, 0, .95 / 2 ** .5, 0, 0, 0, .25, .1, 1, "e3DControls", A2.CameraEntity), O3.setPbrMaterial(this.auxPlayButton, {
                    albedoColor: q.Gray(),
                    roughness: 1,
                    metallic: 0
                }), Hn.onPointerDown({
                    entity: this.auxPlayButton,
                    opts: {button: jn.IA_POINTER, hoverText: "Click to close this", maxDistance: 32}
                }, r => {
                    A2.removeEntityWithChildren(this.auxPlayButton)
                });
                let e = A2.addEntity();
                Y2.create(e, {parent: this.auxPlayButton, position: C2.create(0, 0, -.01)}), $l.create(e, {
                    text: `Click here
to start
the video`, fontSize: 1.8
                })
            }

            toggleScreenPosition() {
                if (!Y2.has(A2.PlayerEntity)) {
                    xe(`
*** PlayerEntity has no Transform`);
                    return
                }
                if (!Y2.has(A2.CameraEntity)) {
                    xe(`
*** CameraEntity has no Transform`);
                    return
                }
                let e = l8.get(A2.CameraEntity).mode;
                if (Y2.getMutableOrNull(this.screens[0]) == null) {
                    xe(`
*** toggleScreenPosition: screens[0] had no Transform`);
                    return
                }
                if (this.screenNormalPosition) {
                    if (e != r8.CT_FIRST_PERSON) {
                        zy(`For fullscreen viewing,
you must be in First-Person mode
(Press the v key)`, 6);
                        return
                    }
                    this.setScreenPositionFull()
                } else this.setScreenPositionNormal()
            }

            getVideoControls() {
                return this.videoControls
            }

            async getRealmInfo() {
                let e = await (0, Ug.getRealm)({});
                this.realm = e && e.realmInfo ? e.realmInfo.realmName : "unknown", (this.realm.substr(0, 4) == "127." || this.realm.substr(0, 4) == "http" || this.realm.substr(0, 5).toLowerCase() == "local") && (this.realm = "localPreview")
            }

            async getUserInfo() {
                try {
                    It(async () => {
                        let e = await (0, Lg.getUserData)({}), r = e.data && e.data.publicKey ? e.data.publicKey : null;
                        r == null ? this.ethAddress = "0x0" : this.ethAddress = r.toLowerCase(), Nn("CinemaClient.ethAddress =", this.ethAddress), this.displayName = e.data ? e.data.displayName : "unknown", Nn("CinemaClient.ethAddress =", this.displayName)
                    })
                } catch (e) {
                    e instanceof Error && xe("getUserInfo.getUserPublicKey err =", e.message), this.ethAddress = "0x0", this.displayName = "unknown", Nn("DisplayName = ", this.displayName), Nn("CinemaClient.ethAddress =", this.ethAddress)
                }
            }

            loadVideo(e, r = -1) {
                if (r < 2 * this.refreshInterval && (r = 0), Nn("LOAD index=" + e + " at offset " + r), e == null) {
                    Nn("LOAD loadVideo called with null argument, doing nothing on this call");
                    return
                }
                if (this.state.catalogIndex = e, this.catalog == null) Nn("loadVideo called before catalog obtained"); else {
                    if (this.videoPlayerEntity) {
                        Nn("Had previous this.videoPlayerEntity = " + this.videoPlayerEntity);
                        let o = v5.getOrCreateMutable(this.videoPlayerEntity);
                        o.playing = !1
                    }
                    this.videoPlayerEntity = A2.addEntity(), Nn("New videoPlayerEntity = " + this.videoPlayerEntity);
                    let l = v5.createOrReplace(this.videoPlayerEntity, {
                        src: this.catalog.films[this.state.catalogIndex].resource,
                        playing: !1,
                        volume: 1,
                        position: 0
                    });
                    for (let o of this.screens) {
                        if (O3.has(o)) {
                            let f = O3.get(this.screens[0]);
                            L1("loadVideo 4b Screen had material: " + JSON.stringify(f)), L1("loadVideo 4b. Deleting Material from screen"), O3.deleteFrom(o)
                        }
                        O3.setPbrMaterial(o, {
                            texture: O3.Texture.Video({videoPlayerEntity: this.videoPlayerEntity}),
                            emissiveTexture: O3.Texture.Video({videoPlayerEntity: this.videoPlayerEntity}),
                            emissiveColor: x4.White(),
                            emissiveIntensity: 1,
                            specularIntensity: 0,
                            metallic: 0,
                            roughness: 1
                        })
                    }
                    let i = v5.getOrCreateMutable(this.videoPlayerEntity);
                    i.playing = !1, i.src = this.catalog.films[this.state.catalogIndex].resource, i.position = 0, i.volume = 1, this.state.transportState = L3.STOPPED
                }
            }

            playVideo() {
                if (Nn("PLAY"), !this.videoPlayerEntity) {
                    xe(`
*** Internal error: videoPlayerEntity should have been defined by loadVideo`);
                    return
                }
                let e = v5.getOrCreateMutable(this.videoPlayerEntity);
                e.playing = !0, this.state.transportState = L3.PLAYING, this.updateUis(), this.setHouseLights != null && this.context.mode != T3.BROADCAST && this.setHouseLights(!1), this.fireEvents(L3.PLAYING)
            }

            pauseVideo() {
                if (Nn("PAUSE"), !this.videoPlayerEntity) {
                    xe(`
*** pauseVideo when no this.videoPlayerEntity`);
                    return
                }
                if (this.firstPoll && this.loadVideo(this.state.catalogIndex, this.state.currentOffset / 1e3), this.state.transportState == L3.PLAYING || this.state.transportState == L3.PAUSED) {
                    L1(`
*** PauseVideo finds the state to be ` + this.state.transportState + ", so pausing...");
                    let e = v5.getOrCreateMutable(this.videoPlayerEntity);
                    e.playing = !1, this.state.transportState == L3.PAUSED, this.updateUis(), this.fireEvents(L3.PAUSED)
                } else L1(`
*** PauseVideo finds the state to be ` + this.state.transportState + ", so not pausing...")
            }

            stopVideo(e) {
                if (Nn("STOP"), !this.videoPlayerEntity) return;
                let r = v5.getOrCreateMutable(this.videoPlayerEntity);
                r.playing = !1, r.position = 0, this.state.transportState == L3.STOPPED, this.updateUis(), this.setHouseLights != null && this.context.mode != T3.BROADCAST && this.setHouseLights(!0), e && this.fireEvents(L3.STOPPED)
            }

            async requestStateChange(e, r) {
                if (this.ethAddress && this.displayName) {
                    let l = {
                        context: this.context.context,
                        realm: this.state.realm,
                        catalogIndex: e,
                        transportState: r,
                        ethAddress: this.ethAddress,
                        displayName: this.displayName
                    };
                    Nn("===== CinemaClient requestStateChange 0: ", JSON.stringify(l)), await Bg.putDataToService("/state", l), Nn("===== CinemaClient requestStateChange 2")
                } else Nn("CinemaClient requestStateChange error - called with undefined this.ethAddress or this.displayName")
            }

            backCommand(e) {
                Nn("*** implement backCommand")
            }

            forwardCommand(e) {
                Nn("*** implement forwardCommand")
            }

            playCommand(e) {
                Nn("*** playCommand: Index=" + e), this.useService ? this.requestStateChange(e, L3.PLAYING) : (this.state.catalogIndex != e && (this.state.transportState == L3.PLAYING || this.state.transportState == L3.PAUSED) && this.stopVideo(!0), this.state.transportState != L3.PLAYING && (this.playVideo(), j3.mustClickOnSceneToPlay && this.state.transportState == L3.STOPPED && j3.presentAuxPlayButton()), this.updateUis()), this.fireEvents(z1.PLAY)
            }

            pauseCommand() {
                Nn("*** pauseCommand"), this.useService ? this.state.transportState == L3.PLAYING && this.requestStateChange(this.state.catalogIndex, L3.PAUSED) : (this.state.transportState == L3.PLAYING && this.pauseVideo(), this.updateUis()), this.fireEvents(z1.PAUSE)
            }

            stopCommand() {
                Nn("*** stopCommand"), this.useService ? this.requestStateChange(this.state.catalogIndex, L3.STOPPED) : ((this.state.transportState == L3.PLAYING || this.state.transportState == L3.PAUSED) && this.stopVideo(!0), this.updateUis()), this.fireEvents(z1.STOP)
            }

            updateUis(e = !1) {
                if (this.videoControls) for (let r of this.videoControls) e && r.setCatalogDisplayIndex(this.state.catalogIndex), r.updateUi()
            }

            addListener(e) {
                this.listeners.push(e)
            }

            fireEvents(e) {
                for (let r of this.listeners) r.fireEvent(new U5(e, this.catalog.films[this.state.catalogIndex].title, this.state.currentOffset))
            }

            processCinemaData(e) {
                let r, l, i;
                if (e && e.context && e.catalog && e.state) {
                    try {
                        r = e.context;
                        let b = r.context;
                        if (b == null || b == "") throw"invalid CinemaContext";
                        if (l = e.catalog, l.films.length == 0) throw xe("WARNING: catalog has no films"), "Catalog has no films";
                        i = e.state;
                        let w = i.transportState;
                        if (w != L3.PLAYING && w != L3.STOPPED && w != L3.PAUSED) throw"invalid state.transportState";
                        i.catalogIndex >= l.films.length && (xe("catalog index " + i.catalogIndex + " is out of bounds for # films " + l.films.length + "so setting received index to 0"), i.catalogIndex = 0)
                    } catch (b) {
                        xe("processCinemaData: data error:", b, "json = ", JSON.stringify(e));
                        return
                    }
                    let o = !1, f = !1, s = !1, a = !1;
                    this.context.mode != r.mode || JSON.stringify(this.context).length != JSON.stringify(r).length || JSON.stringify(this.catalog).length != JSON.stringify(l).length || this.context.catalogID != r.catalogID || this.catalog.catalogID != r.catalogID || this.catalog.catalogID != l.catalogID || this.catalog.films.length != l.films.length || this.state.catalogIndex != i.catalogIndex ? (Nn(`
*** processCinemaData: context, mode, catalog, or catalogIndex changed,so bStop=true`), o = !0, s = !0, f = !0) : this.state.transportState != i.transportState && (Nn(`
*** processCinemaData: only transporState changed`), s = !0, f = !0), this.state.catalogIndex != i.catalogIndex && (a = !0);
                    let g = this.state.transportState;
                    if (this.context = r, this.catalog = l, this.state = i, o && (Nn(`
*** bStop -> stopVideo(), old tState=` + g + " new tState=" + this.state.transportState), this.stopVideo(!0)), s) switch (Nn("bTransportStateChanged = ", s), this.state.transportState) {
                        case L3.STOPPED:
                            Nn("case STOPPED old tState=" + g + " new tState=" + this.state.transportState), this.stopVideo(!0);
                            break;
                        case L3.PLAYING:
                            Nn("case PLAYING old tState=" + g + " new tState=" + this.state.transportState, `
state.catalogIndex =`, i.catalogIndex), (g != L3.PAUSED || a) && this.loadVideo(i.catalogIndex, i.currentOffset / 1e3), this.playVideo(), j3.mustClickOnSceneToPlay && g == L3.STOPPED && j3.presentAuxPlayButton();
                            break;
                        case L3.PAUSED:
                            Nn("case PAUSED old tState=" + g + " new tState=" + this.state.transportState), this.firstPoll && this.loadVideo(this.state.catalogIndex, this.state.currentOffset / 1e3), (g == L3.PLAYING || this.firstPoll) && this.pauseVideo();
                            break;
                        default:
                            break
                    }
                    f && this.updateUis(!0), this.firstPoll = !1
                } else xe("processCinemaData received invalid json from RestService")
            }

            async getCinemaDataFromService() {
                if (this.realm == "" || !this.ethAddress || !this.displayName) return;
                this.t1 = new Date, this.pollCount++;
                let e = new Date,
                    r = await Bg.getDataFromService("/data/" + this.context.context + "/" + this.realm + "/" + this.ethAddress + "/" + this.displayName),
                    i = new Date().getTime() - e.getTime();
                if (r == null) {
                    xe("Error: got no data from cinema-service");
                    return
                }
                await this.processCinemaData(r), await this.getRealmInfo()
            }

            userHasMoved() {
                let e;
                if (Y2.has(A2.PlayerEntity)) if (e = Y2.get(A2.PlayerEntity).position, this.userPosition) {
                    let r = Math.abs(this.userPosition.x - e.x) > .01 || Math.abs(this.userPosition.y - e.y) > .01 || Math.abs(this.userPosition.z - e.z) > .01;
                    return this.userPosition = e, r
                } else return this.userPosition = e, !1;
                return !1
            }

            async update(e) {
                this.enabled && (!this.screenNormalPosition && (l8.get(A2.CameraEntity).mode != r8.CT_FIRST_PERSON || this.userHasMoved()) && this.setScreenPositionNormal(), this.useService && (this.refreshTimer -= e, this.refreshTimer <= 0 && (this.refreshTimer = this.refreshInterval, this.processingPoll || (L1("--------- update() ---------"), this.processingPoll = !0, await this.getCinemaDataFromService(), this.processingPoll = !1, this.updateUis()))))
            }
        };

        function cv(n) {
            j3 && j3.update(n)
        }

        function fv(n, e) {
            let r = "";
            for (; n.length > 0;) {
                if (n.length <= e) {
                    r += n;
                    break
                }
                let l = Math.min(n.length, e), i = n.indexOf(`
`, 0);
                if (i >= 0 && i < l) {
                    r += n.substring(0, i + 1), n = n.substring(i + 1), n.length > 0 && (r += `
`);
                    continue
                }
                for (; l > 0;) if (n[l - 1] == " ") {
                    r += n.substring(0, l - 1), n = n.substring(l), n.length > 0 && (r += `
`), l = Math.min(n.length, e);
                    break
                } else l--;
                l < 2 && (r += n.substring(0, e - 2) + "-", n = n.substring(e - 1), n.length > 0 && (r += `
`))
            }
            return r
        }

        var j3;

        function Vg(n, e, r = !1, l = null, i, o = !0, f = !0) {
            if (j3 != null) return xe("*** setupCinemaClient called a second time from"), Dg(""), j3;
            Ur = "min", j3 = new Ya(n, e, r, l, i, o, f);
            let s = j3.getVideoControls();
            if (s) for (let a of s) a.setCinemaClient(j3); else xe(`
*** setupCinemaClient didn't obtain any updatedVideoControls`);
            return j3
        }

        var Vr = require("~system/RestrictedActions");
        var P8 = class {
        };
        P8.url = "https://api2.extraterra.com/paypal";
        var Be = !1;
        var dv = 1, L5 = class {
            constructor(e, r, l, i = null) {
                this.type = e;
                this.success = r;
                this.message = l;
                this.data = i
            }
        };
        L5 = Ne([Oe()], L5);
        var oe = class oe {
            constructor(e, r = !1) {
                this.payeeEmail = e;
                this.production = r;
                this.approvalChecker = null;
                this.mode = r ? "production" : "sandbox", this.eventListeners = [], this.orderRestService = new Ge(P8.url)
            }

            addListener(e) {
                this.eventListeners.push(e)
            }

            firePayPalManagerEvent(e, r, l, i = null) {
                let o = new L5(e, r, l, i);
                for (let f of this.eventListeners) f.fireEvent(o)
            }

            async createOrder(e) {
                if (!e) {
                    let l = "PayPalManager: no Order defined";
                    Be && console.log(l), this.firePayPalManagerEvent(oe.ORDER_NOT_CREATED, !1, l);
                    return
                }
                let r = await this.orderRestService.postDataToService("/createOrder/" + this.mode, e);
                if (!r || !r.status || r.status != oe.CREATED) {
                    let l = "Error: Order not created. Check your firewall for blocked ports, or payment service is offline, or bad data format.";
                    Be && console.log(l), Be && console.log("PayPalManager: orderResponse=" + JSON.stringify(r)), this.firePayPalManagerEvent(oe.ORDER_NOT_CREATED, !1, l);
                    return
                }
                return r
            }

            async requestPlayerTxApproval(e) {
                if (!e || !e.links || !e.id) {
                    let i = "PayPalManager Error: orderResponse doesn't contain id and links.";
                    return Be && console.log(i), Be && console.log("PayPalManager: orderResponse=" + e), this.firePayPalManagerEvent(oe.ORDER_NOT_CREATED, !1, i), !1
                }
                let r = e.links;
                for (let i of r) if (i.rel && i.rel == "approve") {
                    Be && console.log("PayPalManager seeking buyer approval..."), this.approvalChecker = new Xa(this, e), A2.addSystem(A8);
                    let o = "PayPalManager Waiting for Player to approve or cancel transaction";
                    return Be && console.log(o), this.firePayPalManagerEvent(oe.AWAITING_APPROVAL, !0, o, i.href), !0
                }
                let l = "PayPalManager Error: orderResponse doesn't contain an approve link.";
                return console.log(l), Be && console.log("PayPalManager: orderResponse=" + e), this.firePayPalManagerEvent(oe.SYSTEM_ERROR, !1, l), !1
            }

            async createOrderAndBeginPollingStatus(e) {
                let r = await this.createOrder(e);
                return r ? !!await this.requestPlayerTxApproval(r) : !1
            }

            async getOrderDetails(e) {
                if (!e || !e.id) {
                    let r = "PayPalManager Error: Capture not provide with valid orderResponse or id. ";
                    return Be && console.log(r), this.firePayPalManagerEvent(oe.SYSTEM_ERROR, !1, r), !1
                }
                return await this.orderRestService.getDataFromService("/getOrderDetails/" + this.payeeEmail + "/" + this.mode + "/" + e.id)
            }

            async capturePayment(e) {
                if (!e || !e.id) {
                    let l = "PayPalManager Error: Capture not provided with valid orderResponse or id. ";
                    return Be && console.log(l), this.firePayPalManagerEvent(oe.SYSTEM_ERROR, !1, l), !1
                }
                let r = await this.orderRestService.postDataToService("/capturePayment/" + this.payeeEmail + "/" + this.mode + "/" + e.id, e);
                if (!r || !r.status || r.status != oe.COMPLETED) {
                    let l = "PayPalManager Error: Capture not completed. ";
                    return Be && console.log(l), Be && console.log("PayPalManager: captureResponse=" + r), this.firePayPalManagerEvent(oe.SYSTEM_ERROR, !1, l), !1
                } else {
                    let l = "PayPalManager: Your payment was received.";
                    return Be && console.log(l), this.firePayPalManagerEvent(oe.PAYMENT_CAPTURED, !0, l, r), !0
                }
            }

            isProcessActive() {
                return this.approvalChecker != null
            }

            cancelPaymentRequest() {
                this.approvalChecker != null && (this.approvalChecker.polling = !1, A2.removeSystem(A8), this.approvalChecker = null)
            }
        };
        oe.CREATED = "CREATED", oe.APPROVED = "APPROVED", oe.COMPLETED = "COMPLETED", oe.CANCELLED = "CANCELLED", oe.ORDER_NOT_CREATED = "ORDER_NOT_CREATED", oe.AWAITING_APPROVAL = "AWAITING_APPROVAL", oe.PAYMENT_APPROVED = "PAYMENT_APPROVED", oe.PAYMENT_CANCELLED = "PAYMENT_CANCELLED", oe.PAYMENT_CAPTURED = "PAYMENT_CAPTURED", oe.SYSTEM_ERROR = "SYSTEM_ERROR";
        var at = oe, pv = 0, mv = 0, Gg, Xa = class {
            constructor(e, r) {
                this.payPalManager = e;
                this.orderResponse = r;
                this.elapsedTime = 0;
                this.polling = !1;
                this.state = "";
                Gg = this, Be && console.log("ApprovalChecker instance # " + ++pv), this.polling = !0
            }

            async update(e) {
                if (this.polling && (this.elapsedTime += e, this.elapsedTime > dv)) {
                    Be && console.log("PayPal Approval Checker poll"), this.elapsedTime = 0, this.polling = !1, A2.removeSystem(A8);
                    let r = await this.payPalManager.getOrderDetails(this.orderResponse);
                    if (!r || !r.status) {
                        let i = "PayPalManager: cannot get order details to check for approval or cancellation.";
                        Be && console.log(i), this.payPalManager.firePayPalManagerEvent(at.SYSTEM_ERROR, !1, i);
                        return
                    }
                    let l;
                    switch (r.status) {
                        case"CREATED":
                            this.state = "CREATED", A2.addSystem(A8), this.polling = !0;
                            break;
                        case"APPROVED":
                            if (this.state == "CREATED") {
                                Be && console.log("ApprovalCounters = " + ++mv), this.state = "APPROVED";
                                let i = "PayPalManager: payment was approved by player 000.", o = r;
                                Be && console.log(i), this.payPalManager.firePayPalManagerEvent(at.PAYMENT_APPROVED, !0, i, o), this.polling = !1, await this.payPalManager.capturePayment(this.orderResponse)
                            }
                            break;
                        case"CANCELLED":
                            l = "PayPalManager: payment was cancelled by player.", Be && console.log(l), this.polling = !1, A2.removeSystem(A8), this.payPalManager.firePayPalManagerEvent(at.PAYMENT_CANCELLED, !1, l);
                            break
                    }
                }
            }
        };

        function A8(n) {
            Gg.update(n)
        }

        var x6 = !1, k8 = 4, b6 = 2;
        var Lr = class {
            constructor() {
                this.paymentType = "PAYPAL";
                this.baseCurrency = "USD";
                this.active = !0
            }
        }, zr = class extends Lr {
            constructor() {
                super(...arguments);
                this.paymentType = "PAYPAL";
                this.payPalControls = {production: !1, payeeEmail: "cfravel-facilitator@applied-talent.com"}
            }
        }, Wr = class extends Lr {
            constructor() {
                super(...arguments);
                this.paymentType = "CRYPTO";
                this.cryptoControls = {
                    chainName: "ethereum",
                    coinId: "DECENTRALAND",
                    payeeAddress: "0x9609d68eAB639349e6E9a2eec76839ec8d109C22"
                }
            }
        }, W1 = class {
            constructor(e, r, l, i = null) {
                this.type = e;
                this.success = r;
                this.message = l;
                this.data = i
            }
        };
        W1 = Ne([Oe()], W1);
        var I8 = class {
            constructor(e, r, l) {
                this.context = e;
                this.dclPlayer = r;
                this.revenueShareId = l;
                this.processActive = !1;
                this.voucherCodes = [];
                this.eventListeners = [];
                x6 && console.log("**** PaymentManager constructor"), this.payPalEventManager = new Ve, this.payPalEventManager.addListener(L5, null, async ({
                                                                                                                                                                 type: i,
                                                                                                                                                                 success: o,
                                                                                                                                                                 message: f,
                                                                                                                                                                 data: s
                                                                                                                                                             }) => {
                    switch (x6 && console.log("PaymentManager payPalEventManager received PayPal event of type " + i), i) {
                        case at.ORDER_NOT_CREATED:
                            x6 && console.log("PaymentManager received: " + f), o || (this.processActive = !1), this.fireEvent("ORDER_NOT_CREATED", o, f, s);
                            break;
                        case at.AWAITING_APPROVAL:
                            if (o) {
                                let a = s;
                                x6 && console.log(f + "PaymentManager: AWAITING_APPROVAL via " + a), this.fireEvent("AWAITING_APPROVAL", o, f, s)
                            }
                            break;
                        case at.PAYMENT_APPROVED:
                            this.fireEvent("PAYMENT_APPROVED", o, f, s);
                            break;
                        case at.PAYMENT_CAPTURED:
                            this.fireEvent("PAYMENT_CAPTURED", o, f, s), this.processActive = !1;
                            break;
                        case at.PAYMENT_CANCELLED:
                            this.fireEvent("PAYMENT_CANCELLED", o, f, s), this.processActive = !1;
                            break;
                        case at.SYSTEM_ERROR:
                            this.fireEvent("SYSTEM_ERROR", o, f, s), this.processActive = !1;
                            break
                    }
                })
            }

            addListener(e) {
                this.eventListeners.push(e)
            }

            fireEvent(e, r, l, i = null) {
                let o = new W1(e, r, l, i);
                for (let f of this.eventListeners) f.fireEvent(o)
            }

            initializePayPal(e, r) {
                this.payPalManager = new at(e, r), x6 && console.log("PaymentManager adding its payPalEventManager to payPalManager.addlistener"), this.payPalManager.addListener(this.payPalEventManager)
            }

            initializeCrypto(e) {
                this.cryptoManager = new D5
            }

            static generateVoucher() {
                let e = 64, r = Date.now().toString(16),
                    l = (Date.now() * e + Math.floor(Math.random() * e)).toString(16), i = l.length,
                    o = l.substr(i - 12).toLowerCase();
                return o.substr(0, 3) + "-" + o.substr(3, 3) + "-" + o.substr(6, 3) + "-" + o.substr(9, 3)
            }

            isPaymentProcessActive() {
                return this.processActive
            }

            async submitOrderViaPaypal(e) {
                if (x6 && console.log("Calling this.payPalManager.runOrderAndPaymentWorkflow"), this.payPalManager) {
                    this.processActive = !0;
                    let r = await this.payPalManager.createOrderAndBeginPollingStatus(e)
                } else console.log(`
*** PaymentManager.submitOrderViaPayPal was not called because payPalManager doesn't exist.`)
            }

            cancelPaymentRequest() {
                this.cancelPayPalPaymentRequest(), this.processActive = !1
            }

            cancelPayPalPaymentRequest() {
                this.payPalManager && this.payPalManager.cancelPaymentRequest()
            }

            isPayPalProcessActive() {
                return this.payPalManager ? this.payPalManager.isProcessActive() : !1
            }

            async submitOrderViaCrypto(e, r, l) {
                let i = !1, o = {type: "CRYPTO", orderRequest: r, orderDetails: void 0, amount: ""};
                if (this.cryptoManager) {
                    this.processActive = !0;
                    let f = await m6(l.cryptoControls.coinId);
                    if (f == null) {
                        console.log(`
*** PaymentManager submitOrderViaCrypto couldn't get a coinPrice for coinName=` + l.cryptoControls.coinId);
                        let s = "Tx failed - couldnt'get a coin price for that coin";
                        return this.fireEvent("SYSTEM_ERROR", i, s, o), this.processActive = !1, null
                    } else {
                        let s = await this.cryptoManager.submitErc20Payment(l.cryptoControls, parseFloat((+r.purchase_units[0].amount.value / f).toFixed(k8)));
                        if (s != null) {
                            i = !0;
                            let a = "Tx succeeded.  tx=" + s;
                            o.amount = (+r.purchase_units[0].amount.value / f).toFixed(k8), this.fireEvent("PAYMENT_CAPTURED", i, a, o), this.processActive = !1
                        } else {
                            let a = "Tx not completed, cancelled or error";
                            this.fireEvent("PAYMENT_CANCELLED", i, a, o), this.processActive = !1
                        }
                        return s
                    }
                } else {
                    console.log(`
*** PaymentManager.submitOrderViaCrypto was not called -- no CFCryptoManager instance available`);
                    let f = "Tx failed - no CFCryptoManager instance available";
                    return this.fireEvent("SYSTEM_ERROR", i, f, o), this.processActive = !1, null
                }
            }
        };
        var N8 = class {
        };
        N8.url = "https://api2.extraterra.com/receipt";
        var z5 = class {
        };
        z5.url = "https://api2.extraterra.com/payment-records", z5.context = "cc-cinema";
        var qr = 1;

        function Fe(...n) {
            qr >= 1 && console.log(...n)
        }

        function st(...n) {
            qr >= 2 && console.log(...n)
        }

        function H1(...n) {
            qr >= 3 && console.log(...n)
        }

        var M2, s3, qg = 0, H5, hv = 0, Yg = !1, Jg = !1, Ka, yv = !1, Za = null;

        function gv() {
            return H5.cartUiIdShown ? L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: 60,
                    height: 60,
                    position: {right: 20, bottom: 20},
                    pointerFilter: "block"
                },
                uiBackground: {
                    color: q.White(),
                    texture: {src: "materials/cf-shopping-cart/cf-shopping-cart-icon.png"},
                    textureMode: "stretch"
                },
                onMouseDown: () => {
                    s3.toggleVisibility(), H5.fireEvent("SHOW")
                }
            }, L2.createElement(H3, {
                uiTransform: {
                    positionType: "absolute",
                    width: 0,
                    height: 0,
                    position: {right: 34, bottom: 47},
                    pointerFilter: "block"
                }, onMouseDown: () => {
                    s3.toggleVisibility(), H5.fireEvent("SHOW")
                }
            }, L2.createElement(ue, {
                value: M2.paymentReceived ? "0" : M2.orderCountTotal.toString(),
                color: q.Green(),
                fontSize: 13,
                font: "sans-serif",
                textAlign: "middle-center"
            }))) : L2.createElement(H3, null)
        }

        function xv() {
            if (s3.shown) {
                let n = w5.get(A2.RootEntity), e = n.width * .75, r = e * 9 / 16, l = (n.width - e) / 2,
                    i = (n.height - r) / 2, o = 0, f = 0, s = (e - o) / 2, a = r * .05 - 8, g = 32 * n.width / 1280,
                    b = 0, B = 0, w = (e - b) / 2, P = r * .12 - 8, D = 20 * n.width / 1280, T = e * .875, k = r * .5,
                    R = e * .0625, G = r * .32, Z = 0, S2 = 0, D2 = T * .04, T2 = k * .5, l2 = 14 * n.width / 1280,
                    b2 = e * .12, g2 = b2 * .6, p2 = e * .07, O = p2 * .5, J = e * 1 / 7 - b2 / 2, h2 = r * .08,
                    y2 = e * 6.2 / 8 - b2 / 2, k2 = e * 5.2 / 8 - b2 / 2, Z2 = e * 4.2 / 8 - b2 / 2,
                    g3 = e * 3.2 / 8 - b2 / 2, P3 = e * 2.2 / 8 - b2 / 2, U3 = e * 1.2 / 8 - b2 / 2, C3 = r * .1,
                    N3 = 20 * n.width / 1280, R3 = 0, un = 0, F3 = (e - R3) / 2, Dn = 14 * n.width / 1280,
                    o2 = 7 + Dn * 1.8, P2 = y2 + b2 * 1.5, I2 = 8 + r * .22 + Dn * 1.8, $ = 20 * n.width / 1280;
                return L2.createElement(H3, {
                    uiTransform: {
                        positionType: "absolute",
                        width: e,
                        height: r,
                        position: {right: l, bottom: i},
                        pointerFilter: "block"
                    }, uiBackground: {texture: {src: "materials/stock-ui/pale_green.png"}, textureMode: "stretch"}
                }, L2.createElement(H3, {
                    uiTransform: {
                        positionType: "absolute",
                        width: o,
                        height: f,
                        position: {right: s, top: a},
                        pointerFilter: "block"
                    }
                }, L2.createElement(ue, {
                    value: s3.titleText ? s3.titleText : "",
                    color: q.Black(),
                    fontSize: g,
                    font: "sans-serif",
                    textAlign: "middle-center"
                })), L2.createElement(H3, {
                    uiTransform: {
                        positionType: "absolute",
                        width: b,
                        height: B,
                        position: {right: w, top: P},
                        pointerFilter: "block"
                    }
                }, L2.createElement(ue, {
                    value: s3.instructionsText ? s3.instructionsText : "",
                    color: q.Black(),
                    fontSize: D,
                    font: "sans-serif",
                    textAlign: "middle-center"
                })), L2.createElement(H3, {
                    uiTransform: {
                        positionType: "absolute",
                        width: T,
                        height: k,
                        position: {left: R, bottom: G},
                        pointerFilter: "block"
                    }, uiBackground: {color: q.White()}
                }, L2.createElement(H3, {
                    uiTransform: {
                        positionType: "absolute",
                        width: Z,
                        height: S2,
                        position: {left: D2, top: T2},
                        pointerFilter: "block"
                    }
                }, L2.createElement(ue, {
                    value: s3.itemsListText ? s3.itemsListText : "",
                    color: q.Black(),
                    fontSize: l2,
                    font: "sans-serif",
                    textAlign: "middle-left"
                }))), L2.createElement(H3, {
                    uiTransform: {
                        positionType: "absolute",
                        width: R3,
                        height: un,
                        position: {right: P2, bottom: I2},
                        pointerFilter: "block"
                    }
                }, L2.createElement(ue, {
                    value: s3.cartTotalText ? s3.cartTotalText : "",
                    color: q.Black(),
                    fontSize: $,
                    font: "sans-serif",
                    textAlign: "middle-left"
                })), M2.helpUrl != null && M2.helpUrl.length > 0 ? L2.createElement(sn, {
                    value: "Help",
                    fontSize: N3,
                    font: "sans-serif",
                    textAlign: "middle-center",
                    onMouseDown: () => {
                        (0, Vr.openExternalUrl)({url: M2.helpUrl})
                    },
                    color: q.Black(),
                    uiTransform: {
                        positionType: "absolute",
                        width: p2,
                        height: O,
                        position: {right: J, top: h2},
                        pointerFilter: "block"
                    },
                    uiBackground: {
                        color: q.White(),
                        texture: {src: "materials/admission-manager/AdmissionManagerTicketButton.png"},
                        textureMode: "stretch"
                    }
                }) : null, (s3.showCryptoButton || s3.showPayPalButton) && M2.availablePaymentMethods.length > 0 ? L2.createElement(H3, {
                    uiTransform: {
                        positionType: "absolute",
                        width: b2,
                        height: g2,
                        position: {right: y2, bottom: C3},
                        pointerFilter: "block"
                    }
                }, L2.createElement(ue, {
                    value: "Select\\nPayment Method",
                    fontSize: N3 * .67,
                    color: q.Black(),
                    uiTransform: {width: "140px", height: "40px"}
                }), L2.createElement(ya, {
                    options: M2.availablePaymentMethods,
                    onChange: Ev,
                    fontSize: N3 * .67,
                    uiTransform: {
                        positionType: "absolute",
                        width: b2,
                        height: g2 / 2,
                        position: {right: 0, bottom: 0},
                        pointerFilter: "block"
                    }
                })) : null, (s3.showCryptoButton || s3.showPayPalButton) && M2.availablePaymentMethods.length > 0 ? L2.createElement(sn, {
                    value: `Pay with
` + M2.availablePaymentMethods[M2.selectedPaymentMethodIndex],
                    fontSize: N3,
                    font: "sans-serif",
                    textAlign: "middle-center",
                    onMouseDown: () => {
                        M2.submitPayment()
                    },
                    color: q.Black(),
                    uiTransform: {
                        positionType: "absolute",
                        width: b2,
                        height: g2,
                        position: {right: k2, bottom: C3},
                        pointerFilter: "block"
                    },
                    uiBackground: {
                        color: q.White(),
                        texture: {src: "materials/admission-manager/AdmissionManagerTicketButton.png"},
                        textureMode: "stretch"
                    }
                }) : null, s3.showPayPalCheckoutButton ? L2.createElement(sn, {
                    value: `Checkout
on PayPal`,
                    fontSize: N3,
                    font: "sans-serif",
                    textAlign: "middle-center",
                    onMouseDown: () => {
                        s3.messageAreaText = "", s3.approvalURL ? (0, Vr.openExternalUrl)({url: s3.approvalURL}) : Fe("PayPal Checkout approval button pressed before approvalURL received")
                    },
                    color: q.Black(),
                    uiTransform: {
                        positionType: "absolute",
                        width: b2,
                        height: g2,
                        position: {right: Z2, bottom: C3},
                        pointerFilter: "block"
                    },
                    uiBackground: {
                        color: q.Green(),
                        texture: {src: "materials/admission-manager/AdmissionManagerTicketButton.png"},
                        textureMode: "stretch"
                    }
                }) : null, s3.showContinueButton ? L2.createElement(sn, {
                    value: "Continue\\nShopping",
                    fontSize: N3,
                    font: "sans-serif",
                    textAlign: "middle-center",
                    onMouseDown: () => {
                        s3.messageAreaText = "", M2.hide(), M2.cancelPaymentRequest()
                    },
                    color: q.Black(),
                    uiTransform: {
                        positionType: "absolute",
                        width: b2,
                        height: g2,
                        position: {right: g3, bottom: C3},
                        pointerFilter: "block"
                    },
                    uiBackground: {
                        color: q.White(),
                        texture: {src: "materials/admission-manager/AdmissionManagerTicketButton.png"},
                        textureMode: "stretch"
                    }
                }) : null, s3.showReceiptButton ? L2.createElement(sn, {
                    value: "Get\\nReceipt",
                    fontSize: N3,
                    font: "sans-serif",
                    textAlign: "middle-center",
                    onMouseDown: () => {
                        s3.showReceipt()
                    },
                    color: q.Black(),
                    uiTransform: {
                        positionType: "absolute",
                        width: b2,
                        height: g2,
                        position: {right: P3, bottom: C3},
                        pointerFilter: "block"
                    },
                    uiBackground: {
                        color: q.Yellow(),
                        texture: {src: "materials/admission-manager/AdmissionManagerTicketButton.png"},
                        textureMode: "stretch"
                    }
                }) : null, s3.showCancelButton ? L2.createElement(sn, {
                    value: s3.exitText,
                    fontSize: N3,
                    font: "sans-serif",
                    textAlign: "middle-center",
                    onMouseDown: () => {
                        s3.messageAreaText = "", s3.exitText = "Close", s3.cancelOnExit = !0, s3.cancelOrClose()
                    },
                    color: q.Black(),
                    uiTransform: {
                        positionType: "absolute",
                        width: b2,
                        height: g2,
                        position: {right: U3, bottom: C3},
                        pointerFilter: "block"
                    },
                    uiBackground: {
                        color: q.White(),
                        texture: {src: "materials/admission-manager/AdmissionManagerTicketButton.png"},
                        textureMode: "stretch"
                    }
                }) : null, L2.createElement(H3, {
                    uiTransform: {
                        positionType: "absolute",
                        width: R3,
                        height: un,
                        position: {right: F3, bottom: o2},
                        pointerFilter: "block"
                    }
                }, L2.createElement(ue, {
                    value: s3.messageAreaText ? s3.messageAreaText : "",
                    color: s3.messageAreaTextColor,
                    fontSize: Dn,
                    font: "sans-serif",
                    textAlign: "middle-center"
                })))
            } else return L2.createElement(H3, null)
        }

        var R8 = class {
            constructor(e) {
                this.type = e
            }
        };
        R8 = Ne([Oe()], R8);
        var $a = class {
            constructor() {
                this.cartUiIdShown = !1;
                this.eventListeners = []
            }

            initialize(e) {
                this.cart = e, H5 = this, this.buildUi(), this.show()
            }

            buildUi() {
                hv = Dt(gv)
            }

            show() {
                this.cartUiIdShown = !0
            }

            hide() {
                this.cartUiIdShown = !1
            }

            addListener(e) {
                this.eventListeners.push(e)
            }

            fireEvent(e) {
                let r = new R8(e);
                for (let l of this.eventListeners) l.fireEvent(r)
            }
        }, ns = class {
            constructor() {
                this.eventManager = new Ve;
                this.shown = !1;
                this.titleText = "";
                this.instructionsText = "";
                this.itemsListText = "(You have no items in your cart yet)";
                this.cartTotalText = "Total: $0.00 USD";
                this.messageAreaTextColor = q.Black();
                this.messageAreaText = "";
                this.exitText = "exitText";
                this.showCryptoButton = !1;
                this.showPayPalButton = !1;
                this.showPayPalCheckoutButton = !1;
                this.showContinueButton = !0;
                this.showReceiptButton = !1;
                this.showCancelButton = !0;
                this.cancelOnExit = !1
            }

            initialize(e, r = "Your Shopping Cart", l = "Please review your order and pay, or continue shopping, or cancel") {
                this.cart = e, this.eventManager.addListener(W5, null, async ({
                                                                                  type: i,
                                                                                  success: o,
                                                                                  message: f,
                                                                                  data: s
                                                                              }) => {
                    this.handleCartEvent(i, o, f, s)
                }), this.cart.addListener(this.eventManager), this.titleText = r, this.instructionsText = l, this.buildUi()
            }

            buildUi() {
                qg == 0 && (qg = Dt(xv))
            }

            show() {
                M2.selectedPaymentMethodIndex = 0, this.enablePaymentButtons(!0), this.showPayPalCheckoutButton = M2.orderRequest && M2.orderRequest.purchase_units[0].items ? M2.isPayPalProcessActive() && M2.orderRequest.purchase_units[0].items.length > 0 : !1, this.showContinueButton = !0, this.showReceiptButton = !1, this.exitText = M2.orderRequest && M2.orderRequest.purchase_units[0].items && M2.orderRequest.purchase_units[0].items.length > 0 ? `Cancel
Order` : "Close", this.messageAreaText = !M2.orderRequest || !M2.orderRequest.purchase_units[0].items || M2.orderRequest.purchase_units[0].items.length == 0 ? "Your cart is empty." : "", this.messageAreaTextColor = q.Black(), Fe(`
*** cart show:
theCartUi.showCryptoButton = ` + s3.showCryptoButton + `
theCartUi.showPayPalButton = ` + s3.showPayPalButton + `
theCart.availablePaymentMethods.length = ` + M2.availablePaymentMethods.length), s3.shown = !0
            }

            hide() {
                s3.shown = !1
            }

            toggleVisibility() {
                s3.shown ? this.hide() : (this.updateItemsToDisplay(), this.show())
            }

            setApprovalURL(e) {
                this.approvalURL = e
            }

            cancelOrClose() {
                this.cancelOnExit && (this.itemsListText = "", M2.amountSpent = void 0), M2.cancelOrder(this.cancelOnExit), this.hide()
            }

            async updateItemsToDisplay() {
                if (H1("*** updateItems()"), this.itemsListText = "", !M2.orderRequest || !M2.allowedTransactionProcesses || M2.allowedTransactionProcesses.length == 0) {
                    Fe(`
*** CFShoppingCart updateItems called when data isn't set up`);
                    return
                }
                let e = [];
                if (M2.orderRequest.purchase_units[0].items == null) Fe(`
*** updateItems: theCart.orderContent.purchase_units[0].items is undefined`); else {
                    let r = M2.orderRequest.purchase_units[0].items;
                    for (let l in r) {
                        let i = !1;
                        for (let o in e) if (e[o].name == r[l].name && e[o].description == r[l].description && e[o].unit_amount.value == r[l].unit_amount.value) {
                            i = !0, e[o].quantity = (parseInt(e[o].quantity) + parseInt(r[l].quantity)).toString();
                            break
                        }
                        i == !1 && e.push(JSON.parse(JSON.stringify(r[l])))
                    }
                    for (let l in e) this.itemsListText += "Qty: " + e[+l].quantity + '    Item: "' + e[+l].name + '"   Description: "' + e[+l].description + `" 
        Each: $` + (+e[+l].unit_amount.value).toFixed(b6) + " " + M2.allowedTransactionProcesses[0].baseCurrency + "    Amount: $" + (+e[+l].quantity * +e[+l].unit_amount.value).toFixed(b6) + " " + M2.allowedTransactionProcesses[0].baseCurrency + `  
`;
                    if (M2.amountSpent != null && (this.itemsListText += M2.amountSpent), !M2.payPalAllowed && !M2.cryptoAllowed) this.itemsListText += `
No payment method is currently supported for your items.
This may be because you are trying to order crypto items
but are not logged into a supported crypto wallet.`; else if (M2.orderRequest.purchase_units[0].items.length > 0) {
                        let l = `
IMPORTANT NOTES:`;
                        for (let i in M2.orderControls) if (M2.orderControls[i].type == Ce.VOUCHER) {
                            l += `
Single-Player Admission Ticket number(s) will appear on your receipt and will each work for one player.
Also, unless you log in with a Web3 wallet, they will only work on the same browser on which they are first used,
and only if you do not flush your Browser cookies after you first use them.`;
                            break
                        }
                        for (let i in M2.orderControls) if (M2.orderControls[i].type == Ce.ADDRESS) {
                            l += `

Wallet-based admission will be only for YOUR CURRENT wallet.`;
                            break
                        }
                        M2.amountSpent == null && (l += `

If you don't agree to these terms, please cancel your order.  ALL PURCHASES ARE FINAL.`), s3.addMessageToItemList(l)
                    }
                }
                await this.setTotalString()
            }

            showReceipt() {
                if (!M2 || !M2.orderRequest || !M2.orderRequest.purchase_units[0].items || M2.orderRequest.purchase_units[0].items.length == 0) return;
                let e = N8.url + "/showReceipt/<br><br>Thank you for your order!<br><br>Here is your ticket information.<br>Be sure to copy this for later use in the event's ticket UI<br><br>",
                    r = this.cart.orderRequest.purchase_units[0].items;
                if (r != null) {
                    Fe(`
*** items for receipt =
` + JSON.stringify(r));
                    for (let l of r) {
                        let i = l.sku;
                        if (i == null) i = ""; else for (; i.substring(0, 1) == " ";) i = i.substring(1);
                        let o = l.name;
                        o == null && (o = "event");
                        let f = l.description;
                        f == null && (f = "(no description)"), i.substring(0, 2) == "0x" ? e += "For Wallet:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + i + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" : e += "Ticket Code:&nbsp;&nbsp;&nbsp;" + i, e += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + o, e += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + f, e += "<br>"
                    }
                }
                e += "<br>", e += M2.amountSpent + "<br><br>", e += "IMPORTANT NOTES:<br>1) Any Ticket Codes will only work for one player.<br>2) Also, unless you log in with a Web3 wallet, they will only work:<br>2a) if you are on the same browser on which they are first used, and<br>2b) only if you do not flush your Browser cookies after you first use them.<br><br>It is recommended that you make a copy of this receipt to keep any ticket codes and these instructions.", st(`
*** receipt =
` + e), (0, Vr.openExternalUrl)({url: e})
            }

            async setTotalString() {
                if (this.cartTotalText = "", M2.orderValueTotal > 0) {
                    if (this.cartTotalText = "Total: ", M2.payPalAllowed && (this.cartTotalText += "$" + M2.orderValueTotal.toFixed(b6) + " " + M2.allowedTransactionProcesses[0].baseCurrency), M2.cryptoProcessIndex = M2.getCryptoProcessIndex(), M2.payPalAllowed && M2.cryptoProcessIndex >= 0 && (this.cartTotalText += " or "), M2.cryptoAllowed && M2.allowedCryptoTransactionProcesses.length > 0 && M2.cryptoProcessIndex >= 0) {
                        if (M2.cryptoProcessIndex = M2.getCryptoProcessIndex(), M2.cryptoProcessIndex == -1) {
                            Fe(`
*** setTotalString found error getting cryptoProcessIndex`), M2.cryptoAllowed = !1, this.cartTotalText = "";
                            return
                        }
                        let e = M2.allowedCryptoTransactionProcesses[M2.cryptoProcessIndex].cryptoControls.coinId,
                            r = M2.allowedCryptoTransactionProcesses[M2.cryptoProcessIndex].cryptoControls.chainName,
                            l = p6(e, r);
                        if (M2.coinDisplayName = l?.displayName, !M2.allowedCryptoTransactionProcesses[M2.cryptoProcessIndex].cryptoControls) {
                            Fe(`
*** setTotalString failed to get CryptoControls from allowedCryptoTransactionProcesses`);
                            return
                        }
                        let o = null;
                        try {
                            o = await m6(M2.allowedCryptoTransactionProcesses[M2.cryptoProcessIndex].cryptoControls.coinId)
                        } catch (f) {
                            Fe(`
*** setTotalString:  getCoinPrice  error=` + f)
                        }
                        o && o > 0 ? (this.cartTotalText += "" + (M2.orderValueTotal / o).toFixed(k8) + " " + M2.coinDisplayName + "  (Coin data provided by CoinGecko)", M2.cryptoAllowed = !0) : (Fe("getCoinPrice returned erroneous amount: " + o), M2.cryptoAllowed = !1)
                    }
                } else this.cartTotalText = ""
            }

            addMessageToItemList(e) {
                s3.itemsListText += e
            }

            enablePaymentButtons(e) {
                let r = M2.orderRequest != null && M2.orderRequest.purchase_units[0].items != null && M2.orderRequest.purchase_units[0].items.length > 0;
                this.showPayPalButton = e && M2.payPalAllowed && r, this.showCryptoButton = e && M2.cryptoAllowed && r
            }

            handleCartEvent(e, r, l, i) {
                switch (e) {
                    case"SHOW_CART":
                        this.updateItemsToDisplay(), this.show();
                        break;
                    case"HIDE_CART":
                        this.hide();
                        break;
                    case"SUBMIT_PAYPAL":
                        i ? this.messageAreaText = "Payment process already started" : this.enablePaymentButtons(!1);
                        break;
                    case"SUBMIT_CRYPTO":
                        break;
                    case"ORDER_NOT_CREATED":
                        st(l), this.showPayPalCheckoutButton = !1, this.enablePaymentButtons(!0), this.messageAreaText = l || "", this.messageAreaTextColor = q.Red();
                        break;
                    case"AWAITING_APPROVAL":
                        if (r) {
                            let f = i;
                            this.showPayPalButton = !1, this.setApprovalURL(f), this.showPayPalCheckoutButton = !0
                        }
                        break;
                    case"PAYMENT_APPROVED":
                        this.setApprovalURL(void 0), this.showPayPalButton = !1, this.showPayPalCheckoutButton = !1, this.enablePaymentButtons(!1), r ? (this.messageAreaText = "You approved the payment, thank you!  Processing your payment...", this.messageAreaTextColor = q.Blue(), this.showContinueButton = !1, this.showReceiptButton = !1) : (this.messageAreaText = `Your order was cancelled.
You are welcome to continue shopping or cancel and perhaps place a new order.`, this.messageAreaTextColor = q.Red(), this.enablePaymentButtons(!0)), this.exitText = "Close";
                        break;
                    case"PAYMENT_CAPTURED":
                        if (this.showPayPalButton = !1, this.showPayPalCheckoutButton = !1, s3.enablePaymentButtons(!1), r) {
                            switch (M2.transactionProcess.paymentType) {
                                case"PAYPAL":
                                    M2.amountSpent = "Total: " + M2.orderRequest.purchase_units[0].amount.value + " " + M2.orderRequest.purchase_units[0].amount.currency_code, this.messageAreaText = `Payment received, thank you. Your ticket numbers should appear in an emailed receipt,
*** BUT BE SURE TO 'Get Receipt' and copy any ticket and event information from it.`;
                                    break;
                                case"CRYPTO":
                                    let f = M2.allowedCryptoTransactionProcesses[M2.cryptoProcessIndex].cryptoControls,
                                        s = p6(f.coinId, f.chainName);
                                    s != null && (M2.amountSpent = "Total: " + i.amount + " " + s.displayName), this.messageAreaText = `Payment received, thank you. 
BE SURE TO 'Get Receipt' and copy Event information and any ticket number(s) for use in the Ticket UI.`;
                                    break
                            }
                            this.updateItemsToDisplay(), this.messageAreaTextColor = q.Blue(), this.exitText = "Close", this.showContinueButton = !1, this.showReceiptButton = !0
                        } else this.messageAreaText = `Your order payment was not received and you should not be charged.
You are welcome to try again, or continue shopping, or to cancel and perhaps place a new order.`, this.messageAreaTextColor = q.Blue(), M2.selectedPaymentMethodIndex = 0, this.enablePaymentButtons(!0);
                        break;
                    case"PAYMENT_CANCELLED":
                        this.enablePaymentButtons(!0), this.showPayPalCheckoutButton = !1, this.showContinueButton = !0, this.showReceiptButton = !1, this.messageAreaText = `Your payment was cancelled and you should not be charged.
You are welcome to try again, or continue shopping, or to cancel and perhaps place a new order.`, this.messageAreaTextColor = q.Blue(), this.exitText = `Cancel
Order`, this.enablePaymentButtons(!0);
                        break;
                    case"SYSTEM_ERROR":
                        this.showPayPalButton = !1, this.showPayPalCheckoutButton = !1, this.showContinueButton = !1, this.showReceiptButton = !1, this.messageAreaText = `A technical issue occured. Your order was cancelled and you should not be charged.
You are welcome to try again, or continue shopping, or to cancel and perhaps place a new order.`, this.messageAreaTextColor = q.Red(), this.exitText = "Close", this.enablePaymentButtons(!0);
                        break
                }
            }
        };
        var W5 = class {
            constructor(e, r, l, i) {
                this.type = e;
                this.success = r;
                this.message = l;
                this.data = i
            }
        };
        W5 = Ne([Oe()], W5);
        var es = class {
            constructor(e, r) {
                this.name = e;
                this.type = r
            }
        }, jr = class jr {
            constructor(e, r = !1) {
                this.collectShippingAddress = r;
                this.shown = !1;
                this.eventListeners = [];
                this.eventManager = new Ve;
                this.orderControls = [];
                this.orderValueTotal = 0;
                this.orderCountTotal = 0;
                this.allowedTransactionProcesses = [];
                this.payPalAllowed = !1;
                this.payPalProcessIndex = -1;
                this.payPalProduction = !1;
                this.payPalPayeeEmail = "";
                this.allowedCryptoTransactionProcesses = [];
                this.cryptoAllowed = !1;
                this.cryptoProcessIndex = -1;
                this.cryptoProduction = !1;
                this.paymentReceived = !1;
                this.availablePaymentMethods = [];
                this.selectedPaymentMethodIndex = 0;
                this.paymentManager = e, this.eventManager.addListener(W1, null, async ({
                                                                                            type: l,
                                                                                            success: i,
                                                                                            message: o,
                                                                                            data: f
                                                                                        }) => {
                    this.handlePaymentManagerEvent(l, i, o, f)
                }), this.paymentManager.addListener(this.eventManager)
            }

            initialize(e, r, l, i, o) {
                this.dclPlayer = e, this.eventListeners.push(r), this.orderRequest = l, this.allowedTransactionProcesses = i, this.helpUrl = o;
                for (let f in this.allowedTransactionProcesses) if (this.allowedTransactionProcesses[f].active && this.allowedTransactionProcesses[f].paymentType == "PAYPAL") {
                    this.payPalAllowed = !0, this.payPalProcessIndex = +f;
                    let s = this.allowedTransactionProcesses[f];
                    this.payPalProduction = s.payPalControls.production, this.payPalPayeeEmail = s.payPalControls.payeeEmail, this.paymentManager.initializePayPal(this.payPalPayeeEmail, this.payPalProduction);
                    break
                }
            }

            async setAvailablePaymentMethods() {
                if (st(`
*** CFShoppingCart setAvailablePaymentMethods...`), this.cryptoAllowed = !1, this.allowedCryptoTransactionProcesses = [], this.coinDisplayName = void 0, this.availablePaymentMethods = [], !(this.dclPlayer == null || this.dclPlayer.userData == null)) {
                    for (let e in this.allowedTransactionProcesses) if (this.allowedTransactionProcesses[e].active) switch (this.allowedTransactionProcesses[e].paymentType) {
                        case"PAYPAL":
                            this.availablePaymentMethods.push("PAYPAL");
                            break;
                        case"CRYPTO":
                            if (this.dclPlayer.userData.hasConnectedWeb3) {
                                let r = this.allowedTransactionProcesses[e].cryptoControls;
                                if (r == null) {
                                    Fe(`
*** CFShoppingCart setAvailablePaymentMethods: this Crypto item is missing CryptoControls`);
                                    continue
                                } else {
                                    let l = r.coinId, i = r.chainName, o = p6(l, i);
                                    if (o == null) {
                                        Fe(`
*** CFShoppingCart setAvailablePaymentMethods: invalid CryptoControls data`);
                                        continue
                                    }
                                    this.paymentManager.cryptoManager == null && (this.paymentManager.cryptoManager = new D5);
                                    let f = await this.paymentManager.cryptoManager.getERC20balance(i, o.contract, this.dclPlayer.userData.publicKey),
                                        s = await m6(l);
                                    if (s == null) {
                                        Fe(`
*** CFShoppingCart setAvailablePaymentMethods: cannot get coinPrice for ` + l);
                                        continue
                                    }
                                    st(`
*** CFShoppingCart setAvailablePaymentMethods: orderValueTotal=` + this.orderValueTotal + " " + o.coinId + " is = " + f + " coinPrice=" + s);
                                    let a = parseFloat((this.orderValueTotal / s).toFixed(k8));
                                    if (f < a) {
                                        st(`
*** CFShoppingCart setAvailablePaymentMethods: insufficient balance to purchase with ` + l + " balance needed would be " + a);
                                        continue
                                    } else st(`
*** CFShoppingCart setAvailablePaymentMethods: player has sufficient balance to purchase with ` + l);
                                    let g = this.allowedTransactionProcesses[e];
                                    this.allowedCryptoTransactionProcesses.push({
                                        paymentType: g.paymentType,
                                        cryptoControls: g.cryptoControls,
                                        baseCurrency: g.baseCurrency,
                                        active: g.active
                                    }), this.cryptoAllowed = !0, this.availablePaymentMethods.push(o.displayName)
                                }
                            } else Fe(`
*** CFShoppingCart setAvailablePaymentMethods: player isn't logged in with a wallet`);
                            break
                    }
                    st(`
*** setAvailablePaymentMethods: resulting allowedCryptoTransactionProcesses=
` + JSON.stringify(this.allowedCryptoTransactionProcesses))
                }
            }

            async handlePaymentManagerEvent(e, r, l, i) {
                switch (st("ShoppingCart.handlePaymentManagerEvent received type=" + e + " success=" + r + "  message=" + l + "  data=" + JSON.stringify(i)), e) {
                    case"ORDER_NOT_CREATED":
                        this.fireEvent("ORDER_NOT_CREATED", r, l, i);
                        break;
                    case"AWAITING_APPROVAL":
                        r && this.fireEvent("AWAITING_APPROVAL", r, l, i);
                        break;
                    case"PAYMENT_APPROVED":
                        this.fireEvent("PAYMENT_APPROVED", r, l, i);
                        break;
                    case"PAYMENT_CAPTURED":
                        this.paymentReceived = r, this.fireEvent("PAYMENT_CAPTURED", r, l, i);
                        break;
                    case"PAYMENT_CANCELLED":
                        this.fireEvent("PAYMENT_CAPTURED", r, l, i);
                        break;
                    case"SYSTEM_ERROR":
                        this.fireEvent("SYSTEM_ERROR", r, l, i);
                        break
                }
            }

            addListener(e) {
                this.eventListeners.push(e)
            }

            fireEvent(e, r = !0, l = "", i = null) {
                let o = new W5(e, r, l, i);
                for (let f of this.eventListeners) f.fireEvent(o)
            }

            show() {
                this.fireEvent("SHOW_CART")
            }

            hide() {
                this.fireEvent("HIDE_CART")
            }

            addToCart(e, r, l, i, o, f = "", s = "1", a = "DIGITAL_GOODS", g = "USD") {
                this.paymentReceived = !1;
                let b = {success: !0, message: ""};
                if (g != "USD") return b.success = !1, b.message = "ShoppingCart.addToCart: itemCurrency: only USD supported at this time", st(b.message), b;
                let B = {
                    name: l,
                    description: i,
                    category: a,
                    sku: "",
                    quantity: s,
                    unit_amount: {currency_code: "USD", value: o}
                };
                this.orderRequest.purchase_units[0].items.push(B);
                let w = new es(e, r);
                return this.orderControls.push(w), st("item=" + JSON.stringify(B)), st("orderControl=" + JSON.stringify(w)), st("allowedTransactionProcesses=" + JSON.stringify(this.allowedTransactionProcesses)), this.orderCountTotal += parseFloat(B.quantity), this.orderValueTotal += parseFloat(B.quantity) * parseFloat(B.unit_amount.value), this.orderRequest.purchase_units[0].amount.value = this.orderValueTotal.toFixed(b6), this.orderRequest.purchase_units[0].amount.breakdown.item_total.value = this.orderValueTotal.toFixed(b6), this.setAvailablePaymentMethods(), this.fireEvent("ADDED_TO_CART", !0, "", {item: B}), b
            }

            cancelOrder(e) {
                e && (this.paymentManager.cancelPaymentRequest(), this.orderRequest.purchase_units[0].items = [], this.orderRequest.purchase_units[0].amount.value = "0.00", this.orderValueTotal = 0, this.orderCountTotal = 0, this.paymentReceived = !1)
            }

            cancelPaymentRequest() {
                this.paymentManager.cancelPaymentRequest()
            }

            finalizeOrderPrep() {
                this.orderRequest.purchase_units.length != 1 && Fe("Payment Manager currently only support the first purchase_unit in an OrderRequest. This order has " + this.orderRequest.purchase_units.length);
                let e = " ";
                switch (this.paymentMethodUsed) {
                    case"PAYPAL":
                        this.orderRequest.purchase_units[0].payee.email_address = this.allowedTransactionProcesses[this.payPalProcessIndex].payPalControls.payeeEmail;
                        break;
                    case"CRYPTO":
                        this.orderRequest.purchase_units[0].payee.email_address = "info@dclconf.com";
                        break;
                    default:
                        Fe(`
*** finalizeOrderPrep invalid payment type = '` + this.paymentMethodUsed + "'");
                        break
                }
                for (let r in this.orderRequest.purchase_units[0].items) switch (this.orderControls[+r].type) {
                    case"VOUCHER":
                        this.orderRequest.purchase_units[0].items[+r].sku = e + I8.generateVoucher();
                        break;
                    case"ADDRESS":
                        let l = this.dclPlayer.userData.publicKey, i = l.length,
                            o = l.substring(0, 6) + "..." + l.substring(i - 4, i);
                        this.orderRequest.purchase_units[0].items[+r].sku = e + o;
                        break;
                    default:
                        Fe(`
*** finalizeOrderPrep invalid result type = '` + this.orderControls[+r].type + "'")
                }
                return !0
            }

            submitViaPaypal() {
                s3.messageAreaText = "Click on 'Checkout on PayPal' to proceed, or you can Continue Shopping or Cancel your Order.", s3.messageAreaTextColor = q.Blue(), s3.enablePaymentButtons(!1), this.paymentMethodUsed = "PAYPAL", this.fireEvent("SUBMIT_PAYPAL", !0, "", this.paymentManager.isPaymentProcessActive()), this.transactionProcess = this.allowedTransactionProcesses[this.payPalProcessIndex], this.finalizeOrderPrep(), this.paymentManager && this.paymentManager.submitOrderViaPaypal(this.orderRequest)
            }

            isPayPalProcessActive() {
                return this.paymentManager.isPayPalProcessActive()
            }

            async submitPayment() {
                if (this.availablePaymentMethods[this.selectedPaymentMethodIndex] == "PAYPAL") {
                    this.submitViaPaypal();
                    return
                } else {
                    s3.messageAreaText = "Waiting for you to Confirm or Reject transaction with your wallet.", s3.messageAreaTextColor = q.Blue(), s3.enablePaymentButtons(!1), s3.showContinueButton = !1, s3.showReceiptButton = !1, s3.showCancelButton = !1;
                    let e = null;
                    this.paymentMethodUsed = "CRYPTO";
                    let r = this.availablePaymentMethods[this.selectedPaymentMethodIndex];
                    if (this.cryptoProcessIndex = this.getCryptoProcessIndex(), this.cryptoProcessIndex == -1) {
                        Fe(`
*** submitPayment error - no process with coin DisplayName = ` + this.availablePaymentMethods[this.selectedPaymentMethodIndex]);
                        return
                    }
                    this.transactionProcess = this.allowedCryptoTransactionProcesses[this.cryptoProcessIndex], this.finalizeOrderPrep(), this.paymentManager && (e = await this.paymentManager.submitOrderViaCrypto(this.dclPlayer, this.orderRequest, this.transactionProcess)), e != null ? (s3.showContinueButton = !1, s3.showReceiptButton = !0, s3.showCancelButton = !0) : (s3.enablePaymentButtons(!0), s3.showContinueButton = !0, s3.showReceiptButton = !1, s3.showCancelButton = !0)
                }
            }

            getCryptoProcessIndex() {
                let e = -1;
                for (let r in this.allowedCryptoTransactionProcesses) {
                    let l = this.allowedCryptoTransactionProcesses[r].cryptoControls;
                    if (!l) {
                        Fe(`
*** getCryptoProcessIndex: error, undefined cryptoControls`);
                        continue
                    }
                    let i = p6(l.coinId, l.chainName);
                    if (!i) {
                        Fe(`
*** getCryptoProcessIndex: error, undefined coinData from getCoinDataByCoinIdAndChainName(` + l.coinId + ", " + l.chainName + ")");
                        continue
                    }
                    let o = this.availablePaymentMethods[this.selectedPaymentMethodIndex];
                    if (i.displayName == o && o != "PAYPAL") {
                        e = +r;
                        break
                    }
                }
                return e
            }

            static generateBasicRequest(e, r, l) {
                let i = jr.basicOrderNoItems;
                return i.purchase_units[0].payee.email_address = e, i.application_context = r, i.payer = l, i
            }
        };
        jr.basicOrderNoItems = {
            intent: "CAPTURE",
            purchase_units: [{
                items: [],
                amount: {
                    currency_code: "USD",
                    value: "0.00",
                    breakdown: {item_total: {currency_code: "USD", value: "0.00"}}
                },
                payee: {email_address: ""}
            }],
            application_context: {brand_name: "", return_url: "", cancel_url: "", shipping_preference: ""},
            payer: {name: {given_name: "", surname: ""}}
        };
        var Gr = jr;

        async function bv(n, e) {
            Za || (Za = new Ge(z5.url));
            let r, l, i, o;
            if (!e || !e.purchase_units) r = 0, l = "undefined", i = "unknown", o = "unknown or none"; else switch (M2.paymentMethodUsed) {
                case"PAYPAL":
                    i = M2.paymentMethodUsed, r = +e.purchase_units[0].amount.value, l = e.purchase_units[0].amount.currency_code, o = M2.orderRequest.purchase_units[0].payee.email_address;
                    break;
                case"CRYPTO":
                default:
                    let s = M2.allowedCryptoTransactionProcesses[M2.cryptoProcessIndex].cryptoControls;
                    i = s.chainName;
                    let a = await m6(s.coinId);
                    r = +e.purchase_units[0].amount.value / a, l = s.coinId, o = s.payeeAddress;
                    break
            }
            let f = {
                timestamp: Date.now(),
                dateTime: Date().toString(),
                userAddress: n.userData.publicKey,
                displayName: n.userData.displayName,
                context: z5.context,
                realm: n.realmInfo.realmName,
                payee: o,
                method: i,
                amt: r,
                currency: l,
                data: e
            };
            H1(`
*** recordPayment method = ` + JSON.stringify(f)), await Za.putDataToService("/payment-record", f)
        }

        var Hr = new Ve;

        async function Xg(n, e, r, l, i, o = 1) {
            if (qr = o, Yg) return M2;
            if (Yg = !0, !Jg) {
                Ka = new I8("cf-cart-demo", n), Hr.addListener(W1, null, async ({
                                                                                    type: b,
                                                                                    success: B,
                                                                                    message: w,
                                                                                    data: P
                                                                                }) => {
                    switch (st("*** PaymentManagerEvent " + b + "  data=" + JSON.stringify(P)), b) {
                        case"PAYMENT_CAPTURED":
                            if (H1(`
*** Payment CAPTURED success = ` + B), B) {
                                s3.cancelOnExit = !0, H1(`
*** Payment CAPTURED, orderContent =
` + JSON.stringify(M2.orderRequest));
                                let D = M2.orderRequest.purchase_units[0].items;
                                for (let T in D) {
                                    let k = D[+T].sku;
                                    for (; k.substr(0, 1) == " ";) k = k.substr(1);
                                    switch (M2.orderControls[+T].type) {
                                        case"VOUCHER":
                                            let R = {cred1: k, cred2: "", annotation: "purchased in scene"};
                                            H1(`
**** addVouchers(name:` + M2.orderControls[+T].name + ", creds = " + JSON.stringify(R) + ")");
                                            let G = await r.addVouchers(M2.orderControls[+T].name, [R]);
                                            H1(`
**** addVouchers results = ` + JSON.stringify(G));
                                            break;
                                        case"ADDRESS":
                                            let Z = {address: n.userData.publicKey, annotation: "purchased in scene"};
                                            H1(`
**** addAddresses(name:` + M2.orderControls[+T].name + ", user = " + JSON.stringify(Z) + ")");
                                            let S2 = await r.addAddresses(M2.orderControls[+T].name, [Z]);
                                            H1(`
**** addAddresses results = ` + JSON.stringify(S2));
                                            break
                                    }
                                }
                                await bv(n, M2.orderRequest)
                            } else s3.enablePaymentButtons(!0);
                            break
                    }
                }), Ka.addListener(Hr), M2 = new Gr(Ka, !1), s3 = new ns, H5 = new $a, H5.addListener(s3.eventManager);
                let f = "cfravel-facilitator@applied-talent.com", s = {
                        brand_name: "The Decentraland Conference Center",
                        return_url: "https://dclconf.com/thank-you-for-your-payment/",
                        cancel_url: "https://dclconf.com/your-payment-was-cancelled/",
                        shipping_preference: "GET_FROM_FILE"
                    }, a = {name: {given_name: n.userData.displayName, surname: n.userData.publicKey}},
                    g = Gr.generateBasicRequest(f, s, a);
                H5.initialize(M2), Hr.addListener(W5, null, ({type: b, success: B, message: w, data: P}) => {
                    switch (b) {
                        case"SHOW_CART":
                            break;
                        case"HIDE_CART":
                            break
                    }
                }), s3.initialize(M2, g.application_context.brand_name, "Review your order and pay, or continue shopping, or cancel"), M2.initialize(n, Hr, g, l, i), Jg = !0
            }
            return M2
        }

        function Ev(n) {
            M2.selectedPaymentMethodIndex = n, s3.setTotalString()
        }

        var Kg = 300, Qa = Kg;

        function Tv(n) {
            Qa -= n, Qa <= 0 && (Qa = Kg, s3.shown && M2.cryptoAllowed && M2.orderRequest != null && yv == !1 && parseFloat(M2.orderRequest.purchase_units[0].amount.value) > 0 && s3.setTotalString())
        }

        A2.addSystem(Tv);
        var ls = 1;

        function Sv(...n) {
            ls >= 1 && console.log(...n)
        }

        function wv(...n) {
            ls >= 2 && console.log(...n)
        }

        var Yr = class {
            constructor(e, r, l, i, o, f, s, a, g, b, B, w, P, D = !0, T = !0) {
                this.rootEntity = ce(r, l, i, o, f, s, a, g, b, "TicketSignRoot", e), this.ticketSign = new gl(this.rootEntity, 0, 0, 0, 0, 0, 0, .7, 1, 1, B), this.ticketSign.setColor(q.Black()), this.ticketSign.setTextColor(q.White()), this.ticketSign.setFontSize(1.5), D && (this.payPalLogo = new Z3(this.rootEntity, -.45, 0, 0, 0, 0, 0, .2, .4, 1, "materials/admission-manager/Color-Paypal-Logo.jpg", q.Black(), !0, 0, !1)), T && (this.metaMaskLogo = new Z3(this.rootEntity, .45, 0, 0, 0, 0, 0, .25, .5, 1, "materials/admission-manager/MetaMask_Icon_Color.png", q.Black(), !0, 0, !1))
            }
        }, Jr = class {
            constructor(e, r, l, i, o, f, s, a, g, b, B, w, P, D, T, k, R = 1) {
                this.dclPlayer = e;
                this.sceneAdmissionManager = r;
                this.sceneAdmissionSalesManager = l;
                this.purchasables = i;
                this.allowedTransactionProcesses = o;
                this.helpUrl = f;
                this.permitIndex = 0;
                if (ls = R, this.rootEntity = yl("CFPurchasingControls.rootEntity"), Y2.create(this.rootEntity, {
                    parent: s,
                    position: C2.create(a, g, b),
                    rotation: X2.fromEulerDegrees(B, w, P),
                    scale: C2.create(D, T, k)
                }), this.itemDisplay = e6(0, .28, 0, 0, 0, 0, 1, .6, .01, `No private event admissions are
purchaseable at this time.
You may enjoy the theater if it is open.`, "itemDisplayModel", this.rootEntity, .5, q.White(), q.create(0, 0, .7)), this.renderItemSelector(), this.addToCartPanel = yl("addToCartPanel"), this.addToCartButton = e6(.2, -.14, 0, 0, 0, 0, .2, .2, .01, `Add
to Cart`, "itemDisplayModel", this.rootEntity, .5, q.White(), q.create(.7, .2, .2), this.addToCartPanel), this.viewCartPanel = yl("viewCartPanel"), this.viewCartButton = e6(-.2, -.14, 0, 0, 0, 0, .2, .2, .01, `View
Cart`, "itemDisplayModel", this.rootEntity, .5, q.White(), q.create(0, .4, 0), this.viewCartPanel), Hn.onPointerDown({
                    entity: this.prevItemButton,
                    opts: {button: jn.IA_POINTER, hoverText: "Previous Item", maxDistance: 16, showFeedback: !0}
                }, () => {
                    this.permitIndex > 0 && (this.permitIndex--, n6(this.itemDisplay, this.purchasables.permits[this.permitIndex].methodInfo.itemName + `
` + this.purchasables.permits[this.permitIndex].methodInfo.itemDescription + `
 USD $` + this.purchasables.permits[this.permitIndex].methodInfo.value), this.renderItemSelector())
                }), Hn.onPointerDown({
                    entity: this.nextItemButton,
                    opts: {button: jn.IA_POINTER, hoverText: "Next Item", maxDistance: 16, showFeedback: !0}
                }, () => {
                    this.permitIndex < this.purchasables.permits.length - 1 && (this.permitIndex++, n6(this.itemDisplay, this.purchasables.permits[this.permitIndex].methodInfo.itemName + `
` + this.purchasables.permits[this.permitIndex].methodInfo.itemDescription + `
 USD $` + this.purchasables.permits[this.permitIndex].methodInfo.value), this.renderItemSelector())
                }), !i || !i.permits || i.permits.length == 0) {
                    wv("/n*** CFPurchasingControls.contructor did not receive any valid purchasables");
                    return
                }
                n6(this.itemDisplay, this.purchasables.permits[this.permitIndex].methodInfo.itemName + `
` + this.purchasables.permits[this.permitIndex].methodInfo.itemDescription + `
 USD $` + this.purchasables.permits[this.permitIndex].methodInfo.value), It(async () => {
                    i.permits.length > 0 && (this.cart = await Xg(e, r, l, o, f), Hn.onPointerDown({
                        entity: this.addToCartPanel,
                        opts: {button: jn.IA_POINTER, hoverText: "Add item to Cart", maxDistance: 16, showFeedback: !0}
                    }, () => {
                        this.cart ? this.cart.addToCart(this.purchasables.permits[this.permitIndex].name, this.purchasables.permits[this.permitIndex].methodInfo.method, this.purchasables.permits[this.permitIndex].methodInfo.itemName, this.purchasables.permits[this.permitIndex].methodInfo.itemDescription, this.purchasables.permits[this.permitIndex].methodInfo.value) : Sv(`
CFPurchasingControls didn't have cart ready before AddToCart pressed`)
                    }), Hn.onPointerDown({
                        entity: this.viewCartPanel,
                        opts: {button: jn.IA_POINTER, hoverText: "View Cart", maxDistance: 16, showFeedback: !0}
                    }, () => {
                        this.cart.show()
                    }))
                })
            }

            renderItemSelector() {
                this.prevItemButton == null && (this.prevItemButton = il("models/arrow/White_Arrow.glb", -.43, .463, 0, 0, 0, 0, .13, .13, .05, "prevItemModel", this.rootEntity, !0)), this.nextItemButton == null && (this.nextItemButton = il("models/arrow/White_Arrow.glb", -.43, .107, 0, 0, 0, 180, .13, .13, .05, "nextItemModel", this.rootEntity, !0));
                let e = Y2.getMutable(this.prevItemButton);
                e.position.z = this.permitIndex <= 0 ? 0 : .01;
                let r = Y2.getMutable(this.nextItemButton);
                r.position.z = this.permitIndex >= this.purchasables.permits.length - 1 ? 0 : .01
            }
        };
        var Zg = {
            success: !0, message: "Success", permits: [{
                name: "cc-cinema-voucher-test",
                description: "Test for single-use voucher in cred1, cred2 containing the first user which gets written into that voucher's cred2",
                active: !0,
                tokenChainId: 0,
                tokenContract: "",
                tokenIds: ["x"],
                users: [],
                creds: [{
                    cred1: "111-222-333-b",
                    cred2: "",
                    annotation: "Inserted by PostMan test"
                }, {
                    cred1: "620-73c-b37-1a5",
                    cred2: "0x63f587fc66d140368be6f808785937d63b8e6fc4_CarlFravel",
                    annotation: "purchased in scene"
                }, {cred1: "620-73e-8a3-bdb", cred2: "", annotation: "purchased in scene"}, {
                    cred1: "622-1fe-673-256",
                    cred2: "0x63f587fc66d140368be6f808785937d63b8e6fc4_CarlFravel",
                    annotation: "purchased in scene"
                }],
                methodInfo: {
                    labels: ["Ticket number", ""],
                    method: "VOUCHER",
                    caption: "This event requires a ticket for admission",
                    instructions: `Please enter your ticket number,
or use Cancel and purchase a ticket in the lobby.`,
                    errMsg: `Error VT-01: Invalid ticket for this venue at this time,
or it has already been used by another player.
Please try again or cancel`,
                    itemName: "Single-Player Admission Ticket #",
                    itemDescription: "ONLY FOR TESTING in the Star Cinema",
                    value: "3.00",
                    maxVouchers: -1
                }
            }, {
                name: "cc-earth-testing",
                description: "Test for single-use voucher in cred1, cred2 containing the first user which gets written into that voucher's cred2",
                active: !0,
                tokenChainId: 0,
                tokenContract: "",
                tokenIds: ["x"],
                users: [],
                creds: [{cred1: "test", cred2: "displayName", annotation: ""}, {
                    cred1: "12345t",
                    cred2: "0xba7aa59f7be70b9e3e8bed1db51b515ea053c09d_DearbornCarling",
                    annotation: ""
                }, {cred1: "12345t", cred2: "0x2787dea8ef3eab168885381dcd75353fc6588279_Orange", annotation: ""}],
                methodInfo: {
                    labels: ["Ticket number", ""],
                    method: "VOUCHER",
                    caption: "This is a private event",
                    instructions: "Please enter your ticket number",
                    itemName: "Single-Player Admission Ticket #",
                    itemDescription: "ONLY FOR TESTING in the TEST THEATER",
                    errMsg: `Error VT-02: Invalid ticket for this venue at this time,
or it has already been used by another player.
Please try again or cancel`,
                    value: "10.00",
                    maxVouchers: -1
                }
            }, {
                name: "cc-cinema-Blastoff-2023-VOUCHER",
                description: "VOUCHER-based admssion to the BLASTOFF Filme Festival. Single-use voucher in cred1 where cred2 contains the first user of the voucher",
                active: !0,
                tokenChainId: 0,
                tokenContract: "",
                tokenIds: ["x"],
                users: [],
                creds: [{cred1: "test9", cred2: "", annotation: ""}, {
                    cred1: "12345t",
                    cred2: "0x63f587fc66d140368be6f808785937d63b8e6fc4_CarlFravel",
                    annotation: ""
                }, {cred1: "12345t", cred2: "", annotation: ""}],
                methodInfo: {
                    labels: ["Ticket number", ""],
                    method: "VOUCHER",
                    caption: "This event requires a ticket for admission",
                    instructions: `Please enter your ticket number,
or use Cancel and purchase a ticket in the lobby.`,
                    errMsg: `Error VT-03: Invalid ticket for this venue at this time,
or it has already been used by another player.
Please try again or cancel`,
                    itemName: "Single-Player Admission Ticket #",
                    itemDescription: "ONLY FOR TESTING admission the BLASTOFF 2023 Film Festival",
                    value: "3.00",
                    maxVouchers: -1
                }
            }, {
                name: "cc-cinema-address-test",
                description: "",
                active: !0,
                tokenChainId: 0,
                tokenContract: "",
                tokenIds: ["x"],
                users: [{address: "0x1234", annotation: "Dummy"}],
                creds: [],
                methodInfo: {
                    method: "ADDRESS",
                    caption: "",
                    instructions: "",
                    errMsg: "",
                    labels: ["", ""],
                    itemName: "Purchase access for YOUR CURRENT wallet address",
                    itemDescription: "ONLY FOR TESTING in the Star Cinema",
                    value: "2.00",
                    maxVouchers: 10
                }
            }]
        };
        var lx = require("~system/RestrictedActions");
        var Qg = require("~system/SignedFetch"), ts = require("~system/EnvironmentApi"),
            $g = require("~system/Runtime"), Xr = require("~system/UserIdentity"), nx = require("~system/Runtime");
        var Bt;
        var vv = "Default Branch", Cv = 5e3;

        function ex(n = vv, e = Cv, r = !1) {
            Bt = new rs(n, e, r)
        }

        var _v = A2.defineComponent("atlasAnalyticsFlag", {});

        function Pv(n) {
            if (Bt && Bt.pingsEnabled && (Bt.pingCountdown -= n * 1e3, Bt.pingCountdown <= 0)) {
                Bt.performPing();
                Bt.checkForChanges();
                Bt.pingCountdown = Bt.pingPeriod
            }
        }

        var rs = class {
            constructor(e, r = 5e3, l = !1) {
                this.sceneBranch = e;
                this.pingPeriod = r;
                this.debug = l;
                this.pingCountdown = 0;
                this.analyticsVersion = "0.4.3";
                this.pingsEnabled = !1;
                this.alreadyPinging = !1;
                this.previousCameraMode = -1;
                this.previousLockedState = !1;
                this.alreadyChecking = !1;
                this.debug && console.log(`
*** ATLAS AtlasAnalyticsService constructor`), this.startTime = new Date, Bt = this, this.rootEntity = A2.addEntity();
                It(async () => {
                    this.initializePlayerData(), this.sceneBranch = e, this.enableSceneTimer(), _v.create(this.rootEntity), this.apiURL = "https://analytics.atlascorp.io/", this.initializeAnalytics()
                })
            }

            async initializePlayerData() {
                await this.updateUserData(), await this.updateSceneMetadata();
                let e = await (0, ts.getPlatform)({});
                this.platform = (await (0, ts.getPlatform)({})).platform;
                let r = await (0, $g.getRealm)({});
                this.realm = r?.realmInfo?.realmName;
            }

            updateBranchName(e) {
                this.sceneBranch = e
            }

            async updateSceneMetadata() {
                let e = await (0, nx.getSceneInformation)({}), r = JSON.parse(e.metadataJson);
                this.sceneName = r.display.title, this.parcels = r.scene.parcels;
                let l = r.scene.base;
                this.baseParcelWorldPosition = {
                    x: parseInt(l.substring(0, l.indexOf(",")), 10) * 16,
                    y: 0,
                    z: parseInt(l.substring(l.indexOf(",") + 1), 10) * 16
                }, this.tags = r.tags
            }

            async updateUserData() {
                let e = await (0, Xr.getUserData)({});
                this.player = e.data.userId, this.guest = !e.data.hasConnectedWeb3, this.playerName = e.data.displayName
            }

            initializeAnalytics() {
                this.pingPeriod != 0 && this.pingPeriod >= 2e3 ? this.enablePing(this.pingPeriod) : this.debug && this.debug && this.debug && console.log("Ping Disabled:", this.pingPeriod), this.enableRealmChange(), this.enableEntersOrLeavesScene(), this.enablePlayerAnimation(), this.enablePlayerClickPlayer(), this.enableProfileChange()
            }

            async submitButtonEvent(e, r) {
                let l = this.getEntityWorldPosition(r), i = await this.getPostBody(e, {buttonPosition: l});
                this.debug && this.debug && this.debug && console.log(i), this.submitSignedFetch(i)
            }

            async submitBirthdayEvent(e, r) {
                let l = await this.getPostBody(e, {birthday: r});
                this.debug && this.debug && this.debug && console.log(l), this.submitSignedFetch(l)
            }

            async submitGenericEvent(e) {
                let r = await this.getPostBody(e, {});
                this.debug && this.debug && this.debug && console.log(r), this.submitSignedFetch(r)
            }

            async enablePing(e) {
                this.pingsEnabled = !0, this.pingCountdown = this.pingPeriod, A2.addSystem(Pv)
            }

            checkForChanges() {
                if (!this.alreadyChecking && Y2.has(A2.CameraEntity)) {
                    this.alreadyChecking = !0, It(async () => {
                        let e = l8.get(A2.CameraEntity).mode;
                        if (e != this.previousCameraMode) {
                            let l = await this.getPostBody("camera-change", {cameraState: e});
                            this.submitSignedFetch(l), this.previousCameraMode = e
                        }
                        let r = uh.get(A2.CameraEntity).isPointerLocked;
                        if (r != this.previousLockedState) {
                            let l = await this.getPostBody("locked-view", {locked: r});
                            this.submitSignedFetch(l), this.previousLockedState = r
                        }
                        this.alreadyChecking = !1
                    })
                }
            }

            async enableEntersOrLeavesScene() {
                Gi.add(async e => {
                    if ((await (0, Xr.getUserData)({}))?.data?.userId === e.userId) {
                        let l = await this.getPostBody("enters-scene");
                        this.submitSignedFetch(l), this.debug && this.debug && this.debug && console.log(l)
                    }
                }), ji.add(async e => {
                    if ((await (0, Xr.getUserData)({}))?.data?.userId === e.userId) {
                        let l = await this.getPostBody("leaves-scene");
                        this.submitSignedFetch(l), this.debug && this.debug && this.debug && console.log(l)
                    }
                })
            }

            async enablePlayerAnimation() {
                Yi.add(async ({expressionId: e}) => {
                    let r = await this.getPostBody("player-animation", {expression: e});
                    this.submitSignedFetch(r), this.debug && this.debug && this.debug && console.log(r)
                })
            }

            async enablePlayerClickPlayer() {
                Zi.add(async e => {
                    let r = await this.getPostBody("player-click", {clickedPlayer: e.userId});
                    this.submitSignedFetch(r), this.debug && this.debug && this.debug && console.log(r)
                })
            }

            async enableProfileChange() {
                Xi.add(async e => {
                    await this.updateUserData();
                    let r = await this.getPostBody("profile-change", {version: e.version, playerName: this.playerName});
                    this.submitSignedFetch(r), this.debug && this.debug && this.debug && console.log(r)
                })
            }

            async enableSceneTimer() {
                qi.add(async () => {
                    this.endTime = new Date;
                    let e = await this.getPostBody("load-timer", {
                        playerName: this.playerName,
                        sceneInitData: {
                            platform: this.platform,
                            startTime: this.startTime.getTime(),
                            endTime: this.endTime.getTime(),
                            analyticsVersion: this.analyticsVersion,
                            parcels: this.parcels,
                            tags: this.tags,
                            pollingInterval: this.pingPeriod
                        }
                    });
                    this.submitSignedFetch(e), this.debug && this.debug && this.debug && console.log(e)
                })
            }

            async enableVideo() {
                Ji.add(async e => {
                    let r = await this.getPostBody("video", {videoData: e});
                    this.submitSignedFetch(r), this.debug && this.debug && console.log(r)
                })
            }

            async enableRealmChange() {
                Ki.add(async e => {
                    this.realm = e.displayName
                })
            }

            async assemblePlayerData() {
                let e = Y2.get(A2.CameraEntity), r = this.getWorldPosition(e.position),
                    l = X2.toEulerAngles(e.rotation);
                return {
                    player: this.player,
                    guest: this.guest,
                    playerPosition: r,
                    playerRotation: l,
                    realm: this.realm,
                    sceneName: this.sceneName,
                    sceneBranch: this.sceneBranch,
                    timestamp: new Date().getTime()
                }
            }

            async getPostBody(e, r) {
                return {...await this.assemblePlayerData(), eventName: e, data: r}
            }

            performPing() {
                this.alreadyPinging || (this.alreadyPinging = !0, It(async () => {
                    let e = await this.getPostBody("ping");
                    Bt && Bt.submitSignedFetch(e), this.alreadyPinging = !1
                }))
            }

            getWorldPosition(e) {
                let r = e;
                return r.x += this.baseParcelWorldPosition.x, r.z += this.baseParcelWorldPosition.z, r
            }

            getEntityWorldPosition(e) {
                let r = Y2.get(e), l = Y2.get(e).position;
                for (; r.parent != null && r.parent != 0;) r = Y2.get(r.parent), l.x += r.position.x, l.y += r.position.y, l.z += r.position.z;
                return this.getWorldPosition(l)
            }

            async submitSignedFetch(e) {
                if (!this.apiURL) this.debug && console.log(`
*** ATLAS: submitSignedFetch called while this.apiURL is null`); else try {
                    switch (e.eventName) {
                        case"ping":
                            break;
                        case"locked-view":
                            this.debug && console.log("ATLAS: submitSignedFetch event=" + e.eventName + "(" + e.data?.locked + ")");
                            break;
                        case"camera-change":
                            this.debug && console.log("ATLAS: submitSignedFetch event=" + e.eventName + "(" + e.data?.cameraState + ")");
                            break;
                        case"player-animation":
                        default:
                            this.debug && console.log("ATLAS: submitSignedFetch event=" + e.eventName);
                            break
                    }
                    this.debug && console.log(`
*** postBody=
` + JSON.stringify(e));
                    let r = await (0, Qg.signedFetch)({
                        url: this.apiURL,
                        init: {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                                "User-Agent": "AtlasCorp",
                                "Cache-Control": "no-cache"
                            },
                            body: JSON.stringify(e)
                        }
                    })
                } catch {
                    this.debug && console.log("failed to reach analytics URL: " + this.apiURL)
                }
            }
        };
        var Av, h3, tx, be = {};
        be.sceneEventManager = new Ve;
        var dl, us, V1, kv = 1.1, Iv = 4;
        h3 = ce(61, 0, 32, 0, 0, 0, 1, 1, 1, "scene");
        be.scene = h3;

        function Kr() {
            B1(`
========== cc-cinema ==========`), ex("cc-cinema-7.01", 5e3, !1), tx = new vr(rg, h3, void 0, be.sceneEventManager), Nv(), Ig(be, Rv, Ov)
        }

        function Nv() {
            let n = il("models/theater/MAG_building.glb", 5, 0, -1.5, 0, 0, 0, 2, 2, 2, "theater_building", h3),
                e = ge(1, 4, -22.53, 0, 180, 0, 10, 5, 1, "theTunnelLeft", h3),
                r = ge(1, 4, 22.25, 0, 0, 0, 10, 5, 1, "theTunnelRight", h3), l = {
                    texture: {
                        tex: {
                            $case: "texture",
                            texture: {
                                src: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Signage/tG0_1024.jpg",
                                wrapMode: 1,
                                filterMode: 1
                            }
                        }
                    }, roughness: 1
                };
            O3.setPbrMaterial(e, l), O3.setPbrMaterial(r, l);
            let i, o, f = `The Theater doors are 'phantom'.
  You can walk right through them.`;
            i || (i = new gl(h3, 25.618, 4.14, -4.683, 0, 105, 0, 6, 1.5, .01, f)), i.setColor(q.Black()), i.setTextColor(q.White()), i.setFontSize(3), o || (o = new gl(h3, 25.518, 4.14, 4.892, 0, 74, 0, 6, 1.5, .01, f)), o.setColor(q.Black()), o.setTextColor(q.White()), o.setFontSize(3);
            let s = yl("theWallBricks");
            Y2.create(s, {
                parent: h3,
                position: C2.create(-32.723, 9.705, -.139),
                rotation: X2.fromEulerDegrees(180, 90, 90),
                scale: C2.create(19.56, 44.744, 1)
            }), ve.setPlane(s, f8(28.2, 24.7));
            let a = {
                texture: {
                    tex: {
                        $case: "texture",
                        texture: {
                            src: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Signage/TheWall1_bricks.jpg",
                            wrapMode: y5.TWM_REPEAT,
                            filterMode: 1
                        }
                    }
                }, roughness: 1
            };
            O3.setPbrMaterial(s, a);
            let g = ge(-32.75, 2.69, -.28, 0, 90, 0, 3.71, 5, 1, "theWall", h3), b = {
                texture: {
                    tex: {
                        $case: "texture",
                        texture: {
                            src: "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Signage/TheWall2.jpg",
                            wrapMode: 1,
                            filterMode: 1
                        }
                    }
                }, roughness: 1
            };
            O3.setPbrMaterial(g, b), Hn.onPointerDown({
                entity: g,
                opts: {button: jn.IA_POINTER, hoverText: "Just Another Brick", maxDistance: 16, showFeedback: !0}
            }, () => {
                (0, lx.movePlayerTo)({
                    newRelativePosition: C2.create(87.683, 0, 33.257),
                    cameraTarget: C2.create(87.683, 1, 30)
                })
            });
            let B = il("models/theater/interior.glb", -17.774, 0, -.1, 0, 90, 0, 1.8, 1.8, 1.4, "theater_interior", h3),
                w = "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Signage/Best_Lighting_0.75.jpg",
                P = q.create(.3, 1, 0, 1), D = ce(-.999, 0, -16.804, 0, 0, 0, 1, 1, 1, "bestViewingSignRoot", h3),
                T = il("models/signage/Stand.glb", 0, 0, -.2, 0, 0, 0, .6, .64, .6, "bestViewingSignStand", D),
                k = new Z3(D, 0, 2, -.14, 0, 0, 0, 1.41, 1.98, .01, w, P, !0, .07, !1);
            O3.setPbrMaterial(k.frontPanel, {
                texture: {
                    tex: {
                        $case: "texture",
                        texture: {src: w, wrapMode: 1, filterMode: 1}
                    }
                },
                emissiveTexture: {tex: {$case: "texture", texture: {src: w, wrapMode: 1, filterMode: 1}}},
                roughness: 1,
                emissiveColor: q.White(),
                emissiveIntensity: .8
            });
            let R = ce(-.999, 0, 16.804, 0, 180, 0, 1, 1, 1, "bestViewingSignRoot", h3),
                G = il("models/signage/Stand.glb", 0, 0, -.2, 0, 0, 0, .6, .64, .6, "bestViewingSignStand", R),
                Z = new Z3(R, 0, 2, -.14, 0, 0, 0, 1.41, 1.98, .01, w, P, !0, .07, !1);
            O3.setPbrMaterial(Z.frontPanel, {
                texture: {
                    tex: {
                        $case: "texture",
                        texture: {src: w, wrapMode: 1, filterMode: 1}
                    }
                },
                emissiveTexture: {tex: {$case: "texture", texture: {src: w, wrapMode: 1, filterMode: 1}}},
                roughness: 1,
                emissiveColor: q.White(),
                emissiveIntensity: .8
            });
            let S2 = new gl(h3, -3.565, 5.55, -15.438, 0, 90, 0, 5, 1, .02, "To the Theater"),
                D2 = new gl(h3, -3.565, 5.55, 15.118, 0, 90, 0, 5, 1, .02, "To the Theater");
            S2.setColor(q.Black()), S2.setTextColor(q.White()), S2.setFontSize(4), D2.setColor(q.Black()), D2.setTextColor(q.White()), D2.setFontSize(4);
            let T2 = new Z3(h3, -3.47, 3.2, 0, 0, 90, 0, 12, 6.38, .02, "https://extraterra-files.nyc3.digitaloceanspaces.com/files/DCLConf/Cinema/Signage/Concession-Right-1024x1024.jpg", q.Black(), !1)
        }

        function Rv() {
            let n = be.cfg, e = "materials/Tileable-Textures/grassy-512-1-0.png",
                r = "materials/Tileable-Textures/Img_3269_cropped_2048_Completed_B01.jpg",
                l = "materials/Tileable-Textures/IMG_3283_Edited_A01-Blonde-Brick.jpg",
                i = tr(6 * 16, 0, !1, 4 * 16, 16, 6, .01, .01, r, e, !0),
                o = Qi(6 * 16, 4 * 16, 16, 6, .01, .01, !0, !0, !0, !1, r, e, !0),
                f = tr(3 * 16, 4 * 16, !0, 3 * 16, 16, 6, .01, .01, r, e, !0),
                s = Qi(2 * 16, 4 * 16, 16, 6, .01, .01, !0, !0, !1, !0, r, e, !0),
                a = tr(0, 4 * 16, !0, 2 * 16, 16, 6, .01, .01, r, e, !0), g = al(0, 0, 5 * 16 - 2, .01, 9.5, e, !0),
                b = al(0, 4 * 16 - 10, 5 * 16 - 2, .01, 10, e, !0),
                B = al(0, 9.5, 16 + 12.25, .01, 6.5 + 32 + 6, e, !0), w = yl("patioGround");
            if (Y2.create(w, {
                position: C2.create(5 * 16 - 2 + 9, .01, 32),
                rotation: X2.fromEulerDegrees(90, 90, 0),
                scale: C2.create(4 * 16, 16 + 2, 1)
            }), ve.setPlane(w, f8(5, 23)), O3.setPbrMaterial(w, {
                texture: {
                    tex: {
                        $case: "texture",
                        texture: {src: l, wrapMode: y5.TWM_REPEAT, filterMode: 1}
                    }
                }, roughness: 1
            }), n.showEventSign0) {
                let D = ce(98, 0, 27.3, 0, 90, 0, 1, 1, 1, "eventSignRoot0"),
                    T = ce(0, 2, 0, 0, 0, 0, 1.5, 1.5, 1.5, "eventSignFrameRoot0", D),
                    k = il("models/signage/FancyPictureFrame.glb", 0, 0, 0, 0, 0, 0, 2, 2, 2, "eventSignFrame0", T),
                    R = il("models/signage/Stand.glb", 0, 0, -.2, 0, 0, 0, .8, .84, .8, "eventSignStand0", D);
                if ("eventSignText0" in n && n.eventSignText0.length > 0) {
                    let G = new gl(T, 0, 0, -.06, 0, 0, 0, .9, 1.2, .01, n.eventSignText0);
                    G.setFontSize(2), G.setColor(q.create(0, 0, 0)), G.setFontSize(.8), G.setTextColor(q.create(1, 1, 1)), "eventSignURL0" in n && n.eventSignURL0.length > 0 ? Hn.onPointerDown({
                        entity: G.panel,
                        opts: {
                            button: jn.IA_POINTER,
                            hoverText: "eventSignHoverText0" in n && n.eventSignHoverText0.length > 0 ? n.eventSignHoverText0 : "Click for more info"
                        }
                    }, () => {
                        (0, u4.openExternalUrl)({url: n.eventSignURL0})
                    }) : B1("There is no hover text or url")
                } else if ("eventSignImage0" in n && n.eventSignImage0.length > 0) {
                    let G = n.eventSignImage0,
                        Z = new Z3(T, 0, -.005, -.06, 0, 0, 0, .81, 1.18, .01, G, q.create(0, 0, 0), !1, 0, !1);
                    "eventSignURL0" in n && n.eventSignURL0.length > 0 ? Hn.onPointerDown({
                        entity: Z.frontPanel,
                        opts: {
                            button: jn.IA_POINTER,
                            hoverText: "eventSignHoverText0" in n && n.eventSignHoverText0.length > 0 ? n.eventSignHoverText0 : "Click for more info"
                        }
                    }, () => {
                        (0, u4.openExternalUrl)({url: n.eventSignURL0})
                    }) : B1("There is no hover text or url")
                }
            }
            if (n.showEventSign1) {
                let D = ce(98, 0, 36.7, 0, 90, 0, 1, 1, 1, "eventSignRoot1"),
                    T = ce(0, 2, 0, 0, 0, 0, 1.5, 1.5, 1.5, "eventSignFrameRoot1", D),
                    k = il("models/signage/FancyPictureFrame.glb", 0, 0, 0, 0, 0, 0, 2, 2, 2, "eventSignFrame1", T),
                    R = il("models/signage/Stand.glb", 0, 0, -.2, 0, 0, 0, .8, .84, .8, "eventSignStand0", D);
                if ("eventSignText1" in n && n.eventSignText1.length > 0) {
                    let G = new gl(T, 0, 0, -.06, 0, 0, 0, .9, 1.2, .01, n.eventSignText1);
                    G.setFontSize(2), G.setColor(q.create(0, 0, 0)), G.setFontSize(.8), G.setTextColor(q.create(1, 1, 1)), "eventSignURL1" in n && n.eventSignURL1.length > 0 ? Hn.onPointerDown({
                        entity: G.panel,
                        opts: {
                            button: jn.IA_POINTER,
                            hoverText: "eventSignHoverText1" in n && n.eventSignHoverText1.length > 0 ? n.eventSignHoverText1 : "Click for more info"
                        }
                    }, () => {
                        (0, u4.openExternalUrl)({url: n.eventSignURL1})
                    }) : B1("There is no hover text or url")
                } else if ("eventSignImage1" in n && n.eventSignImage1.length > 0) {
                    let G = n.eventSignImage1,
                        Z = new Z3(T, 0, -.005, -.06, 0, 0, 0, .81, 1.18, .01, G, q.create(0, 0, 0), !1, 0, !1);
                    "eventSignURL1" in n && n.eventSignURL1.length > 0 ? Hn.onPointerDown({
                        entity: Z.frontPanel,
                        opts: {
                            button: jn.IA_POINTER,
                            hoverText: "eventSignHoverText1" in n && n.eventSignHoverText1.length > 0 ? n.eventSignHoverText1 : "Click for more info"
                        }
                    }, () => {
                        (0, u4.openExternalUrl)({url: n.eventSignURL1})
                    }) : B1("There is no hover text or url")
                }
            }
            if ("welcomeSignText" in n && n.welcomeSignText != "") {
                let D = "", T, k, R = 6, G = 4, Z = 1.67;
                "welcomeSignWidth" in n && (R = n.welcomeSignWidth), "welcomeSignHeight" in n && (G = n.welcomeSignHeight);
                let S2 = ce(37.5, 0, 10, 0, 180, 0, 1, 1, 1, "welcomeSignRoot", h3);
                T == null && (T = new gl(S2, 0, 2, -.14, 0, 180, 0, R, G, .01, n.welcomeSignText)), T.setColor(q.Black()), T.setTextColor(q.White()), T.setFontSize(2), k == null && (k = new gl(S2, 0, 2, .14, 0, 0, 0, R, G, .01, n.welcomeSignText)), k.setColor(q.Black()), k.setTextColor(q.White()), k.setFontSize(2)
            }
            if ("outerLobbySignImage" in n && n.outerLobbySignImage != "") {
                let D = 1.67;
                "outerLobbySignAspect" in n && (D = n.outerLobbySignAspect);
                let T = q.create(.3, 1, 0), k = 4,
                    R = ce(16.901, 0, -8.225, 0, 215, 0, 1, 1, 1, "outerLobbySignRoot", h3),
                    G = il("models/signage/Stand.glb", 0, 0, -.2, 0, 0, 0, .6, .64, .6, "outerLobbySignStand", R),
                    Z = n.outerLobbySignImage, S2 = new Z3(R, 0, 2, -.14, 0, 0, 0, 2 * D, 2, .01, Z, T, !0, .07, !1);
                "outerLobbySignURL" in n && n.outerLobbySignURL != "" && Hn.onPointerDown({
                    entity: S2.frontPanel,
                    opts: {button: jn.IA_POINTER, hoverText: n.outerLobbySignHoverText}
                }, () => {
                    (0, u4.openExternalUrl)({url: n.outerLobbySignURL})
                });
                let D2 = new Z3(R, 0, 2, -.28, 0, 180, 0, 2 * D, 2, .01, Z, T, !0, .07, !1);
                "outerLobbySignURL" in n && n.outerLobbySignURL != "" && Hn.onPointerDown({
                    entity: D2.frontPanel,
                    opts: {button: jn.IA_POINTER, hoverText: n.outerLobbySignHoverText}
                }, () => {
                    (0, u4.openExternalUrl)({url: n.outerLobbySignURL})
                })
            }
            us = new Br, be.sceneEventManager.addListener(R5, null, () => {
                be.sceneAdmissionManager.getIsAllowed()
            }), It(async () => {
                "useTestPurchasables" in n && n.useTestPurchasables ? V1 = Zg : V1 = await us.getPurchasablePermits([v4.context], n.showTicketBooth != "CURRENT"), Mr(`
*** cfg.useTestPurchasables=` + n.useTestPurchasables + `
  purchaseables=` + JSON.stringify(V1));
                let D = [];
                for (let R of V1.permits) {
                    if (R.active == !1 || R.methodInfo.method == "ADDRESS" && be.dclPlayer.userData.hasConnectedWeb3 == !1) break;
                    D.push(R)
                }
                V1.permits = D;
                let T = !1;
                switch ("showTicketBooth" in n || (n.showTicketBooth = "ANY"), n.showTicketBooth) {
                    case"ALWAYS":
                        T = !0;
                        break;
                    case"ANY":
                        T = V1.permits.length > 0;
                        break;
                    case"CURRENT":
                        B1(`
*** cc-cinema CURRENT not yet supported differently than ANY`), T = V1.permits.length > 0;
                        break;
                    case"NEVER":
                        T = !1;
                        break
                }
                let k = [];
                if ("allowedTransactionProcesses" in be.cfg && be.cfg.allowedTransactionProcesses.length > 0 ? k = be.cfg.allowedTransactionProcesses : (k.push(new zr), k.push(new Wr)), T) {
                    let R = ce(15.7, 0, .12, 0, 90, 0, 1, 1, 1, "ticketBoothRoot", h3),
                        G = new Yr(R, 0, 2.5, 1.26, 0, 0, 0, .9, .385, .03, "Tickets!", q.Black(), q.White(), !0, !0),
                        Z = il("models/ticket-booth/TicketBoothFromFbx-NoDrawerAnimation.glb", 0, 0, 0, 0, 0, 0, 2.8, 2.4, 2.7, "ticketBooth", R),
                        S2 = new Jr(be.dclPlayer, be.sceneAdmissionManager, us, V1, k, "https://dclconf.com/using-the-shopping-cart/", R, 0, 1.7, 1.26, 0, 0, 0, 1, 1, 1)
                }
            });
            let P = [];
            if (P[0] = new Z3(h3, 17.475, 2.55, -19.913, 0, 90, 0, 1.54, 2.3, .02, n.exteriorPosterL, q.Black(), !1), P[1] = new Z3(h3, 17.343, 2.55, 21.331, 0, 90, 0, 1.54, 2.3, .02, n.exteriorPosterR, q.Black(), !1), P[2] = new Z3(h3, 25.243, 2.55, .117, 0, 270, 0, 1.54, 2.3, .02, n.outerPosterFront, q.Black(), !1), P[3] = new Z3(h3, 17.907, 2.55, -10.862, 0, 90, 0, 1.54, 2.3, .02, n.outerPoster1, q.Black(), !1), P[4] = new Z3(h3, 14.96, 2.55, -7.385, 0, 35, 0, 1.54, 2.3, .02, n.outerPoster2, q.Black(), !1), P[5] = new Z3(h3, 14.173, 2.55, 7.03, 0, 145, 0, 1.54, 2.3, .02, n.outerPoster3, q.Black(), !1), P[6] = new Z3(h3, 17.917, 2.55, 11.236, 0, 90, 0, 1.54, 2.3, .02, n.outerPoster4, q.Black(), !1), P[7] = new Z3(h3, 14.645, 2.55, -7.774, 0, 215, 0, 1.54, 2.3, .02, n.innerPoster0, q.Black(), !1), P[8] = new Z3(h3, 17.374, 2.58, -10.985, 0, 270, 0, 1.54, 2.3, .02, n.innerPoster1, q.Black(), !1), P[9] = new Z3(h3, 9.5, 2.55, -17.454, 0, 358, 0, 1.54, 2.3, .02, n.innerPoster2, q.Black(), !1), P[10] = new Z3(h3, 6.385, 2.55, -17.561, 0, 358, 0, 1.54, 2.3, .02, n.innerPoster3, q.Black(), !1), P[11] = new Z3(h3, 2.205, 2.55, -17.704, 0, 358, 0, 1.54, 2.3, .02, n.innerPoster4, q.Black(), !1), P[12] = new Z3(h3, -3.485, 2.55, -11.378, 0, 90, 0, 1.54, 2.3, .02, n.innerPoster5, q.Black(), !1), P[13] = new Z3(h3, -3.482, 2.55, -8.418, 0, 90, 0, 1.54, 2.3, .02, n.innerPoster6, q.Black(), !1), P[14] = new Z3(h3, -3.47, 2.55, 7.882, 0, 90, 0, 1.54, 2.3, .02, n.innerPoster7, q.Black(), !1), P[15] = new Z3(h3, -3.471, 2.55, 10.999, 0, 90, 0, 1.54, 2.3, .02, n.innerPoster8, q.Black(), !1), P[16] = new Z3(h3, 1.872, 2.55, 17.535, 0, 180, 0, 1.54, 2.3, .02, n.innerPoster9, q.Black(), !1), P[17] = new Z3(h3, 6.431, 2.55, 17.439, 0, 180, 0, 1.54, 2.3, .02, n.innerPoster10, q.Black(), !1), P[18] = new Z3(h3, 10.326, 2.55, 17.326, 0, 180, 0, 1.54, 2.3, .02, n.innerPoster11, q.Black(), !1), P[19] = new Z3(h3, 17.353, 2.55, 11.28, 0, 270, 0, 1.54, 2.3, .02, n.innerPoster12, q.Black(), !1), P[20] = new Z3(h3, 16.17, 2.55, 8.538, 0, 325, 0, 1.54, 2.3, .02, n.innerPoster13, q.Black(), !1), P[21] = new Z3(h3, 13.892, 2.58, 7.42, 0, 325, 0, 1.54, 2.3, .02, n.innerPoster14, q.Black(), !1), n.showHallwaySigns) {
                let D = q.create(.3, 1, 0), T = ce(-3.899, 0, -14.396, 0, 270, 0, 1, 1, 1, "hallwaySignRoot", h3),
                    k = il("models/signage/Stand.glb", 0, 0, -.2, 0, 0, 0, .6, .64, .6, "hallwaySignStand", T),
                    R = n.hallwaySignImage, G = new Z3(T, 0, 2, -.14, 0, 0, 0, 1.41, 1.98, .01, R, D, !0, .07, !1);
                Hn.onPointerDown({
                    entity: G.frontPanel,
                    opts: {button: jn.IA_POINTER, hoverText: n.hallwaySignHoverText}
                }, () => {
                    (0, u4.openExternalUrl)({url: n.hallwaySignUrl})
                });
                let Z = new Z3(T, 0, 2, -.28, 0, 180, 0, 1.41, 1.98, .01, R, D, !0, .07, !1);
                Hn.onPointerDown({
                    entity: Z.frontPanel,
                    opts: {button: jn.IA_POINTER, hoverText: n.hallwaySignHoverText}
                }, () => {
                    (0, u4.openExternalUrl)({url: n.hallwaySignUrl})
                });
                let S2 = ce(-3.499, 0, 14.204, 0, 90, 0, 1, 1, 1, "hallwaySignRootB", h3),
                    D2 = il("models/signage/Stand.glb", 0, 0, -.2, 0, 0, 0, .6, .64, .6, "hallwaySignStandB", S2),
                    T2 = new Z3(S2, 0, 2, -.14, 0, 0, 0, 1.41, 1.98, .01, R, D, !0, .07, !1);
                Hn.onPointerDown({
                    entity: T2.frontPanel,
                    opts: {button: jn.IA_POINTER, hoverText: n.hallwaySignHoverText}
                }, () => {
                    (0, u4.openExternalUrl)({url: n.hallwaySignUrl})
                });
                let l2 = new Z3(S2, 0, 2, -.28, 0, 180, 0, 1.41, 1.98, .01, R, D, !0, .07, !1);
                Hn.onPointerDown({
                    entity: l2.frontPanel,
                    opts: {button: jn.IA_POINTER, hoverText: n.hallwaySignHoverText}
                }, () => {
                    (0, u4.openExternalUrl)({url: n.hallwaySignUrl})
                })
            }
        }

        var os = class {
            constructor(e, r, l) {
                this.dimmerPanels = e;
                this.dimmerMax = r;
                this.dimmerSeconds = l;
                this.bOn = !0;
                this.dimmerTarget = 0;
                this.changeHouseLights = e => {
                    this.bOn == e || (this.bOn = e, this.dimmerTarget = e ? 0 : this.dimmerMax, this.bDimming = !0)
                };
                dl = this, this.bDimming = !1, this.dimmerCurrent = 0, A2.addSystem(Mv)
            }
        };

        function Mv(n) {
            if (dl.bDimming == !0) {
                dl.dimmerCurrent += dl.bOn ? -n / dl.dimmerSeconds : n / dl.dimmerSeconds;
                for (let e of dl.dimmerPanels) O3.setPbrMaterial(e, {albedoColor: q.create(0, 0, 0, dl.dimmerCurrent)});
                (dl.bOn && dl.dimmerCurrent < dl.dimmerTarget || !dl.bOn && dl.dimmerCurrent > dl.dimmerTarget) && (dl.bDimming = !1)
            }
        }

        function Ov() {
            let n = be.cfg, e = be.sceneAdmissionManager.isAllowed();
            if (tx.allow(e), e && n.useScreen) {
                let r = 1.778;
                "screenWidth" in n && (r = n.screenAspectRatio);
                let l = ge(-31.63, 8.85, -.1, 0, -90, 0, 14.1 * r, 14.1, 1, "screen", h3);
                O3.setPbrMaterial(l, {albedoColor: q.Black(), roughness: 1});
                let i = [],
                    o = {albedoColor: q.create(0, 0, 0, 0), transparencyMode: 2, roughness: 1, specularIntensity: 0},
                    f = ge(-17.775, 6, 17.941, 0, 0, 0, 28.2, 23, 2, "pRightWall", h3);
                O3.setPbrMaterial(f, o), i.push(f);
                let s = ge(-17.775, 6, -18.14, 0, 0, 0, 28.2, 23, 2, "pLeftWall", h3);
                O3.setPbrMaterial(s, o), i.push(s);
                let a = ge(-17.774, 17.2, 0, 90, 0, 0, 28.2, 36, 2, "pCeiling", h3);
                O3.setPbrMaterial(a, o), i.push(a);
                let g = ge(-17.774, .01, -.1, 90, 0, 0, 28.2, 36.15, 2, "pFloor", h3);
                O3.setPbrMaterial(g, o), i.push(g);
                let b = ge(-23.214, .78, 0, 76, 90, 90, 5.6, 36.4, 2, "pFloor2", h3);
                O3.setPbrMaterial(b, o), i.push(b);
                let B = ge(-17.774, 2.2, 0, 76, 90, 90, 6.2, 24, 2, "pFloor3", h3);
                O3.setPbrMaterial(B, o), i.push(B);
                let w = ge(-9.674, 4.2, 0, 76, 90, 90, 13.4, 36, 2, "pFloor4", h3);
                O3.setPbrMaterial(w, o), i.push(w);
                let P = ge(-17.601, .75, 14.524, 114.96, 90, 90, 3.3, 7, 1, "pStairsR", h3);
                O3.setPbrMaterial(P, o), i.push(P);
                let D = ge(-19.801, 1.44, 13.024, 90, 0, 90, 10.1, 1.5, 1, "pStairsR2", h3);
                O3.setPbrMaterial(D, o), i.push(D);
                let T = ge(-17.601, .75, -14.624, 114.96, 90, 90, 3.3, 7, 1, "pStairsL", h3);
                O3.setPbrMaterial(T, o), i.push(T);
                let k = ge(-19.801, 1.44, -13.104, 90, 0, 90, 10.1, 1.5, 1, "pStairsL2", h3);
                O3.setPbrMaterial(k, o), i.push(k);
                let R = ge(-3.874, 11.4, -.1, 0, 90, 0, 36.2, 11.6, 1, "pBackwall", h3);
                O3.setPbrMaterial(R, o), i.push(R), new os(i, kv, Iv), Vg([l], h3, be.allowAdministration, null, dl.changeHouseLights, !0, "mustClickOnSceneToPlay" in be.cfg ? be.cfg.mustClickOnSceneToPlay : !0).addListener(be.sceneEventManager);
                let Z = `Unity Cafe GuestBook

Click here to enter a guest record.`,
                    S2 = new Dr(be.dclPlayer, h3, Z, q.create(0, 0, .25, 1), q.White(), 1, -14.77, 1.59, -13.69, 0, -35, 0, 2, 2.3, .05, "https://dclconf.com/", "", "materials/GuestBook.jpg", 0, 0, 0, 0, 0, 0, 1.6, .9, .05, Z4.context, 14, 100);
                be.sceneEventManager.addListener(U5, null, ({type: D2, film: T2, offset: l2}) => {
                    S2.post("CinemaClient", {type: D2, film: T2, offset: l2, sdkVersion: Av})
                })
            }
        }

        for (let n in i8) {
            let e = a8.getCompositeOrNull(n);
            if (e) {
                let {components: r} = e.composite;
                r.find(i => i.name === _1.componentName) && Promise.resolve().then(() => (Sx(), Tx))
            }
        }
        if (Kr !== void 0) {
            let n = function () {
                let e = Kr();
                e && typeof e == "object" && typeof e.then == "function" && e.catch(console.error), A2.removeSystem(n)
            };
            A2.addSystem(n, 1 / 0)
        }
//!CF Announcment for some reason needs the "wrapping" entity to be full screen
//!CF reworked the users of getParcel to use getSceneInformation
//!CF changed these names, as they are now the defaults if params are not passed from scene.
//!CF this internally does ExecuteTask and excludes nesting
//!CF added for SDK7
//!CF SDK7 docs say that GetPlatformResponse.platform is now a string, not an SDK6 Platform		
//!CF changed it for SDK, from SDK6's getCurentRealm
//!CF modified for SDK7
//!CF not called from within this modules, so not listed AtlasEventNames
//!CF Added for SDK7 as an alternative to 3 SDK6 Observables not yet supported in SDK7
//!CF Because this is being called from a system, the engine.CameraEntity will have been initialized
//!CF per https://docs.decentraland.org/creator/development-guide/sdk7/user-data/
//!CF Avoid reentrancy/nesting -- if it is already checking in the executeTask thread, don't reenter it, or stack may overflow
//!CF CameraMode
//!CF fetch
//!CF yyy Docs say this is deprecated in 7.x. Future versions will allow a more data-oriented approach".  Just doesnt work in 7.3.20
//!CF make a mutable copy.
//!CF I didn't find  this provided in SDK7
        /*! Bundled license information:
    
    long/index.js:
      (**
       * @license
       * Copyright 2009 The Closure Library Authors
       * Copyright 2020 Daniel Wirtz / The long.js Authors.
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *     http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       *
       * SPDX-License-Identifier: Apache-2.0
       *)
    
    react/cjs/react.production.min.js:
      (**
       * @license React
       * react.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *)
    
    scheduler/cjs/scheduler.production.min.js:
      (**
       * @license React
       * scheduler.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *)
    
    react-reconciler/cjs/react-reconciler.production.min.js:
      (**
       * @license React
       * react-reconciler.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *)
    
    eth-connect/eth-connect.js:
      (*! eth-connect {
        "date": "2024-01-01T15:10:57.542Z",
        "commit": "b2fa64415d297ccce86d2a5d59d8705388f77db9",
        "ref": "refs/tags/6.2.4"
      } *)
      (**
           * [js-sha3]{@link https://github.com/emn178/js-sha3}
           *
           * @version 0.8.0
           * @author Chen, Yi-Cyuan [emn178@gmail.com]
           * @copyright Chen, Yi-Cyuan 2015-2018
           * @license MIT
           *)
    */

    }).call(this, exports, require, module, __filename, __dirname);
})