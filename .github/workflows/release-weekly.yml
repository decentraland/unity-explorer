name: Weekly Release

on:
  schedule:
    - cron: '10 0 * * 1'
  # For testing only!
  push:
    branches:
      - feat/unity-cloud-build

jobs:
  get-info:
    name: Get Info
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      latest_version: ${{ steps.get_version.outputs.latest_version }}
      full_version: ${{ steps.get_version.outputs.next_full_version }}
      tag_version: ${{ steps.get_version.outputs.next_tag_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: get_version
        uses: ./.github/actions/version

  # Run a clean build (no cache)
  build:
    name: Build Unity Cloud
    needs: get-info
    uses: ./.github/workflows/build-unitycloud.yml
    with:
      profile: none
      cache: false
      version: ${{ needs.get-info.outputs.full_version }}
    secrets: inherit

  generate-release-info:
    name: Generate release info
    runs-on: ubuntu-latest
    needs: [build, get-info]
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Apply tag to branch
        run: |
          TAG=${{ needs.get-info.outputs.tag_version }}
          git tag $TAG
          git push origin $TAG

#      - name: Aggregate commits since last tag
#        id: get-commits
#        run: |
#          LATEST_TAG=${{ needs.get-info.outputs.latest_version }}
#          echo "Latest version tag is $LATEST_TAG"
#
#          COMMITS=$(git log $LATEST_TAG..HEAD --pretty=format:"%h - %s (%an)")
#          echo "$COMMITS"
#          echo "commit_list=$COMMITS" >> "$GITHUB_OUTPUT"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Ls root debug
        run: ls -lah .
        shell: bash

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          #body: ${{ steps.get-commits.outputs.commit_list }} # manual release notes
          #body_path: Path to file for release notes - for better formatting
          generate_release_notes: true
          draft: true # testing
          tag_name: ${{ needs.get-info.outputs.tag_version }}
          files: |
            Decentraland_windows64.zip
            Decentraland_macos.zip
          fail_on_unmatched_files: true