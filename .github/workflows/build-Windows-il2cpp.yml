name: Unity Windows Build IL2CPP

on:
  workflow_dispatch: {}
  pull_request: 
      types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push: { branches: [main] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_PERSONAL_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true


jobs:  
  build:
    strategy:
      max-parallel: 1
      matrix:
        include:
          - targetPlatform: StandaloneWindows64

    name: Build
    runs-on: bigwindows
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (!github.event.pull_request.draft)
    steps:
      - name: Set SHA env variable
        run: |
            $eventName = "${{ github.event_name }}"

            if ($eventName -eq "push") {
                $LONG_SHA = "${{ github.sha }}"
                $SHORT_SHA = ($LONG_SHA).Substring(0, 7)
                Add-Content -Value "CUSTOM_SHA=$SHORT_SHA" -Path $env:GITHUB_ENV
                Write-Output $SHORT_SHA
            }
            elseif ($eventName -eq "pull_request") {
                $LONG_SHA = "${{ github.event.pull_request.head.sha }}"
                $SHORT_SHA = ($LONG_SHA).Substring(0, 7)
                Add-Content -Value "CUSTOM_SHA=$SHORT_SHA" -Path $env:GITHUB_ENV
                Write-Output $SHORT_SHA
            }
          
      - name: Set sentry env var
        run: |
          $branchName = "${{ github.ref }}"
          $SENTRY_ENVIRONMENT = "branch"
          
          if ($branchName -eq 'refs/heads/main') {
            $SENTRY_ENVIRONMENT = "production"
          } elseif ($branchName -eq 'refs/heads/dev') {
            $SENTRY_ENVIRONMENT = "development"
          }
          
          Add-Content -Value "SENTRY_ENVIRONMENT=$SENTRY_ENVIRONMENT" -Path $env:GITHUB_ENV
          Write-Output $SENTRY_ENVIRONMENT

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v3
        with:
          path: | 
            Explorer/Library
            !Explorer/Library/Bee/**
            !Explorer/Library/BuildPlayerData/**
          key: Library-Explorer-IL2CPP-${{ matrix.targetPlatform }}
          
      - uses: decentraland/unity-builder@0.6
        id: build
        timeout-minutes: 120
        with:
          projectPath: Explorer
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Semantic
          customParameters: -sentryDsn ${{ secrets.SENTRY_DSN }} -sentryEnvironment ${{ env.SENTRY_ENVIRONMENT }}

      # Upload artifact
      - name: Upload windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: |
            build
            !build/**/*_BackUpThisFolder_ButDontShipItWithYourGame
            !build/**/*_BurstDebugInformation_DoNotShip
          if-no-files-found: error